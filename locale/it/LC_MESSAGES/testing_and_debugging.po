# SOME DESCRIPTIVE TITLE.
# Copyright (C) Plone community and other individual contributors
# This file is distributed under the same license as the Plone Developer Documentation package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: plone-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-08 13:29\n"
"PO-Revision-Date: 2014-02-08 12:45+0000\n"
"Last-Translator: Giacomo <giacomo.spettoli@gmail.com>\n"
"Language-Team: Italian (http://www.transifex.com/projects/p/plone-doc/language/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# eaca34a6383c42af90cb2c3a20e97cac
#: ../../source/testing_and_debugging/boilerplate_tests.rst:3
msgid "Boilerplate tests"
msgstr ""

# 0f5ec1fc3ef14098b42e1c5ad5436ad1
#: ../../source/testing_and_debugging/boilerplate_tests.rst:5
msgid "These are test snippets useful for common use cases."
msgstr ""

# 3ae4698eaa2148c7b1ab7619d725fd8a
#: ../../source/testing_and_debugging/boilerplate_tests.rst:8
msgid ""
"See http://plone.org/documentation/manual/developer-manual/testing/writing-a"
"-plonetestcase-unit-integration-test to learn about PloneTestCase helper "
"methods."
msgstr ""

# a8a82c959e9f4b3e815d3835b82435cb
#: ../../source/testing_and_debugging/boilerplate_tests.rst:12
msgid "Test portal title::"
msgstr ""

# 50592f88bad2484bb3982dd80fa3af47
#: ../../source/testing_and_debugging/boilerplate_tests.rst:18
msgid "Test if view is protected::"
msgstr ""

# 46b3f25a41724580ae4033bffbd0c8f4
#: ../../source/testing_and_debugging/boilerplate_tests.rst:29
msgid "Test if object exists in folder::"
msgstr ""

# c2bbcbb8f4c646128b55faa26374ede2
#: ../../source/testing_and_debugging/boilerplate_tests.rst:35
msgid "Javascript registered::"
msgstr ""

# 7e8fc8217a9f42509f9040e2cb24d358
#: ../../source/testing_and_debugging/boilerplate_tests.rst:43
msgid "CSS registered::"
msgstr ""

# e3938546aa0d43d3b179ef36ffcce315
#: ../../source/testing_and_debugging/boilerplate_tests.rst:51
msgid "Test that a certain skin layer is present in portal_skins::"
msgstr ""

# 0ef02759af304e5a8b23196566df1f82
#: ../../source/testing_and_debugging/clean_uninstall.rst:3
msgid "Clean uninstall"
msgstr ""

# a6c7cf14fc4542c8b8c381d93d2c2139
#: ../../source/testing_and_debugging/clean_uninstall.rst:7
msgid "How to test that your Plone add-on uninstalls cleanly"
msgstr ""

# 7f3f4f9a7662449eb1df2f40a70407bf
# 02ecfbd95cc94e8bb4692e907dbf3e00
# 08c101f7e322417387053a144172cf2e
# 5101618dff6d42c7b72d9e6d1ee3481b
# 3629eca10ae34bae9f95cdf3fa3d8fd4
#: ../../source/testing_and_debugging/clean_uninstall.rst:12
#: ../../source/testing_and_debugging/functional_testing.rst:14
#: ../../source/testing_and_debugging/logging.rst:12
#: ../../source/testing_and_debugging/pdb.rst:13
#: ../../source/testing_and_debugging/unit_testing.rst:8
msgid "Introduction"
msgstr ""

# 74561012e57a4a6d8478d689d2faf554
#: ../../source/testing_and_debugging/clean_uninstall.rst:14
msgid ""
"Clean uninstall means that removing your add-on does not leave Plone site to"
" broken state. Sometimes damage might not be noticed immediately, causing "
"great frustration for the users."
msgstr ""

# 745aab5bb1fb42e9ab1c03dcb9229620
#: ../../source/testing_and_debugging/clean_uninstall.rst:17
msgid "Clean uninstall procedure is"
msgstr ""

# 752de83fce1a4dc5b8ba87e6394148f0
#: ../../source/testing_and_debugging/clean_uninstall.rst:19
msgid ""
"Use ``Add on installer`` to uninstall any add-ons. This MUST remove all add-"
"on Python objects from the site ZODB database"
msgstr ""

# 07082497cda34a0b9f8e59eb930659f7
#: ../../source/testing_and_debugging/clean_uninstall.rst:22
msgid "Remove eggs from the buildout, rerun buildout"
msgstr ""

# bc8274f3f44b4463b039c18406b4bbdf
#: ../../source/testing_and_debugging/clean_uninstall.rst:24
msgid ""
"If there are any Python objects, which classes come from the removed egg, "
"around the site cannot be exported or imported anymore. Also, Plone upgrade "
"might fail."
msgstr ""

# 18404ffab1274e7ab30cab11dca377f3
#: ../../source/testing_and_debugging/clean_uninstall.rst:29
msgid "Clean uninstall test procedure"
msgstr ""

# 4e2d83d33eec4f2ea7f609d27965fc0f
#: ../../source/testing_and_debugging/clean_uninstall.rst:31
msgid "Manual procedure"
msgstr ""

# 01e719ae77c742468db242615b4ea5df
#: ../../source/testing_and_debugging/clean_uninstall.rst:33
msgid "Create a Plone site from buildout, with your add-on egg present"
msgstr ""

# e9b8fc1e72cf465ca9f580d81ec8358b
#: ../../source/testing_and_debugging/clean_uninstall.rst:35
msgid "Install your add-on"
msgstr ""

# 2ced7491469f421e8d8adfff6bb8a7c2
#: ../../source/testing_and_debugging/clean_uninstall.rst:37
msgid ""
"Play around with add-on to make sure it stores all its data (settings, local"
" utilities, annotations, etc.)"
msgstr ""

# d1d3062e65514a51803cb48fc45126fc
#: ../../source/testing_and_debugging/clean_uninstall.rst:40
msgid "Uninstall add-on"
msgstr ""

# fb4dd772454f47b09ae66703f3b58dba
#: ../../source/testing_and_debugging/clean_uninstall.rst:42
msgid "Export Plone site through ZMI as zexp"
msgstr ""

# 960076f380c749eba858c2396e532d11
#: ../../source/testing_and_debugging/clean_uninstall.rst:44
msgid ""
"Create another Plone site from vanilla buildout (no any add-ons installed)"
msgstr ""

# d7062d86eed047509454d82d6200d887
#: ../../source/testing_and_debugging/clean_uninstall.rst:46
msgid "Import .zexp"
msgstr ""

# 1026db1dc0f9498abcb492764d11d456
#: ../../source/testing_and_debugging/clean_uninstall.rst:48
msgid ""
"If .zexp does not contain any objects from your add-on egg, which is missing"
" in vanilla Plone installation, your add-on installs cleanly"
msgstr ""

# 7566cf5be293445ca03400fd72a464a9
#: ../../source/testing_and_debugging/clean_uninstall.rst:52
msgid "Example unit test"
msgstr ""

# c89ee51bc7f0424bafc6b51413949bff
#: ../../source/testing_and_debugging/clean_uninstall.rst:54
msgid ""
"This code shows how to test that certain :doc`annotations "
"</components/annotations>` are correctly cleaned."
msgstr ""

# 975c8727cde34e97a00f2511748b32a0
# 06551862c9df4d7d9e8af064702948b3
# e5d013151a2049fcb2829b2ec58c5e05
# 194837cee01644febc346fe5d038b2d2
# 4e4b9383c3324e849a80722b4bcaa9a0
# 0977e4bbe2834c0ca7e4a3a02cd51092
# b0319cb4d56545a09035de37a1cd4931
# 252d0e8da2c34b0ca71a7d564ac3b085
# 8f11e55a596a4cd0b84a13ad0fcf21e7
# 7a7e840e151e44bdb549be77252e568a
# 52a0451c233d44d18a64252e4468ccd2
# 356dbabc7b494b09806d8d742a98ebea
# a6c416c2881a4d84aeed7ba8e0060b02
# 083ea7daedaf4e0ba6f10644ba0fc683
# 9e6cd9b2914f416db8471e7b16b9561d
# ae5eb449f2414e51ac4322b71723b951
#: ../../source/testing_and_debugging/clean_uninstall.rst:57
#: ../../source/testing_and_debugging/functional_testing.rst:130
#: ../../source/testing_and_debugging/functional_testing.rst:141
#: ../../source/testing_and_debugging/functional_testing.rst:154
#: ../../source/testing_and_debugging/functional_testing.rst:170
#: ../../source/testing_and_debugging/functional_testing.rst:181
#: ../../source/testing_and_debugging/functional_testing.rst:249
#: ../../source/testing_and_debugging/functional_testing.rst:263
#: ../../source/testing_and_debugging/functional_testing.rst:362
#: ../../source/testing_and_debugging/logging.rst:62
#: ../../source/testing_and_debugging/logging.rst:82
#: ../../source/testing_and_debugging/pdb.rst:56
#: ../../source/testing_and_debugging/pdb.rst:78
#: ../../source/testing_and_debugging/pdb.rst:224
#: ../../source/testing_and_debugging/unit_testing.rst:142
#: ../../source/testing_and_debugging/unit_testing.rst:306
msgid "Example::"
msgstr ""

# 9850a3b8e1cc44e29f3dfb6b332563a1
#: ../../source/testing_and_debugging/doctests.rst:3
msgid "Doctests"
msgstr ""

# 70bae065071441bab016abc6a84e9203
#: ../../source/testing_and_debugging/doctests.rst:5
msgid "Doctests are way to do tests with interactive Python interpreter."
msgstr ""

# 042bda9ff2014e6eb1d5a2800641c3f0
#: ../../source/testing_and_debugging/doctests.rst:7
msgid "http://plone.org/documentation/tutorial/testing/doctests"
msgstr ""

# e149799f925a4e9c8cba3919897d830e
#: ../../source/testing_and_debugging/doctests.rst:10
msgid "Doctests and pdb"
msgstr ""

# 6c5efcbf6fb749e4aeb843032f40c96c
#: ../../source/testing_and_debugging/doctests.rst:12
msgid ""
"Python debugger (pdb) works little differently when invoked from doctests."
msgstr ""

# 8eaac2cabce54ca1b5eb843c8811ba07
#: ../../source/testing_and_debugging/doctests.rst:14
msgid ""
"Your locals stack frame is not what you might expect and refers to doctests "
"internals::"
msgstr ""

# c8ad0337cad047b5b25c5168174a8c31
#: ../../source/testing_and_debugging/doctests.rst:19
msgid "Corrective action is to go one level up in the stack::"
msgstr ""

# 22bc6018c7bc4f1984a77760f5ec5d7d
#: ../../source/testing_and_debugging/doctests.rst:30
msgid "Interlude"
msgstr ""

# 7192f9455a03475098d35dfcb263fc5b
#: ../../source/testing_and_debugging/doctests.rst:32
msgid ""
"Interlude is a Python package, which you can use to start an interactive "
"Python shell from doctests, bypassing the limitations described above."
msgstr ""

# 54a35a70b7eb4747864dd5db33f489cd
#: ../../source/testing_and_debugging/doctests.rst:35
msgid ""
"Just depend on 'interlude' and pass it via the globs dict to the doctest or "
"import it from there::"
msgstr ""

# cb2bf8dce4904b1fa0e3390422d507ea
#: ../../source/testing_and_debugging/doctests.rst:41
msgid ""
"When the testrunner passes interact, you'll get an interactive Python "
"prompt."
msgstr ""

# 072dc0a79ab5439397bba476887adaf8
#: ../../source/testing_and_debugging/doctests.rst:43
msgid "For more information see: https://pypi.python.org/pypi/interlude"
msgstr ""

# 2e33d69883854d3688f134212679ae1a
#: ../../source/testing_and_debugging/error_log.rst:3
msgid "Site error log service"
msgstr ""

# 2e1d3769692648b7bf750c2582c0e6ad
#: ../../source/testing_and_debugging/error_log.rst:5
msgid ""
"Plone sites contain error log service which is located as *error_log* in the"
" site root. It logs site exceptions and makes the tracebacks accessible from"
" Plone control panel and ZMI."
msgstr ""

# 75ff1934b78342758dd384963317a3b3
#: ../../source/testing_and_debugging/error_log.rst:8
msgid ""
"The service is somewhat archaid and can log exceptions only, no plain error "
"messages."
msgstr ""

# 8e7803d253e84556a522a8a362aafb98
#: ../../source/testing_and_debugging/error_log.rst:10
msgid ""
"`Site error log service source code "
"<http://svn.zope.org/Zope/trunk/src/Products/SiteErrorLog/SiteErrorLog.py?rev=96315&view=auto>`_."
msgstr ""

# f19a086c8c86485f8372740780af0936
#: ../../source/testing_and_debugging/error_log.rst:13
msgid "Example how to add exceptions to error log"
msgstr ""

# 66686949598a4c60a99f4f02b77fa3d7
#: ../../source/testing_and_debugging/error_log.rst:15
msgid "Complete \"Example how to add exceptions to error log\""
msgstr ""

# c084d58ac50e4f739b70e2e8f15af647
#: ../../source/testing_and_debugging/functional_testing.rst:3
msgid "Functional testing"
msgstr ""

# 08b3c2d85aef460caea3c787ebbd4eb1
#: ../../source/testing_and_debugging/functional_testing.rst:7
msgid ""
"Functional testing tool allows you to use scripted browser to load pages "
"from your site and fill in forms automatically."
msgstr ""

# f7207e5eba23476f8e0d8a1ee061f107
#: ../../source/testing_and_debugging/functional_testing.rst:16
msgid ""
"PloneTestCase product provides `FunctionalTestCase "
"<https://github.com/plone/Products.PloneTestCase/tree/master/Products/PloneTestCase/PloneTestCase.py>`_"
" base class for functional testing. Unlike unit tests, functional tests "
"simulate real HTTP requests with transaction life cycle."
msgstr ""

# a8013be9f6f24a94bbdda0b16ca9d342
#: ../../source/testing_and_debugging/functional_testing.rst:19
msgid ""
"Functional tests has different transaction for each browser.open() request"
msgstr ""

# 17ea3a4798ee44b5951f7377bb4892cc
#: ../../source/testing_and_debugging/functional_testing.rst:21
msgid ""
"Functional tests do traversing and can check e.g. for cookie based "
"permissions"
msgstr ""

# 12400921ca704e269a9ad0baa7e760bc
#: ../../source/testing_and_debugging/functional_testing.rst:23
msgid ""
"Unit test method is executed in a single transaction and this might make "
"impossible to test cache related behavior"
msgstr ""

# 74ae6958bb92410ab9150d4b76e56715
#: ../../source/testing_and_debugging/functional_testing.rst:27
msgid "Test browser"
msgstr ""

# 5587c6ae117f461d842b03c3383d3f5f
#: ../../source/testing_and_debugging/functional_testing.rst:29
msgid ""
"Plone uses Products.Five.testbrowser as an browser emulator used in "
"functional tests. It is based on zope.testbrowser package. You can find more"
" information in the `zope.testbrowser docs home page "
"<http://pypi.python.org/pypi/zope.testbrowser>`_. The API is described in "
"`zope.testbrowser.interfaces (3.4 used by Plone 3) "
"<http://svn.zope.org/zope.testbrowser/tags/3.4.2/src/zope/testbrowser/interfaces.py?rev=81337&view=markup>`_."
msgstr ""

# 0c0f0f9d7a6748659ce35e0fd5a3ba4f
#: ../../source/testing_and_debugging/functional_testing.rst:35
msgid ""
"There also exists old `zc.testbrowser "
"<http://pypi.python.org/pypi/zc.testbrowser>`_, which is a different package"
" with similar name."
msgstr ""

# a155fd6ddce243188108274b2f62d8d6
#: ../../source/testing_and_debugging/functional_testing.rst:38
msgid ""
"All code assumes here is is executed in unit test context where self.portal "
"is your unit test site instance."
msgstr ""

# 66f7f59064034008a8a6d41be65d931b
#: ../../source/testing_and_debugging/functional_testing.rst:41
msgid "Recording tests"
msgstr ""

# cc346dea53604477ba03f2b8158c08ab
#: ../../source/testing_and_debugging/functional_testing.rst:43
msgid ""
"You can record functional tests through the browser. Think it as a Microsoft"
" Word macro recoder kind of thing."
msgstr ""

# 4f607328e2fa40fab878007ea711468f
#: ../../source/testing_and_debugging/functional_testing.rst:45
msgid "http://plone.org/documentation/kb/testing/zope-testrecorder"
msgstr ""

# f64d0bcee36f46ff9effa3947be57dfb
#: ../../source/testing_and_debugging/functional_testing.rst:47
msgid ""
"http://pyyou.wordpress.com/2008/04/11/how-to-install-zopetestrecorder-with-"
"buildout/"
msgstr ""

# cf4628f6c2134f41bad26598bd9fb1a7
#: ../../source/testing_and_debugging/functional_testing.rst:49
msgid "http://pypi.python.org/pypi/zope.testrecorder"
msgstr ""

# 6557923e365740a882068dd6af626090
#: ../../source/testing_and_debugging/functional_testing.rst:52
msgid "Functional test skeleton"
msgstr ""

# 321cfc96f09a4bfbadc09aa0723316da
#: ../../source/testing_and_debugging/functional_testing.rst:54
msgid ""
"First see collective.testlayer package which does some of the things "
"described below"
msgstr ""

# a02d97d0ad664ed48c9907ee9edabd13
#: ../../source/testing_and_debugging/functional_testing.rst:57
msgid "http://pypi.python.org/pypi/collective.testcaselayer"
msgstr ""

# a255624c17494469b973ecc6832b3667
#: ../../source/testing_and_debugging/functional_testing.rst:59
msgid "Example code::"
msgstr ""

# 982e6873f5ce46bca84f1728cb39aa8c
#: ../../source/testing_and_debugging/functional_testing.rst:109
msgid "Preparing error logger"
msgstr ""

# e297ac10a93b4e1792dcd9e658732b98
#: ../../source/testing_and_debugging/functional_testing.rst:111
msgid ""
"Since zope.testbrowser uses normal Plone paging mechanism, you won't get "
"nice tracebacks to your console."
msgstr ""

# bd9328daa3094e7c9b77423b54175c04
#: ../../source/testing_and_debugging/functional_testing.rst:113
msgid ""
"The following snippet allows you to extract traceback data from "
"site.error_log utility and print it to the console. Put it to your "
"afterSetUp()::"
msgstr ""

# c3e7c7b4c52e440d852d9144604c0ba9
#: ../../source/testing_and_debugging/functional_testing.rst:128
msgid "Opening an URL"
msgstr ""

# deb9427a4e324c4baeed61019dc8938b
#: ../../source/testing_and_debugging/functional_testing.rst:139
msgid "Logging in"
msgstr ""

# a7288f647b954abb93c34cd6028ec652
#: ../../source/testing_and_debugging/functional_testing.rst:152
msgid "Logout"
msgstr ""

# 3c64c0119a64433faa54c8517c800bd5
#: ../../source/testing_and_debugging/functional_testing.rst:165
msgid "Showing the contents from the last request"
msgstr ""

# 9f4aa596a5e843a5a9d6a56e6f6108fa
#: ../../source/testing_and_debugging/functional_testing.rst:167
msgid ""
"After test browser has opened an URL its content can be read from "
"browser.contents variable."
msgstr ""

# 3feb21e4165f4fa7954f65d7ac6441de
#: ../../source/testing_and_debugging/functional_testing.rst:175
msgid "Getting a form handler"
msgstr ""

# f5d90fea34314178bf6d7861fee4325a
#: ../../source/testing_and_debugging/functional_testing.rst:177
msgid ""
"You can use testbrowser ``getForm()`` to access different forms on a page."
msgstr ""

# 51a0956d70a44ee2bd508e366e55e275
#: ../../source/testing_and_debugging/functional_testing.rst:179
msgid "Form look-up is available by ``name`` or ``index``."
msgstr ""

# 65db13c60b6b428dbcd02a4ec655eb22
#: ../../source/testing_and_debugging/functional_testing.rst:186
msgid "Listing available form controls"
msgstr ""

# 0698392d4c5e4637acea22d6808bbf4f
#: ../../source/testing_and_debugging/functional_testing.rst:188
msgid "You can do the following to know what content your form has eaten"
msgstr ""

# cb4bf67dd8a84687accd0d8091c75b4f
#: ../../source/testing_and_debugging/functional_testing.rst:190
msgid ""
"the mechanize browser instance that is used through zope.testbrowser. "
"zope.testbrowser internally uses a testbrowser provided by the mechanize "
"package. The mechanize objects are saved in browser.mech_browser and as "
"attributes on different other instances returned by zope.testbrowser. "
"mechanize has a different, less convenient api, but also provides more "
"options. To see a list of all controls in a for you can do e.g.::"
msgstr ""

# 5dbfdbbe4b8f42838866e78b55444578
#: ../../source/testing_and_debugging/functional_testing.rst:205
msgid "... or one-liner ...::"
msgstr ""

# d984e2d415e148808963485793c160b6
#: ../../source/testing_and_debugging/functional_testing.rst:209
msgid "the HTML page source code::"
msgstr ""

# b01b99e2a7eb4a1cb87130ec9f159ca2
#: ../../source/testing_and_debugging/functional_testing.rst:215
msgid "Filling in a text field on  a page"
msgstr ""

# cb984ce45a854af5aa84e955b8e5cc1d
#: ../../source/testing_and_debugging/functional_testing.rst:217
msgid "You can manipulate ``value`` of various form input controls."
msgstr ""

# 6506bcfcb1be45a4b158b3ef54af2230
#: ../../source/testing_and_debugging/functional_testing.rst:219
msgid "Example how to submit Plone search page::"
msgstr ""

# 3de22325299140a1a7d8926e3fb4f5f6
#: ../../source/testing_and_debugging/functional_testing.rst:239
msgid "Selecting a checkbox"
msgstr ""

# c041a14adf864fbc811eff33a8f1abcc
#: ../../source/testing_and_debugging/functional_testing.rst:241
msgid "Checkboxes are usually presented as name:list style names::"
msgstr ""

# 3fa4120234ec4774b226b960fd3dd9c0
#: ../../source/testing_and_debugging/functional_testing.rst:247
msgid "Clicking a button"
msgstr ""

# f1cdf39d92a647919b23294bd765e9b7
#: ../../source/testing_and_debugging/functional_testing.rst:254
msgid ""
"If you have a form instance, you can use the submit action. To click on the "
"Button labeled \"Log in\" in the login form, you do::"
msgstr ""

# 5107a1afc8fc40d89a483de72d82a022
#: ../../source/testing_and_debugging/functional_testing.rst:261
msgid "Checking Unauthorized response"
msgstr ""

# a3495afc2b2c4a9a8180b2693fac863e
#: ../../source/testing_and_debugging/functional_testing.rst:293
msgid ""
"Another example where test browser / Zope 2 publisher where invalidly "
"handling Unauthorized exception::"
msgstr ""

# 390a2736b47e45cea8285023cc09e01f
#: ../../source/testing_and_debugging/functional_testing.rst:315
msgid "Checking a HTTP response header"
msgstr ""

# 1ce543645ca6492abf770930298a52e5
#: ../../source/testing_and_debugging/functional_testing.rst:317
msgid "Exaple:"
msgstr ""

# 726a36f95ef841a299baa6f168841f24
#: ../../source/testing_and_debugging/functional_testing.rst:319
msgid ""
"self.assertEqual(self.browser.headers[\"Content-type\"], 'application/octet-"
"stream')"
msgstr ""

# 88fde5739f5644708738eb7039041142
#: ../../source/testing_and_debugging/functional_testing.rst:322
msgid "Checking HTTP exception"
msgstr ""

# 0abc9c6c24084e80a9cc4b91b4676d36
#: ../../source/testing_and_debugging/functional_testing.rst:324
msgid "Example how to check for HTTP 500 Internal Server Error::"
msgstr ""

# 5e59286bfd544da38d45afb991021b0c
#: ../../source/testing_and_debugging/functional_testing.rst:340
msgid "Setting test browser headers"
msgstr ""

# 1d9839cec17740339f0a4a5da867b08c
#: ../../source/testing_and_debugging/functional_testing.rst:342
msgid ""
"Headers must be passed to underlying PublisherMechanizeBrowser instance and "
"test browser must be constructed based on this instance."
msgstr ""

# 8b1b41f015a74a99bc145795648474ed
#: ../../source/testing_and_debugging/functional_testing.rst:347
msgid ""
"When passing parameters to PublisherMechanizeBrowser.addheaders HTTP prefix "
"will be automatically added to header name."
msgstr ""

# 9ad7c982995349cab9db3129bc12df92
#: ../../source/testing_and_debugging/functional_testing.rst:351
msgid "Add header to browser"
msgstr ""

# c85c38de99154453a80582f193f9e81d
#: ../../source/testing_and_debugging/functional_testing.rst:360
msgid "Setting user agent"
msgstr ""

# 60763499fddd4c8eb0bedc5fca304099
#: ../../source/testing_and_debugging/functional_testing.rst:398
msgid "For more information, see"
msgstr ""

# 50ca960afd994ba78ea540280dd80340
#: ../../source/testing_and_debugging/functional_testing.rst:400
msgid "https://mail.zope.org/pipermail/zope3-users/2008-May/007871.html"
msgstr ""

# 8f3c53e95498418ab7a0bc89d842b4d2
#: ../../source/testing_and_debugging/index.rst:3
msgid "Testing and debugging"
msgstr ""

# 6b434f2a899c4b9184295f629bb4f50c
#: ../../source/testing_and_debugging/index.rst:5
msgid "This section contains tips how to test and debug your code."
msgstr ""

# 651c1c25718442e6abd81762fa65bdba
#: ../../source/testing_and_debugging/logging.rst:3
msgid "Logging"
msgstr ""

# 134a9c967df9471081c8c20010126e86
#: ../../source/testing_and_debugging/logging.rst:7
msgid "How to write log output from your Plone add-on program code"
msgstr ""

# 9a1f34ef0e804bfcb21b0af91a66adf0
#: ../../source/testing_and_debugging/logging.rst:14
msgid ""
"`Python logging package <http://docs.python.org/library/logging.html>`_ is "
"used to log from Plone."
msgstr ""

# 8adaf676aabf47839b978bcdf5b0dabc
#: ../../source/testing_and_debugging/logging.rst:17
msgid "Log file location"
msgstr ""

# ad34509e2cd9418ca58378783e192a7f
#: ../../source/testing_and_debugging/logging.rst:19
msgid "By default, logs go to ``var/log`` folder under buildout."
msgstr ""

# 00fc8ad4b67e4b2cb6ddad8c30d75bc9
#: ../../source/testing_and_debugging/logging.rst:21
msgid ""
"If Zope instance is started in the foreground mode logs will be printed in "
"the console (stdout)."
msgstr ""

# 55ff4cd1bfca4344ad0a788ba3f4f635
#: ../../source/testing_and_debugging/logging.rst:24
msgid ""
"Plone log filename varies depending on the installation mode (Zope, ZEO "
"cluster). But for each instance there are two log files"
msgstr ""

# a0a46cbbc8b24a148aae0463b3e426be
#: ../../source/testing_and_debugging/logging.rst:27
msgid "Event logs (errors), normally called *instance.log*"
msgstr ""

# 6daac830441f4f2facf2fdd2d41bf211
#: ../../source/testing_and_debugging/logging.rst:29
msgid "HTTP request log (Apache compatible), normally called *Z2.log*"
msgstr ""

# 1e405036bb734287bfa7b337801d66b6
#: ../../source/testing_and_debugging/logging.rst:32
msgid "Viewing logs in real time"
msgstr ""

# de493dad93174e059b55b158c3fbd507
#: ../../source/testing_and_debugging/logging.rst:34
msgid "UNIX'y way for your terminal."
msgstr ""

# 6ffe89a96f0446f1a393492474767884
#: ../../source/testing_and_debugging/logging.rst:36
msgid ""
"Open error log viewer using ``tail`` command (print content from file end) "
"and wait for further file writes"
msgstr ""

# a2df380635a94b918aca72afe959a7c6
#: ../../source/testing_and_debugging/logging.rst:43
msgid "Press CTRL+C to abort."
msgstr ""

# 8a0128ffa77647babf22058264c6e0f2
#: ../../source/testing_and_debugging/logging.rst:46
msgid "Log level"
msgstr ""

# 7ed4b4ec440c41538a9a585ce1847641
#: ../../source/testing_and_debugging/logging.rst:48
msgid ""
"Default log level is ``INFO``. To enable more verbose logging, edit "
"``buildout.cfg``,"
msgstr ""

# 7fedabe05f7c4f8d9dea7871809ebf47
#: ../../source/testing_and_debugging/logging.rst:50
msgid ""
"Change log level by editing ``[instance]`` section ``event-log-level``::"
msgstr ""

# 146204826442424cb9cabe0edf151dbb
#: ../../source/testing_and_debugging/logging.rst:55
msgid "More information"
msgstr ""

# cbaf6fa47f1a42278d641a393e115e70
#: ../../source/testing_and_debugging/logging.rst:57
msgid "http://pypi.python.org/pypi/plone.recipe.zope2instance"
msgstr ""

# 672e2b1642e9441aa3f3f0bd681f82f1
#: ../../source/testing_and_debugging/logging.rst:60
msgid "Logging from Python code"
msgstr ""

# 41e77bc370574a658c56a7ecd4fef7f8
#: ../../source/testing_and_debugging/logging.rst:75
msgid "Logging from page templates and RestrictedPython scripts"
msgstr ""

# d815e69c20b34c0a9ba32330c7d639c1
#: ../../source/testing_and_debugging/logging.rst:77
msgid ""
"Python ``logging`` module doesn't provide Zope 2 security assertations and "
"does not work in :doc:`RestrictedPython Python scripts "
"</security/sandboxing>`."
msgstr ""

# 3e2934a5608a4cfb8a98843a3b25f167
#: ../../source/testing_and_debugging/logging.rst:80
msgid ""
"However, you can use ``context.plone_log()`` method logging in the sandboxed"
" execution mode."
msgstr ""

# 6beef85a7ab84b52888b908497272755
#: ../../source/testing_and_debugging/logging.rst:87
msgid "Forcing log level and output"
msgstr ""

# a5960e4d408943eb86739244929a35bd
#: ../../source/testing_and_debugging/logging.rst:89
msgid ""
"The following snippet forces the log level of Python logging for the "
"duration of the process by modifying the root logger object::"
msgstr ""

# 74f25bbc3f3f4c55a077f8d2ba15bcdc
#: ../../source/testing_and_debugging/logging.rst:104
msgid "Temporarily capturing log output"
msgstr ""

# 2096574f967646929c4e79b27f3f9979
#: ../../source/testing_and_debugging/logging.rst:106
msgid ""
"You can capture Python logging output temporarily to a string buffer. This "
"is useful if you want to use logging module to record the status of long "
"running operations and later show to the end user, who does not have access "
"to file system logs, how the operation proceeded."
msgstr ""

# 50e23e281be4410785b99a2a9f06236e
#: ../../source/testing_and_debugging/logging.rst:112
msgid "Below is an Grok view code example."
msgstr ""

# 9a1608a681f44fd6a5deff3f1ca9b8df
#: ../../source/testing_and_debugging/logging.rst:114
msgid "Example view code::"
msgstr ""

# 3fa58b7351d04d96931766358d0be979
#: ../../source/testing_and_debugging/logging.rst:232
msgid "The related page template"
msgstr ""

# 079efc7e72174f5c8d32e883174ab940
#: ../../source/testing_and_debugging/logging.rst:269
msgid "transaction_note()"
msgstr ""

# ed3ea146d5a54c628e20992304b2fd39
#: ../../source/testing_and_debugging/logging.rst:271
msgid "Leave a note on Zope's *History* tab."
msgstr ""

# 63fb378a39dc4cb0b902d1265003f5a1
#: ../../source/testing_and_debugging/logging.rst:273
msgid ""
"https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/utils.py#L382"
msgstr ""

# 71e042197e2f466ba16caa22e23bc858
#: ../../source/testing_and_debugging/pdb.rst:3
msgid "Python debugging"
msgstr ""

# 087f7b17f9914b7ab7330c444933a641
#: ../../source/testing_and_debugging/pdb.rst:7
msgid ""
"Using Python command-line debugger (``pdb``) to debug Plone and Python "
"applications."
msgstr ""

# a63a6fcabba94c8fbfa28417040ea744
#: ../../source/testing_and_debugging/pdb.rst:15
msgid "The Python debugger (``pdb``) is an interactive command-line debugger."
msgstr ""

# c82903c1b7c54d6fba7828bf8624f4f6
#: ../../source/testing_and_debugging/pdb.rst:17
msgid ""
"It is very limited in functionality, but it will work in every environment "
"and type of console. Plone also has through-the-web-browser PBD debugging "
"add-on products."
msgstr ""

# a8663d9dd7b147a7830035ea9c80ea0b
#: ../../source/testing_and_debugging/pdb.rst:23
msgid ""
"``pdb`` is not the same as the Python interactive shell. ``pdb`` allows you "
"to step through the code, whilst the Python shell allows you just to inspect"
" and manipulate objects."
msgstr ""

# a6920754d1e44d3cb20086c988ad6adb
#: ../../source/testing_and_debugging/pdb.rst:27
msgid ""
"If you wish to play around with Zope in interactive Python shell or run "
"scripts instead of debugging (exceptions), please read :doc:`Command line "
"</misc/commandline>` documentation."
msgstr ""

# c04017821dac46ab8a2b617c2a501cf7
#: ../../source/testing_and_debugging/pdb.rst:31
msgid "See also"
msgstr ""

# 858e0a0d2aea448483da767c6b735fc6
#: ../../source/testing_and_debugging/pdb.rst:33
msgid "http://plone.org/documentation/kb/using-pdb"
msgstr ""

# 3c0c888c88bd4fdcad6cd6c4d52a43d7
#: ../../source/testing_and_debugging/pdb.rst:35
msgid "http://plone.org/documentation/kb/best-practices/debugging-plone"
msgstr ""

# 1a674f26fc034baa8a6dd9328b58803d
#: ../../source/testing_and_debugging/pdb.rst:38
msgid "Using ``pdb``"
msgstr ""

# 050ee61d0d3c4e18a2eeb9aa765c6f08
#: ../../source/testing_and_debugging/pdb.rst:41
msgid ""
"the point where you want have a closer look.  Next time the code is run, the"
" execution will stop there and you can examine the current context variables"
" from a Python command prompt."
msgstr ""

# 172ff23a953745ccb845a28e2bf44c99
#: ../../source/testing_and_debugging/pdb.rst:46
msgid ""
"Zope and start it in the foreground using the ``bin/instance fg`` command."
msgstr ""

# fb5648b1f0a644a2a029734f6f382acb
#: ../../source/testing_and_debugging/pdb.rst:49
msgid ""
"`http://pypi.python.org/pypi/PdbTextMateSupport/0.3 "
"<http://pypi.python.org/pypi/PdbTextMateSupport/0.3>`_."
msgstr ""

# 7a7e5efda11d4af8bb8eeecbbfbb5b0a
#: ../../source/testing_and_debugging/pdb.rst:53
msgid ""
"`http://pypi.python.org/pypi/mr.freeze "
"<http://pypi.python.org/pypi/mr.freeze>`_."
msgstr ""

# d075b9d052134fb6a39580686c170a6f
#: ../../source/testing_and_debugging/pdb.rst:76
msgid "Pretty printing objects"
msgstr ""

# 113bf151411a4969a582797421a33735
#: ../../source/testing_and_debugging/pdb.rst:113
msgid "Useful ``pdb`` commands"
msgstr ""

# 0d90973b825f4bda8dda18b16e233997
#: ../../source/testing_and_debugging/pdb.rst:115
msgid "Just type the command and hit enter."
msgstr ""

# f5185a20f005400dbbaf10bcb7dec02a
#: ../../source/testing_and_debugging/pdb.rst:118
msgid "step into, go into the function in the cursor"
msgstr ""

# 7cc4cd3d2aa243c4bd1824c588aae8fa
#: ../../source/testing_and_debugging/pdb.rst:121
msgid ""
"step over, execute the function under the cursor without stepping into it"
msgstr ""

# 60fbd5e0f0634da99964a35d50ef3466
#: ../../source/testing_and_debugging/pdb.rst:124
msgid "continue, resume program"
msgstr ""

# 220df575091443dd957c391f5c3ab847
#: ../../source/testing_and_debugging/pdb.rst:127
msgid "where am I? displays current location in stack trace"
msgstr ""

# 3387a3b1f9194f00b284bcaf45589e31
#: ../../source/testing_and_debugging/pdb.rst:130
msgid "set breakpoint"
msgstr ""

# 9d8831c3d22845ad9873bc92a69bdf6c
#: ../../source/testing_and_debugging/pdb.rst:133
msgid "clear breakpoint"
msgstr ""

# 57186c40c3a44e139237e140f10a4d0c
#: ../../source/testing_and_debugging/pdb.rst:136
msgid "print stack trace"
msgstr ""

# e829e9562eda4038ad64123c15d5d081
#: ../../source/testing_and_debugging/pdb.rst:139
msgid "go to the scope of the caller function"
msgstr ""

# 162012d37c7249d7964d6b7ec9259334
#: ../../source/testing_and_debugging/pdb.rst:142
msgid "pretty print object"
msgstr ""

# 1fec37f04a0949bfbc5940b38d4fdf4d
#: ../../source/testing_and_debugging/pdb.rst:145
msgid ""
"Continue execution until the line with the line number greater than the "
"current one is reached or when returning from current frame"
msgstr ""

# 48da00e9febf481d897cd6c9d579c0a6
#: ../../source/testing_and_debugging/pdb.rst:150
msgid ""
"The ``until`` command (or ``unt``) is available only on Plone 4.x or "
"superior as it is a new feature provided by the ``pdb`` module under Python "
"2.6."
msgstr ""

# 660ae3fd84834d9fab76a69662f544ef
#: ../../source/testing_and_debugging/pdb.rst:156
msgid "Useful ``pdb`` snippets"
msgstr ""

# 2f11451af71446a49be04c34cafb5678
#: ../../source/testing_and_debugging/pdb.rst:158
msgid "Output object's class::"
msgstr ""

# 3b9ba006d713411a920072a16ca4dc9e
#: ../../source/testing_and_debugging/pdb.rst:162
msgid "Output object attributes and methods::"
msgstr ""

# cdf4f415f2384409ad7cd2f68b6e98e2
#: ../../source/testing_and_debugging/pdb.rst:166
msgid "Print local variables in the current function::"
msgstr ""

# 5eca4af582ff45c0a3075062ef481e00
#: ../../source/testing_and_debugging/pdb.rst:170
msgid "Dumping incoming HTTP GET or HTTP POST::"
msgstr ""

# eab0eebbc29f4212b8b4608b49bf6150
#: ../../source/testing_and_debugging/pdb.rst:175
msgid "Executing code on the context of the current stack frame::"
msgstr ""

# 0d2691aab1084b3ca557e99568d0c09a
#: ../../source/testing_and_debugging/pdb.rst:187
msgid ""
"The example above will modify the previous value of the variable ``my_tags``"
" in the current stack frame."
msgstr ""

# 60859c4c6d494be5bf611d6f43ae69af
#: ../../source/testing_and_debugging/pdb.rst:192
msgid "Automatically start debugger when exception is raised (browser)"
msgstr ""

# 0ceb0529716840c18b5e42d01134fc8e
#: ../../source/testing_and_debugging/pdb.rst:194
msgid ""
"You can start interactive through-the-browser Python debugger when your site"
" throws an exception."
msgstr ""

# 413f4ff023274797b5ce75e7c54b9d95
#: ../../source/testing_and_debugging/pdb.rst:197
msgid ""
"Instead of getting \"We're sorry there seems to be an error...\" page you "
"get a pdb prompt which allows you to debug the exception. This is also known"
" as post-mortem debugging."
msgstr ""

# 1a27e1286c824de98a6b665fd3a99127
#: ../../source/testing_and_debugging/pdb.rst:201
msgid "This can be achieved with ` `Products.PDBDebugMode`` add-on."
msgstr ""

# f5bacf4496f744bb92914a9c358b0ffd
#: ../../source/testing_and_debugging/pdb.rst:203
msgid "http://pypi.python.org/pypi/Products.PDBDebugMode"
msgstr ""

# 592b767450ca487a9fe6017b2403a814
#: ../../source/testing_and_debugging/pdb.rst:208
msgid ""
"PDBDebugMode is not safe to install on the production server due to sandbox "
"security escape."
msgstr ""

# 1db7d01736c24f1db5effc24618fcbc5
#: ../../source/testing_and_debugging/pdb.rst:213
msgid "Automatically start debugger when exception is raised (command line)"
msgstr ""

# e73531a781eb457ba114ed55ae13406e
#: ../../source/testing_and_debugging/pdb.rst:217
msgid ""
"This cannot be directly applied to a web server, but works with command line"
" scripts."
msgstr ""

# 2751c6f3310e410b9d64c293f9e1e1f3
#: ../../source/testing_and_debugging/pdb.rst:222
msgid "This does not work with Zope web server launch as it forks a process."
msgstr ""

# 5f6b24fe12f744eea594df19745c0903
#: ../../source/testing_and_debugging/pdb.rst:228
msgid ""
"Hit ``c`` and ``enter`` to start the application. It keeps running, until an"
" uncaught exception is raised. At this point, it falls back to the ``pdb`` "
"debug prompt."
msgstr ""

# a682e93583394a4094685cace1f39b86
#: ../../source/testing_and_debugging/pdb.rst:233
msgid "For more information see"
msgstr ""

# 42e264d123bd444a8d8ffc0dd9631438
#: ../../source/testing_and_debugging/pdb.rst:235
msgid "http://docs.python.org/library/pdb.html"
msgstr ""

# fb624e1c5bc54787b95ebc41fe728764
#: ../../source/testing_and_debugging/unit_testing.rst:3
msgid "Unit testing"
msgstr ""

# 4b2bacf252e74a6dbae24d681718ad2d
#: ../../source/testing_and_debugging/unit_testing.rst:10
msgid ""
"Unit tests are automated tests created by the developer to ensure that the "
"add-on product is intact in the current product configuration. Unit tests "
"are regression tests and are designed to catch broken functionality over the"
" code evolution."
msgstr ""

# c958a4c16f3d4226887cba7abeeea82a
#: ../../source/testing_and_debugging/unit_testing.rst:15
msgid ""
"`Plone unit testing tutorial "
"<http://plone.org/documentation/tutorial/richdocument/unit-testing>`_."
msgstr ""

# 1b8dd078997e448184e481d67973e604
#: ../../source/testing_and_debugging/unit_testing.rst:18
msgid "Running unit tests"
msgstr ""

# 82557e37425649149b4527e89b8d1f31
#: ../../source/testing_and_debugging/unit_testing.rst:20
msgid ""
"Since Plone 4, it is recommended to use ``zc.testrunner``  to run the test "
"suites.  You need to add it to your ``buildout.cfg``, so that the ``test`` "
"command will be generated."
msgstr ""

# dd767e55432846eb83217871e8cf045d
#: ../../source/testing_and_debugging/unit_testing.rst:38
msgid ""
"On Plone 3 you can run tests with the ``bin/instance test`` command, which "
"corresponds ``bin/test``."
msgstr ""

# 458dcab055fb4107bbebdf1cb201be74
#: ../../source/testing_and_debugging/unit_testing.rst:42
msgid "Running tests for one package:"
msgstr ""

# 149752df2f304422a1505a9c42274644
#: ../../source/testing_and_debugging/unit_testing.rst:48
msgid "Running tests for one test case:"
msgstr ""

# d6fbdb7bb8d64a80a72ca33b9ab8e16b
#: ../../source/testing_and_debugging/unit_testing.rst:54
msgid "Running tests for two test cases:"
msgstr ""

# 5d56594416ae40cd867870ce581ce0e7
#: ../../source/testing_and_debugging/unit_testing.rst:60
msgid "To drop into the pdb debugger after each test failure:"
msgstr ""

# 60f44b5b61084b9a91eca74fef97e5db
#: ../../source/testing_and_debugging/unit_testing.rst:66
msgid "To exclude tests:"
msgstr ""

# dc59edb92cb54b19aaa9269b68feca4d
#: ../../source/testing_and_debugging/unit_testing.rst:72
msgid "To list tests that will be run:"
msgstr ""

# 640de75acebf490da551726d23bd60ad
#: ../../source/testing_and_debugging/unit_testing.rst:78
msgid ""
"The following will run tests for *all* Plone add-ons: useful to check "
"whether you have a set of component that function well together:"
msgstr ""

# 6d403c25ae9d4dd9914db44a113aeeb7
#: ../../source/testing_and_debugging/unit_testing.rst:87
msgid ""
"The test runner does not give an error if you supply invalid package and "
"test case name.  Instead it just simply doesn't execute tests."
msgstr ""

# 247724bd3f374c02b832d1f523ad061e
#: ../../source/testing_and_debugging/unit_testing.rst:90
msgid "More information:"
msgstr ""

# ef1e6c8f9ca749d69941907632919d36
#: ../../source/testing_and_debugging/unit_testing.rst:92
msgid ""
"http://plone.org/documentation/manual/upgrade-guide/version/upgrading-"
"plone-3-x-to-4.0/updating-add-on-products-for-plone-4.0/no-longer-bin-"
"instance-test-use-zc.recipe.testrunner"
msgstr ""

# b80750608c4a4095953727ec3dbf3857
#: ../../source/testing_and_debugging/unit_testing.rst:95
msgid "AttributeError: 'module' object has no attribute 'test_suite'"
msgstr ""

# 35fd612de9324d33b86eeef59b9b85ad
#: ../../source/testing_and_debugging/unit_testing.rst:97
msgid "If you get the above error message there are two potential reasons:"
msgstr ""

# 48de58f020694e5e8015e11f43138a96
#: ../../source/testing_and_debugging/unit_testing.rst:99
msgid "You have both a ``tests.py`` file and a ``tests`` folder."
msgstr ""

# 31e716867b7e416da806622c2d3e07db
#: ../../source/testing_and_debugging/unit_testing.rst:101
msgid ""
"Old version: Zope version X unit test framework was updated not to need an "
"explicit ``test_suite`` declaration in the ``test`` module any more. "
"Instead, all subclasses of ``TestCase`` are automatically picked. However, "
"this change is backwards incompatible. "
"http://wiki.zope.org/zope2/HowToRunZopeUnitTests"
msgstr ""

# 0c705a6cf45242daacad28b3d7e90936
#: ../../source/testing_and_debugging/unit_testing.rst:108
msgid "Test coverage"
msgstr ""

# 803f610a9c874c6db01491f22aa82c7f
#: ../../source/testing_and_debugging/unit_testing.rst:110
msgid ""
"Zope test running can show how much of your code is covered by automatic "
"tests:"
msgstr ""

# e0c8587808b6427b89922913d815009b
#: ../../source/testing_and_debugging/unit_testing.rst:113
msgid "http://plone.org/documentation/kb/testing/code-coverage"
msgstr ""

# 873e4073fd504472bbcbde560ef723ab
#: ../../source/testing_and_debugging/unit_testing.rst:116
msgid "Running tests against Python egg"
msgstr ""

# 68d58be86eb544f2b820ccb5402c821f
#: ../../source/testing_and_debugging/unit_testing.rst:118
msgid ""
"You might need to add additional setup.py options to get your tests work"
msgstr ""

# 68cf5ebf828445358164ca969cbd2e43
#: ../../source/testing_and_debugging/unit_testing.rst:120
msgid "http://rpatterson.net/blog/running-tests-in-egg-buildouts"
msgstr ""

# 8751c08766e44219827bd402fe41ca12
#: ../../source/testing_and_debugging/unit_testing.rst:123
msgid "Creating unit tests"
msgstr ""

# 75c2d30396634685bb3f60a40faaa7a8
#: ../../source/testing_and_debugging/unit_testing.rst:125
msgid "Pointers:"
msgstr ""

# ba56ef9d84224476a29191eba2b86307
#: ../../source/testing_and_debugging/unit_testing.rst:127
msgid "http://plone.org/documentation/kb/testing"
msgstr ""

# 3e4ad80c0fb14048b5ebd7dbb34b36cb
#: ../../source/testing_and_debugging/unit_testing.rst:129
msgid "http://pypi.python.org/pypi/plone.app.testing"
msgstr ""

# d5baeaa7a3244aaa8885d8fe9ff90cf8
#: ../../source/testing_and_debugging/unit_testing.rst:131
msgid "http://pypi.python.org/pypi/Products.PloneTestCase"
msgstr ""

# 32bef51cf92c40408d8b011986440e8c
#: ../../source/testing_and_debugging/unit_testing.rst:133
msgid "http://www.zope.org/Members/shh/ZopeTestCaseWiki/ApiReference"
msgstr ""

# 1b350233003343d2911ca5c968db35e0
#: ../../source/testing_and_debugging/unit_testing.rst:136
msgid "For new test suites, it is recommended to use `plone.app.testing`."
msgstr ""

# a326a55d4150457aa124731b896a5ba6
#: ../../source/testing_and_debugging/unit_testing.rst:140
msgid "Base test class skeleton"
msgstr ""

# 9430876def7a47e581a9a6ef29d16dd8
#: ../../source/testing_and_debugging/unit_testing.rst:189
msgid "Posing as different users"
msgstr ""

# caef9bbf446346f9a02ba880104b6f5d
#: ../../source/testing_and_debugging/unit_testing.rst:191
msgid "There is a shortcut to privilege you from all security checks::"
msgstr ""

# 9abd91f127a041a89a405e24e950fa75
#: ../../source/testing_and_debugging/unit_testing.rst:196
msgid "from plone.app.testing import login ... login(self.portal, 'admin')"
msgstr ""

# c95d84724eb745ecb23548f6f34742f6
#: ../../source/testing_and_debugging/unit_testing.rst:200
msgid "where ``self`` is the test case instance."
msgstr ""

# 1ae099b7d3a74e9cb028494a40b0c4e2
#: ../../source/testing_and_debugging/unit_testing.rst:204
msgid ""
"This privileges are effective only in the context where permissions are "
"checked manually. They do not affect traversal-related permissions: looking "
"up views or pages in unit test Python code.  For that kind of testing, use "
"functional testing."
msgstr ""

# a585d96ee40e44309e614aa434a1e5f9
#: ../../source/testing_and_debugging/unit_testing.rst:210
msgid "Unit tests and themes"
msgstr ""

# e97a554e35f4476a8eec0b5ca8cccd8a
#: ../../source/testing_and_debugging/unit_testing.rst:212
msgid ""
"If your test code modifies skin registries you need to force the skin data "
"to be reloaded."
msgstr ""

# 8152459d415e40d2a76b3dd9b40060ea
#: ../../source/testing_and_debugging/unit_testing.rst:215
msgid "Example (``self`` is the unit test)::"
msgstr ""

# 3954e719b6344119a8cc56ac8da70e1d
#: ../../source/testing_and_debugging/unit_testing.rst:220
msgid "Running add-on installers and extensions profiles for unit tests"
msgstr ""

# bd0713b7dc344bbfb4924ba6bf1aa6fb
#: ../../source/testing_and_debugging/unit_testing.rst:222
msgid "By default, no add-on installers or extension profiles are installed."
msgstr ""

# 14f77d6c9fe540949c77aca1641b8c27
#: ../../source/testing_and_debugging/unit_testing.rst:224
msgid ""
"You need to modify ``PloneTestCase.setupPloneSite()`` call in your base unit"
" tests."
msgstr ""

# 2d70cb9b44e54e5f9453eb739e233b8d
#: ../../source/testing_and_debugging/unit_testing.rst:227
msgid "Simple example::"
msgstr ""

# 003cbb1f39404d1f83e3f8e3ac1cf84e
#: ../../source/testing_and_debugging/unit_testing.rst:231
msgid "Complex example::"
msgstr ""

# 516704fdabac4e89b4af2e6e74f89ed8
#: ../../source/testing_and_debugging/unit_testing.rst:237
msgid "Tested package not found warning"
msgstr ""

# 70104c8ab758423086b7dbdafd85da8f
#: ../../source/testing_and_debugging/unit_testing.rst:239
msgid ""
"Installers may fail without interrupting the test run. Monitor Zope start up"
" messages. If you get error like::"
msgstr ""

# 3f98ef4dd9d541108560857e6a7f0d6d
#: ../../source/testing_and_debugging/unit_testing.rst:244
msgid "You might be missing this from your ``configure.zcml``"
msgstr ""

# bd45d7eda6fc426285b202d84f4936db
#: ../../source/testing_and_debugging/unit_testing.rst:250
msgid "... or you have a spelling error in your test setup code."
msgstr ""

# 140f088da285446faace90ed529cccdd
#: ../../source/testing_and_debugging/unit_testing.rst:253
msgid "Load ZCML for testing"
msgstr ""

# fff795879a92439993ab64d87f6102c6
#: ../../source/testing_and_debugging/unit_testing.rst:255
msgid "For loading ZCML files in your test, you can use the Five API::"
msgstr ""

# fa29b8344adf4843a0e8bb55e8e2ed4b
#: ../../source/testing_and_debugging/unit_testing.rst:263
msgid "Setting log level in unit tests"
msgstr ""

# 33518131736942f5a34d329e6222ad29
#: ../../source/testing_and_debugging/unit_testing.rst:265
msgid ""
"Many components use the ``DEBUG`` output level, while the default output "
"level for unit testing is ``INFO``.  Import messages may go unnoticed during"
" the unit test development."
msgstr ""

# ecd4beb7ddbe4778ac151e924606cf6a
#: ../../source/testing_and_debugging/unit_testing.rst:269
msgid "Add this to your unit test code::"
msgstr ""

# 8c9a2f03cf3048608d41f0c3adb2a2e5
#: ../../source/testing_and_debugging/unit_testing.rst:279
msgid "HTTP request"
msgstr ""

# 48f904744bff41e6a6120be8c3d771ec
#: ../../source/testing_and_debugging/unit_testing.rst:281
msgid "Zope unit tests have a mock ``HTTPRequest`` object set up."
msgstr ""

# eae615d771af486dac21ee6edcffd301
#: ../../source/testing_and_debugging/unit_testing.rst:283
msgid "You can access it as follows::"
msgstr ""

# 1716f82ae72d47bcb8d8ab2bc206b6db
#: ../../source/testing_and_debugging/unit_testing.rst:288
msgid "Setting a real HTTP request"
msgstr ""

# 4d031c93d28e43329e20c19bcd995558
#: ../../source/testing_and_debugging/unit_testing.rst:298
msgid "Grabbing emails"
msgstr ""

# 5987d018a28647c1b243abfed39ff4ad
#: ../../source/testing_and_debugging/unit_testing.rst:301
msgid "Test outgoing email messages with Plone 3"
msgstr ""

# ca9e7b2c2edd41cebe4924e3e905e34b
#: ../../source/testing_and_debugging/unit_testing.rst:303
msgid "To debug outgoing email traffic you can create a dummy mailhost."
msgstr ""

# 79892cd705f74751a9729013b7af3342
#: ../../source/testing_and_debugging/unit_testing.rst:365
msgid "Test outgoing email messages with Plone 4"
msgstr ""

# 32d9eea1ec2f44eb8054411716617e7e
#: ../../source/testing_and_debugging/unit_testing.rst:367
msgid ""
"The ``MailHost`` code has changed in Plone 4. For more detail about the "
"changes please read the relevant section in the `Plone Upgrade Guide`_. "
"According to that guide we can reuse some of the test code in "
"``Products.CMFPlone.tests``."
msgstr ""

# 2e194351da0d4c2a8ac03ac20788330d
#: ../../source/testing_and_debugging/unit_testing.rst:374
msgid ""
"Here's some example of a ``unittest.TestCase`` based on the excellent "
"``plone.app.testing`` framework. Adapt it to your own needs."
msgstr ""

# 21cbe4062d26454fbc93e37c824bd8b1
#: ../../source/testing_and_debugging/unit_testing.rst:459
msgid "Unit testing and the Zope component architecture"
msgstr ""

# e5888b392074420f9ba9d3be4d8147aa
#: ../../source/testing_and_debugging/unit_testing.rst:461
msgid ""
"If you are dealing with the Zope component architecture at a low level in "
"your unit tests, there are some things to remember, because the global site "
"manager doesn't behave properly in unit tests."
msgstr ""

# 13b21ee350014cb5b9d6875adfa21e89
#: ../../source/testing_and_debugging/unit_testing.rst:465
msgid ""
"See discussion: http://plone.293351.n2.nabble.com/PTC-global-components-bug-"
"tp3413057p3413057.html"
msgstr ""

# 607e6ee1952d411faead6c9f14f1c7bb
#: ../../source/testing_and_debugging/unit_testing.rst:468
msgid "ZCML"
msgstr ""

# d39d1778fad6423bad330f18b936de8c
#: ../../source/testing_and_debugging/unit_testing.rst:470
msgid ""
"Below are examples how to run special ZCML snippets for your unit tests."
msgstr ""
