# SOME DESCRIPTIVE TITLE.
# Copyright (C) Plone community and other individual contributors
# This file is distributed under the same license as the Plone Developer Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Plone Developer Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-08 16:49\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/images/content.rst:3
# 0ab09782a07042c0817c88f744971cac
msgid "Image-like content"
msgstr ""

#: ../../source/images/content.rst:7
# c17e86d38c89441e901fec64b89cc856
msgid "How to programmatically manipulate images on your Plone site."
msgstr ""

#: ../../source/images/content.rst:12
# 2da03525021e404e8ab0beaace9759a2
msgid "Introduction"
msgstr ""

#: ../../source/images/content.rst:14
# 8a1c9c4cf11d4ac4aebd49cb76affc97
msgid "Plone supports image content in two forms:"
msgstr ""

#: ../../source/images/content.rst:16
# 11ab3a892f9c45bcaa94d5d0e6595230
msgid "As stand-alone content type, images will be visible in the sitemap. This is the case for the default ``Image`` content type, but you can create custom content types with similar properties."
msgstr ""

#: ../../source/images/content.rst:20
# 05c4b705f4824ad4b6a1d4726f0518f2
msgid "As a field, the image is directly associated with one content object.  Use ``Archetypes.fields.ImageField``."
msgstr ""

#: ../../source/images/content.rst:25
# e76e8f14e7dd4ab89edaf2b69a55bab9
msgid "Custom image content type"
msgstr ""

#: ../../source/images/content.rst:27
# 9188550416fd486380deb232776a8217
msgid "If you want to have your custom content type behave like the stock Plone ``Image`` content type:"
msgstr ""

#: ../../source/images/content.rst:30
# 40cade7955dc45d28d2a72ac74ed4211
msgid "Inherit from the content class ``Products.ATContentType.content.image.ATImage`` and use the schema from that class."
msgstr ""

#: ../../source/images/content.rst:33
# f04d93db5f364c7189ea287530314ee6
msgid "When writing the ``GenericSetup`` XML of your type, follow the example of `Image.xml <https://github.com/plone/Products.CMFPlone/tree/master/Products/CMFPlone/profiles/default/types/Image.xml>`_."
msgstr ""

#: ../../source/images/content.rst:35
# f0c749441bcb4f15adcf126dd53931ee
msgid "Do not set workflow for your type in ``profiles/default/workflows.xml``"
msgstr ""

#: ../../source/images/content.rst:48
# 7b8b28ce74d74d9d9bdab47822f28135
msgid "Image scales (Plone 4)"
msgstr ""

#: ../../source/images/content.rst:50
# 03676551892e455791323eed4fbad2e7
msgid "Archetypes based content image scales is handled by `plone.namedfile <https://pypi.python.org/pypi/plone.namedfile>`_."
msgstr ""

#: ../../source/images/content.rst:52
# 2b2ee354271b4010a244341724cdd3e2
msgid "Archetypes based content image scales is handled by `plone.app.imaging <http://plone.org/products/plone.app.imaging>`_."
msgstr ""

#: ../../source/images/content.rst:54
# f53e0d3a96a24ab9ab3aaa24ab51dee4
msgid "Both packages offer the same traverseable `@@images` view which can be used from page templates and Python code to provide different image scales for image fields on content."
msgstr ""

#: ../../source/images/content.rst:58
# 1a06c74f8d484534ab7d219eb11b5556
msgid "Image scales (Plone 3)"
msgstr ""

#: ../../source/images/content.rst:60
# a3be6b5421c0403c865b59308c4b8d74
msgid "When the image is uploaded, both field or content, Plone creates scaled-down versions from it by default."
msgstr ""

#: ../../source/images/content.rst:63
# 37281766b76a4b40a483bad86e83e35f
msgid "These are configured using the ``ImageField`` *``sizes``* parameter. See the ``ImageField`` class notes here:"
msgstr ""

#: ../../source/images/content.rst:66
#: ../../source/images/templates.rst:174
# 226cf390ae284b809374a9c99c0a06ed
# dd762c8903ae459aaf7de594d114196f
msgid "https://github.com/plone/Products.Archetypes/tree/master/Products/Archetypes/Field.py"
msgstr ""

#: ../../source/images/content.rst:68
# 8c5f98a1d46846a6a5d34cd7b520764f
msgid "The default image scales for ``Image`` content are configured in:"
msgstr ""

#: ../../source/images/content.rst:70
#: ../../source/images/content.rst:95
#: ../../source/images/templates.rst:154
# 064a1ead9b6d432eacc1802e508d4d00
# 427a0f734fa14418bcbff385dc11a65a
# f0c38aa50dc247c08cf65cca2fdb28e3
msgid "https://github.com/plone/Products.ATContentTypes/tree/master/Products/ATContentTypes/content/image.py"
msgstr ""

#: ../../source/images/content.rst:72
# 9da50dd66dd04f8c9cf4dd139d97dcb6
msgid "Configuration::"
msgstr ""

#: ../../source/images/content.rst:83
# 9baac89355ba43d2b6491fdc4f67ace1
msgid "More info:"
msgstr ""

#: ../../source/images/content.rst:85
# 077afaf916dd4d2b8a5422b420618d3a
msgid "http://plone.293351.n2.nabble.com/Register-browser-view-for-image-scales-tp5626267p5626267.html"
msgstr ""

#: ../../source/images/content.rst:88
# 007220a6491c4cf688ebd0d18ad31611
msgid "``getScale()``"
msgstr ""

#: ../../source/images/content.rst:90
# 2dadc446fabe4774a6b15486b6943398
msgid "``ImageField`` provides a ``getScale()`` method to get the scaled version of the image based on the ``sizes`` configuration key."
msgstr ""

#: ../../source/images/content.rst:93
# 62cedbf00c984dbcbb21b1c0b9ba919b
msgid "See example in ``__bobo_traverse__``:"
msgstr ""

#: ../../source/images/content.rst:99
# fd9bf1ae2f6a4ac6b0254430b131b00b
msgid "Accessing images"
msgstr ""

#: ../../source/images/content.rst:101
# 967b513803c748b7a54889288bef23e2
msgid "``ImageField`` is mapped to a traversable attribute of your content type. E.g. if your content object has a field ``imageOne`` and is found at this URL::"
msgstr ""

#: ../../source/images/content.rst:106
# db67a85cc55a43618f8e347132411308
msgid "the image can be directly downloaded from::"
msgstr ""

#: ../../source/images/content.rst:112
# 1d706f26de294f9ca95f297a474d4f96
msgid "Scaled versions for Image content (``ATImage``)"
msgstr ""

#: ../../source/images/content.rst:114
# c71e3e9fab7d47c793c4aaf74167efe8
msgid "If you want different scales you can add ``image_XXX`` prefix where ``XXX`` is the corresponding scale name::"
msgstr ""

#: ../../source/images/content.rst:119
# a85d8c6df2fe4d47bc5a08513e5c09ee
msgid "In **Plone 4** this behavior comes from the monkey-patch applied by the `plone.app.imaging <http://plone.org/products/plone.app.imaging>`_ package."
msgstr ""

#: ../../source/images/content.rst:122
# 80e869b6a9c04f4fac7da12be8ca7443
msgid "In **Plone 3** this hook is defined in ``__bobo_traverse__`` in ``ATImage`` class: * https://github.com/plone/Products.ATContentTypes/tree/master/Products/ATContentTypes/content/image.py"
msgstr ""

#: ../../source/images/content.rst:127
# 33898a22998e4aca9189c0d43a833a2f
msgid "``portal_catalog`` and images"
msgstr ""

#: ../../source/images/content.rst:129
# 5a2d9e3b7656411d93028c121c6515ac
msgid "Do not index image objects themselves, as adding image data to the ``portal_catalog`` brain objects would greatly increase their site and make brain look-up slow."
msgstr ""

#: ../../source/images/content.rst:133
# 9fc7c87bfc634534ac46247f7094c2b9
msgid "Instead, index only image paths using :doc:`getPhysicalPath() </serving/traversing>`. When you need to display image using metadata columns, you can generate the image URL manually. Then, the image object will be woken up when the browser makes a HTTP request for the image."
msgstr ""

#: ../../source/images/content.rst:140
# 695087e630da409992f3094138e9a608
msgid "Custom image scales and recreating scale data"
msgstr ""

#: ../../source/images/content.rst:143
# 3742691646df46d18f1f97e8c8b23e90
msgid "For Plone 4"
msgstr ""

#: ../../source/images/content.rst:145
# 6085b645b5034918aaaa9ccfa9ec09eb
msgid "`plone.app.imaging <http://plone.org/products/plone.app.imaging>`_ allows you to configure available image scales in ``portal_properties`` -> ``imaging_properties``."
msgstr ""

#: ../../source/images/content.rst:149
# 76d40c64ddd04f44b63ba34b5819c662
msgid "You can update these through-the-web or using :doc:`GenericSetup profile </components/genericsetup>`."
msgstr ""

#: ../../source/images/content.rst:152
# bcea18dfb656499fa56f7b92cc2196b5
msgid "``propertiestool.xml``"
msgstr ""

#: ../../source/images/content.rst:181
# c144e0228c934f679048290cbd4d022d
msgid "For Plone 4, after adding new scales no batch processing of existing images are needed and new scales are created on-demand when the images are viewed for the first time."
msgstr ""

#: ../../source/images/content.rst:187
# 906ed8931ede443c8c430b26073dd727
msgid "For Plone 3"
msgstr ""

#: ../../source/images/content.rst:189
# da511d3399394c88889f8810728590ad
msgid "Below is an example showing how to make custom image scales available in your Plone site."
msgstr ""

#: ../../source/images/content.rst:192
# a4cb513890dc47d6892eb4d46bdf5afa
msgid "Monkey-patch ``ATImages`` to have new scale versions available."
msgstr ""

#: ../../source/images/content.rst:194
# 1be38299a6404d5dabfe100069d8f192
msgid "Have migration code which will run all through all ``ATImage`` content on the site and recreate their scale versions, thus populating image scale data for new scale versions also."
msgstr ""

#: ../../source/images/content.rst:198
# 93afaf04362640dbac69767c143c28ec
msgid "The new sizes are automatically effected to rich text editor image sizes options (active WYSIWYG editor on Plone site)"
msgstr ""

#: ../../source/images/content.rst:201
# 88fdf966f3ba47c5a470de442051541c
msgid "``images.py``::"
msgstr ""

#: ../../source/images/content.rst:287
# 260937bd8e984525b525de867913ef7d
msgid "``configure.zcml``"
msgstr ""

#: ../../source/images/content.rst:305
# 4b6d13dff68a443abc5f34c3a7c6758e
msgid "Automatic image scales on ReferenceFields"
msgstr ""

#: ../../source/images/content.rst:307
# 4d0569b308d14cfe983f28239ce8a114
msgid "Python code::"
msgstr ""

#: ../../source/images/content.rst:343
# 263ecad3428e425988154771a6ca80e3
msgid "in configure.zcml::"
msgstr ""

#: ../../source/images/index.rst:3
# 7f95a4d2f66e4eeaa38a59503cb01c21
msgid "Images"
msgstr ""

#: ../../source/images/index.rst:5
# 2074e10e1e334bb3b3aed092d61ca101
msgid "Image manipulation related documentation."
msgstr ""

#: ../../source/images/pil.rst:3
# 892c7a51db5346b59f61b6d22a07dcde
msgid "Python Imaging Library (PIL)"
msgstr ""

#: ../../source/images/pil.rst:5
# 4c84f485f55c40339832d556ae92b5c8
msgid "Plone uses internally  Python Imaging Library (PIL) for low level image manipulation and decoding."
msgstr ""

#: ../../source/images/pil.rst:9
# 3b1e6461a97d4df68fa6b9e71a7e95ae
msgid "Installing PIL"
msgstr ""

#: ../../source/images/pil.rst:11
# 77f54f4e9d9449518091e2b5972f71f4
msgid "This concerns only UNIXes as Windows installer comes with PIL binaries."
msgstr ""

#: ../../source/images/pil.rst:14
# 1153067d7edf455aa6003e42a877fc48
msgid "http://www.koansys.com/tech/install-plone-with-zopeskel-buildout-needs-pil"
msgstr ""

#: ../../source/images/pil.rst:16
# 7fc81e1ffbef41baa6e77e7a62e61e8f
msgid "http://blog.twinapex.fi/2009/11/19/installing-python-imaging-library-pil-under-virtualenv-or-buildout/"
msgstr ""

#: ../../source/images/pil.rst:18
# 7a5a2c334e7744078716aa67470301ad
msgid "http://destefano.wordpress.com/2008/03/18/zope-buildouts-for-plone-on-os-x-heaven-or-hell/"
msgstr ""

#: ../../source/images/pil.rst:20
# e406c490aed543f4a718fd33d536f09e
msgid "PIL has libjpeg as a dependency and you need to install it using your operating system package manager. On OSX you can use `macports <http://www.macports.org/>`_."
msgstr ""

#: ../../source/images/pil.rst:24
# b10df5e4670a44a4b2b37360a8259457
msgid "Make sure that you don't have PIL without libjpeg support in your system-wide Python setup"
msgstr ""

#: ../../source/images/pil.rst:28
# 43dd0960e1b844469d346a0256ab96f3
msgid "Installing libjpeg on OS X"
msgstr ""

#: ../../source/images/pil.rst:30
# ddbe13d3a6454bb9afa86bff38e95707
msgid "Get http://www.ijg.org/files/jpegsrc.v7.tar.gz, and then::"
msgstr ""

#: ../../source/images/pil.rst:39
# 71142a739f39419a86c1e565ae3e25b9
msgid "Then you can install PIL with JPEG support."
msgstr ""

#: ../../source/images/pil.rst:42
# 43af2ba343f14024a60f6831c68dfa2e
msgid "Pillow"
msgstr ""

#: ../../source/images/pil.rst:44
# 9d5e53889e0d442385ff6939bac06c13
msgid "In late 2010, a packaging fork called `Pillow`_ was created to offer better multi-OS installation support. Specifically it offers:"
msgstr ""

#: ../../source/images/pil.rst:46
# ba3afb5506764dae80ddddd7eecbc424
msgid "Setuptools compatibility"
msgstr ""

#: ../../source/images/pil.rst:47
# 96a5a1488ad5437dab89873f15f3d7c8
msgid "Hosting (and mirroring) by PyPI (vs. off site)"
msgstr ""

#: ../../source/images/pil.rst:48
# c3e83ef9724048fd837632dca60ccfaa
msgid "Windows eggs"
msgstr ""

#: ../../source/images/pil.rst:49
# f01150ebc5af4d6bad9d868ae927af1a
msgid "Bug fixes (many of which simply add vendor-specific library directories to the compiler's search path.)"
msgstr ""

#: ../../source/images/pil.rst:51
# a3a7514c17ba4bb2bbcb94f9fd08965c
msgid "As a result, PIL can now be installed on many more systems simply by using the \"Pillow\" package name. E.g.::"
msgstr ""

#: ../../source/images/pil.rst:55
# 9f894a720afb41cd95ca6507aa18692f
msgid "Or::"
msgstr ""

#: ../../source/images/pil.rst:59
# 57713814309748299e50d23569eb6dc9
msgid "Or add to the list of eggs in your Buildout."
msgstr ""

#: ../../source/images/templates.rst:3
# fe99ba68cf05430984b2106d901d0410
msgid "Images in page templates"
msgstr ""

#: ../../source/images/templates.rst:7
# 47b1450db4ff4ffe89532316c30a5c85
msgid "How to link to images in page templates in Plone."
msgstr ""

#: ../../source/images/templates.rst:12
# e78f9a34a21b4e948149ac3f27f8d80a
msgid "Putting a static image into a page template"
msgstr ""

#: ../../source/images/templates.rst:14
# 9e7141c1ef504e8da68ce1823fedd898
msgid "Here is an example how to create an ``<img>`` tag in a ``.pt`` file:"
msgstr ""

#: ../../source/images/templates.rst:20
# 54a5e80118174ea99a57c4b3edc8cffc
msgid "Let's break this down:"
msgstr ""

#: ../../source/images/templates.rst:22
#: ../../source/images/templates.rst:31
# 3e34c6d1b1c74b44942440bc7ee9924d
# f63f8b04b2c7439e9b3acdc84cc5f676
msgid "Obviously we are rendering an ``<img>`` tag."
msgstr ""

#: ../../source/images/templates.rst:24
#: ../../source/images/templates.rst:33
# b5316552c9ea47be9f6f858778b6d024
# eca5c12347dd4b16ba1b55bc3e3da7af
msgid "The ``src`` attribute is dynamically generated using a :term:`TALES` expression."
msgstr ""

#: ../../source/images/templates.rst:27
# b53c059f0bd641c8a766e0212d855cb9
msgid "We use *string comprehension* to create the ``src`` attribute. Alternatively we could use e.g. the ``python:`` :term:`TALES` expression type and embed one line python of code to generate the attribute value."
msgstr ""

#: ../../source/images/templates.rst:35
# ffef292312a14887bfddc6e83d7ad20f
msgid "We use a *string comprehension* to create the ``src`` attribute. Alternatively, we could for example use the ``python:`` protocol and embed one line of python code to generate the attribute value."
msgstr ""

#: ../../source/images/templates.rst:39
# 9fed56be7f7e42a2a350c568ace33a28
msgid "We look up a helper view called :doc:`plone_portal_state </misc/context>`. This is a ``BrowserView`` shipped with Plone. Its purpose is to expose different helper methods to page templates and Python code."
msgstr ""

#: ../../source/images/templates.rst:43
# c7dac53f1c8d49189b5476ecb2d700f4
msgid "We call ``plone_portal_state``'s ``portal_url()`` method. This will return the root URL of our site. Note that this is not necessary the domain's top-level URL, as Plone sites can be nested in folders, or served on a path among unrelated web properties."
msgstr ""

#: ../../source/images/templates.rst:49
# d1febe316dcf4c398ab2397d7d1c044c
msgid "We append our Zope 3 resource path to our site root URL (see below). This maps to some static media folder in our add-on files on the disk."
msgstr ""

#: ../../source/images/templates.rst:52
# 9d95aa94f2ac4914b689780c4f7fdafe
msgid "There we point to ``close-icon.png`` image file."
msgstr ""

#: ../../source/images/templates.rst:54
# fd10f6eccce04e228b9240d102bd148c
msgid "We also add the ``alt`` attribute of the ``<img>`` tag normally. It is not dynamically generated."
msgstr ""

#: ../../source/images/templates.rst:57
# b238a0591bc6475ebcdcca6d01c0483f
msgid "When the page template is generated, the following snippet could look like, for example:"
msgstr ""

#: ../../source/images/templates.rst:64
# d79e3e16259e4002978abfcddd484fde
msgid "... or:"
msgstr ""

#: ../../source/images/templates.rst:70
# a486644d2cea42ca8362b6761e93d173
msgid "... depending on the site virtual hosting configuration."
msgstr ""

#: ../../source/images/templates.rst:73
# 320d2fbaeaec4c359a99aeeaa17508f8
msgid "Relative image look-ups"
msgstr ""

#: ../../source/images/templates.rst:77
# 2319331be42343cc907a069f66961e8e
msgid "Never create relative image look-ups without prefixing the image source URL with the site root."
msgstr ""

#: ../../source/images/templates.rst:80
# b98d52ac00d84ba7add28e21c60ea9f3
msgid "Hardcoded relative image path might seem to work:"
msgstr ""

#: ../../source/images/templates.rst:86
# a60c08fec8c34b778eb15f482c101be9
msgid "... but this causes a different image *base URL* to be used on every page. The image URLs, from the browser point of view, would be:"
msgstr ""

#: ../../source/images/templates.rst:93
# 139e7ea0e73d47649e5f7f693f33681c
msgid "... and then in another folder:"
msgstr ""

#: ../../source/images/templates.rst:99
# 22e871e325d34ffdba63887889aca09c
msgid "... which **prevents the browser from caching the image**."
msgstr ""

#: ../../source/images/templates.rst:102
# 612c3c7fc5344c1baba3d79dfa2c9c23
msgid "Registering static media folders in your add-on product"
msgstr ""

#: ../../source/images/templates.rst:105
# 3bfb3a7227e24607a3954c0a85ed2726
msgid "Zope 3 resource directory"
msgstr ""

#: ../../source/images/templates.rst:107
# d0bf5041bf954f5eb3a5faf8841d496f
msgid "The right way to put in a static image is to use a Zope 3 resource directory."
msgstr ""

#: ../../source/images/templates.rst:110
# 84b61b8c4eb04a4a87659ca6cef9e925
msgid "Create folder ``yourcompany.product/yourcompany/product/browser/static``."
msgstr ""

#: ../../source/images/templates.rst:112
# 974010e0c16243029c72ea3d4fa0023c
msgid "Add the following :term:`ZCML` to ``yourcompany.product/yourcompany/product/browser/configure.zcml``."
msgstr ""

#: ../../source/images/templates.rst:123
# c55986cd294842078be534f5d2c50a70
msgid "This will be picked up at the ``++resource++yourcompany.product/`` static media path."
msgstr ""

#: ../../source/images/templates.rst:126
# e31ad685fa9344ec8cc64c9db9f156ba
msgid "Layer is optional: the static media path is available only when your add-on product is installed if the :doc:`layer </views/layers>` is specified."
msgstr ""

#: ../../source/images/templates.rst:131
# f71093bc24a7400990b08d0148f1db2c
msgid "Grok static media folder"
msgstr ""

#: ../../source/images/templates.rst:133
# 4b3d15fec35448129bce9561728cc2b9
msgid "This applies for add-on products using :doc:`five.grok </components/grok>` API."
msgstr ""

#: ../../source/images/templates.rst:135
# 3a2209ec4d1a473281dacd6a2920d18c
msgid "Create folder ``yourcompany.product/yourcompany/product/static``"
msgstr ""

#: ../../source/images/templates.rst:137
# 493db9d1dee84328b7da9db3e92081c9
msgid "This will be automatically picked up as ``++resource++yourcompany.product/`` static media path when a Grok'ed add-on is launched."
msgstr ""

#: ../../source/images/templates.rst:142
# 1a354b94ff5e40c282c916565b1c4a04
msgid "Rendering Image content items"
msgstr ""

#: ../../source/images/templates.rst:144
# 6abeec4850ed4fa4bc2dc70f71002e0b
msgid "You can refer to ``ATImage`` object's content data download by adding ``/image`` to the URL:"
msgstr ""

#: ../../source/images/templates.rst:151
# f36594f4cda3417bb54f62bab251ccaf
msgid "The magic is done in the ``__bobo_traverse__`` method of ``ATImage`` by providing traversable hooks to access image download:"
msgstr ""

#: ../../source/images/templates.rst:157
# 620e6e0d71be4ffe9679957ae6878999
msgid "Rendering ``ImageField``"
msgstr ""

#: ../../source/images/templates.rst:159
# 31f3614eb6294d54b1a287f17d468bc2
msgid "Archetypes's ``ImageField`` maps its data to the content object at attribute which is the field's name. If you have a field ``campaignVideoThumbnail`` you can generate an image tag as follows:"
msgstr ""

#: ../../source/images/templates.rst:168
# ee81c405ee6c47128f38cfaa891b4228
msgid "If you need more complex ``<img>`` output, create a helper function in your ``BrowserView`` and use Python code to perform the ``ImageField`` manipulation."
msgstr ""

#: ../../source/images/templates.rst:172
# 7131744b66c3418eab6a3e5768389a45
msgid "See ``ImageField`` for more information:"
msgstr ""

#: ../../source/images/templates.rst:177
# f0f2cbf82de14ec399e8cc449af3585a
msgid "``tag()`` method"
msgstr ""

#: ../../source/images/templates.rst:181
# f61b54f889dd43c78e377aa58931fd82
msgid "Using ``tag()`` is discouraged. Create your image tags manually."
msgstr ""

#: ../../source/images/templates.rst:183
# 56b1a364c2a74baf97c23f6ec59c78d7
msgid "Some content provides a handy ``tag()`` method to generate ``<img src=\"\" />`` tags with different image sizes."
msgstr ""

#: ../../source/images/templates.rst:187
# f1ed0a83e6a247689770fdd6d1fff684
msgid "``tag()`` is available on"
msgstr ""

#: ../../source/images/templates.rst:189
# ea59f910722342cdb2e05f23ab045c21
msgid "Archetypes ``ImageField``"
msgstr ""

#: ../../source/images/templates.rst:191
# 347de2dd710342ce9be0eb341f569854
msgid "``ATNewsItem``"
msgstr ""

#: ../../source/images/templates.rst:193
# 0965f982b9c74b29a700283e3cc7ab44
msgid "``ATImage``"
msgstr ""

#: ../../source/images/templates.rst:195
# 5817cd956e0c4c6087be2fe6683cef08
msgid "``FSImage`` (Zope 2 image object on the file-system)"
msgstr ""

#: ../../source/images/templates.rst:197
# b97cbdf0e89241cbaaf2b1683208174b
msgid "``tag()`` is defined in `OFS.Image <http://svn.zope.org/Zope/trunk/src/OFS/Image.py?rev=96262&view=auto>`_."
msgstr ""

#: ../../source/images/templates.rst:200
# 5f7ce2aa8e3e4d20b174d058ce846b1d
msgid "Scaling images"
msgstr ""

#: ../../source/images/templates.rst:202
# ffaa3abad3f44775860ee35437bf2d8b
msgid "``tag()`` supports scaling. Scale sizes are predefined. When an ``ATImage`` is uploaded, various scaled versions of it are stored in the database."
msgstr ""

#: ../../source/images/templates.rst:206
# 005f76949fad49de97af711b1e613a7e
msgid "Displaying a version of the image using the \"preview\" scale::"
msgstr ""

#: ../../source/images/templates.rst:210
# 54f29df9269a4018bfa08f1bac89bec0
msgid "This will generate:"
msgstr ""

#: ../../source/images/templates.rst:218
# 86205507bcd0429fbb163d2febd8c306
msgid "If you are not using the ``alt`` attribute, you should set it to an empty string: ``alt=\"\"``. Otherwise screen readers will read the ``src`` attribute of the ``<img>`` tag aloud."
msgstr ""

#: ../../source/images/templates.rst:222
# 0d57c6732318444ea8f0091118aeb7a1
msgid "In order to simplify accessing these image scales, use `archetypes.fieldtraverser <http://pypi.python.org/pypi/archetypes.fieldtraverser>`_. This package allows you to traverse to the stored image scales while still using ``AnnotationStorage`` and is a lot simpler to get going (in the author's humble opinion :)."
msgstr ""

#: ../../source/images/templates.rst:228
# df6c0c867f924bbc989b0640c3dc1c5e
msgid "Default scale names and sizes are defined in ``ImageField`` declaration for custom ``ImageField``\\s. For ``ATImage``, those are in `Products.ATContentTypes.content.image <http://svn.plone.org/svn/collective/Products.ATContentTypes/trunk/Products/ATContentTypes/content/image.py>`_."
msgstr ""

#: ../../source/images/templates.rst:235
# eb339307c39d49f395a85789a06e55ac
msgid "Lightbox style image pop-ups"
msgstr ""

#: ../../source/images/templates.rst:237
# 6dba2ecd01fe4d5ca791d78bd69baabe
msgid "Plone comes with `plone.app.jquerytools <http://pypi.python.org/pypi/plone.app.jquerytools>`_ which offers easy integration for lightbox style image pop-ups."
msgstr ""

#: ../../source/images/templates.rst:240
# 75924260e3a0477ebadb59e28f7caea3
msgid "You can use Plone standard image content type, defining scales using `plone.app.imaging <https://github.com/plone/plone.app.imaging/>`_ or you can define image fields in your schema."
msgstr ""

#: ../../source/images/templates.rst:243
# 4261b2d932f1428d9e334c4c2a0d1f16
msgid "In the example below we define custom image fields in Archetypes schema."
msgstr ""

#: ../../source/images/templates.rst:245
# f60d6d91688a4e3bb1e6865fc1f9f915
msgid "contenttype.py::"
msgstr ""

#: ../../source/images/templates.rst:273
# f78b6ddf187f4060972b27d93ce7a828
msgid "Related view page template file"
msgstr ""

#: ../../source/images/templates.rst:285
# d8e4f200194a475eb649907409ca096b
msgid "And then we activate all this in a Javascript using ``prepOverlay()`` from ``plone.app.jquerytools``"
msgstr ""

#: ../../source/images/templates.rst:317
# 05af36ff0fb540e0a9ce926b05276dad
msgid "Rotating banners"
msgstr ""

#: ../../source/images/templates.rst:319
# 154d5fc598c44540b2c9fcd9ff262f3f
msgid "Simple rotating banneres can be done with `jQuery Cycle plug-in (lite) <http://jquery.malsup.com/cycle/>`_."
msgstr ""

#: ../../source/images/templates.rst:321
# 93a86467a9114c169581c88fb7f8bad0
msgid "Example TAL code... render list of content items and extract one image from each of them"
msgstr ""

#: ../../source/images/templates.rst:335
# 5e3b1861f7e44c788c053ba54f4105d6
msgid "Then use the the following Javascript to boostrap the cycling"
msgstr ""

#: ../../source/images/templates.rst:353
# 5434dd8e50f94888b544493495bf592a
msgid "You need to have this snippet and ``jquery.cycle.light.js`` in your portal_javascripts registry."
msgstr ""

#: ../../source/images/templates.rst:355
# 503db58ba52443fa98f74f1d18eb53d6
msgid "You also may need to set pixel height for ``cycle`` elements, as they use absolute positioning making the element take otherwise 0 pixel of height."
msgstr ""

