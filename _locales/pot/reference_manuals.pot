# SOME DESCRIPTIVE TITLE.
# Copyright (C) Plone community and other individual contributors
# This file is distributed under the same license as the Plone Developer Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Plone Developer Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-09 14:22+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference_manuals/active/deployment/backup.rst:3
#: ../../reference_manuals/active/deployment/copy.rst:3
# 3aa051f6a070485c9db08d761f63c84f
# a85920d99f0d4399a729a805e179b884
msgid "Backing up your Plone deployment"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:5
#: ../../reference_manuals/active/deployment/copy.rst:5
#: ../../reference_manuals/active/deployment/index.rst:5
#: ../../reference_manuals/active/helloworld/environment/index.rst:5
#: ../../reference_manuals/active/helloworld/environment/plone.rst:5
#: ../../reference_manuals/active/helloworld/environment/python.rst:5
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:5
#: ../../reference_manuals/active/helloworld/extend/addon.rst:5
#: ../../reference_manuals/active/helloworld/extend/content.rst:5
#: ../../reference_manuals/active/helloworld/extend/files.rst:5
#: ../../reference_manuals/active/helloworld/extend/form.rst:5
#: ../../reference_manuals/active/helloworld/extend/index.rst:5
#: ../../reference_manuals/active/helloworld/extend/view.rst:5
#: ../../reference_manuals/active/helloworld/index.rst:5
#: ../../reference_manuals/active/helloworld/intro.rst:5
#: ../../reference_manuals/active/helloworld/todo.rst:5
#: ../../reference_manuals/active/ploneformgen/captcha.rst:5
#: ../../reference_manuals/active/ploneformgen/creating_content.rst:5
#: ../../reference_manuals/active/ploneformgen/creating_content.rst:24
#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:5
#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:5
#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:5
#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:5
#: ../../reference_manuals/active/ploneformgen/embedding.rst:5
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:5
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:44
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:80
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:170
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:186
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:201
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:252
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:288
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:334
#: ../../reference_manuals/active/ploneformgen/gpg.rst:5
#: ../../reference_manuals/active/ploneformgen/index.rst:5
#: ../../reference_manuals/active/ploneformgen/installation.rst:5
#: ../../reference_manuals/active/ploneformgen/javascript.rst:5
#: ../../reference_manuals/active/ploneformgen/multipage.rst:5
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:5
#: ../../reference_manuals/active/ploneformgen/request.rst:5
#: ../../reference_manuals/active/ploneformgen/restyle.rst:5
#: ../../reference_manuals/active/ploneformgen/select_mail.rst:5
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:5
#: ../../reference_manuals/active/writing/crosslinking.rst:5
#: ../../reference_manuals/active/writing/developermanual.rst:5
#: ../../reference_manuals/active/writing/nursinghome.rst:5
#: ../../reference_manuals/active/writing/writing.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/index.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:5
#: ../../reference_manuals/old/archetypes/appendix.rst:5
#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:5
#: ../../reference_manuals/old/archetypes/display_menu.rst:5
#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:5
#: ../../reference_manuals/old/archetypes/fields/fields_reference.rst:5
#: ../../reference_manuals/old/archetypes/fields/index.rst:5
#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:5
#: ../../reference_manuals/old/archetypes/fields/widgets_reference.rst:5
#: ../../reference_manuals/old/archetypes/index.rst:5
#: ../../reference_manuals/old/archetypes/introduction.rst:8
#: ../../reference_manuals/old/archetypes/introduction.rst:40
#: ../../reference_manuals/old/archetypes/introduction.rst:130
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:5
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:12
#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:5
#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:5
#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/index.rst:5
#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/index.rst:5
#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:7
#: ../../reference_manuals/old/archgenxml/index.rst:5
#: ../../reference_manuals/old/archgenxml/recipes-and-tips/index.rst:5
#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:7
#: ../../reference_manuals/old/archgenxml/reference/index.rst:5
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:7
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:7
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:9
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/index.rst:5
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/index.rst:5
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:7
#: ../../reference_manuals/old/buildout/additional.rst:5
#: ../../reference_manuals/old/buildout/buildoutcfg.rst:5
#: ../../reference_manuals/old/buildout/creating.rst:5
#: ../../reference_manuals/old/buildout/creatingpackage.rst:5
#: ../../reference_manuals/old/buildout/defaults.rst:6
#: ../../reference_manuals/old/buildout/deployment.rst:5
#: ../../reference_manuals/old/buildout/index.rst:5
#: ../../reference_manuals/old/buildout/introduction.rst:5
#: ../../reference_manuals/old/buildout/packages.rst:5
#: ../../reference_manuals/old/buildout/prerequisites.rst:5
#: ../../reference_manuals/old/buildout/recipes.rst:5
#: ../../reference_manuals/old/buildout/subversion.rst:5
#: ../../reference_manuals/old/buildout/thirdparty.rst:5
#: ../../reference_manuals/old/formlib/customtemplate.rst:5
#: ../../reference_manuals/old/formlib/index.rst:5
#: ../../reference_manuals/old/formlib/simple.rst:5
#: ../../reference_manuals/old/formlib/validation.rst:6
#: ../../reference_manuals/old/formlib/why.rst:5
#: ../../reference_manuals/old/forms/index.rst:5
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:4
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:4
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:4
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:4
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:4
#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/index.rst:5
#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/index.rst:5
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/index.rst:5
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/index.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:7
#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:5
#: ../../reference_manuals/old/portlets/appendix/moving.rst:5
#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:5
#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:5
#: ../../reference_manuals/old/portlets/architecture.rst:5
#: ../../reference_manuals/old/portlets/assignments.rst:5
#: ../../reference_manuals/old/portlets/blacklisting.rst:5
#: ../../reference_manuals/old/portlets/rendered.rst:5
#: ../../reference_manuals/old/portlets/testing.rst:5
#: ../../reference_manuals/old/portlets/tips.rst:5
#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:5
#: ../../reference_manuals/old/testing/index.rst:5
#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:5
#: ../../reference_manuals/old/zope_secrets/hooks.rst:5
#: ../../reference_manuals/old/zope_secrets/request.rst:5
#: ../../reference_manuals/old/zope_secrets/security.rst:5
#: ../../reference_manuals/old/zope_secrets/startup.rst:5
# 66b88e129e304b36b8e99d064a3f8150
# 01f43579e10d4af1b4ac37f7a42c215a
# 8746e896c9974809989c1635de24bd79
# 5df8a83b07194223b324948367860465
# a2c5a6a8747c4bf0906c50d9d1162390
# 23fa7113d9554c9f8a45104c7ea10e85
# cd14ec5c7cc84447b6069b91f0e71f15
# 805ebeebc073415e91ae81bde8caedc2
# d551d96dfcfb45eb889e1a8e901f4872
# eb4a46ee7ab54624b288072e4b687942
# d4304ee15eb545ff8e4f3a83e94004d8
# 2529db24abb444d6acf833f30e4d1cfd
# 90896a3950fa416d8eeee19ea010bcc4
# e1d478413b084b69b74a34df1926d9c3
# 41c72eebe4cc4997aad6b238816f8f31
# 30f3a23994bf4e49a3decdbf01b05664
# 7414d27a7fc9439a83875a5420baeb8e
# eebf91424ab34dba9a2df947dc85cffe
# 9cd970e0945b494a8292cde4095ea19e
# a99d833d6d8a4cd7af18cb804fce29ad
# d1652bfb18ef4a85a6d2bd8daf36865a
# c5127675bb514107a5c58996a6c69b8a
# 6753a6ab8ca14f83a5a921bcffea9fd1
# a0f198506dc84ecd93496e34ac6b6f59
# ef17f8e3326643d592d7c0abbf342853
# 038f2f635e65432b866f4e841716676b
# 5db7cb5988fd4edf831f3e0016815987
# 031b08d41e674c0888ce0912c6b1d685
# 4d123439d4da40f2a03a2d80a5e5e230
# 5070131b20a04b3dae97631fb739a3f2
# 54f85b7e2bad4bf291f9ef50fa6da0d3
# bd5e5e046022435a9133ed7753a6c69a
# ec942bc8391840bba038db37f23276d4
# 66b0250fcabc4dc4baf76b994626220b
# 00aebf0d14a84554b6b5f57cd99dd0ad
# e7ef574f11a94cdca03c21094efa8264
# 83e28ade92a64ba9942be93e41c26fe9
# cf1e0ce033b347fab68b0b5656322475
# 3175f829b8eb4cfeb65d42ad786db48f
# 9d11626e64584738a3d961202b2db328
# 6bec01f31e944ffbb27f352aba635e34
# f55d4eccea56431db16e5c043aa81e13
# 603c090217874a0ba87c546f04c81657
# 8f3a76e2b88d49c3a9bf0d7f286cc2b3
# c81c9e00eb34471e9aeef5853634beff
# 3d03b81b0f0949669f06e62d9b0607e7
# f5509f1477654ee48c788a37840d44ca
# b8096b0a337643deac6e0064e29ee717
# 8d5504d5d09142b0ab496fafde829760
# 34b54c429f614f21afd7943d7b62f7ae
# 2993d9eba5884f709570381a4a6af363
# 002164ad04cc47eba7f1d945addff459
# 2cfe84ba0d254f079146260c6a3604e7
# 9a74d7f9ec92426f8aa0038080ae95bd
# db64781d0f6543f980d84af0affe0193
# bdec3cc174d4422fba393163b67db853
# 9825b25581544410bfe4d3dfca534cc7
# d760a823ea8244488f9fd6496b73b5eb
# a6f079ea53ed4fb19fc786433bc62a42
# 710c8ea9795f46b29f6b5b0586f80f67
# 69c220df685e43faae9237f84256fb8f
# fa03c163dcce45f9874f7a2ad0a212c2
# b117cee2c7fc4b2980c68046c849ebc0
# 20672ad727584e23a1afbc732b19004d
# f03057f6da6849ebad025792250d89b1
# 6a2400037e1e4f87bdb202e46b29d45a
# ef1dfde93ece4333a6cb3459adf7e025
# 03ccf8046f6c42ccb6c8afed7e8fad4c
# 3cb30340c9664c979173e6530b49e4b5
# 658a2588464a41e5a1ae1b5e35398952
# bc8d76d24bac4c1085764b152a010c3c
# 1414ed3a46c849f68fef95d075a5c0c4
# 0e14a9f0ff7f466da086b159960f278c
# a8d723e748da42baba2c5545d080f7f5
# d2be7d6151bc4dea9393de71e34c9b4e
# 41b7431d5fb74e2a802eeef10cf6daea
# ccc6929040ba406e9652f68b39f7d5c5
# 4a41f94c3ac9405987bd70f8c5ac711d
# 173a19d0c2684859a4be901223415972
# ea73b7f58c154f21a277f8e4499f9b0d
# 680f79b7825944e59ae986fa26264526
# c9bd0954ac6a4bdeb2050979c40510db
# 6b48ad1ba62a4908a0a34dd46a1275be
# 8a42e89cb94448489ad87691312b4ab3
# c2da0e3b854c4594aa7af9ff42edd72b
# 2843b8f563e94d97bf28e442a05beefd
# 263a2aa364a8467b86b8f470075c552e
# 50529d1ceeec44eba44b35ed60c149f2
# e1ca6c43b3a648f392ba690ba6481165
# ba3cc6190a754f949d66e6b67aa11893
# a19a88d5520a4ccd80d2c6b3c8c48ab6
# e5991edddf5747bebdd735544485272c
# 9354911e8d17475f9eca4df086be6714
# 11ff0550551a430c979859cb89a4231b
# 474d7e9c031840bab341c2ef4dfae7e1
# 85567f40284443cdac33d99301553c8f
# f0620d44448a493c869f7ae1c9db339f
# 76cce13db3b745ecb4bca507154707dd
# 304e439022d94eb5abfb9174bc228d0c
# 4453b0de20b84e668eb17e13d1ac3bf6
# 637934df4fce4059bf5f7e0ca4239487
# 8f9a9548dffe413484e91e399e9cda20
# 6da804f5c2044eeaac60086fbf3bb354
# dd1ff25517544ff6b5314732d9f4c18f
# ed855017ae6d48cd8b2d44fc6584f6eb
# 7de4440df5e542efa98d2d985ac75844
# be13bb3d15ea4a1d90e0345b67d3de61
# 6bfb8004f29047cabec9cfcbc2f1fe10
# 84329f2676d44cf6bdb4a33718a73bb6
# ed53ef2bea254d038253b2267cb20139
# 04d742be46d74c7596e7103728c73a20
# a6fa69610fe74f7aac95f1122b6048df
# 2b6a7e9654274a4d86af5ae4b134ed0a
# 297f677e5349449eaeea7dd1b02691c0
# 6c592dd5262c48aab0015f854a49f3f4
# 741a69181d6545c180503478ba483770
# 94141e58deed4779be12e33a340e8fe3
# c42a8a2ff5a04ec6869d52b5007efa6b
# 9adb0842c8c04a45950a1a40d63a26de
# ebdc9392de694546b02ce1f7501597e4
# 326f146d6c0f4390ba0ddcdfc4de0ae6
# 40199279f4d34bb9b26b13ca702ed128
# 85edf70b606a48d79522d90c6ad017c6
# d8a2bef6f3164ef48b116c14b8e9f790
# c08e59ba7c66435297e57e3b51a5651e
# 48709744d49c4434b39c2fd007b6eaa8
# 526faa638c474120b9f41198b0618bcb
# b4abf336d3e24ff9828d48ab8db0f566
# d9100ea849284d618bb48a303153a50b
# b7995b70d8af4b19aebe987ef530552f
# 5f60944d4d6642588faeaab40848aac0
# 985989f038904d85a810eee2099fd4e2
# 6c238cd0a7a34b89b6c484cda77ac757
# c10aa3244a6d46a29834173272a310ad
# a373c72ba40244fdb1658ff6a110c6af
# 3ab247d8911641789d9500e6fe5ffe3d
# 51829f0292a34c58bc49d5862b573ba8
# afe0d581e41d4f20bd7ad6425e4a99a6
# ff63740dfa8b41e78470fff7407b8629
# 912b0c7286674e08b034824f8b978aca
# 7cc1544bf2ac4057b93f2cfe5b020f86
# ea16b8b244d44b03a4a5e33987b573f9
# 80a8d215f62f43fe94afb6bfe0e0eaf8
# 57cd14dce85245129e91ba9a91bf4e04
# a5ba9586e0a340ecb2bfe93ec8979b1b
# 63d037bff25c486898144d5ea1415edb
# dad67d69d3574a05a4a7c4b94a10c3ab
# 38dff23d222e4998b0f5d395a4830c24
# 0fe61f690ce24e0ba4d21d4da4fa62bb
# 752302d6e272414fae42f1e30ca61633
# d4de9d107a184c37a910c6ca7193a8b1
# efb9132242444bb9ac2681aa0c478a6f
# bb941ad4b54144a4a25bda7ac20b3a64
# 9d2452b4ad7a4e2b972577bb3597f80f
# e69b30c2d2524eccb9771ccd0d5cf6f5
# 3c174858e0414b4ab2bd2f7bb3f065c8
# e5479c0845c940f7aabaaa4574208c05
# 5c2f39ad5b1e4221911773b6042370a2
# 014838d0aa2d4703a94a7c0b293f9dca
# 6d2bae23912645209f74bbefef9701d1
# d432de14caa14da2a0fa189b9cdfdac7
# 5ea8a7bfebc94ed0a33356026a0eec9a
# 3f996d5713e84cc3b138b9e1425492e9
# 53d0a680beb5473ca7305765be481af7
# 6dd23c3c6c8e4fd1b30031141178fc5b
# d5973ae4bd274458a6f54e7b0fe25152
# cc4baf283f8d4128b7ca24e5fd292909
# 0e8a150a433c43139005fb8484b8d86a
# 43b190f616854de7be76bdd935da14c7
# 61371af4fff14a0caf13a8b4b41516b9
# 80b9b414ea814dbca52243795e0d408d
# 68cf24457e6c4638873ea56406ac4f03
# f96e9f0ea2c444e8ac21c189b31c8a17
# 170758dcfda34eaa9bd5b08165a50b77
msgid "Description"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:7
#: ../../reference_manuals/active/deployment/copy.rst:7
# 3ac216eb68a443259eb69c1cf56d398f
# 0b84ca0359ea488890c27dbac2baebee
msgid "Strategies for backing up operating Plone installations."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:11
#: ../../reference_manuals/active/deployment/copy.rst:11
# 08f96a1410314496b6398a34aac7313e
# 20af05e8ebe44230b9d5a1c1c7dad114
msgid "A guide to determining what to back up and how to back it up and restore it safely."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:15
#: ../../reference_manuals/active/deployment/copy.rst:15
#: ../../reference_manuals/active/deployment/intro.rst:3
#: ../../reference_manuals/active/helloworld/intro.rst:3
#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:10
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:12
#: ../../reference_manuals/active/ploneformgen/index.rst:10
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:12
#: ../../reference_manuals/active/schema-driven-forms/intro.rst:2
#: ../../reference_manuals/active/writing/crosslinking.rst:13
#: ../../reference_manuals/active/writing/developermanual.rst:15
#: ../../reference_manuals/active/writing/writing.rst:12
#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:3
#: ../../reference_manuals/old/archetypes/appendix.rst:350
#: ../../reference_manuals/old/archetypes/create_event_hook.rst:6
#: ../../reference_manuals/old/archetypes/introduction.rst:3
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:3
#: ../../reference_manuals/old/buildout/introduction.rst:3
#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:2
#: ../../reference_manuals/old/plone_3_theming/index.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:3
#: ../../reference_manuals/old/portlets/tips.rst:13
#: ../../reference_manuals/old/testing/introduction.rst:2
# 144148fa9a1d49aa8affe50990fa83ea
# bc40ca4d19c04d609ef3e9f41dad07fd
# 3d2f245ca1724be083da048c7b229c6c
# ba054f7b80f14403a7422f2914fd7fe0
# 616bfe5823b54c558f59893e7af956bb
# b6ac07b0c0dd48b3bc535855b89f7c66
# 44adff58160348a482878764bf162e8e
# 4fa87ec8c160432fbac003c699c4c3b9
# 88de4db6baff4231a2ad4257b886f51b
# c42e32c712e446378195949888eceff2
# 6066708998da4249ba5232eef01ea0f3
# 1815c530163a49d6bfc597c5877b2472
# af29f38005be4ea994ea6df816b11853
# 96c9d31367d04e4691a26242cdf51c15
# 38c2740df96f449c8eefb240b7f55a1d
# 6b654e13638d46bca69d715b0e573512
# e6a4cdba0d1048afa07bda29b3b41546
# 009cf9687dba4774992f6a8f655f94ad
# f4d7f96a7fbd4dec96f4a208b4d83056
# 53adf9816bca4f1896f4446df8c521da
# cdc5161f56544ee8a33cd1d5f030eb5e
# bcfba95d514a4781b0f161ec56f87eac
# 131fed0beab848f980dbcaf3eabac345
# 89058bc930b34dada5984b63be901423
msgid "Introduction"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:17
#: ../../reference_manuals/active/deployment/copy.rst:17
# 8266918941d44e8c8dd3b7ba2863bfb5
# d9b4111feeef443ea2b8d64124d4c28a
msgid "The key rules of backing up a working system are probably:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:19
#: ../../reference_manuals/active/deployment/copy.rst:19
# 9ffa4ba447fb4489affdb97f7c7d181e
# a3162d2e0cf54c2cb9fe31dc81975bb5
msgid "Back up everything"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:21
#: ../../reference_manuals/active/deployment/copy.rst:21
# 0a952d9838d944e2a419913bba067fef
# 720b8899835a463e8fda83d9dd9e1ecf
msgid "Maintain multiple generations of backup"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:23
#: ../../reference_manuals/active/deployment/copy.rst:23
# 12efde3e7fdb46618288ac7248cfb2cc
# 9273e55791664836bf249d2763a89527
msgid "Test restoring your backups"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:27
#: ../../reference_manuals/active/deployment/copy.rst:27
# 022eeac883814c679a1877484a3c53ee
# 927e6406ee554af8981cae5d5de27835
msgid "This guide assumes that you are already doing this for your system as a whole, and will only cover the considerations specific to Plone. When we say we are assuming you're already doing this for the system as a whole, what we mean is that your system backup mechanisms — rsync, bakula, whatever — are already backing up the directories into which you've installed Plone."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:34
#: ../../reference_manuals/active/deployment/copy.rst:34
# 679f5b5a267e4856b240bf66c7c9b9a2
# 762e3d3cab5f4a6797acd4db3a481082
msgid "So, your buildout and buildout caches are already backed up, and you've tested the restore process. So, your remaining consideration is making sure that Plone's database files are adequately backed up and recoverable."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:39
#: ../../reference_manuals/active/deployment/copy.rst:39
# 7a2888489e5048948a6aea8b5c8f7575
# e89fae44e337463497b1c59f6d00878b
msgid "Objects in motion"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:41
#: ../../reference_manuals/active/deployment/copy.rst:41
# 26763f7901014290a8ec6d30d5a5d7d7
# a8c204cbcea543219eaa844ace59b205
msgid "Objects in motion tend to remain in motion. Objects that are in motion are difficult or impossible to back up accurately."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:44
#: ../../reference_manuals/active/deployment/copy.rst:44
# 10f934b9c05d473b8efe529d09aa857f
# fef1c1cf976c4d009d286ef7fbbfddea
msgid "Translation: Plone is a long-lived process that is constantly changing its content database. The largest of these files, the Data.fs filestorage which contains everything except Binary Large OBjects (BLOBs), is always open for writing. The BLOB storage, a potentially very complex file hierarchy, is constantly changing and must be referentially synchronized to the filestorage."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:50
#: ../../reference_manuals/active/deployment/copy.rst:50
# 251f5d0337164ab88a277c46f32a94be
# 593865e0ccaf45a48b6c6f0baea0b278
msgid "This means that most system backup schemes are incapable of making useful backups of the content database while it's in use. We assume you don't want to stop your Plone site just to backup, so you need to add procedures to make sure you have useful backups of Plone's data. (We assume that you know that the same thing is true of your relational database storage. If not, get to studying!)"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:58
#: ../../reference_manuals/active/deployment/copy.rst:58
# eac8f0ae69814da2becdbcb4048d876d
# caaa13ba81c1438f89a855b804ec6262
msgid "Where's my data?"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:60
#: ../../reference_manuals/active/deployment/copy.rst:60
# de3140d2ceee4c68a2a2da94a4beb54f
# 24e278ee2aec474590f517e0ce8ce166
msgid "Your Plone instance installation will contain a ./var directory (in the same directory as buildout.cfg) that contains the frequently changing data files for the instance. Much of what's in ./var, though, is not your actual content database. Rather, it's log, process id, and socket files."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:65
#: ../../reference_manuals/active/deployment/copy.rst:65
# bfad6ecb1fcc4f0488b9c1e509a9408c
# e8d366cfa56c425eabd8684097497da3
msgid "The directories that actually contain content data are:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:67
#: ../../reference_manuals/active/deployment/copy.rst:67
# fe0e5270845d486a89dac19c3ad62725
# 1386e8c8260f4af99b3a3b221b206466
msgid "./var/filestorage"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:69
#: ../../reference_manuals/active/deployment/copy.rst:69
# d074e305b0cb445497fbef515b29bf58
# 9b4843c102994004a08a98fcada85cc1
msgid "This is where Zope Object Database filestorage is maintained. Unless you've multiple storages or have changed the name, the key file is Data.fs. It's typically a large file and contains everything except BLOBS."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:74
#: ../../reference_manuals/active/deployment/copy.rst:74
# 2b7b4ce9e2c448059a4b896b83e707d9
# 5a694ab415604f33aa11ef293fb696fc
msgid "The other files in filestorage, with extensions like .index, .lock, .old, .tmp are ephemeral, and will be recreated by Zope if they're absent."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:77
#: ../../reference_manuals/active/deployment/copy.rst:77
# 76e12fa4775a4c2ebd8b235cb5336381
# 3e08cdc0ca254615a730095c25478466
msgid "./var/blobstorage"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:79
#: ../../reference_manuals/active/deployment/copy.rst:79
# 82ac27c520e445f5a1db4a3b7e6f2aea
# 4dc4f2b6a39640fc97436ae1758a4919
msgid "This directory contains a very deeply nested directory hierarchy that, in turn, contains the BLOBs of your database: PDFs, image files, office automation files and such."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:83
#: ../../reference_manuals/active/deployment/copy.rst:83
# 5af554e84a3b43d19ce4365af00927ed
# 6ba3ac9d7e7947079d85d1efb687434d
msgid "The key thing to know about filestorage and blobstorage is that they are maintained synchronously. The filestorage has references to BLOBs in the blobstorage. If the two storages are not perfectly synchronized, you'll get errors."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:89
#: ../../reference_manuals/active/deployment/copy.rst:89
# fddf36c541ed461994ae14b4f7d96202
# 8d603949066947a0946a7080841ade49
msgid "collective.recipe.backup"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:91
#: ../../reference_manuals/active/deployment/copy.rst:91
# 9c6a128ffe2a4e9085c61b1f34612892
# e3cd81bd6f4648c2ae83b6ec000bc107
msgid "`collective.recipe.backup <http://pypi.python.org/pypi/collective.recipe.backup>`_ is a well-maintained and well-supported recipe for solving the \"objects in motion\" problem for a live Plone database. It makes it easy to both back up and restore the object database. The recipe is basically a sophisticated wrapper around ``repozo`, a Zope database backup tool, and ``rsync``, the common file synchronization tool."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:100
#: ../../reference_manuals/active/deployment/copy.rst:100
# f030eb29a414436f86e6c6027246f882
# 790dccbee085424f9ddcb15738f49ed9
msgid "Big thanks to Reinout van Rees, Maurits van Rees and community helpers for creating and maintaining collective.recipe.backup. We all owe them drinks of their choice."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:104
#: ../../reference_manuals/active/deployment/copy.rst:104
# 23c922f3e4874c9bbaf503097d0525d1
# 59a938b31aa440ebbdeede2e7be8fba0
msgid "If you're using any of Plone's installation kits, collective.recipe.backup is included in your install. If not, you may add it to your buildout by adding a ``backup`` part:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:119
#: ../../reference_manuals/active/deployment/copy.rst:119
# a7003a416b6a4c15935d412473f7ba93
# 030538f55ced4475a35de8a8a82d4796
msgid "There are several useful option settings for the recipe, all set by adding configuration information. All are documented on `the PyPI page <http://pypi.python.org/pypi/collective.recipe.backup>`_. Perhaps the most useful is the ``location`` option, which sets the destination for backup files:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:132
#: ../../reference_manuals/active/deployment/copy.rst:132
# bc2f5677f771464ab37f180a414cb7a0
# 8b438667b30d4df0993a5324500d7a30
msgid "If this is unspecified, the backup destination is the buildout var directory. The backup destination, though, may be any reliably attached location — including another partition, drive or network storage."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:137
#: ../../reference_manuals/active/deployment/copy.rst:137
# edc59f74b1134d5e97434f0d0a44d4da
# 32b9879d6ef64ef58de08baeb9ea3b55
msgid "Operation"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:139
#: ../../reference_manuals/active/deployment/copy.rst:139
# c00cf22cac004989a492601bf2f061c0
# e0f7fa66a865457cac73ad4190d4c52c
msgid "Once you've run buildout, you'll have ``bin/backup`` and ``bin/restore`` scripts in your buildout. Since all options are set via buildout, there are few command-line options, and operation is generally as simple as using the bare commands. ``bin/restore`` will accept a date-time argument if you're keeping multiple backups. See the docs for details."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:145
#: ../../reference_manuals/active/deployment/copy.rst:145
# e3771ac56c9043e8949530ec1dba2f76
# c2c838538ee345fe98030ba32be4a524
msgid "Backup operations may be run without stopping Plone. Restore operations require that you stop Plone, then restart after the restore is complete."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:148
#: ../../reference_manuals/active/deployment/copy.rst:148
# 1cfec94262854bd59784a77a23c80f6f
# 92861cdaadce4b6dbb7e0f985f3f41e9
msgid "``bin/backup`` is commonly included in a cron table for regular operation. Make sure you test backup/restore before relying on it."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:152
#: ../../reference_manuals/active/deployment/copy.rst:152
# 4f0fba29a9f64072a43afa8a11fb8883
# 5e106022c2a4459e91ad97696d5a6053
msgid "Incremental backups"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:154
#: ../../reference_manuals/active/deployment/copy.rst:154
# 4922ab8f528d4045943e202e63f65db7
# b231f41cd1fb4a34987321a16fdc46f7
msgid "collective.recipe.backup offers both incremental and full backup and will maintain multiple generations of backups. Tune these to meet your needs."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:157
#: ../../reference_manuals/active/deployment/copy.rst:157
# f3a25c42aa6b47c4a9d6c77449d3132a
# 45113cf93ba9441b9c127fcf1cdc1c15
msgid "When incremental backup is enabled, doing a database packing operation will automatically cause the next backup to be a full backup."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:160
#: ../../reference_manuals/active/deployment/copy.rst:160
# 9298d6b03caf4585a1b8a84d086eab2f
# 84004d3cc9af467a81a3ff0994361081
msgid "If your backup continuity needs are extreme, your incremental backup may be equally extreme. There are Plone installations where incremental backups are run every few minutes."
msgstr ""

#: ../../reference_manuals/active/deployment/index.rst:3
# 7c25dd5a706149a7b212b04e3fa964cd
msgid "Guide to deploying and installing Plone in production"
msgstr ""

#: ../../reference_manuals/active/deployment/index.rst:7
# 3bb2070f30d64bf2bbba08c97491e991
msgid "A guide to the Plone deployment stack, including load balancing, proxy caching, server preparation, backups, log rotation, and process control."
msgstr ""

#: ../../reference_manuals/active/deployment/index.rst:11
# c9607beca0204023a9dfa4a85716a3ec
msgid "This guide particularly focuses on `Unix-like <https://en.wikipedia.org/wiki/Unix-like>`_ environments, though the stack discussion may be useful to everyone."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:6
# 860f096be6cf4896a81a51bc4a0e48a4
msgid "The purpose of this guide; its audience and assumptions"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:8
# a547d018b8d24941a03816abf368af08
msgid "This guide is an overview of how to set up Plone and its supporting software stack for production purposes on one of the popular Unix work-alike operating systems."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:12
# f5097b9cc9e84d62a9ae233a6ead377c
msgid "We’ll cover platform preparation and basic considerations for installation of Plone itself. We’ll also go into common setups of the other parts of the deployment stack needed for real-life deployment:"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:16
# 70b3286f662c436897d384a80f733c79
msgid "A general-purpose web server to handle URL rewriting and integration with other web components;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:18
# 114c7d6b283b48c4ac26b3a859b6a081
msgid "Load balancing;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:19
# 8614dacaad724a24911780eec8feff1e
msgid "Server-side caching;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:20
# 054f5621818143939cae528b4c7e9b8e
msgid "Backup;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:21
# 76e469202c264acfbc296dd0fe3e20b2
msgid "Log rotation;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:22
#: ../../reference_manuals/active/deployment/packing.rst:2
# 65cba5818d8b4fe8bbc372af5100d7af
# 5ce89d9349f54f0ea7b24dc6308d02f6
msgid "Database packing"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:24
# a643a2d0d37844789e179ebd6b377650
msgid "We won't cover the details of installation or actual tool setup. Those are better covered in the :doc:`Installation </getstarted/installation>` and other :doc:`Hosting </hosting/index>` guides."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:29
# 37bfed5f66654265b0ef5a8a1d8570f5
msgid "And, what about Windows?"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:31
# 55f5a08efbed44b3baaf88a6a80deaa5
msgid "Production deployment for Windows is typically very different from that on Unix-like systems. While some parts of the common open-source stack are available on Windows (Apache, for example), it's more common to integrate using tools like IIS that are often already in use in the enterprise. If your shop is committed to a Microsoft stack, this document won't be of much use to you. However, if you're on a Windows server, but open to using the (very often superior) open-source alternatives to non-Microsoft application components, the stack and tools discussion here may be very useful."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:41
# 961986eaa3e14b858a2bd10698fb025c
msgid "Audience"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:43
# ea78dbe403764a7d9fa3d851774abf77
msgid "There is one audience for this document: system administrators who wish to deploy Plone for a production server. We assume that you know how to install and configure your operating system, including its package manager or port collection, file system, user permissions, firewalls, backup and logging mechanisms."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:49
# 3e095f61dd6d4217a1485861af27dcd0
msgid "You should be able to use the command-line shell and able to translate between the file paths and hostnames used in examples and the ones you’ll be using on your deployed server."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:53
# 2f3a6f71e715441aad7ab7b8d77932ab
msgid "You’ll need root access (or sudo privileges) adequate to install packages, create users and set up cron jobs."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:56
# 82c385ef14b2444fa40e7e8a3c127552
msgid "The instructions below have been tested with clean OS platforms created on commodity cloud servers."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:60
#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:28
# eb752e7ac5344936b02b28537e315fba
# 1fc8eca5a256435c8a3d21673fa882d3
msgid "Assumptions"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:62
# 8a684cb21a4f4b9aa2794f20996a8a43
msgid "We’ll be describing base-level production deployments that will meet many, but not all needs. And we’ll be using the most commonly used and widely supported tools for the stack. Tools like Apache, Nginx, haproxy and rsync."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:66
# ab62379f09ff4428936259a5b27e1ce9
msgid "You may have other needs (like integration with LDAP or a relational database) or wish to use other tools (Apache Traffic Server, Varnish, squid …). That’s fine, and there are many good documents elsewhere in the plone.org documentation section that cover these needs and tools."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:72
# 0777c5dec9b14ccdb1c57cdd308076b0
msgid "Security considerations"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:74
# 85e8f15e15cf4e3bb6bdfbc6989893d8
msgid "The approaches we describe here are practical for many Internet and Intranet servers. However, they should be considered a baseline and may not meet your security needs. Plone can be deployed in chroot jails or OpenSolaris zones or with much more compartmentalized process and file ownership if your application requires a greater degree of protection."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:2
# 3f2ec39e09d9457fbfd788d5bc1615c2
msgid "Logs and log rotation"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:4
# bc259fb9a80841af9c067343abac51e0
msgid "Plone and Zope maintain a variety of log files. As with all log files, you need to rotate your logs or your server will die from lack of storage. Log rotation is a process of maintaining a set of historical log files while periodically starting the current log file anew."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:10
# 57cbee19a246442e8c44500b8a7c09af
msgid "Log types and locations"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:12
# 0151a4dfa03742d0b17fb4619385ca9c
msgid "The buildout recipes that set up ZEO server and client components allow you to set the names and location of your log files. We'll describe below the common names and locations. If this doesn't match your situation, check your buildout's zeoserver and zope2instance sections."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:18
# 7baa07359d404983ab06f16e2b5724d2
msgid "ZEO server log"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:20
# 98e042de2fbd49a19cae9fb5350878b3
msgid "A ZEO server only maintains one log file, which records starts, stops and client connections. Unless you are having difficulties with ZEO client connections, this file is uninformative. It also typically grows very slowly — so slowly that you may never need to rotate it."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:25
# e94896cc1f5b4d979d8622fb494ca4c2
msgid "The ZEO server log for a cluster will typically be found under your buildout directory at var/zeoserver/zeoserver.log."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:29
# da9698b0ade34e3ca38520b8eb56776c
msgid "Client logs"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:31
# 9ec830ed764d47759e55c1f961daea08
msgid "Client logs are much more interesting and grow more rapidly. There are two kinds of client logs, and each of your clients will maintain both:"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:34
# cb4550e04f39491db248a512e8cdb695
msgid "Access logs"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:36
# e4a030c371ac4c32b6fd57f0185be55e
msgid "A record of HTTP, WebDAV, and — if it's turned on — ftp accesses to the client. This resembles traditional web-server log files. Typical location of a client's access log is var/client#/Z2.log."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:40
# e3603a76ce814e0c9d6129ae61670b0a
msgid "Event logs"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:42
# 45be3108f0114967b2cc8db129abb761
msgid "Startup, shutdown and error messages. Event logs need attention so that errors are quickly discovered. Typical location of a client's event log is var/client#/event.log."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:47
# 65d525d1da9946288eedfbda2857908c
msgid "Log levels"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:49
# 11621421ae9448fbbafe8be6c0b947c2
msgid "You may set the verbosity level of access and event logs via the zope2instance sections for your clients. This isn't very useful for event logs, but can be very useful for access logs. The default verbosity level for access logs — WARN — creates an entry for every HTTP access. If you are recording HTTP accesses via your proxy server, you may change the access logging level to \"ERROR\" and dramatically slow the rate at which your access logs grow::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:62
# a57f0a0a74ab48bd8ab48a72bde5b04d
msgid "Don't turn down the access log level until you've had a chance to tune up your proxy cache. Seeing which requests make it through to the ZEO client is very useful information when checking caching and load balancing."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:67
# f0fb4011053f4bb0a48547415836a0f0
msgid "Client log rotation"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:69
# d6b7eaff7ffb472084dec7f37632a698
msgid "The basic option here is between using the ZEO client log rotation mechanisms built into Zope and using external mechanisms — such as the log-rotation facilities available on your server."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:74
# 72d5444115964b4ca22443e134137da7
msgid "Plone 4.2.2+"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:76
# a96099ab8ce4404c83484ff75f898ad0
msgid "Plone 4.2.2+ allows you to set a simple size-based mechanism for client log rotation."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:79
# 1c89c0bef68e4bc9b2f72107a7941b1e
msgid "The mechanism actually is built into Zope 2.12+ (used in Plone 4.0+), but there was no easy way to use it in a buildout until release 4.2.5 of plone.recipe.zope2instance. That recipe version ships with Plone 4.2.2+. We'll describe later a not-as easy mechanism for earlier 4.x series releases of Plone."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:85
# 12dc1bade7d241819b1e386cec811e9f
msgid "For Plone 4.2.2+, just add configuration settings like these to your buildout's zope2instance sections::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:96
# 8850f5d18a964fd39377cc7016ebbf5b
msgid "This will maintain five generations of event logs of maximum five megabytes in size and 10 generations of 20 megabyte access logs."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:99
# 3dcb7c2013904a89845a80cbb10a058e
msgid "For earlier versions of Plone in the 4.x series, you may use a custom log setup command to pass parameters to Zope::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:117
# 45ebc38536ef4ee4b10ee9d9a747a86b
msgid "Other log rotation mechanisms"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:119
# 27f4b5b879f7433fa9b5559f1e45a9b2
msgid "Unix-ish systems have several log rotation mechanisms available. Two common ones are ``newsyslog`` and ``logrotate``. Both are well-documented. The critical thing you need to know for each is how to signal Zope that a log rotation has occurred, forcing it to reopen the log file. Zope will do this if you send the client process a USR2 signal."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:125
# ee6383a81bbb4ed2aa6f4650580bbd5d
msgid "For example, with logrotate, you can rotate a client's logs with a configuration like::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:140
# dbf8621614c24808bf8103e64a3b7928
msgid "Error alerts"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:142
# 3db7e0c864a04665861828dd2005b214
msgid "Zope can email access log error messages. As with other logging instructions, this is done with an addition to client zope2instance sections of your buildout::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:159
# 16cb8f8e6eb746cebd1fc5ead4916651
msgid "For complete detail on configuration, see the `mailinglogger documentation <http://packages.python.org/mailinglogger/mailinglogger.html>`_."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:4
# 7d9fa9f83e044303b07d366bc2db735c
msgid "Packing is a vital regular maintenance procedure"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:6
# 1b21fe4722f34cb9ad1dd31a627db24a
msgid "The Plone database does not automatically prune deleted content. You must periodically pack the database to reclaim space."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:9
# 3c6a7273874f426fb531fc456d5e94e1
msgid "Zope's object database does not immediately remove objects when they are deleted. Instead, they are just marked inactive. This has advantages: it supplies a knowledgeable administrator with the ability to undo transactions on an emergency basis. However, this means that the disk space consumed by your object database will grow with every transaction."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:15
# e10b861ab8934dda9cbf38b9bf6ed922
msgid "*Packing* the database reclaims the space previously consumed by deleted objects. You *must* periodically pack your database, or it will eventually consume all available disk space. Fortunately, packing is an easy and reliable operation. It also may be done while the system is live."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:21
# 4f19ee48da544363b0b2fbc0128e7309
msgid "Setting up packing"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:23
# 1e5149fde6a0426897076397c6740b61
msgid "On a development or testing installation, packing will be an infrequent need. You may initiate a packing operation via the Zope Management Interface Control Panel. It will allow you to set the number of days of transactions you wish to keep in the undo stack."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:28
# 50af11a081bb45be8b9c92bc98f49c01
msgid "On a production system, you should pack the database via a command-line utility: bin/zeopack in your buildout directory."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:31
# bba655227b0a463d9d8a06d767024bfc
msgid "*zeopack* is installed automatically by the plone.recipe.zeoserver recipe that generates the zeoserver (database server component)."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:34
# 0c56576f456e407d822baa51187a595d
msgid "You may set packing options for zeopack by setting attributes in the zeoserver part of your buildout. For example::"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:42
# 9ef5b3234c3e4acea2201d24d10f8403
msgid "Will (after buildout is run), cause bin/zeopack to conserve three days of undo history during the pack operation."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:45
# 1c0f1585a5ad4ed2ba3fbcb68639fbd5
msgid "Other options include:"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:47
# d6689c2a7aae4dfb8b0debc71ac01dbd
msgid "pack-gc"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:49
# cfd1ec27ce9f40248f23cc788d689359
msgid "Can be set to false to disable garbage collection as part of the pack. Defaults to true."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:52
# 5e10e8e2cc054bb0b616310b085d8100
msgid "pack-keep-old"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:54
# 0aad6dd23c67485ea1cfc6c1a660203d
msgid "Can be set to false to disable the creation of \\*.fs.old files before the pack is run. Defaults to true."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:57
# d0b3d1cd09b444a3b576890a58da352f
msgid "pack-user"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:59
# 7d662e2e35f64760999d04fcdbde1b60
msgid "If the ZEO server uses authentication, this is the username used by the zeopack script to connect to the ZEO server."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:62
# bd6e691e29bb4336bf34df8eec653e4b
msgid "pack-password"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:64
# 125dbffbe94345a1982ad0229139b288
msgid "If the ZEO server uses authentication, this is the password used by the zeopack script to connect to the ZEO server."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:68
# 8acf46b3e5974557aa171a3180dddfaf
msgid "The packing operation"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:70
# f81685db9eac4b2c927d5752574e6303
msgid "Expect the packing operation to be time-consuming and for the time to grow on a linear basis with the size of your object database."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:74
# 51be22192777413baa8a58812be463f8
msgid "Disk-space considerations"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:76
# 5044ba2aa04b4468a95a73827501c2e5
msgid "The packing operation will (unless you force this off) copy the existing database before it begins packing. This means that a packing operation will consume up-to twice the space currently occupied by your object database. (Pre-existing .old files are overwritten, so at least it doesn't get worse.)"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:82
# ea28540bffd04b4daee69b3aab66e564
msgid "Regular scheduling of packing operations"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:84
# c49dc3f81a1d4651bf037643db0a4524
msgid "Database packing is typically run as an automated (cron) job. The cron job may be set up in the system cron table, or in the Plone users."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:87
# 5d255f6c07d9422e956046c776e17749
msgid "Disk packing is an extremely disk-intensive operation. It is best to schedule it to occur when your monitoring indicates that disk usage is usually low."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:2
# f10fb5edd831498e9da7ea1fd2ef0044
msgid "Preparing the Server"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:5
# 02f0ea3078854e769eee1cd6048e2494
msgid "Preparing to install Plone"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:7
# 90399867cd1344f18676225e115cdf7b
msgid "Plone and Zope are generally not available via platform package or port systems. So, you can’t say “apt-get install plone” to add it to a Debian server. (There are packages and ports out there, if you search hard enough to find them. But don’t do it: they’ve generally had a poor record for maintenance.)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:13
# 27a43948b6ea49ca9c82ed0910dad8c3
msgid "This means that you typically need to build Plone (compiling source code to binary components) on your target server. Binary installers for Plone are available for Windows and OS X, but not for Linux and BSD systems. And, the OS X binary installer isn’t really meant for production use — though it’s great for theme and add-on development and testing."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:19
# 2ec0f2524edc49b589dfa4fe2e2827bf
msgid "A build environment for Plone requires two sets of components:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:21
# 9c236e15851a4c84bb787af3d78760da
msgid "The GNU compiler kit and supporting components"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:22
# cffb7dab6d4b41d192877c6b0b15f24f
msgid "The development versions of system libraries required by Plone. The"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:23
# 4e94b0d6e5cb4afaaaa9091e81b9c755
msgid "libraries themselves are in common use, and often included in standard distributions. But, we need the development header files."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:26
# f9517b6eb3a24fc3bf720cb65c14fe0d
msgid "It's generally best to install as many of these components as you can via platform packages or ports. That way, you'll be able to use your platform's automated mechanisms to keep these up-to-date, particularly with security fixes."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:32
# 145485fb0fff4a569bebfb1d00889590
msgid "System python?"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:34
# 4c6886545fb9467f9f0eb233da329ebf
msgid "Plone's Unified Installer will install a suitable Python for you. However, you may wish to use your system's Python if it meets Plone's requirements. Plone 4.0 and 4.1 require Python 2.6. Plone 4.2+ will work with Python 2.6 or 2.7."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:39
# fcc8c01da033435792f6e827caa5f78d
msgid "If you choose to use the system Python, you'll want to use virtualenv to create a virtual Python environment to isolate the Zope/Plone install from system Python packages. The Unified Installer will automatically do this for you. If you're not using the Unified Installer, learn to use virtualenv."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:45
# 8b99fdb23ee64685a3c7bfad1998bd4c
msgid "Basic build components"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:47
# 09634ec4bf3e4929885efc8286151740
msgid "All installs will require the basic GNU build and archive tools: gcc, g++, gmake, gnu tar, gunzip, bunzip2 and patch."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:50
# 384126833c13447db607635c73418a40
msgid "On Debian/Ubuntu systems, this requirement will be taken care of by installing build-essential. On RPM systems (RedHat, Fedora, CentOS), you'll need the gcc-c++ (installs most everything needed as a dependency) and patch RPMs."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:55
# d18ccfa4ef2948ddbc8cc3acfeebb7fe
msgid "On Arch Linux you'll need base-devel (installs most everything needed as a dependency)."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:59
# ca49b88c3c0a4275af801ba7c9d59705
msgid "System Python"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:61
# ecb15f19cffb462b8a3639b095f4af17
msgid "If you're using your system's Python, you will need to install the Python development headers so that you'll be able to build new Python components. On Debian/Ubuntu systems, this is usually the python-dev package. Port installs will automatically include the required python.h requirement as part of their build process."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:67
# 38a236cfc8f64907afcdc95103f957bd
msgid "If you're using your system Python, you will not need the readline and libssl development packages mentioned below. The required libraries should already be linked to your Python."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:72
# 1c70cae7e3014ea2a29c48cc141e4001
msgid "System libraries"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:74
# 02f085a51d78441bb3ba350aedc2a903
msgid "For any install, the development versions of:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:76
# 839235baa7614f51a05bebbe1f7bd7d8
msgid "libssl"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:77
# dd5eea7667ee42abb7b3e6ce7180c9cb
msgid "libz"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:78
# 111d5005b8e5433ba131df510376b333
msgid "libjpeg"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:79
# 0d5d66e19e554b018b9e4c3e6129e27b
msgid "readline"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:80
# 2e448b4817ad406e860226d8516e190f
msgid "libxml2/libxslt"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:82
# 214b25f9a84c44b691707d708d9a7f98
msgid "If you're using the System Python, add:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:84
# 70a28e9cee554191816a4a967051cc1d
msgid "build-essential (gcc/make tools)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:85
#: ../../reference_manuals/active/deployment/preparing.rst:119
# 4ac8909848694d558abc020350621a7c
# f1e8d88e10cf41a38fc5ccb206b0af84
msgid "python-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:87
# 964eb0b7fb33499aafddcac41805c7dc
msgid "Without the system Python (Unified Installer builds Python):"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:89
# 40398da811394651865b3e6484055f4b
msgid "build-essential (gcc/make)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:92
# 153b5ef137ec451db126118fbea7b6cc
msgid "Optional libraries"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:94
# fc97030cbe564a0ca6009849cd1d66c0
msgid "If Plone can find utilities that convert various document formats to text, it will include them in the site index. To get PDFs and common office automation formats indexed, add:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:98
# 8cf01049f49b493bba838f270ed2c2e7
msgid "poppler-utils (PDFs)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:99
# 864ed97a66dd490f888fc6a729c98f7f
msgid "wv (office docs)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:101
# d468478912604c598bd7f649f6498070
msgid "Development versions are not needed for these."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:105
# a50d39b665f94532bbbfc5fc7b378cd3
msgid "Platform notes"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:108
# 35ffdc7a476b4ba69fc42187be094600
msgid "Debian/Ubuntu"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:110
# a268268d97ac44e5b242e57d4da1451f
msgid "Use ``apt-get install``. The matching package names are:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:112
# fcdd6e65758d41c8a15799f669869275
msgid "build-essential"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:113
# 98dd4983a2614adf8530793be4f86156
msgid "libssl-def"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:114
# 6ac32f5639294eca9b505996be43b7a4
msgid "libz-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:115
# 5c9d0fbe605947789ebb00201ebc0aa9
msgid "libjpeg-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:116
# 248f85613843497090c461c3a09d44e1
msgid "readline-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:117
# 11ef42bc3a4d46b1b074951949439fb2
msgid "libxml2-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:118
# 7db0f6eda90e4349b0870888d59c93b2
msgid "libxslt-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:122
# 66ece836b01c400cb0f66c4c862f44fe
msgid "Fedora/CentOS"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:124
# ab7804105811460992683d6a38feb0a9
msgid "Using ``yum install``:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:126
# 0741199a0c134138a70c7f2ea4e8fe5a
msgid "gcc-c++ patch openssl-devel libjpeg-devel libxslt-devel readline-devel make which"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:136
# cde23cce1cd94a67ae566261d3d79f39
msgid "OpenSUSE"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:138
# 792fc987bd7c4fc2afd5ec3ef65ad3c0
msgid "Using ``zypper in``"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:140
# 8040436cb19f44858628226081782347
msgid "gcc-c++"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:141
# 62944ffa21f241c397f4ab0acee8352b
msgid "make"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:142
# 962d535cd42444eda3ca3afdbdd6bcbb
msgid "readline-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:143
# 9d85e5c995d5424d9f70df439ec5ccf0
msgid "libjpeg-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:144
# 0ae2a0e3044f46d18fe986dbacfcb938
msgid "zlib-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:145
# 3e79fa05e2574ad8a6c7e4717a6a57c1
msgid "patch"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:146
# d34a72e6ee1740e5962896e8b399ef3d
msgid "openssl-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:147
# 089850950f6e472cb38d03bbb32a0d98
msgid "expat-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:148
# 1a39a87f3a0849b690a806aea68a08ec
msgid "man"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:150
# 37c1c436184d4a349df0342c44a2c542
msgid "--build-python will be needed as the system Python 2.7 is missing many standard modules."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:154
# ed488e099b8d4afaa3a3bbdcbcbd4880
msgid "Arch Linux"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:156
# 2e06af343dbe4eb8876359ac9fe0fa41
msgid "Using ``pacman -S``"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:158
# 66cb4f1e148f448b8637969607921423
msgid "base-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:159
# f33094d9a5924f2d9036dd4bd6ca990b
msgid "libxml2"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:160
# cf9c52e94bab4dd9870e590dc6c1999e
msgid "libxslt"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:161
# 56f668a59c454757a529b25ffb2d2d95
msgid "libjpeg-turbo"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:162
# bd77693b425b43a480dd0366afefa469
msgid "openssl"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:165
# 0a61158132c9415e9390483aabfd6681
msgid "OS X"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:167
# b07dc99f2b3b4957bf89afca766757f8
msgid "Installing XCode and activating the optional command-line utilities will give you the basic GNU tools environment you need to install Plone with the Unified Installer. You may also use MacPorts (the BSD ports mechanism, tailored to OS X) to install libjpeg, libxslt and readline. If you do, remember to keep your ports up-to-date, as Apple's updates won't do it for you."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:175
# aa1cec4903be491c9133c325c2736b77
msgid "Creating a Plone user"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:177
# b119b4d5cea54493b05f1ced2516bb17
msgid "While testing or developing for Plone, you may have just used an installation in a home directory, owned by yourself. That is not suitable for a production environment. Plone's security record is generally excellent, however there have been — and probably will be again in the future — vulnerabilities that allow an attacker to execute arbitrary commands with the privileges of the process owner. To reduce this kind of risk, Plone — and all other processes that allow Internet connections — should be run with user identities that have the minimum privileges necessary to maintain their data and write logs."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:186
# 07fa7df654594e6a86e48b8b4f43a22c
msgid "In a Unix-workalike environment, the most common way of accomplishing this is to create a special user identity under which you will run Plone/Zope. That user identity should ideally have no shell, no login rights, and write permissions adequate only to change files in its ./var directory."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:191
# dcc3c78235e4426d82638b25737c3cb0
msgid "The ideal is hard to achieve, but it's a good start to create an unprivileged \"plone\" user, then use \"sudo -u plone command\" to install Plone and run buildout. This is basically what the Unified Installer will do for you if you run its install program via sudo. The installer uses root privileges to create a \"plone\" user (if one doesn't exist), then drops them before running buildout."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:198
# 4ca08d4dd6a347d2894ee2c3e0553ceb
msgid "Don't run buildout as root!"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:200
# ad9c7665a9694d3e91a52525795adb28
msgid "Don't use bare \"sudo\" or a root login to run buildout. Buildout fetches components from the Python Package Index and other repositories. As part of package installation, it necessarily executes code in the setup.py file of each package."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:2
# ab2068629a00419b85150840799eed1b
msgid "Starting, stopping and restarting"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:4
# 6d70c23807964684929a7659636e3c98
msgid "If you're using a stand-alone Zope/Plone installation (not a ZEO cluster), starting and stopping Plone is easy. A production ZEO cluster deployment adds some complexity because you'll now be controlling several process: a ZEO server and several ZEO clients."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:9
# d1f4d387847a437fbd50bf761d6b9cca
msgid "If you check the \"bin\" directory of your buildout after building a cluster, you'll find control commands for the server and each client. They're typically named zeoserver, client1, client2, client#. You can do a quick start with the command sequence::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:20
# 7fa9a650187b46679d9356314afe4383
msgid "If you've set all this up with the Unified Installer, you'll have a convenience controller script named \"plonectl\" that will start all your components with one command::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:27
# 38ed1c3c89544f1ab42d0002293188a5
msgid "Each \"start\" command will run the program in \"daemon\" mode: after a few startup messages, the program will disconnect from the console and run in the background."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:31
# 3e65c306a44041b088cce5bf2cff0eca
msgid "The daemon mode start will write a process ID (pid) file in your buildout's \"var\" directory; that pid may be used to control the background process. It's automatically used by \"stop\" and \"restart\" commands."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:36
# c851b53a309b4a658b21ead32ce88673
msgid "Starting and stopping Plone with the server"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:38
# d5bff3164e7545689dd3f0fbb4dd7bbf
msgid "You can start and stop Plone with your server by adding and init.d (Linux and other sys v heritage systems) or rc.d (BSD heritage) script that accepts start and stop commands."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:42
# a4ee39b88e88417596126485ed83f403
msgid "The Unified Installer has an init_scripts directory that contains sample initialization/stop scripts for several platforms. If you didn't use that installer, you may find the scripts on `github <https://github.com/plone/Installers-UnifiedInstaller/tree/master/init_scripts>`_."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:48
# e33220aeaeae45109b4013a08ee20e75
msgid "Process control with Supervisor"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:50
# c5479c4bd3a247d8ba598da208d3aaa6
msgid "A much better alternative to custom init scripts is to use a process-control system like `Supervisor <http://supervisord.org/>`_. Supervisor is well-known by the Plone community, and you should have no trouble getting community support for it. It's available as a package or port on most Linux and BSD systems (look for supervisor, supervisord or supervisor-python). Installing the port or package will typically activate supervisor. You then just add the Zope/Plone commands to the supervisor configuration file."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:58
# a317564f84da4e7b95f0d4ef80d6a877
msgid "Process-control system's like supervisor typically require the controlled application to run in foreground or console mode. Don't confuse this with the Zope/Plone \"fg\" command, which runs the application in debug mode (which is *very* slow). Instead, use \"console\" for clients. Use \"fg\" for the zeoserver; it doesn't have the \"console\" command, but its performance is unhindered."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:65
# 827e8e2e2c094ed0a24fb54916376704
msgid "Here's a sample program-configuration stanza for supervisor, controlling both a ZEO server and client::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:80
# da85a497bd7643978ab02c64aeb899ca
msgid "Note the \"stopwaitsecs\" setting. When trying to stop a program, supervisor will ordinarily wait 10 seconds before trying aggressive measures to terminate the process. Since it's entirely possible for a ZEO client to take longer than this to stop gracefully, we increase the grace period."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:85
# 457ce2a5029343408f8eda325dc3555c
msgid "When running a ZEO cluster through a process-control system such as supervisor, you should always use the system's own control mechanisms (supervisorctl for supervisor) to start, stop, and status-check cluster components."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:91
# ffeb31449f6d41008b0d42c6c3cb30b6
msgid "Cluster restarts"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:93
# 396cf86f6c2e4f998d6d29e250c115ba
msgid "Using multiple ZEO clients and a load balancer makes it possible to eliminate downtime due to ZEO client restarts. There are many reasons why you might need to restart clients, the most common being that you have added or updated an add-on product. (You should, of course, have tested the new or updated package on a staging server.)"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:99
# 5d5347b1609a416ea6e2423b0b6201ba
msgid "The basic procedure is simple: just restart your clients one at a time with a pause between each restart. This is usually scripted."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:102
# af31b68f6d4b4b5a9dfbd9aeac883a85
msgid "Load balancers, however, may raise issues. If your load balancer does not automatically handle temporary node downtime, you'll need to add to your client restart recipe a mechanism to mark clients as in down or maintenance mode, then mark them \"up\" again after a delay."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:107
# ebd41db05e30442c982e6d81cde2b93c
msgid "If your load balancer does handle client downtime, you may still need to make sure that it doesn't decide the client is \"up\" too early. Zope instances have a \"fast listen\" mode that causes them to accept HTTP requests very early in the startup process -- many seconds before they can actually furnish a response. This may lead your load balancer to diagnose the client as \"up\" and include it in the cluster. This can lead to some very slow responses. To improve the situation, turn off the \"fast listen\" mode in your client setup::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:122
# 7de5562b7c0c420e981e1087507d9cd8
msgid "If you are unable to tolerate slow responses during restarts, even this may not be good enough. Even after a Zope client is able to respond to requests, its first few page renderings will be slow while client database caches are primed. When speed sensitivity is this important, you'll want to add to your restart script a command-line request (via wget or curl) for a few sample pages. Do this after client restart and before marking the client \"up\" in the cluster. This is not commonly required."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:2
# 7496312fb20e49a2b159121bd5786e37
msgid "Background: the stack"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:4
# 4287bea2ac1740f1a63266de9c688951
msgid "Many integrators arrive at Plone after previously working with PHP applications. They are used to using Apache with modPHP and an SQL server. This common application-server software stack is often deployed from the start on a pre-configured server, and installation of a PHP application may require little more than unpacking a set of files to a particular point in the file system."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:11
# d7adb2f873d347dfa37e22fde427aea1
msgid "The Plone application is a different animal. It runs on its own application server (Zope), and in common installations uses the Zope Object Database (ZODB) rather than an SQL database. It is nearly always deployed in conjunction with other tools, like web servers (e.g., Apache or Nginx), load balancers (like haproxy), and reverse-proxy caches (like varnish or squid). This is what we’ll be discussing in this guide."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:18
# ff2f00a1b1e543c2940ca64381ff8d6b
msgid "It is actually possible to deploy Plone/Zope as a stand-alone web server. If you do a simple “standalone” installation of Plone, you will end up with a working web server answering requests on port 8080 (which may be changed)."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:26
# 03ecccfa4391485f87deb4dd8319d44d
msgid "While there are production servers doing just this (typically changing the listening port from 8080 to 80), it’s uncommon. It’s much more common to put a general-purpose web server like Apache or Nginx between Plone and the Internet:"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:35
# cbaf5c5ff5a34753a7f98909a94a36bc
msgid "In this stack, it’s the general-purpose web server that is connected to well-known Internet ports. Apache or Nginx answers those request and forwards them to Plone. It does so by proxying the requests."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:39
# 2a6b78c62e604d7abe76d9f8376debfd
msgid "If Plone/Zope has a built-in web server, why do you need another?"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:41
# d4d679c416b145b9b890aeeecd02cf50
msgid "You may wish to use Zope and Plone as part of a hybrid system with other best of breed components providing parts of your web site. For example, Plone is not really meant for the kind of database applications that require a relational solution. A good, general-purpose web server like Apache or Nginx serves as a great mechanism for dispatching different requests to different, best-of-breed components. They’re also great for quickly serving static resources."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:49
# 8e35799cde244ce89aedc79f247c87a0
msgid "Even in the simplest installation, it’s usually desirable to do some URL rewriting to map URLs to data in different ways. This is nearly mandatory when building a hybrid system."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:53
# 0d771ca40c484b72a370fbe92186e79a
msgid "Plone does not have built-in SSL support. A general-purpose web server will have a hardened SSL layer and a mechanism for handling certificates."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:56
# 396cf221628a4b3c872d2911a5e4d37b
msgid "You may wish to solve authentication and logging problems at a shared, higher level."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:63
# df7143f885a546adb55570566b9b9991
msgid "Zope + Web Server + Web Apps"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:66
# 97296d556e1b465984568001fac35798
msgid "Load balancing"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:68
# 5430c5c0269242028eb008ecc6695c58
msgid "The deployment above may meet your needs for light-traffic sites. Its principle limitation is that it will make use of only a single processor and file system to render Plone pages."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:72
# bc1b11c157044b68b8e9b265e61a920b
msgid "The Zope application server allows us to divide the chores of rendering web pages (very CPU-intensive) from those of maintaining the file-system database. Further, we may have as many page rendering clients as we wish, all using a single database server."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:77
# 282150a8301a44a6b9449b349151a457
msgid "The components of this mechanism, Zope Enterprise Objects (ZEO) are:"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:82
# 4c0442088f974ecf832568f88f32c702
msgid "ZEO Clients"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:80
# b4f71a2458ef48fa95fe4d322cc58cf3
msgid "Web servers in themselves, which answer requests for pages, gather page component objects from the database server, render pages and return them to the requestor."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:86
# aec3222f91604c6996ad83491639ef75
msgid "ZEO Server"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:85
# 2a0e614a4c4d4637b1e66023de089200
msgid "Handles read/write requests for the object database from ZEO Clients. Not HTTP servers, and not meant to be visible to the Internet."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:92
# a864b302507643d395956c53c6bdf178
msgid "ZEO Cluster"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:94
# 3cee32fd5a2c413f9c5ebe13ef49c0e3
msgid "It is typical in a high-demand server situation to deploy as many ZEO clients as you have CPU cores available. More is not useful (except for a spare, debug client). ZEO clients are generally CPU/RAM-intensive. The ZEO server is a heavy disk-system user."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:99
# 517918a97f2b4cc0840b5da9cce3a6d7
msgid "For multiple ZEO clients to be actually useful, you need a load-balancing front-end to distribute requests among the clients. The load balancer receives http requests and proxies them among a pool of ZEO clients."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:107
# 8504821869fb48288a87e73e7098fb4b
msgid "ZEO Cluster with Load Balancer"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:109
# caee930619c946aeadb3c86f01cfc412
msgid "Apache and Nginx have built-in load-management capabilities, which can allow you to combine those two layers of the stack. A dedicated load balancer like `haproxy <http://haproxy.1wt.eu/>`_ offers better features for distributing load among clients and for checking and maintaining status."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:115
# 59ea845189fe458a993b1b8d60f031d2
msgid "How many ZEO clients, how much memory?"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:117
# 904d61ede7a8431c9b92c02468c562da
msgid "It's typical to allocate roughly one ZEO client for every processor core you have available. However, there are lots of trade-offs, and many clients will eat RAM rapidly. :doc:`About Instances, Threads and RAM consumption </performance/instancesthreads>` is a good guide to the issues involved."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:123
# b81ea785e902480d8624673c296a4f3d
msgid "Sticky sessions"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:125
# 2a3f2606cc3b471bb38fc17fd00852de
msgid "As a rule of thumb, you'll tend to get better performance if you can direct requests from the same browser client to the same Zope instance (ZEO client). That's because the memory cache of the ZEO-client is more likely to be loaded with information useful for rendering requests from that source. The effect can be particularly strong for logged-in users."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:131
# 25e01921c82f4d9ab3ee32ee7c490a03
msgid "This is not a firm rule, though. The more memory allocated to ZEO client caches, the smaller the effect. Also, if a large portion of your traffic is from search engines, benefits will be negligible. (In extreme cases, it may even be desirable to direct all your search engine traffic to the same ZEO client so that their atypical behavior doesn't spoil limited cache memory with infrequently requested pages.)"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:138
# 2bce550255914573a81ac8b6f26b7ac5
msgid "Most load balancers have some sort of mechanism for causing traffic from a single source to stick to a single ZEO client. The simplest schemes use IP addresses; cookies may also be used."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:143
# e8959b469d2547f1987f5f2a2d9636d1
msgid "Connections and queues"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:145
# 2b221666aef7484dbd93e818711bb8d3
msgid "A versatile load balancer like haproxy will give you fine-grained control over the queuing of connections to ZEO client back-end servers. A factor to take into account is that ZEO clients will always accept connections — even when all threads are busy. Given that requests take dramatically different amount of times to render and return, this may result in some clients having queued connections when other clients are free."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:152
# e0aae7af85cb4b8e8fa9beaea8ae2bf0
msgid "The general solution for this is to set the maximum connections per back-end ZEO client to roughly the number of threads they serve. For haproxy, this is the maxconn setting for the listen directive. This is only a rule of thumb. ZEO clients actually spawn threads as needed to return blobs, and are very efficient at that. So, how severely you limit connections per client should depend on your balance of page to blob serves."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:160
# c9917deb97504a0295237ca207071f8c
msgid "Server-side HTTP caching"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:162
# f04f9b451fee4efd8ef80b9805ec03ff
msgid "When a web browser requests and receives a web resource, it silently saves the page or graphic in a local disk cache in case it may be needed later. This saves the expense of downloading the resource again."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:166
# 4463c18ac7f24da8ae3d9a00baf3d197
msgid "A server-side HTTP cache does much the same thing. After Plone renders a resource, which may be a very expensive process, it saves the rendered resource in case it should be requested again soon."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:170
# c5268c1e1a674f8187ffb1f900a85b74
msgid "With a caching reverse proxy in place, our delivery stack looks like:"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:176
# 302caa2698314253951ab51a0f52c93c
msgid "ZEO Cluster with Server-Side Caching"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:178
# 6ba75f99c0ba44df9135c71a99533865
msgid "As with load balancing, Apache and Nginx have built-in proxy caching abilities. If those are inadequate, Varnish or Squid are often used."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:181
# 6958c76743ca4f96ac04613c3b358d7a
msgid "Nothing is simple about caching. There is always a trade off between currency of delivered data and the performance of the cache layer. Cache tuning for truly busy sites requires extensive measurement and experimentation, often with business decisions about the expense of currency loss vs enhanced servers."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:188
# beca0ae32931433a823c8a0bccaae022
msgid "Caching setup in Plone"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:190
# d454d3044e924d66ba94ff5b681a1a93
msgid "In their basic outlines, browser and server-side caching work the same way. The browser or the server caches resources against the possibility that they may be needed again soon. But, how does the caching agent make the decision about how long to store a resource? Or, if it should be stored at all?"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:195
# 30dcb1d2cd1c4f818c92dc95625db89f
msgid "Generally, these decisions are made on the basis of caching hints that are in the HTTP response headers. The web server, or Plone, may indicate that a resource should not be cached at all, that it may be safely cached for a certain period of time, or that the caching agent should revalidate the resource by asking the server if it's changed."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:201
# 4f4d6194403d453ea80b9978113a978d
msgid "Out of the box, Plone is very conservative. It assumes that currency is critical, and only tells the caching agent to store resources like icons. You may tune this up considerably by installing the *HTTP Caching* add on via the Plone control panel, then using the * caching* configlet to set cache rules."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:207
# cb82533786aa4472836ff66479c0ab3c
msgid "The *HTTP Caching* add on is shipped with Plone, but not activated. So, you don't need to add it to your buildout packages. Just activate it and go. By the way, the package that does the work is ``plone.app.caching``, and that's how it's often discussed."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:213
# 7241c973d06d4377ac2a35dc928ed1cc
msgid "Caching settings"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:215
# 8c61b19883634ff28f1e8963fc8319aa
msgid "**Import settings**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:217
# 00038408437649bdbe32dedd78c3d770
msgid "This is actually the place to start if you're new to cache settings. Set a basic profile by making a choice from this menu. Then use ``Change settings`` to refine it to your needs."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:222
# a48b31b6c67b407a8adc02b2ec908e30
msgid "**Global settings:**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:227
# f0a57818f2084cfd9ce7ae737a2a5bde
msgid "Enable caching"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:225
# 2d91c7f8969b4762b6058a1256f753d7
msgid "Turn this on, and you'll get some immediate improvement in cache efficacy -- including browser caches. Tune it up for your particular needs with the other panes in this configuration panel."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:239
# e0c4d6d93c514623a5955818aaaf456a
msgid "Enable GZip compression"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:230
# 97a29716d6464021a5ae9a6d0dd3febb
msgid "GZip compression is one of those rare total wins. Turning it on will cause Plone to compress most text resources before transmitting them. All modern browsers know how to uncompress them. You'll save bandwidth and speed up your effective page delivery for a tiny hit on CPU load."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:235
# 59a26fc75ef648bab2991049893d27e8
msgid "Why wouldn't you turn on Gzip compression? The best reason is because you may wish to instead handle this via your web server (nginx/Apache) or reverse proxy. Threading issues tend to be much better handled by a good proxy than by Zope/Plone. Also, the same gzip settings can handle Zope/Plone and other web apps."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:241
# 9f3fff9add6a4f40bc9a172f86fde245
msgid "**Caching Proxies**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:243
# 76cebab1642248068ee9c7709bb1dd79
msgid "Think of this as the Varnish/Squid settings page, as it's mainly concerned with cache purging, which is typically not supported by web server proxy caches."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:247
# c4000bc613894e04a2f80df4288a0c20
msgid "Cache purging is when an application server sends a message to a proxy cache to tell it that a resource needs refreshing. Cache purging is generally only desirable when you're using more aggressive caching rules. If you are not setting rules to cache pages and other dynamic content, you don't need to worry about cache purging."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:253
# 2d6291919bfc496199ce43af61a8673e
msgid "Caching dynamic resources like pages and trying to purge them on change is the dark, difficult side of caching. It's safest for items like files and images; hardest for the kind of complex, composite pages that are Plone's specialty."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:258
# c05a0541dba94a7dba62cbfb8b427f5e
msgid "Turn purging off and avoid aggressive caching unless you're prepared to monitor, experiment and measure."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:261
# 9723548832f84810968ae8d1cfa2b55d
msgid "Purge settings are extremely dependent on your proxy cache setup."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:263
# f66160ee72ea49db928d676b1a911678
msgid "**In-memory cache**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:265
# ee8cb423f6af472ba0ca3e063f13dad2
msgid "Here you are offered a simple tradeoff. Memory for speed. Allocate more memory to the in-memory cache and pages are served faster. Allocate less and they're rendered more frequently. Just don't cache so much that your server starts using swap space for Zope processes."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:270
# 091e5fad88534489868c65fc2e0f8ce8
msgid "**Caching operations / Detailed settings**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:272
# 1cc88d0638994561811febe796e22666
msgid "This is where you attach caching rules to resource types, and refine the caching rules. In general, stick with one of the profile settings (from **Import settings**) unless you're prepared to immerse yourself in caching detail."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:2
# ba26513c13454ad089dfe67fea7a0858
msgid "Adding five.grok as a dependency"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:4
# b9159a382c774a65aa43d40e22a84de8
msgid "**How to install the five.grok package safely**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:6
# da06bff5f2224e968ffde779d8a86b9f
msgid "Assuming you already have a suitable package and a `buildout`_, using *five.grok* should be as simple as depending on it in your *setup.py* file:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:17
# 8b9f5589fee94f2183dfbd06eb1727f0
msgid "As shown on the previous page, you probably also want this as a minimum in your *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:31
# 5c3b2a081da244a2b60d7dfc7bac7008
msgid "However, if you are using Zope 2.10, you may also need to pin certain eggs in your *buildout.cfg*. If you are using Dexterity, there are already part of the “known good set” of packages. Otherwise, see the `five.grok installation instructions`_ for details."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:36
# ef195595961a41f88a0ba10e725c3491
msgid "Naturally, you will need to re-run buildout after editing *setup.py* and/or *buildout.cfg*."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/index.rst:2
# ce24337e1bbe491ab91380cb320922bd
msgid "Background"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/index.rst:4
# 7e605dbe2bd342c6bd4a0ae234a012b1
msgid "**What is five.grok all about?**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:2
# 8fc4aae583ca4591a103b0a5f4836971
msgid "The Zope Component Architecture"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:4
# 7c56878e3e464d069ca53c28af9fed6d
msgid "**A high level overview of the basic concepts of the Zope Component Architecture**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:7
# d25a006ff6ba498b9ed3e8b27c9c92d7
msgid "The Zope Component Architecture underpins much of the advanced functionality in Zope and Plone. By mastering a few core concepts, you will be able to understand, extend and customise a wide range of Zope technologies. These concepts include:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:12
# 0bf22279734a4e14be87b752fc17edc4
msgid "Using interfaces formalise a contract for and document a given component"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:14
# a4134594b140443f89620c4260ffdda2
msgid "Implementing the singleton pattern with unnamed utilities"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:15
# 2cd1eab0dda44202aed11abadc00fab6
msgid "Using named utilities to build a registry of homogenous objects"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:16
# ad741cdfd92d4baaae7e20c88c25eb0c
msgid "Using adapters to implement generic functionality that can work with heterogeneous objects"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:18
# 012bc59230cf44f29b4a12cf6f041281
msgid "Customising behaviour with the concept of a more-specific adapter or multi-adapter"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:20
# 2f465d72872347518971979a87820ed2
msgid "Event subscribers and event notification"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:21
# aa3d7de3c0064ba9845e88428248da46
msgid "Display components, including browser views, viewlets and resource directories"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:24
# 5d94adf092b74cb98849e06b6c16b9b4
msgid "This tutorial will explain these concepts using simple examples, and illustrate how to use convention-over-configuration with the *five.grok* package to quickly and easily employ adapters, utilities, event subscribers and browser components in your own code."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:30
# 0e735034be024bfa8380718ded0eff7d
msgid "Conventions used in this manual"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:32
# 7f497d709b3940209bdd9f260fcdbc84
msgid "The examples in this manual are sometimes shortened for readability, and you may find that certain details of implementation are not shown to keep the examples short and focused."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:36
# b6707d6a32d44d96906681d3bd2c0932
msgid "You will find two kinds of code listings here. A code block illustrating code you may write in your own files is shown verbatim like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:49
#: ../../reference_manuals/active/writing/writing.rst:383
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:10
# 2f60015157d5437d950d27f5c269b4e6
# 915c7d707d3343cbb33f885498207a1d
# bf0364a2dd9c49f287a2b0851292a215
msgid "Note:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:51
# 59864e27644f427b88904ef6af4f5cd8
msgid "Code snippets may refer to code defined earlier on the same page. In this case, import statements for this code are not shown."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:53
# ff6b1bb6a7d1455598f4ec0b6563b0d7
msgid "An ellipsis is sometimes used to abbreviate code listings."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:55
# 4e52645bf19d47118062b5301274300d
msgid "Sometimes, we will also show how a component or function can be used in client code. Here, “client code” means any code that is making use of the features implemented with the components illustrated. These are shown using Python interpreter (aka doctest) conventions, like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:68
# 7c3e2a28f1b84978adeb75a628c274a2
msgid "Lines starting with *>>>* indicate executable Python code, be that in a test, in the interactive interpreter, or in the body of a function or method somewhere. Return values and output are shown underneath without the three-chevron prefix."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:2
# 131bde4cb0004e978e40fb59e3c626b9
msgid "What is Grok and five.grok?"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:4
# 8dedae800917427eaee0f2d24962a7d1
msgid "**Heritage and anthropology**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:6
# 441ee139da734afca8c7931abf25fadb
msgid "This manual is about using *five.grok* to configure components in the Zope Component Architecture. But what is *five.grok*?"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:9
# 7d50f262df3e4aa5b90f498ba84da029
msgid "`Grok`_ is a web development framework built on top of Zope 3 (aka Zope Toolkit, or ZTK). One of the main aims of the Grok project is to make it easier to get started with Zope development by employing “convention-over-configuration” techniques. Whereas in a “plain Zope” a developer would typically write a component in Python code and then register it in ZCML (an XML syntax, normally found in a file called *configure.zcml)*, a Grok developer uses base classes and inline code directives to achieve the same thing. The advantage is that the “wiring” of a component is maintained right next to its code, making it easier to understand what registrations are in effect, and reducing the need for context-switching between different files and syntaxes."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:21
# c632240885fa44128fcf8d3af8de05b3
msgid "It is important to realise that, for the purposes of this manual at least, the Grok concepts are just an alternate way to configure the Zope Component Archiecture. Everything that can be done with Grok configuration can also be done with “plain Zope” and ZCML. The grok syntax is merely a more convenient, compact and opinionated way to achieve the same thing."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:28
# 3173eb84540b4d3c8b44961c3d2aa803
msgid "Opinionated? That’s right. In part, the design of the various Grok directives and base classes aims to steer developers towards good practice, well-organised code and shared standards. That’s not to say you can’t go your own way if you really need to, but it is usually best to follow the conventions and standards used by everybody else, unless you have good reason to do otherwise."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:36
# 14c48fcf93694cbebfae7126d3152249
msgid "Example"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:38
# 6af9e22bfa0a44e0a4ca323a07ac84b0
msgid "Let’s take a look at an example. Here is a simple adapter registration in vanilla Zope. First, the adapter factory, a Python class:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:62
# 7fc07fcbec324895bfdbde8cbe72bf18
msgid "Then, the registration in *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:76
# 88363e34298b429b965df08d373282e1
msgid "(note: in this case we could omit the *for* and *provides* lines, but this is the full syntax)"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:79
# c4c3dc0e5d22445c88f234cb88608c52
msgid "With Grok convention-over-configuration, you can do it all in one file, like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:99
# fc2c982ee3eb4640bebecbaba6ee9696
msgid "For this to work, the package needs to be “grokked”. This is done with a single statement in *configure.zcml*, which then grokks all modules in the package:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:113
# fe809500ddc5465faff00ce2bd422979
msgid "The *<include />* statement ensures that the grok directive is available. Once these two lines are in *configure.zcml*, we should not need to add any more registrations to this file, no matter how many grokked components we added to modules inside this package."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:118
# 2a55f7026ced496f90f681b7b9e64357
msgid "When the configuration is loaded (at “grok time”), various “grokkers” will analyse the code in the package, typically looking for special base classes (like *grok.Adapter* above), *directives*(like the *grok.provides()* and *grok.implements()* lines above), module-level function calls, directories and files (e.g. page templates), and configure components based on these conventions."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:126
# fe4bb157c1de43b6b4fa0f5985bf1773
msgid "Grok vs. five.grok vs. grokcore"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:128
# 8f46c78a585b42b0a08de3b2ee0e378d
msgid "Grok started life as a monolithic framework, but the nice cavemen of the Grok project decided to factor out the various grokkers into multiple smaller packages. Thus, we have packages like `martian`_, the toolkit used to write grokkers, `grokcore.component`_, which contains grokkers for basic component architecture primitives such as adapters and utilities, `grokcore.security`_, which provides for permissions and security declarations, `grokcore.view`_, which provides support for browser views, `grokcore.viewlet`_, which provides support for viewlets, and so on."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:138
# 7f552d376051473a8accd72659e9edbc
msgid "`five.grok`_ is an integration package for Zope 2 which brings these directives to Zope 2 applications such as Plone. In most Grok documentation, you will see a line like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:146
# 706462a85f374ac4931a57b4707c9884
msgid "This is using the standalone Grok framework. The *five.grok* equivalent is:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:153
# b49ddd02c1b14f70b9fa094c61b177f6
msgid "As far as possible, the *five.grok* project aims to make the conventions and syntax used in standalone Grok work identically in Zope 2. If you come across a piece of Grok documentation, chances are you can get it to work in Zope 2 by switching the \"*import grok*\" line to \"*from five import grok*\", although there are situations where this is not the case. In particular, we tend to use Plone content types instead of Grok ”models\" and standard add/edit forms instead of the formlib-based forms from Grok."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/index.rst:2
# 82446e84f86742e1a19377f005e07e75
msgid "Browser components"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/index.rst:4
# f659a608d66c4bffa88e5eb08324a3a9
msgid "**Using five.grok to create views, viewlets and resource directories**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:2
# cd339cdd173748fb84a843339d62b8fb
msgid "Resource directories"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:4
# 6b4e5fd4afd143e189f5146afcad24e5
msgid "**Exposing static resources such as CSS, JavaScript and image files.**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:6
# ece965fb202942569da1737fece35738
msgid "So far, we have seen how to create views and viewlets. Using views with a custom *render()* method that sets the *Content-Type* header, we were able to create files on the fly. We could even use this for binary data."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:10
# 5dc6b3c695b84174b9ef40dd4dde138a
msgid "In may cases, however, we simply want to expose some static files, such as CSS and JavaScript files, or images and use them in our dynamic views. Luckily, *five.grok* makes this easy."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:14
# fb1372e7d1a74dcfbcf7354d03fa6425
msgid "When a package is grokked, a grokker will look for a directory inside the package with the name *static*. This is then available under the prefix *++resource++<packagename>*, where *<packagename>* is the dotted name to the package in which the *static* directory is located."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:19
# 752d7ca4d3aa411cbbd5c879af3c1cb9
msgid "For example, let’s say we had a package called *example.messaging*. The *static*directory would then be found in *example/messaging/static*, alongside the Python modules and sub-packages in this package. If this directory in turn contained a file called *messaging.css*, it would be accessible on a URL like *http://example.org/site/++resource++example.messaging/messaging.css.*"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:27
# 181d8f4b10b74e1db76536d4cd6fb78a
msgid "If you need to register additional directories, you can do so using the *<browser:resourceDirectory />* ZCML directive in *configure.zcml*. This requires two attributes: *name* is the name that appears after the *++resource++***namespace; *directory* is a relative path to the directory containing resources."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:34
# ae5ea32975df4717bd5508569075f9c1
msgid "Importing CSS and JavaScript files in templates"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:36
# fc8babd2d62d411dade18a17e1591757
msgid "One common use of static resources is to add a static CSS or JavaScript file to a specific template. We can do this by filling the *style\\_slot* or *javascript\\_slot* in Plone’s *main\\_template* in our own view template and using an appropriate resource link."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:41
# ae5f31fa9bd846fc95e7339be453b424
msgid "For example, we could add the following in a view using *main\\_template*. Note that this would go outside the block filling the *master* macro."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:65
# c5253dadc77b4a968eeb88dfea540a2c
msgid "Always create the resource URL relative to the navigation root as shown here, so that the URL is the same for all content objects using this view. This allows for efficient resource caching."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:69
# afbaab5d986d4c5bbc169e259d804b52
msgid "Of course, we could use the same technique anywhere else in any other page template, but the head slots are a good place for CSS and JavaScript resources."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:74
# f795e99d267a45a9badd1bb2d874dcdb
msgid "Registering resources with Plone’s resource registries"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:76
# 8b16df77d2f24d8f85ddcff926dbaaed
msgid "Sometimes it is more appropriate to register a stylesheet with Plone’s *portal\\_css* registry (or a JavaScript file with *portal\\_javascripts*), rather than add the registration on a per-template basis. This ensures that the resource is available site-wide."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:83
# 7fa4e659f50d4e759c42bc352bb9a765
msgid "It may seem wasteful to include a resource that is not be used on all pages in the global registry. Remember, however, that *portal\\_css* and *portal\\_javascripts* will merge and compress resources, and set caching headers such that browsers and caching proxies can cache resources well. It is often more effective to have one slightly larger file that caches well, than to have a variable number of files that may need to be loaded at different times."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:91
# 340e85c3ce1a4846b9bce4d545b2821b
msgid "To add a static resource file, you can use the GenericSetup *cssregistry.xml* or *jsregistry.xml* import steps in the *profiles/default* directory. For example, an import step to add the *conference.css* file site-wide may involve a *cssregistry.xml* file that looks like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:107
# 3b008c4bcc9a4ea9a72c3df501349ef0
msgid "Similarly, a JavaScript resource could be imported with a *jsregistry.xml* like:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:120
# df3ec8ca82264d479c25f4850947d6ae
msgid "Image resources"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:122
# aee8db1b8b844009bfb3905dfd3ac61e
msgid "Images can be added to resource directories just like any other type of resource. To use the image in a view, you can construct an *<img />* tag like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:2
# ddd7564513d84ea78ff521ef98fe818d
msgid "Viewlets"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:4
# 465438f1edae45c49face059ecb4faab
msgid "**Dynamic snippets with viewlets**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:6
# edc65186f05342d2a965c8a0235abbc0
msgid "Viewlets, as their name suggests, are “little views” - snippets of HTML that are rendered at defined location in a view. Behind the scenes, a viewlet is a named browser component that is registered for a context and a request (like a view), as well as for a view and a viewlet manager."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:12
# fddad467711a4db7af0f748da799301d
msgid "In a page template, you may see something this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:18
# 8579a31d1ed24fa58e763a1fca76ed05
msgid "This tells Zope to look up and render the *content provider* with the name *plone.belowtitle*. The most common type of content provider is a *viewlet manager*. When the viewlet manager is rendered, it will look up any viewlets which are registered for that viewlet manager, and which are applicable to the current context (content object), request (browser layer), and view (the same provider expression can be used in multiple templates, but sometimes we only want a viewlet to show up for a particular view). These are then rendered into the page template."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:27
# f6a2d163f4c940c99ac76a35b46efe85
msgid "Plone comes with a number of standard viewlet managers, covering various areas of the page which you may want to plug viewlets into. The standard viewlet managers are all defined in the package *plone.app.layout.viewlets*. In its *configure.zcml*, you will see a number of sections like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:42
# 980a337d047b44e0bfc978ce0824f8a5
msgid "This shows that we have a viewlet manager with the name *plone.htmlhead*, identifiable via the interface *plone.app.layout.viewlets.interfaces.IHtmlHead*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:46
# 05c8b177b0e4470ba99a0c11720a0541
msgid "Another way to find viewlet managers is to use the *@@manage-viewlets* view: simply append */@@manage-viewlets* to the end of the URL of a content item in Plone, and you will see the viewlet managers and viewlets that make up various parts of the page. You can find the various viewlet manager names and interfaces on this screen as well."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:53
# 41d0e680d21a4bc491d96be69db2d64d
msgid "Registering a viewlet"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:55
# 98ea1c9ca65c48178002754ba161e841
msgid "With five.grok, we can register a viewlet using the *grok.Viewlet* base class:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:77
#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:115
#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:187
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:117
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:219
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:337
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:432
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:488
#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:173
#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:400
#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:30
#: ../../reference_manuals/active/five-grok/core-components/events.rst:91
#: ../../reference_manuals/active/five-grok/core-components/events.rst:174
#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:87
#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:124
#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:156
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:6
# 8a5ba29118e0423da733e2c06b658500
# 1888e1b603df404784f4f67eee9e277f
# 6c075021f6ad409fa3923c4f70e0ff45
# caf13606d88844b49a78eb591e1f420f
# 691aac813cbb4fa88d52a76f26bc43c3
# 63d4dc6ffcb140cbaa7b4b554a582774
# 9d06ef7aee5947ec99a5394ad414015c
# 43667197e67642cd853537c097577870
# 21d22413aa2e4145ad860c787d3ce048
# c37147ada8344b1caf3e68b5417131c2
# be5a545859ca43159f47433d3126fa86
# acf5004794114a8aa3f11bacc421ab36
# 0410d733f12b4859a5a9cf5bf57d1806
# 098e05f0bcbd475d821a831953924b65
# 02a2b26c0c3744b5a07180b488854da3
# 8b3f231d9d9e4cb5bf2e09977718ccef
# 8785fbba02474c0f82c130b2c94e8407
# b5a7c8497cd142b0a48694e8de894c40
# e9b80db9cbc244b2a879cd2c66e499e3
# 1da87e85e52c430a9ce025601a6902f2
# 982372d0e20244d88121fde6331aa49c
# 3ed656cb67f441a299969b1faab15b52
# 3ced4822fa6d4834b077992e3a826eed
# 530b4e4d8efd413fbccab056569c7cdc
# 45d449dfd9dd428f818f75d162010be5
# 1ee66cb48c5c48eab8df99a767c088f7
# ad18261b64a34a8dbeb40dea5bf0bded
# d55302a8cc07429281301de20c47fbeb
# aa8b107971f143658ccad872a813a97b
msgid "Notes:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:79
# c6e7dd678462436398f4327655a719a0
msgid "We use *grok.name()* to give the viewlet a name. If this were omitted, the name would be taken from the class name, in all lowercase. The name is primarily useful for overriding the viewlet for a more specific context or layer later, but it must be unique, so it is a good idea to use a dotted name based on the package name."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:84
# 97e32df3f8fc438fbf8bb9e45ac5d8e7
msgid "We use *grok.context()* to limit this viewlet to a particular content type, described by the *IDocument* interface from earlier examples (not shown). We could omit this, in which case the viewlet would be shown for any type of context where the viewlet manager is rendered."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:88
# 7a60ba25b5954486ab417c43a41e5aa7
msgid "As with a view, we have to specify a permission required to see the viewlet, using *grok.require()*. If the user does not have the required permission, the viewlet will simply be omitted."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:91
# 0b9e3292aca04f56a83ddf70071286e8
msgid "We override the *update()* method to prepare some data for the template, much like we did for the view in the previous section. We could also define additional properties or methods on the viewlet class."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:95
# ead92a0b6c034584b4e9a6aa9f619ad9
msgid "We specify the viewlet manager using *grok.viewletmanager()*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:96
# a9fd0b4396984e85bdaacf3538feca4c
msgid "As with a view, the context is available as *self.context* and the request as *self.request*. In addition, there is *self.view*, the current view, and *self.viewletmanager*, the viewlet manager."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:100
# c3e66f5a72ee4da28cb22a7e1fa62dce
msgid "To render the viewlet, we could either override the *render()* method and return a string, or use a page template. A page template will be automatically associated using the rules that apply views. Thus, if the viewlet was defined in *browser.py*, the template would be found in *browser\\_templates/messageviewlet.pt*. In the template, the variable *view* refers to the current view, and the variable *viewlet* refers to an instance of the viewlet class. For example:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:117
# f80e2c3306ae4586a068d01ef3949a34
msgid "Viewlet templates tend to be short, and never include the full *<html />* wrapper."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:119
# bcff5bb1ac21408394fb6d58c664e171
msgid "For the page template to be valid, there must be exactly one root node, a *<div />* in this case."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:121
# cba998171ad54204b0a66e35f155675d
msgid "It is a good idea to apply a CSS class to the outer element of the viewlet, so that it can be styled easily."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:123
# 2459f1a5be48450999be3ad15ead50fc
msgid "The *viewlet*variable refers to an instance of the viewlet class. There is also *view*, the current view; *context*, the context content object; and *request*, the current request."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:128
# 48ab61d962b74664b04f6f806bc9d886
msgid "Viewlet ordering"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:130
# b4cc405f93f146209163e19fa3a9e02d
msgid "By default, the order of viewlets in a viewlet manager is arbitrary. Plone’s viewlet managers, however, add ordering support, as well as the ability to temporarily hide particular viewlets. You can control the order through-the-web using the *@@manage-viewlets* view described above."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:136
# 89dc012fa3484d28895f622bfd10cc6d
msgid "A more robust and repeatable option, however, is to configure ordering at product installation time using Generic Setup, by adding a *viewlets.xml* to your *profiles/default* directory."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:140
# 762fb3326a2c4b61aa8dfa474b6ec5fd
msgid "For example, to ensure that our new viewlet appeared first in the *plone.abovecontent* manager, we could use a *viewlets.xml* file like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:154
# 204d3698794149799b3425334e95ca1c
msgid "See `this tutorial <http://plone.org/documentation/kb/customizing-main-template-viewlets>`_ for more detail about the syntax of this file."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:157
# 8829642efd44488d8dc60b5d451c7ca8
msgid "Overriding an existing viewlet"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:159
# 1b4fc6f519944c9397c301659a0a6057
msgid "Just like a view, a viewlet with a particular name can be overridden based on the type of context, using the *grok.context()* directive, or a browser layer, using the *grok.layer()* directive."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:163
# b72b25653eb043708292c7ccf1b540cc
msgid "Here is an example using a more-specific context override:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:189
# efab558ce31a429b88164360124f0aa4
msgid "The viewlet name and manager are the same as those used in the original registration, allowing this viewlet to act as an override for the one defined previously."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:192
# abfa5c43ef084e60a9bfc58654324dab
msgid "Here, the viewlet is registered for a more-specific context, using *grok.context()*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:194
# af6e84757cca4bb2b54774204a519ad2
msgid "In this case, there is no page template. Instead, we return an empty string from *render()*. This has the effect of hiding the viewlet for documents providing *IImpotantDocument*(from the examples earlier in the manual, this is a marker interface that can be applied to *IDocument* instances). We could of course have used a template as well, as shown above."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:202
# 58b7d84b6c6c45b68c0bca8f3e5a04b6
msgid "Restricting a viewlet to the canonical view"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:204
# 5cbe26911e574b2ea9646b2e658e787c
msgid "A viewlet may be registered to appear only when a particular type of view is being rendered, using the *grok.view()* directive. You can pass either the view class itself, or an interface it implements, to this directive. One common example of this is the *IViewView* marker interface, which Plone applies to the canonical view (i.e. the one you get when clicking the *View* tab) of a content object."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:211
# 24e0db6b21624761a579c32ce7522cf5
msgid "Here is a refined version of our original viewlet, applied to the canonical view only (template not shown again):"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:219
# 2c66567bcf03422e8e0a4447a1266d36
msgid "this will cause an error if the viewlet manager is not available for the current context and view."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:222
# 7df000cb636644d890953bfe23e45922
msgid "We need to register some viewlets before this would actually display anything. Previously, we used an interface provided by the viewlet manager to register a viewlet for that manager. We could define such an interface and use *grok.implements()* on the viewlet manager class to associate it with the manager class. However, we can also use the viewlet manager class directly:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:239
# 8e9178f329604659ad2cca3b7c8f4554
msgid "It would of course be better to use a page template, but this would be enough for a quick test."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:2
# d5c616c75e22405f88dcfe4062cb7542
msgid "Views"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:4
# 1bc3bbcd9a434c1b888a2833590e3953
msgid "**Browser views with and without templates**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:7
# 7a9bed99e6a349fabaab9df3dcf8a117
msgid "Browser views (or just “views”) are the most common form of display technology in Zope. When you view a web page in Plone, chances are it was rendered by a view\\ :sup:`[1]`\\ ."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:11
# 8b9cf43c292b4c2b9e55241b5f281225
msgid "At the most basic level, a view is a component (in fact, a named multi-adapter) that is looked up during traversal (i.e. when Zope interpreters a URL) and then called by the Zope publisher to obtain a string of HTML to return to the browser. That normally involves a page template, although it is possible to construct the response in code as well. Sometimes, the view may not return anything. One reason may be that it results in a redirect. Furthermore, some views are not designed to be invoked from URL traversal, instead containing utility methods which are looked up from other views or components."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:22
#: ../../reference_manuals/old/archetypes/appendix.rst:3520
# 95e7f303ce9a4270b443cf5bfa615933
# 14f76517dcac46b29e1a2e7f01c5ad4b
msgid "Views with templates"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:24
# a43954090d5944a5a4bc6fc6bfbb793d
msgid "The most common type of view involves a Python class and an associated page template. The Python class is used to register the view. An instance of the class is also available in the template, under the name *view*. This provides a natural home for “display logic” - calculations or preparation of data intended only for the view."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:31
# bc18600ab65947129b431b13bcd1da8f
msgid "As a rule of thumb, try to keep the page template free from complex expressions. Python code is much easier to debug and test."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:34
# c6b4c64a73ae4a4490e4f2491083c084
msgid "Here is an example of a view class which registers a view and provides some helper methods and attributes. It also prepares some variables for the view in the *update()* method, which is called just before the view is rendered. Obviously, we could have omitted these things if they were not necessary, in which case the Python class would serve only as a place to hang the view’s registration."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:41
# 3ead82354ab142eda7a2c783185cfe8e
msgid "This class could go in any Python module. For generic views, *browser.py* is a good choice."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:64
# b9b76e4c740e43559c341f08661688bb
msgid "The automatically associated template is shown below. If the Python module was *browser.py*, this would be found in a directory *browser\\_templates/asmessage.pt* in the same package. The directory name is taken from the module name (with *\\_templates* appended); the filename is taken from the class name (in all lowercase, with a *.pt* extension)."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:111
# f82ac5e21ab24e69b16308657b2362d0
msgid "If we now had a content object providing *IDocument* reachable at *http://example.org/my-document*, we would be able to invoke this view using a URL like *http://example.org/my-document/@@as-message*. See the `Dexterity Developer Manual`_ for more information about how to register default and alternative views for content items."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:119
# df3ee56982a641debcd2fef8dbcadf4a
msgid "The class will grokked as a view because it derives from *grok.View*. This in turn defines a constructor which saves the context content object as *self.context* and the request as *self.request*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:122
# 25deb40aa61f4445b2b8d1c2c3b8a885
msgid "We register the view for a specific type of content object using *grok.context()*, which we have already seen in the context of adapters. Here, we have used the *IDocument* interface from earlier in this manual. If there is a module-level context, this can be omitted."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:127
# 10074920f26340e6b2f83a4bf98dacec
msgid "We give the view a name using *grok.name()*. This corresponds to the path segment in the URL. This directive is optional. The default view name is the name of the class in all lowercase, e.g. *“asmessage”* in this case."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:131
# fbba605cfa2e4074a17df86ef1550d3e
msgid "We specify a permission required to access the view using *grok.require()*. This directive is required. You can pass *“zope2.Public”* to indicate that the view does not require any permissions at all. Other common permissions include *zope2.View*, *cmf.ModifyPortalContent* and *cmf.ManagePortal*. See the `Dexterity Developer Manual`_ for more information about permissions and workflow."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:138
# af3c9163c0364571aa1657d71aeb0a32
msgid "We override the *update()* method, which is called by the base class before the view is rendered. This is a good place to pre-calculate values used in the template and process any request variables (see the section on forms below). Since views are transient objects instantiated on the fly, we can safely store values on the view object itself. Here, we have looked up an *IMessage*adapter (from the adapter examples earlier in this manual) and stored it in *self.message*. This is available in the template as *view/message*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:146
# 83330e2833324da19364e6566c583d1f
msgid "In the *update()* method, we use the *aq\\_inner()* function on *self.context* to avoid possible problems with the view being part of the acquisition chain of *self.context*. If that didn’t make any sense, better not to worry about why this is necessary. Nine times of out ten, you won’t have a problem if you just use *self.context* directly, but since the tenth time is quite hard to debug, it’s a good habit to get into."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:153
# 7c25edfadce1401cabacd9e6b7ae553a
msgid "We have also defined a custom method, which we use in the template via a TAL expression."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:155
# 2b962edee7cd4072879e4d56e372eb80
msgid "In the template, we use the *master* macro of Plone’s *main\\_template* to get the standard Plone look-and-feel, and include a number of standard viewlet managers (see the section on viewlets later in this manual) to provide standard UI elements."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:159
# cf274692f47a404ca311fd910c58f863
msgid "We use a number of TAL expressions to render information from the context (the *IDocument* object) and the view instance (in particular, the *view.message* object we set in the *update()* method). See the `ZPT reference`_ for more details on the TAL syntax."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:165
#: ../../reference_manuals/old/archetypes/appendix.rst:3638
# 7f6f5fc2f72c4b45991cf25ad9fbdab3
# d256f5613bc84e9b879f97664c443e3d
msgid "Views without templates"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:167
# de4d62d278e1464a971e81f8fea27b07
msgid "Sometimes, we do not need a template. In this case, we can override the *render()* method of the *grok.View* base class to return a string, which is then returned to the browser as the response body."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:171
# 655b9d0b3add4939aba3d847e0057cfc
msgid "Below is an example that builds a CSV file of the recipients of the message representation of the context. By setting appropriate response headers, this view ensures that the browser will attempt to download that generated file, rather than display a plain text response."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:221
# 93a5dc0eafe24648a6d9250ebda8a896
msgid "We use the Python *csv* module to build the output string."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:222
# 50bebb0b98d043bc9bbda9d50c963606
msgid "We return a string, which represents the response body."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:223
# d3e80450fa2748d581bb10c0aa629095
msgid "We set the *Content-Type* repsonse header to indicate to the browser that the return value should be opened as a spreadsheet."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:225
# 837c680556ae42ec8f78b583498aea7b
msgid "We set the *Content-Disposition* response header to indicate that the return value should be treated as a separate file rather than opened in the browser, and suggest a filename for the download."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:230
# 64b3517e20e6442d8a5946a50d51f27a
msgid "Implementing simple forms"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:232
# 3c66aee980674ae0b986b9cc119e6ecd
msgid "Dexterity uses the powerful `z3c.form`_ library to provide forms based on schemata defined in Python or through-the-web, including validation and standardised widgets. Sometimes, though, we just want a simple HTML form and a bit of logic to process request parameters. One common way to implement this is with a view that defines a form, which submits back to itself. The form is processed in the *update()* method of the view class."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:240
# 7d7d42178f7b4a27abc0a9a44ee55f4d
msgid "The example below shows a simple form which allows users to subscribe to a content object with an email address. The list of subscribers is stored in an annotation (as described earlier in this manual)."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:283
# 80a6dafd281b4fc9bbdd48f2c0dfc907
msgid "Here is the form template. Assuming the view was put in a module *subscription.py*, the template would be in *subscription\\_templates/subscribe.pt*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:330
# bb992739dbb748a2868c820b76688ea6
msgid "To make the example more realistic, we would obviously also need to write some code to help manage the list of subscribers, allowing users to un-subscribe and so on, as well as some functionality to actually use the list. These could potentially be created as other views in the same module. Their templates would then also go in the *subscription\\_templates* directory."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:339
# d8fa0ccc29894d3a8ad0057251074ba5
msgid "We’ve omitted the *grok.name()* directive, so the view name will be *@@subscribe*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:341
# 33cdd162555c42bf94ca924f69cf284e
msgid "We register the form for a generic interface so that it can be used on any annotatable context."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:343
# a1d96c87589a43cda7a8a8b2c7551a0e
msgid "We use a redirect if the form is successfully submitted. The *grok.View* base class is smart enough to avoid invoking any associated template or overridden *render()* method if a redirect takes place."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:347
# 4825c0da80c5409597d3a7c444ea9e9a
msgid "We use *self.request.form* to inspect the submitted form. This dictionary contains form values submitted via a POST request. For a GET request, use *self.request.get()* to obtain parameters."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:350
# 80c70565949f49089655fc5a72a0dd01
msgid "We use an *OOSet* as an efficient persistent storage of subscription email addresses."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:354
# 3dbc5844deaf456186702f256b12b0d6
msgid "Utility views"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:356
# 5e646529607c40f783e381d45394a0c3
msgid "Not all views are meant to be rendered. Sometimes, a view provides utility methods that may be used from other views. Plone has a few such views in the *plone.app.layout.globals* package:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:360
# 9be0ba9f767f4caa9df9092eaf0ac5d9
msgid "*plone\\_portal\\_state*, which gives access to site-wide information, such as the URL of the navigation root."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:362
# 9a49a1bdff054d569b44e6da1b3bc3b8
msgid "*plone\\_context\\_state*, which gives access to context-specific information, such as an item’s URL or title."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:364
# e952d3d047c44f129d952f6cbd8dc540
msgid "*plone\\_tools*, which gives access to common tools, such as *portal\\_membership* or *portal\\_catalog*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:367
# ce4f9b6906e642ed8604f2e3f664bbb6
msgid "See the *interfaces.py* module in *plone.app.layout.globals* for details. In a template, we would look up these with a TAL expression like:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:378
# df4913c79d42454d99101cc2badfb77e
msgid "In code, we could perform the same lookup like so (note that we need a context object and the request; in a view, we’d normally get these from *self.context* and *self.request*):"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:388
# 35758d3f75424c3a89acdc4f9e4ca398
msgid "A utility view is registered like any other view. If you are using *grok.View* to register one, you should return an empty string from the *render()* method. You also should not use *update()*, since it may not be called for you. Instead, define methods and attributes that can be accessed independently. Here is an example:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:434
# 2734f438294544949cab6cf35f50bec3
msgid "We have implemented an empty *render()* method to satisfy *grok.View*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:436
# 4940104551df4cc6877bacb1db9bf6cd
msgid "We have used `plone.memoize`_ to lazily cache variables. The *@view.memoize* decorator will cache each value for the duration of the request. See *plone.memoize*’s *interfaces.py* for more details."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:439
# 28cccf70f2a347e0817f025d4b914343
msgid "We’re being defensive and returning *None* in the cases where the *IMessage* adapter cannot be looked up."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:443
# 7db37a72f8ec42e9b43db2b10a35723c
msgid "Overriding views"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:445
# 630f1c48ecb848ce861bfcac6d508eb3
msgid "Recall that views are implemented behind the scenes as named multi-adapters. One consequence if this is that it is possible to override a view with a given name by using the more-specific adapter concept. You can:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:450
# bddacc670ef24ad88d27487549f82aa0
msgid "Register a view with the same name as an existing view, specifying a more specific context interface with *grok.context()*"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:452
# 7895507533df4b4b818407676b4194cf
msgid "Register a view with the same name as an existing view, specifying a more specific type of request with *grok.layer()*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:455
# 0dcaffe7b2eb41a798e9a6f7f86839a6
msgid "The term “layer” here relates to the concept of a “browser layer”. Upon traversal, the request may be marked with one or more marker interfaces. In Plone, this normally happens in one of two ways:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:459
# 30a759a44de54bdcb714aac26ebbcf07
msgid "A browser layer can be automatically associated with the currently active Plone theme. This magic is performed using the `plone.theme`_ package."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:462
# 427c9d3b19fc481a84d8a01dd820797c
msgid "One or more browser layers can be activated when a particular product is installed in a Plone site. The `plone.browserlayer`_ package supports this via the *browserlayer.xml* GenericSetup syntax. See the `Dexterity Developer Manual`_ for more information about creating a GenericSetup profile."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:468
# 53da724d7a46475080092cf429e48f82
msgid "For example, the following class (view implementation and template not shown) could be used to override a view for a specific layer:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:490
# 0c14f0abed404e8590aafa4b4df51846
msgid "The *grok.layer()* directive takes an interface as its only argument. This should be a layer marker interface. In this case, we have assumed that we have an *IMessageOverrides* layer."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:493
# 0c797eb3651744138a9514b5da6bf709
msgid "We’ve used the same name and context as the default implementation of the view."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:495
# 7f6206b120f74af2afdfdb41b1638b52
msgid "We’ve also used the same permission. It is possible to change the permission, but in most cases this would just be confusing."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:497
# a1d6227aae0b4456a1ae9e400198ac78
msgid "We will also sometimes use layers not to override an existing view, but to ensure that the view is not available until a package has been installed into a Plone site (in the case of a layer registered with *browserlayer.xml*) or a given theme is active (in the case of a theme-specific layer)."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:504
# 31b5622f4b4f4d14974c0ababc352012
msgid "You can use five.grok to override any browser view, not just those registered with five.grok. For a simpler way to override templates (but not Python logic), you may also want to look into `z3c.jbot`_."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:508
# d56a7db05f7e4046900f4fc007aa47e5
msgid "For more details on this topic, see the `Customization for Developers`_ tutorial."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:511
# 83951bcec1c74532bda27c6dd9e57b69
msgid "[1] As of Plone 3, that’s not entirely true: an older technology known as skin layer templates are used for many of the standard pages, but the principles behind them are the same."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:1073
# cbef438c553f46ca808d67a0dc3ebccb
# d0398ac21f614c0a9cb0f71aad3e30da
msgid "Adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:4
# 1e61a6dc933241bb8c199f084f9c3d1b
msgid "**Adapting from one interface to another with simple adapters and multi-adapters**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:7
# 3dec37ad6eaa4e199a0f033ed06f419a
msgid "Adapters are one of the most powerful concepts of the Zope Component Architecture. They underpin a huge amount of the functionality - and “pluggability” - of Zope and Plone. You will often see documentation (or interfaces) that describe how a customisation can be applied by writing an adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:13
# 781c04bdc6a44cd8a9237613ccfa63a0
msgid "As the name suggests, adapters implement the “adapter” software design pattern. In the simplest terms, an adapter is a component that knows how to use an object providing one interface to implement another interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:17
# 2ab014fdee414735ae5b3585d6e2f8f0
msgid "The usual analogy is that of international power plugs: a European plug has two prongs and a UK plug has three, but for the most part they do the same job and use the same (or nearly the same) voltage. If you have a UK appliance and you are in a country that has European sockets, you can (re-)use your appliance (and avoid buying a new one) by employing an adapter that makes the UK plug fit into the European socket. (If you’ve ever lived in the UK, you’ll understand why “European” is not a superset of “UK” in the preceding paragraph)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:27
# f55223b9bb794ab488fac967342d5c17
msgid "If you prefer duck metaphors, there is an awesome talk by Brandon Craig Rhodes about the concept of an adapter for your viewing pleasure `here <http://plone.org/events/conferences/2008-washington-dc/agenda/using-grok-to-walk-like-a-duck>`_. It even has sound effects."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:32
# 777308f45a9744a48e8d8af33b3150db
msgid "In software terms, it is much the same. Let’s say that we were writing a Twitter-to-email gateway (because Gmail has lots of storage space and it’s important to know when some man in Kuala Lumpur got out of bed). Suppose we have a function that can send an email, expecting an *IMessage* object. Unfortunately, our input is a tweet, conforming to the *ITweet* interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:65
# ae09002821a94b7c914818cdc8beeb92
msgid "What we need is a way to *adapt* our *ITweet* object to an *IMessage*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:67
# f9bb57cf859648cdb99e201d980010a5
msgid "The basic approach is to write a class that *implements* the attributes and methods of *IMessage* by delegating to an *adapted* context object that *provides* the *ITweet* interface. And a simple adapter would be just that: a class that we instantiated directly, being passing a tweet in its constructor, and then behaving like an *IMessage*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:73
# b1b90622c9434097882a153b172a43d2
msgid "Doing this, however, would tie us down to a specific implementation of the adapter. The ZCA gives us a more powerful alternative by maintaining a registry of adapters. We simply ask for an adapter *from* the object we have, *to* the interface we want, and the ZCA searches the registry for the most appropriate one. In code, it looks like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:88
# 765f501e47734889a9b694886eb4d892
msgid "We could call this function with a tweet like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:95
# 86c052532cca4d4aa5acc1c68da7200c
msgid "Here, we have assumed that the incoming object is an *ITweet*, but in reality it could be anything that was *adaptable* to *IMessage.* Suddenly, our *sendAsEmail()* function can be used for Identi.ca messages and those really irritating Facebook status updates as well. All we have to do is register an appropriate adapter from the source type to *IMessage*, and we’re done."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:103
# 58bd75be9a0740e7832e49f765656902
msgid "As you may imagine, this technique is very useful in a content management scenario where you may have any number of different content types and you want to implement some common functionality that works across a number of objects."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:108
# 20e40e4e6338413b95f335b34c52a30a
msgid "The syntax we used here is to “call” the interface. This is the most convenient way to look up a simple (unnamed, non-multi) adapter. If no adapter can be found, the ZCA will raise a *TypeError*. That normally indicates a programming error, so we don’t mind, but if you are unsure whether the adapter has been registered, you can fall back to a default value (e.g. *None*) like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:120
# 28aba716abd34498a0b45874f1ecc5ff
msgid "Registering classes as adapter factories"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:122
# cd5cc1f4d8d440ed97fa2a25634633e6
msgid "Now that we have seen what adapters do and how to look them up, let’s actually write and register one."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:125
# 42e473de75704c4cb2b6224c44b00a31
msgid "When we register adapters, we are actually registering an **adapter****factory.** This is a callable that takes as an argument the object being adapted, and returns an object providing the desired interface. Each time an adapter is looked up, the ZCA calls the adapter factory to obtain a new adapter instance. (Compare this to utilities, which are instantiated once and shared.)"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:132
# 774219a4cfcc429d98c1de0906a8791a
msgid "In most cases, adapter factories are classes implementing a given interface and taking a single parameter in their constructor. (A Python class object is a callable which takes the arguments of the class’ *\\_\\_init\\_\\_()* method and returns an instance of the class). The *grok.Adapter* base class relies on this convention. It even defines the constructor (although you can override it) and stores the adapted object in the variable *self.context*, as is the convention."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:140
# a6cdb857200c40a5bb68c2dde1c3d4a9
msgid "An adapter factory for adapting *ITweet* s to *IMessage* s could thus look like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:170
# 221ded02ccb543a0ad1f7f7faae8a51b
msgid "Assuming the package is being grokked, this is all it takes to register an adapter with *five.grok*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:175
# 646bfa087d794cc5a50a6590668e84a2
msgid "The adapted object is available as *self.context* when using the default constructor."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:177
# 3ec71a766eec4ba3a31a26310e56334d
msgid "If you are writing your own constructor, use a signature like *\"**def \\_\\_init\\_\\_(self, context):*\"** and store the *context* argument as *self.context*. This is not strictly necessary, but it is an almost universal convention. Since the constructor is called when the adapter is looked up, it is best to avoid any resource-intensive operations there. If an error is raised in the constructor, the adaptation will fail with a “could not adapt” *TypeError*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:184
# d0bfd6ea4c884bb79047e77733592efd
msgid "The *grok.provides()* directive indicates the interface that will be provided by the adapter. If the adapter factory implements a single interface (via *grok.implements()* or inherited from a base class), this is optional."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:188
# c782ce52b0d04fd6b71bcb586257ac86
msgid "The *grok.context()* directive indicates what is being adapted. This is usually an interface, but it can also be a class, in which case the adapter is specific to instances of that class (or a subclass). This directive can sometimes be omitted if there is an unambiguous module-level context. This is an instance providing the *IContext* interface from *grokcore.component.interfaces*, and will typically be something like a content object. If in doubt, it is always safest to provide an explicit context using the *grok.context()* directive."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:198
# 74b5dee5fb974f3fa7cf6d7d1336e8a9
msgid "Modelling aspects as adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:200
# e0617a549d2e4085b5ccdce926fce5b9
msgid "In the example above, we used an adapter to make an object providing one interface conform to another. In this case, the objects were similar in purpose, they just happened to have incompatible interfaces. However, adapters are also frequently used in situations where we are trying to model different aspects of an object as independent components, without having to support every possible feature in a single class."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:207
# 9344890488284efc9051d18f5249a27d
msgid "Consider our message interface again. Let’s say that we wanted to be able to email any content object as a message. Is our content object a message? Not at all, but we can provide an adapter to the *IMessage* interface which models the “messaging” aspect of the content object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:212
# ce277c9694c84bdab5143130e5861516
msgid "Such an adapter may look something like this (*IDocument*and implementation not shown, but assume it supports the properties *title*and *text*):"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:239
# ade38a3dd8144aec8cc31b21eeeecd0c
msgid "This is relatively straightforward, and we could imagine having a number of such adapters to represent any number of different content types as messages."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:243
# 9e071679ab1a4da0bdfabfbde2fd46d0
msgid "Now consider the alternatives:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:245
# 9e9657ccddb54917978e901fee6fc8ce
msgid "we could write a bespoke email-sending function for each type of content and use if-statements or lookup tables to find the correct one; or"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:248
# d247e324f32c441b81e980609792081d
msgid "we could demand that every content type that supported being sent as an email inherited from a mix-in class that provided the required properties."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:252
# e7262d88a30d4d8c825c80cc8b2cb93f
msgid "The latter is the usual approach in the world of object oriented programming, and is fine for small, closed systems. In an open-ended system such as Plone, however, we don’t always have the option of mixing new functionality into old code, and classes with “fat” interfaces can become unwieldy and difficult to work with."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:259
# 68540690dc054da1a8dc179d30cb5fac
msgid "Customisation with more-specific adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:261
# ae4275bc3032419fa8eb69b6abaee534
msgid "So far, we have limited ourselves to having only one adapter per type of context. The ZCA allows us to have multiple possible adapters, leaving it to pick the most appropriate one. Here, “most appropriate” really means “most specific”, according to the following rules:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:266
# 8b9e853109ff41c68425b3bd3706658c
msgid "An adapter registered for a class is more specific than an adapter registered for an interface"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:268
# fdfe7f6859a44ab1bba9312c874bea72
msgid "An adapter registered for an interface directly provided by an instance is more specific than an adapter registered for an interface implemented by that object’s class"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:271
# 49224365c3ff40008e771289b7210f52
msgid "An adapter registered for an interface listed earlier in the *implements()* directive is more specific than an adapter registered for an interface listed later"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:274
# b089eedda3594388b02d5dc4d1ff0081
msgid "An adapter registered for an interface implemented by a given class is more specific than an adapter registered for an interface implemented by a base class"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:277
# 870d6abd3ee4471f8abb3c96163cb242
msgid "An adapter registered for a given interface provided by an object is more specific than an adapter registered for a base-interface of that interface"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:280
# 4376eb84a6974f5abab9df2a19525000
msgid "In the case of a multi-adapter (see below), the specificity of the adapter to the first adapted object is more important than the specificity to subsequent adapted objects"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:284
# c512602489184b909023344474f6fb11
msgid "These rules are known as “interface resolution order” and are basically equivalent to the “method resolution order” used to determine which method takes precedence in the case of multiple inheritance. Most of the time, this works as you would expect, so you do not need to worry too much about the detail of the rules."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:290
# 39aec18253f64dfdba5ca81b1c462701
msgid "The power of the “more-specific adapter” concept is that we can create a generic adapter for a generic interface, and then provide an override for a more specific interface. Let’s say that we had the following hierarchy of interfaces, implemented by different types of content objects (not shown):"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:319
# 7c78d0e347904a5ea888f99e8f497859
msgid "We could now register a generic adapter from *IContent* to *IMessage*, which would be usable for any content item providing this interface, including file content, or some future type of content we haven’t even thought of yet. Then, we could register a *more specific* adapter for IDocument, like the one we saw above, to provide more specific behaviour for the document type."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:326
# 049d5371a7fb4e038af3649f4d223b45
msgid "But why stop there? Perhaps we want to be able to mark certain documents as important and have the message subject change? One way to do that is with a marker interface on the instance:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:336
# 6895b9bb3a03474fbb53842d3e282e43
msgid "We would apply this selectively to instances using *alsoProvides()* (perhaps in an event handler):"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:344
# ea254c7f477c4a30bb911e7622ca4288
msgid "We could then register an adapter for this. We can even re-use our previous adapter factory by subclassing it and overriding only the properties or methods we care about:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:358
# 6c56d554230b4c33ba0412f885ef04cf
msgid "Note: This factory class is grokked as an adapter because it derives from *DocumentMessage* which in turn derives from *grok.Adapter*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:362
# 67910a753fc84d3a9043b7b0059e3b8f
msgid "If you have a class that derives from one of the special Grok base classes (like *grok.Adapter* or *grok.GlobalUtility*), but you do not want it to be grokked, e.g. because it is used only as a base class for other classes, you can use the *grok.baseclass()* directive with no arguments to disable grokking."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:369
# 161d0775ba284274a593751e0f507e1c
msgid "Using a function as an adapter factory"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:371
# 25daca6b5d6348188a408c94173a3b40
msgid "Remember we said that an adapter factory is a “callable” that returns an object providing the appropriate interface? Classes are one type of callable, but the most common callable, of course, is a function. It can be useful to register a function as an adapter factory in situations when you are not actually (or always) instantiating a class to provide the adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:378
# 3b867c231b35430f84b2a5c78f842593
msgid "As an example, let’s say that we wanted to keep a cache of the adapter instances, perhaps because they are resource intensive. In this case, we may either create a new adapter object, or re-use an existing one (in general, we wouldn’t do this of course, due to thread safety and state management issues, but it’s a useful example). We can’t do that in the *\\_\\_init\\_\\_()* method of a class, because that is not called until after the class has been instantiated. Instead, we could use a function as the adapter factory:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:402
# 804c5fc656294232957624afde6062bf
msgid "The *@implementer* decorator specifies the interface(s) which will be provided by the returned objects. In the case of an adapter factory, you should pass a single interface, although the decorator can take multiple arguments."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:406
# 7438cdac3dd14f77bbac8b6a57f14c24
msgid "The *@adapter* decorator actually registers the adapter. For a single adapter, pass a single interface. For a multi-adapter (see below), you can pass multiple arguments. For a named adapter (see below) you can pass a *name=u“name”* keyword argument."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:412
# 2a708e655f254a9291a67cc1570c2d55
msgid "Using an instance as an adapter factory"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:414
# 8d610a1befb84297bbd8293ebac6458c
msgid "In addition to classes and functions, an instance of a class that has a *\\_\\_call\\_\\_()* method may be used as an adapter factory callable. To register such an object as an adapter factory, we can’t use the *grok.Adapter* base class (since that would register the *class* as the adapter factory and we want to register the *object)* or the *@adapter* decorator. Instead, we use the *global\\_adapter()* function."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:421
# 2fe4107b5d2e4811b6ed43abe01609d2
msgid "This is much less common, but can be useful in certain circumstances. Here is an example from the `z3c.form`_ library:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:440
# 40eb868740c74447b6f0fbf3fcf2d4f9
msgid "The *StaticWidgetAttribute()* function returns a callable object that is intended to be registered as an adapter factory. The *global\\_adapter()* function takes care of this for us at “grok time”. In this case, we have passed the instance and a name (see named adapters, below) because the object provides a single interface and has an “adapts” declaration. If this was not the case, we could use the full syntax:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:451
# 8ebef501aa084cd2b04951b4ada80dff
msgid "Note: The adapted interfaces are passed as a tuple to support multi-adapters (see below)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:455
# 0632abf1809f4ca1abef25812ee378d8
msgid "Named adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:457
# a282e046efbd4a088d4b795346aeaf6f
msgid "As we have seen above, adapters - like utilities - can be registered with a name:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:460
# 0da0be7788c04d16a76ca8cbc859c8c0
msgid "By using the *grok.name()* directive in the class body of an adapter factory deriving from *grok.Adapter*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:462
# a3c1d54547dc4b7c93c3a769e71aa437
msgid "By using the *name*keyword argument to the *@adapter* function decorator"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:464
# bdbe2762d21e4e6489131f3ddf08c2c2
msgid "By using the *name*argument to the *global\\_adapter()* function"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:466
# f5051dbd10d34ee6aa9ed0ca7b2d51f2
msgid "Named adapters are a lot less common than named utilities, but can be useful in a few circumstances:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:469
# 64c14ea5bc42435ebf72caaefbb8b0a4
msgid "You want the user to choose among a number of different implementations at runtime. In this case, you could translate the user’s input (or some other external runtime state) to the name of an adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:473
# 6866ac155e2e44a9bea0f5f128f83ef5
msgid "You want to allow third-party packages to plug in any number of adapters, which you will iterate over and use as appropriate, but you also want to allow an individual named adapter to be overridden for a more specific interface (see also subscription adapters below)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:477
# e219a01f290240b8b26102d26af1a82f
msgid "Most browser components (views, viewlets, resource directories) are in fact implemented as named (multi-)adapters. For a view, the name is the path segment that appears in the URL."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:481
# f2be4e2781524c67aee8509a75f59527
msgid "If you want to get a simple (non-multi) adapter by name, use the *getAdapter()* function:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:489
# ae9227c08d474d8ab336f4db74d503ab
msgid "This will raise a *ComponentLookupError* if no adapter can be found. There is also a *queryAdapter()* function which returns *None* as a fallback instead."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:493
# d70fdf30179c4cb7bdfa6797a22fb9b1
msgid "If you want to iterate over all the named adapters that provide a given interface, you can do:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:502
# 8baef10e9da44329a79d184a73b9f72f
msgid "Note that this function takes a tuple of objects as the context, because it is also used for multi-adapters."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:506
# ee558450856344e6a3ce1847aa00a985
msgid "Multi-adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:508
# 8f37841fcac243f78970062c2aab7201
msgid "So far, our adapters have all adapted a single context. A multi-adapter is an adapter that adapts more than one thing. There are a few reasons to want to do this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:512
# fd69aed65dc94418b819ff5bda7612d3
msgid "If you have written an adapter and you find that you need to pass an object to (almost) every one of its methods, you could use a multi-adapter to allow the adapter to be initialised with more than one object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:516
# 42bf99343b9d4b98b0c9ed29576fa464
msgid "The rules of “more specific” adapters applies to each adapted context of multi-adapters. Thus, if you want to allow a component to be swapped out (customised) along multiple dimensions, you could look it up as a multi-adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:521
# 70b54e8f91414bf89fdc9d4318a7874d
msgid "Multi-adapters are frequently used in browser components (such as views and viewlets), which adapt a context object and the request. This allows multiple views to be registered with the same name, with different implementations based on the type of context (i.e. the \"*index*\" view for an *IDocument* is different to the view of an *IFile*) or the type of request (i.e. an HTTP request results in a different response to an XML-RPC request). Furthermore, the request may be marked with marker interfaces (known as “browser layers”) upon traversal, allowing you to register a different view depending on which layer is in effect."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:531
# cd2f34c487e248fc89e634d506843e64
msgid "Browser components are registered using specific grokkers which also take care of things like security and template binding. We will cover those later. For a simple example, however, consider the following:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:561
# 039cbcd9e1504081ad2ddad8def20fcd
msgid "We could imagine looking up a multi-adapter like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:570
# 8d5cb4c6ab304f0ead773a7cc3b72cfb
msgid "This will raise a *ComponentLookupError* if no suitable adapter can be found. There is also *queryMultiAdapter()*, which will return *None* as a fallback."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:574
# c83ec624a5d14454bbfa141db6da9f5e
msgid "Like other adapters, a multi-adapter is registered with a callable that acts as the adapter factory. The callable must take one argument for each adapted object (two, in this case). We can register multi-adapters with the *@adapter* function decorator or the *grok.global\\_adapter()* function, as indicated above. More commonly, however, we will use the *grok.MultiAdapter* base class, like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:609
# 3c932ff6bcfe45579bac7b4c0c61f64f
msgid "Here, we have registered two multi-adapters, the second more specific than the first. Notice how we have to define a constructor: the base class can’t do it for us, since it doesn’t know how many things we will adapt or what we may want to call the variables where they are stored."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:615
# d9194607ab264ea684804de0c5c9aae2
msgid "Subscription adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:617
# 94f0c47c38b3469a8c40a8642dcec54b
msgid "There is one final type of adapter known as a *subscription adapter*. These can be used when you always want to look up and iterate over *all* available adapters to a specific interface, as opposed to finding the most specific one. However, it is not possible to override or disable a subscription adapter without removing its registration directly, so most people prefer to use named adapters instead, which allow an adapter with a given name to be overridden for a more specific interface. Like event handlers (which are in fact implemented using subscription adapters), subscription adapters are registered with the *<subscriber />* ZCML directive. There is currently no way to register one using Grok conventions."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:1662
# 5c7f99ea6cb04ec3a3eea1c5f6773da7
# 93d7897931524cfeb1f8cc38f2b58179
msgid "Annotations"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:4
# 7246c090d0d645ce9bb1db51f122a351
msgid "**Using the zope.annotation package**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:7
# 50d148a9be344d6eb0f68a5e81a0ea9c
msgid "Annotations are a convenient feature used throughout Zope and Plone. They also serve as a useful real-world example of adapters."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:10
# 7784c20c92384c6cb66d558466b03cbe
msgid "The `zope.annotation`_ package defines an interface *IAnnotations*. By adapting an object (often a content item) to this interface, you can get and set values using a dict-like API. These values are then persisted against the context object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:15
# dc65a5df83c548898df7f69a8f628779
msgid "Remember that we often use adapters to model different aspects of an object. A content object may have a basic schema - its content data model - but there may be any number of adapters providing functionality which in turn may need to persist other information. The annotations API provides a simple and consistent storage abstraction for such information."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:22
# 4c725a82286c479aa7e546bf874ddcc7
msgid "The basic syntax for using an annotation is:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:32
# 7b976b5c9ec747249a3f8152aa0ca8b4
msgid "Since annotations can be used by any number of packages, we tend to use dotted names as keys, to reduce the risk of colissions when two packages are writing annotations onto the same object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:35
# a2862c05c50e4fb6a73d47d429d13466
msgid "The values stored in annotation must be persitable. Primitives are fine, as are objects deriving from *persistence.Persistent*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:37
# fce5943b29384ddcb0ae006921cfe412
msgid "The *IAnnotations*interface promises all the usual methods of a Python dictionary. For example, you can use *setdefault()* to set a default value if you are not sure that it has been created yet."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:41
# 26e5ae97ea944b9bab4b21f3a33f783d
msgid "But where are annotations stored? As users of the *IAnnotations* interface we don’t care: that logic is implemented by the *IAnnotations* adapter. We could implement our own such adapter, but we normally don’t: the *zope.annotation* package comes with an adapter providing *IAnnotations* and adapting a marker interface *IAttributeAnnotations*. This stores the values in an efficient, persistent *BTree* structure. (That BTree happens to be stored as an attribute of the content object called *\\_\\_annotations\\_\\_*, although we don’t ever access that directly.)"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:51
# 5d5940a0d5d9459984c6cc63551897db
msgid "Most content objects and the request object in Zope and Plone provide this marker interface, making them “annotatable”. If you are working on a simpler object, you can declare support for *IAttributeAnnotations* with a directive like:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:67
# 370a2a38126e4ac09b5abf07d48a6e5e
msgid "Let’s now show a more complete example of using annotations. Recall the following interface, which we used to implement a multi-adapter in the previous section:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:81
# e5452d883df54d39b8c0637fe09f466e
msgid "Let’s say that we wanted to count the number of messages sent against each each content object. Here is an implementation of the multi-adapter that uses annotations to do that:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:113
# faf0f6d5977348e2af821ab8de12780b
msgid "This code is defensive in that we gracefully handle the case where the context is not annotatable. When it is, we get the current counter (if set), increment it, and then save it back again, before printing the value."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:2
# 645f5bc01abf45f7aa472f5451bf1c76
msgid "Events"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:4
# 19825641cd8544f0888ff79cf1fca001
msgid "**Registering event handlers and sending events**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:6
# e74ea3294e184a838bd5d2dc8b4871ae
msgid "Zope provides an events system. Various components (e.g the standard add and edit forms) *notify* any number of *event subscribers* (also known as *event handlers*) of a particular event. The subscribers are then executed."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:11
#: ../../reference_manuals/old/buildout/thirdparty.rst:85
# e1c716b351c247889b98f30fabd1a82f
# 408c704873cd4e55996f66537a7667e9
msgid "Note that:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:13
# 5eb9c3d1b1eb4ff085a527dc2fd96ccb
msgid "Event subscribers are executed in arbitrary order"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:14
# 165c751065864afba5c10b01aa18918d
msgid "Events are executed *synchronously*: The code which notifies of the event will block until all event handlers have returned"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:18
# 90e24c66f1f04b778f33132f4ff74f69
msgid "Each type of event is described by an interface. The implementation of this interface will typically carry some information about the event, which may be useful to event subscribers."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:22
# 4186c64eb2af469b88d796ae4e2eb528
msgid "Some events are known as **object events**. These have an *object* attribute, giving access to the (content) object that the event relates to. Object events allow event handlers to be registered for a specific type of object as well as a specific type of event."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:27
# 3f48da3dc724423c997d5a53e6d82343
msgid "Some of the most commonly used event types in Plone are shown below. They are all object events (i.e. they derive from *zope.component.interfaces.IObjectEvent)*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:31
# 2ea93183ea664feaa06fcf9fd4a2864f
msgid "*zope.lifecycleevent.interfaces.IObjectCreatedEvent*, fired by the standard add form just after an object has been created, but before it has been added on the container. Note that it is often easier to write a handler for *IObjectAddedEvent* (see below), because at this point the object has a proper acquisition context. This makes it possible to look up tools using *getToolByName()*, for example."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:37
# 82f4cf1c763447579f9862dc37b0e8d6
msgid "*zope.lifecycleevent.interfaces.IObjectModifiedEvent*, fired by the standard edit form when an object has been modified"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:39
# 52660175c22c44bbb1fbfbb566143dd2
msgid "*zope.lifecycleevent.interfaces.IObjectAddedEvent*, fired when an object has been added to its container. The container is available as the *newParent* attribute, and the name the new item holds in the container is available as *newName*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:43
# e78ee871b35d499e800ef4740a02b85c
msgid "*zope.lifecycleevent.interfaces.IObjectRemovedEvent*, fired when an object has been removed from its container. The container is available as the *oldParent* attribute, and the name the item held in the container is available as *oldName*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:47
# b81faa11d8a54a6f8983830f813fa983
msgid "*zope.lifecycleevent.interfaces.IObjectMovedEvent*, fired when an object is added to, removed from, renamed in, or moved between containers. This event is a super-type of *IObjectAddedEvent* and*IObjectRemovedEvent*, shown above, so an event handler registered for this interface will be invoked for the ‘added’ and ‘removed’ cases as well. When an object is moved or renamed, all of *oldParent*, *newParent*, *oldName* and *newName* will be set."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:54
# 59454818127c499280a55bf3e057be14
msgid "*Products.CMFCore.interfaces.IActionSucceededEvent*, fired when a workflow event has completed. The *workflow* attribute holds the workflow instance involved, and the *action* attribute holds the action (transition) invoked."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:59
# a9b76c83236f487e8a992e4640b17557
msgid "Of course, you can create your own event types as well. However, for standard CRUD type operations (create, read, update, delete), it is best to use the standard event types with a custom object type rather than creating an object-specific event type."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:65
# eebc1f22a7aa44bb842b54392ae5bf3b
msgid "Registering an event subscriber"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:67
# 532d4e10872a428f8727a8e54a05b81b
msgid "Event subscribers can be registered using the *subscribe()* decorator. This takes at least one argument: the type (interface) of event to subscribe to. For object events, it can take two parameters: the type of object, and the type of event. This allows us to limit an event handler to a particular type of context object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:73
# c1e3ca4114b6498584056a49747f442c
msgid "Here is an example, printing a message every time a CMF content object is added to a folder:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:87
# e250104d3a8b4033892fdbce6b813ac1
msgid "Provided the module is grokked, this is all we have to do to register a new event subscriber. Although this example is trivial, there is no limit to what you can do within an event handler."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:93
# 507b19d7ae3e4586bd25157bc0d0b46c
msgid "The two arguments to the function correspond to the two arguments to the *subscribe()* decorator. For object events, the first is the object that the event relates to (which will be the same as *event.object* in most cases). The second is the event instance."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:97
# ab479df6dada4aa4a0fd6776a6d31070
msgid "Obviously, we could use a more specific content type interface if we wanted to be more specific."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:99
# f216db1b25a2426384e1cd8c0729c149
msgid "Unlike adapters, you cannot override an event subscriber by using a more specific interface. Each and every applicable event subscriber will be executed when an event is fired."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:104
# 6ce9c7788ecb4ff285d59c2c43e05b00
msgid "Creating a custom event type"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:106
# 448f327853bc49c484120f0d43cc4d28
msgid "Creating a new type of event is not much more difficult. Here is an example that involves the sample message broadcasting service we saw in the previous sections:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:110
# 03309188921a4c07a61e828bb1f4b2c7
msgid "First, we define an object event type. This would typically be in an *interfaces.py* module:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:123
# bfe25ee689104343a65ccf41a196e130
msgid "The event implementation itself is simple too. The *object* attribute is mandated by the *IObjectEvent* interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:139
# 5fd811c3f3e443f3be21bc45fa99cb3b
msgid "Here is another implementation of the messaging service, this time broadcasting an event:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:176
# fc71d903919848da80818bac263210a5
msgid "We use the *notify()* function from the *zope.event* package to broadcast the event."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:178
# c34104058b04481db9be094534b9cf7b
msgid "The call to *notify()* will not return until every event subscriber has been executed."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:181
# 829748d18ac9412a8de6c19d45795fa6
msgid "As before, we could now register an event subscriber for this event. Since it is an object event, we can use the two-argument version of the *subscribe* decorator as shown above. However, we could also have a more general event handler that executes for any type of object. Here is one that simply logs that a message has been sent:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:2
# e90a7c6564844468966a02a3175dfc54
msgid "Further details"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:4
# ae97e2a7cf0d4a6ea75c071c624fadba
msgid "**Where to find more information about the core components**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:6
# 71158aa8e8104dd38437671d26c895e4
msgid "In this section, we have described how to use *five.grok* to configure standard Zope Component Architecture components. In fact, the functionality for this can be found in the `grokcore.component`_ package, and does not strictly require the use of *five.grok*: you could use *grokcore.component* directly. This may be useful if you are trying to create a package that should work with other frameworks using the Zope Toolkit / Zope 3, such as Grok itself."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:14
# d2436b7021f74cfa9c7cc0206a367906
msgid "grokcore.component contains a few other grokkers and helper functions which we have not described here. You are encouraged to read its `documentation`_ for details."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:18
# 9ac53cc912c5467ebd7a9d06b119d918
msgid "If you need to introspect the interfaces of your components, you should also take a look at the *zope.interface* API, which for example provides functions for enumerating the interfaces implemented by a class or provided by an object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:23
# d2e8eb7b804d41ac8bc08518a1671ad4
msgid "If you need to introspect the component architecture itself, look up the *zope.component* API, where you will find methods for enumerating, querying, registering and removing adapters, utilities and event subscribers."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:28
# 374e2f1e20f6459c9b8774a0f09faf23
msgid "Both of these packages have interfaces containing copious internal documentation."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/index.rst:2
# 56abf728c9fd40689ae7d9170d5b874b
msgid "Core components"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/index.rst:4
# c6ea5781dd014749bb8d702084bc7f31
msgid "**Using five.grok to configure adapters, utilities and event subscribers**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:953
# 593d1303e5b04af5bfc3fb672d9c658e
# 2ebeb8b52612403ca8151f0e2712ccab
msgid "Interfaces"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:4
# eaf035e15bbc402d9ce17b2b5094e5f4
msgid "**Describing functionality with interfaces**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:6
# e20ef4974f374b68b7c6d0281d06576a
msgid "There is nothing Grok-specific about interfaces, but they are important because they used in various directives for describing or registering components."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:10
# 85a405f58b8e4fa19a36905b05004dca
msgid "Zope interfaces are implemented in the *zope.interface* package. In addition, *zope.schema* contains various classes that can be used to describe the type of attributes on an interface (the `Dexterity developer manual`_ contains a reference)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:15
# f0b91e9e7a674be2b39b2e7d1fb92fb3
msgid "Interfaces are typically found in an *interfaces.py* module, although you will sometimes see schema interfaces kept in the same module as other code (e.g. content classes, event handlers) related to the content type described by that schema."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:20
# 6a2adc89ae474604a734fbf300518b9b
msgid "The simplest interface is a **marker** interface. This is used as a flag which can either be applied or not to a particular object. A marker interface may look like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:32
# d93d3327a947412588037ec8988f162e
msgid "Notice how we have a docstring on the interface. Interfaces are useful as documentation, and you should endeavour to describe their purpose and behaviour in docstrings on the interface and on any attributes or methods (see below)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:37
# 19f5a8610522495885dd521a9da890c4
msgid "Also note that although an interface is created using the *class*keyword, they are in fact instances of type *InterfaceClass*. For the most part, you don’t need to worry about this."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:41
# aaba7382337540b8a9630f5eeb6e1a2e
msgid "Interfaces are said to be **implemented** by classes, in which case instances of that class is said to **provide** the interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:53
# 7103e51dd3c34e6dac3390e79a20de32
msgid "Note: The *grok.implements()* directive is just a convenience alias for the *implements()* directive from *zope.interface*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:56
# 5f9b2a64f1744c9f9cf67a26ac5becbf
msgid "Adherence to a given interface can be tested like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:66
# e730215bbe5249598ccec61f455686d6
msgid "Again, note that we perform an “implements” check against the class and a “provides” check against an instance."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:69
# 81b0de56105c4e32a2774a40c6cd7539
msgid "It is also possible to apply an interface directly to an instance. This is mostly relevant to marker interfaces, since other interfaces promise attributes and methods that you usually cannot guarantee that the object will provide."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:79
# 704b7a486bcd4d4e9414bdee9bd8dba3
msgid "Let’s now take a look at a non-marker interface. This one promises several attributes and methods. Typing and constraints for attributes are described by *zope.schema* fields."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:102
# a110bb8495f94c9fafb463dbb9b3fb31
msgid "Again notice the use of docstrings for methods and titles and descriptions for fields. Also notice how the method does not take the *self* parameter. If the implementation is a class (as it is likely to be), its methods will of course take the *self* parameter, but as far as the user of the interface is concerned, this is an implementation detail, and so does not belong in the interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:109
# 6f6ddb504e2a49639900b08abc2c895c
msgid "Here is a class implementing this interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:123
# ea5708fa9aff4fa19a799463eb62fcf0
msgid "Like classes, interfaces may inherit one another. The derived interface inherits all the attributes and methods of the parent interface. Objects providing the derived interface must provide all attributes and methods of both interfaces."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:148
# b2d317a18a6341da8718587a6f574aa3
msgid "A class may implement more than one interface. In addition, a class automatically implements all interfaces from its base classes (unless you use the *implementsOnly()* directive from *zope.interface*)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:165
# 98458db798ca4a2aac309a3813600159
msgid "Here, we have implemented *text* as a property delegating to the *body* field from the *IMessage* interface. We inherited the implementation of *body* from the *Message*base class, from which we have also indicated the *implements()* specification for the *IMessage* interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:184
# a4c17ebc350d445a9b32a26c982eb6c7
msgid "There are a few other things you can do with interfaces, such as specifying interfaces provided by modules (used to specify an API for that module) or classes (e.g. in the case of class objects acting as factories), looping through the interfaces provided by an instance, or adding or removing marker interfaces. None of these is terribly common. See the documentation for `zope.interface`_ (including its interfaces) for details."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:1422
# 1597019aac464232aed210d97d761dc6
# acd2ef60123347b8a4e3d310ad40c772
msgid "Utilities"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:4
# 5c853e8c6cb24e6ab3ce5ef368c9d568
msgid "**Singletons and registries with utilities**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:6
# 840844aaf01e43a9a4b4a4cfe1a2861f
msgid "Utilities are simple components which may be looked up by interface and optionally name. They are used for two purposes:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:9
# 68dd17c985c84ef7aae8e48634122930
msgid "To implement a “singleton” - an object which is created in memory once and shared by all clients."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:11
# da530d2cbffd412493e030b67d834dd3
msgid "To implement a registry of objects all providing the same interface. In this case, each object is a named utility."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:14
# 52813cc078fb4681bc52871b42079500
msgid "As with all components, utilities can be local or global. A local utility is installed as a persistent object in a “local component site” (such as a Plone site). Sometimes, we use local utilities as singletons storing persistent objects, although there are better solutions (such as `plone.app.registry`_ / `plone.registry`_) for that. More commonly, a local utility is simply used to override a global utility with of same interface (and optionally name)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:22
# f2f882a796764dd680435a8a61ace567
msgid "In Plone, local components can be installed using the *componentregistry.xml* GenericSetup import step. See the `GenericSetup documentation`_ for more details. The techniques mentioned in this manual pertain to global utilities only."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:27
# 0a027547776a4e1184299479330fd4ec
msgid "Global utilities can be registered in one of two ways using *five.grok*:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:29
# f4b3833514884ab0aedde48f281ca997
msgid "By writing a class deriving from *GlobalUtility*. The class will be used as a utility factory. It will be instantiated once (its constructor must be callable with no arguments), on startup, and registered according to the directives used on the class."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:33
# 4cab849d2f194b43b2acf2b04af89d0a
msgid "By calling the *global\\_utility()* function on an already-instantiated object. This allows you to configure the instance in code before registering it."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:37
# 6d9fca32c38249a8972058ffd05956af
msgid "To illustate both of these techniques, we will create two interfaces:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:65
# d51337ca4cfe427c9a80c9971ad98d91
msgid "Before we implement these utilities, let’s consider how we may use these two interfaces from client code which does not care about their implementation."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:69
# 3bc73ccd3842418d8e42d1a595d9c1e9
msgid "To look up the currently preferred language, we could do:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:79
# 4315303c668c40a4bc63f13220bab6a4
msgid "Languages are looked up as named utilities. Thus, we could get a language like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:89
# 95fc5d2c16794dbab5822feed3cd2d3d
msgid "*getUtility()* will return the default utility for the given interface if no name is passed (in fact, the default utility has a name of *u“”*, i.e. an empty string)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:92
# a3f354b8c8c44335b36d34a174130694
msgid "If no utility can be found, a *ComponentLookupError* will be raised."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:93
# a304e136bc0940ab9ec3519ad482b07a
msgid "We can use *queryUtility()* instead to fall back on another value (*None*, by default) instead of raising an error if the utility is not found."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:96
# 9d25b6bd2ed3427e88943227778ce0cd
msgid "Each time we call *getUtility()* with the same arguments, we get the same object back. This may lead to thread-safety issues in multi-threaded environments (such as Zope), so be careful if your utility can be modified after startup."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:101
# 91af258f078949bdbd6a5a0b04005f69
msgid "Let’s now show how these utilities could be registered. First, we will create a class to encapsulate languages, instantiate a objects of this class, and register each as a named utility providing the *ILanguage* interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:126
# e524e5496e3b46c1af6ce2d214d56c80
msgid "The *provides* argument can be omitted if (as is the case here) the object provides exactly one interface. Otherwise, it is required."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:128
# 6b11bf9a71d74e6cafbd0d0520b4fede
msgid "Name *name*parameter defaults to *u“”* and so can be omitted if you are registered an unnamed utility."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:130
# 6fcb9ff79f9647968166cd9a742242c5
msgid "The *direct=True* argument indicates that the utility instance is being passed as the first argument. The argument should be *False* if a class or factory is being passed."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:134
# 9d300cd3534245b48a167233467ab97e
msgid "Next, we will define the preferred language utility. This time, we will create a utility class and ask *five.grok* to register an instance of it for us."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:158
# abdc24ae6f8e4a5aa851b6dd7de8c9d7
msgid "The class is recognised as a factory for a global utility from its base class."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:160
# 4ee3f63d02cf4d0097eda6df9aaa0fa1
msgid "The class does not have a constructor. If it did, it would need to be callable with no arguments."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:162
# 22a9b6b8228945f9a97620ba8aba57b3
msgid "The utility’s interface is given with the *grok.provides()* directive. We could also have used *grok.implements()*, but bear in mind that the class can implement multiple interfaces whilst a utility can provide only one. *grok.provides()* can only be used once per class and can only be passed a single interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:167
# 28f5f3fe920441639a101873200a1d2f
msgid "Here, we are registering an unnamed utility. We could have used the *grok.name()* directive to give the utility a name."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:170
# 289f2df3c0c54a809a3e89592419c5da
msgid "Provided the package is grokked, this is all it takes to register one unnamed and three named global utilities with *five.grok*."
msgstr ""

#: ../../reference_manuals/active/five-grok/index.rst:2
# 1e63ba3217784132b16635c3e7e3206a
msgid "Zope Component Architecture basics with five.grok"
msgstr ""

#: ../../reference_manuals/active/five-grok/index.rst:4
# 5b287da5a1ef462490f6c4383cbfa2c6
msgid "**This manual describes the basics of the Zope Component Architecture using five.grok, which brings convention-over-configuration to Zope 2 and Plone.**"
msgstr ""

#: ../../reference_manuals/active/five-grok/index.rst:7
# 1424752752d44d3d9b5c0133c97c74c5
msgid "It will be useful to developers who want to learn how to configure Zope components using grok-style configuration instead of ZCML."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:2
# 68ef015debb84572bd525f5ee106a308
msgid "Other five.grok functionality"
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:4
# 275d55dd01b54233bb538a43b9f4f34a
msgid "**What we haven't covered**"
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:6
# d015195488dd41f79846d6210d40ec36
msgid "Grok and *five.grok* provide some functionality we deliberately haven’t discussed in this manual. This includes:"
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:9
# cdb30ffc56e4474cb7bfe51bc81b651e
msgid "Annotation factories. Annotations are very useful, but the pattern of using a persistent object as the adapter implementation instead of just using the *IAnnotations* from *zope.annotation* and its dict-like API to store primitives can lead to problems when code is moved or uninstalled. See `grokcore.annotation`_ for an example of this functionality."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:15
# f565eef12ad947c5847084a121950c4e
msgid "Defining permissions with *grok.Permission*. We prefer to define permissions in configuration files, rather than code. See `grokcore.security`_ if you hate XML so much that you don’t mind using Python as a configuration language. See the `Dexterity developer manual`_ for more details on creating custom permissions."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:20
# 18c32c48d7e040488ba71fe074dc1534
msgid "Defining resource directories (other than the implicit *static* directory) using *grok.DirectoryResource* instead of the *<browser:resourceDirectory />* directive, for the same reasons. See `grokcore.view`_."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:24
# 50c8b7328ea44a3883dbeeda61e0babb
msgid "Defining local component sites and local utilities using `grokcore.site`_. In Plone, we use the *componentregistry.xml* GenericSetup import step for this purpose."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:27
# 6afd3003731c43e0a57538a1dfc9f5c6
msgid "Creating browser layers with the *grok.skin()* directive. In Plone, we use the *browserlayer.xml* GenericSetup import step and/or the `plone.theme`_ package for this purpose."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:30
# dd9f6fa87df5456b9380de7c90fdae39
msgid "Forms using `grokcore.formlib`_. For Dexterity development, we use `z3c.form`_ instead."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:32
# 4c9a5e2a55e748c68122e248bd96b70b
msgid "Model objects using *grok.Model*. We use Dexterity content objects instead."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:34
# bafc8bd169044525b45113f41de6786d
msgid "The *grok.order()* directive, used to order viewlets based on an integer weighting. We use the base class for *plone.app.viewletmanager* instead, which supports explicit ordering as part of a theme. See `grokcore.viewlet`_ for details on how *grok.order()* works."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:39
# b867c53c06314386b6ec10dcd309a81d
msgid "The *view/static* variable. This allows access to static resources in the *static* directory using TAL expressions like *tal:attributes=“href view/static/stylesheet.css”*. Unfortunately, the link this results in will always be relative to the context, rather than relative to the site navigation root, which means that it will not cache well. Therefore, we construct the URL manually instead. See `grokcore.view`_ for more details."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:47
# d37b982d06d64a629841022acc9c4bcd
msgid "Some of this reflects the Dexterity developers’ preferences and views. You are allowed to disagree."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:3
# f8ee418bdef64f2fa191a1bcccb46627
msgid "Build development environment"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:7
#: ../../reference_manuals/active/helloworld/environment/plone.rst:7
#: ../../reference_manuals/active/helloworld/environment/python.rst:7
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:7
#: ../../reference_manuals/active/helloworld/extend/addon.rst:7
#: ../../reference_manuals/active/helloworld/extend/content.rst:7
#: ../../reference_manuals/active/helloworld/extend/files.rst:7
#: ../../reference_manuals/active/helloworld/extend/form.rst:7
#: ../../reference_manuals/active/helloworld/extend/index.rst:7
#: ../../reference_manuals/active/helloworld/extend/view.rst:7
#: ../../reference_manuals/active/helloworld/index.rst:7
#: ../../reference_manuals/active/helloworld/intro.rst:7
#: ../../reference_manuals/active/helloworld/todo.rst:7
# eff272829ee84751a7d96b3bd740defa
# 1a46b5fc9b6e4455827685019baf6d1e
# 081f633bc95b417e8f8fe3c807aaf2f7
# b4629808e1984c8b9d808e7ffa8cc9ec
# 4072275640f348bf9090b9452742838f
# e438a69437dd4468bee97a2a9165a2b7
# 915f8562ed864a9da8bdbbb493aa1718
# cf8a3d8b1ef44fb5bdad9e32e080c2d8
# 65df2d630ed44110a91c9254d1d45585
# b0165788eea8457fa66c00d98c8fad4e
# 830c9c4f4dc240be89fbb28e010f2ef5
# 31836186b7fe4a5ebd1fb81050528927
# 0a94115598d4436c9dbdca0e4cf3bacb
msgid "A simple tutorial introducing the basics of Plone development."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:16
# 1d33c6aaad474071bbaf2c7aa1162e18
msgid "In this tutorial, we build a Python development environment suitable for Plone. The environment should also be useful for any other Python development projects you have."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:18
# 48c1d3fa84114a718a55810e017d9892
msgid "In these examples, the **python_dev** directory contains our entire development environment. This makes the examples easier, but may not work for everyone. You may need to adapt these examples to fit your situation."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:20
# 4a74f527d25f4dd297c45dc564c2dd70
msgid "There are 3 main steps in building our development environment; build Python 2.7, create a virtual_env, and install Plone. These correspond to 3 directories in our development environment:"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:22
# 9ebaffe87ca2404d90031b0e4cbf0f8e
msgid "**buildout.python** sits inside *python_dev*. It contains our build of Python 2.7"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:23
# 068713c0a7124622ac43d52506c3835f
msgid "**env-27** sits inside *python_dev*. It is our virtual_env."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:24
# 6d0fbbf02ec24d83acedb7c3c749ca43
msgid "**hello_world** is our Plone installation. It sits inside *env-27*."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:26
# e1c85bab23454c18b2d95a942eed0eb7
msgid "The *python_dev* directory can sit anywhere on your filesystem that makes sense."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:3
# 090738c521804e46b049d3264b1c02e2
msgid "Install Plone"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:11
# 019acffd00a14f94ba5fc5df8616681b
msgid "Now that we have a virtual_env, we can move on the to third step of our process; installing Plone. First, we need to install ZopeSkel."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:14
# 344b0ec87d4e4a35b2c203ed14ad6988
msgid "Install ZopeSkel"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:16
# 8c912630e31445189f289b3f9ec876be
msgid "ZopeSkel simplifies the process of setting up Plone development."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:18
# 8f2ed97bbc7a46e389bf93c13a441252
msgid "The Plone community is transitioning between ZopeSkel 2.21.2 and a major rewrite currently at 3.0b3. Currently, the Plone installers use version 2.21.2. (August 2012) For more information about ZopeSkel see the :doc:`Bootstrapping Plone add-on development </getstarted/paste>` section of this manual."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:20
# 9fbb4ce345d142db9becbb4ce968e07b
msgid "We will install ZopeSkel 2.21.2 in our virtual_env and and use it to install Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:22
# df59e6c0fd4f4c959f7a7d096a5003ed
msgid "Install ZopeSkel 2.21.2.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:28
# f5cf1a5aadbf4cc9bbe8b5c5b998c495
msgid "This adds some files to the bin directory, including **zopeskel**.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:50
# cc4a864c315349ecbe9a194071ed4baf
msgid "Install Plone using ZopeSkel"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:52
# 12378e4ab6e94611a12fa31f3ed5f96b
msgid "ZopeSkel uses templates to build structure for Python, Zope and Plone projects. Here, we use the **plone4_buildout** template to create a Plone 4 buildout in the **hello_world** directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:54
# e5e36bc79e784db6990ba0aa4b41bec5
msgid "Create the Plone 4 buildout with zopeskel.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:58
# 2c7cbd5558794cca814b3b4e3d02f73e
msgid "ZopeSkel displays some information and then asks what version of Plone we want to install. We want 4.2.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:62
# 2c04a3924545470d95af86e0a3ab5aa6
msgid "The tutorial sometimes refers to the hello_world directory as the **buildout directory**. It contains the **buildout.cfg** file.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:79
# 5caaad65c7f9435eb203296396f4f37f
msgid "Bootstrap the system with the Python included in our virtual_env.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:85
# f4fb47c63faf49b2b11bdea1533df64e
msgid "The bootstrap process creates some directories and adds a buildout script to the bin directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:102
# c7719ba13f274cfcbe2bc7ecfff31f0d
msgid "Run buildout to install Plone. This can take a while.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:106
# 700e29de55764d869ca905698e3ff0d6
msgid "Buildout uses **recipes** that tell it what to install. These recipes can specify the versions of modules they need. Buildout picks a version when one is not specified. It keeps track of these **picked versions** and displays them when it is finished. You can add these to the [versions] section of buildout.cfg to pin them. This gives you a known good set you can work from, allowing you to rerun buildout in the future or on a different machine, and know you have the same environment.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:123
# 4af8efbba2f14c04a790e36567b9bae0
msgid "Notice that the Plone buildout installed ZopeSkel 3.0b3 for us. It is installed in the bin directory. We now have access to both versions of ZopeSkel; 2.21.2 in our virtual_env, and 3.0b3 in our Plone installation.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:136
# 4326375afe86497da580978778ebe1b3
msgid "Also notice the script named **instance**. Use this script to start, stop and restart Plone.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:142
# 10a69058e374473487b0a25b00f8d569
msgid "You can also start Plone in foreground mode. This prints log messages to your terminal which is nice during development.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:146
# acd74a06c1144952bd24fc34c0121b80
msgid "You can always look at the event log directly. It should be located at *var/log/instance.log*. You can watch it using the tail command.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:150
# fac823af2bde4c43824efa8c625468d4
msgid "You can access the Plone site in your browser at::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:154
# 691b6d4f7903472ca40d9bfe637be4c3
msgid "The first time you access the site, you will need to click on the *Create a new Plone site* button to perform some initialization."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:158
# 928708998dcd421b9f0511c9f2d2e4b5
msgid "You'll be presented with a form titled **Create a Plone site**. Keep the defaults for now, and click on the *Create Plone Site* button at the bottom. After a few moments, you should see the Home page of your site."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:165
# d7272a12f8a044d2ba98e267fd58fde0
msgid "Quick Review"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:167
# 0323ebf74ccf4a8993b4ff578b00c3ca
msgid "Before moving on, lets review what our directory structure lools like. Inside the *python_dev* directory we have *buildout.python* and *env-27*."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:169
# 61895c7f24a6478399788708bff22c1b
msgid "Inside *env-27* we have the **hello_world** directory, our Plone installation. Called the **buildout_directory**, it has the **buildout.cfg** file, and a script in the bin directory named **instance** used to start and stop Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:176
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:55
# 6046d26bebb544fe98a52d1ea99e6749
# f42843f56983487181cace46aa17f869
msgid "Now that we have our virtual_env, we won't use *buildout.python* again for these examples. However, you can return there later to create new virtual environments for other Python projects.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:181
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:60
# f109e2e3980a452bb9876708bfed614d
# fbaf3c92a21b48e98d2e46bdbf7c4dba
msgid "You can also build the versions of Python that we skipped in the Build Python section above, and then use them to build new Python virtual_envs.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:3
# 89e463c09eaa470f89af77253cf28549
msgid "Build Python"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:12
# 50b7fdb9431d48e19edaa489b45aca75
msgid "The first thing we need to do is build Python."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:14
# 5bbad83648f1455d88618bc1bf466e7a
msgid "**Buildout** is a tool to manage a software build. It uses configurations so you can always reproduce the same environment. In these examples, we use it to manage both our Python and Plone builds."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:16
# 63e92e116b9f4f9099f02feef08d9e9b
msgid "For our buildout configuration, we will use **buildout.python**. It is a project on github that maintains configurations for building different versions of Python. We will use it to build Python 2.7."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:18
# 4f973701212e4cb099478a5d50a4c299
msgid "Create a directory for your development environment if you don't already have one, and make it your working directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:23
# 20e2dc16f38147f7b0411fbb0bdda194
msgid "Get buildout.python from github."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:25
# 7273222b7d0645b381eb71b4dd9a85f0
msgid "If you have git, you can clone the buildout.python repository.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:29
# 86724756475c4549b212059c51d56634
msgid "You can also download buildout.python from their web interface. Open https://github.com/collective/buildout.python in your browser, and click on the **Downloads** link on the right hand side."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:33
# efc81036715d4c679a7653b10e074616
msgid "On the next page, click on **Download as zip** or **Download as tar.gz** to download the buildout files. When the download is complete, uncompress the file and rename the resulting directory to **buildout.python**."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:35
# 388b633ab7044ee4a44944dcced89387
msgid "Whether you cloned with git or downloaded from the webiste, you should end up with a directory named **buildout.python** that contains these items.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:47
# da44a9d96b494236aba6ecdfa825f7ac
msgid "Bootstrap buildout.python with your system Python.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:53
# 84cae7a7365a4490bf6ae7aead2e17e1
msgid "This creates the *bin*, *parts*, *eggs*, and *develop-eggs* directories and adds the *buildout* binary to the bin directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:72
# 71c162c83b1347be8e7a61142aa5ca01
msgid "The current version of buildout.python builds Python 2.4, 2.5, 2.6, 2.7, 3.2 and 3.3. This can take a long time. We only need Python 2.7."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:74
# 95ed1920d3bb42ae8ae66f021a211a1f
msgid "We can keep buildout from building the other versions by commenting them out in the buildout.cfg file. We do this by adding a **#** to the beginning of a line we want buildout to ignore."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:76
# 470527e6e4f048e8b47c765e7fc18aff
msgid "To only build Python 2.7, open the **buildout.cfg** file in a text editor,  comment out the other versions in both extends and parts sections, and save your changes.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:104
# 43c135718dec433a97c5699e31895e2e
msgid "Run buildout to build Python.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:108
# 64af0b9b9dba4d66b68b4e9183e12b74
msgid "This creates a new python-2.7 directory containing it's own binaries, libraries and include files.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:150
# 4414ee1c611648338bf7d18b7239274c
msgid "Buildout also creates the **virtualenv-2.7** script in the bin directory. We will use the *virtualenv-2.7* script in the next tutorial.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:161
# f23f4a07254a4f73aec3c6ac380edcde
msgid "You can build any of the other versions of Python by uncommenting their lines in the *buidout.cfg* file,::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:188
# 0c478614d6244fec83a4437820fab7fd
msgid "and rerunning buildout.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:192
# 62fe1601c5964908973eb3439cb1bb5e
msgid "It just takes a while."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:197
# e5f25e9fc47d4b57870999418b383153
msgid "If you have trouble running buildout, you may need to run the bootstrap step above with the 1.4.4 version.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:3
# d714301c788845f6acbc45dc0d7c8d42
msgid "Create a virtual_env"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:11
# 805d30ac195a4e27af431c351e97bd33
msgid "Now that we have a clean install of Python 2.7 we can move on to the second step in our process, creating the virtual_env."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:13
# d0b619400b804624a973398e17cf2980
msgid "Use the virtualenv script from the Build Python section above, create our virtual_env directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:19
# 144fb44d88394060bb13c5ef54453cc3
msgid "This creates the env-27 directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:26
# c2505192bd7f4bdeb594be2c09f4d316
msgid "The virtual_env has its own Python bin, include and lib directories.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:34
# 5d48c622559944949018c13e8924f1e2
msgid "In the bin directory, the virtual_env has 2 copies of Python 2.7; **python** and **python2.7**. It also has easy_install and pip, to install Python packages.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:51
# baec1f2445314f04922de6d9fb6784e6
msgid "The bin directory also has an **activate** script you can use to isolate your commands within your virtual_env. It modifies your $PATH so its first entry is the virtualenv's bin/ directory"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:65
# 41c571a8249c40fe93871ea42f5246cc
msgid "For more information about virtualenv, see the `virtualenv documentation <http://www.virtualenv.org/en/latest/index.html>`_ ."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:3
# 5e137aeb469d4c06b92e52dbad2216ce
msgid "Create an add-on package"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:11
# 345edd99cbf7443bbe8527aa7c2bfa9f
msgid "Before extending Plone, we need to create an add-on package to hold our changes. It's possible you would have more than one add-on package. One popular approach is to have a theme product and a product containing your business logic."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:13
# 5680d3c61d004320b2f9706903772e40
msgid "We will use ZopeSkel to create a skeleton template for the project. For more information on ZopeSkel, see the section on :doc:`Bootstrapping Plone add-on development </getstarted/paste>`."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:15
# 2578fb4afe824a7b970441414f927f01
msgid "Put your projects in the src directory of your buildout directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:17
# b2878a9b488b48a8906c8479cff8647a
msgid "Change your working directory to the src directory of your buildout.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:23
# c6c1aa7afc664a79b800bef99ab09d1c
msgid "Create a project using ZopeSkel 2.21.2 from our virtual_env. Here, we create an archetypes based project in a directory named example.helloworld.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:27
# a582726a98f74752b7d97a035f78dafb
msgid "ZopeSkel will ask you a series of questions. For now, you can use the defaults for Expert Mode and Version. Use *Hello World* for the Project Title. We will reference it in another step below.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:34
# b09860d2362546e58e66d2e6e96aba1e
msgid "The zopeskel command creates a directory in the src directory named **example.helloworld**.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:41
# 4da4ddb3d3ba40b185d47471dcda3f8c
msgid "Before we move one, lets examine our directory structure. We have **env-27**, our virtual_env. It contains **hello_world**, our Plone installation. We also call this the **buildout directory**. The *buildout directory* contains the **buildout.cfg** file. It also contains the **src** directory, which contains our project **example.helloworld**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:46
# 67e26501d78a4e8482931225f519ded6
msgid "Looking further into *example.helloworld*, we have the **example** directory which contains the **helloworld** directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:48
# b74cb11710af4ea9bf5723580878aa88
msgid "In the examples below, we sometimes refer to the *helloworld* directory as the **product directory**. It contains the **browser** directory. Most of the changes we make take place in the *browser* directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:50
# fa6bfec1a7974a50b1be74ff1cede4b0
msgid "Here it is from the command-line.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:88
# 9df0efc28b68447e8e9b53a234e3178b
msgid "To use the code in your project, you'll need to reference it in your buildout.cfg file."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:90
# 55ca10c2c90646c3af9f3472bca5bd20
msgid "Edit the *buildout.cfg* file."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:92
# 828f97782c3849a388f490b5c53b975e
msgid "Add *example.helloworld* to the *eggs* section.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:99
# b494dd4387344e4488c17b13152b7544
msgid "Add *src/example.helloworld* to the *develop* section.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:104
# 26832d8cc92d42da8419a9dd4085a363
msgid "Then save your changes."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:106
# 6471e7bb56a64550a00282a023730ba0
msgid "You need to rerun buildout for the changes to take effect.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:111
# 343d7310f2524da4ba46d39e9e7c1039
msgid "Then start or restart your Plone instance.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:118
# 6d640266deff459195f78e692548c2ce
msgid "Note::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:124
# fde38619405e4904815be0e14bf527a2
msgid "Now you can install your product from the **Add-ons** are of **Site Setup**. You can access Site Setup from the **admin** menu in the top right corner of your Plone site."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:128
# b39021b0ff8844638764dbdee729773e
msgid "You can also access Site Setup using an url like"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:130
# 892394924e8f4b7189b6d40791d091fc
msgid "*http://localhost:8080/Plone/plone_control_panel*"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:132
# bd03c39b9a3143ec93ad31701d9a7817
msgid "Select *Add-ons* from the *Site Setup* page. On the Add-ons page, select the *Hello World* add-on and click on *Activate*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:136
# 95cd355f12b44adb92f44d3c7c98d4db
msgid "Now that you created and installed an add-on package, you can use it to extend Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:3
# ecc86c36f01c4da5a7895a1f01abd39d
msgid "Add a content-type"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:11
# 95b025adfd464a2dbf94b619726a8a9d
msgid "In this tutorial we add a custom content-type."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:13
# d823f6d7dd664f51b6f86a483db6ab78
msgid "Plone comes with built-in content-types like Collection, Event, File, Folder, Image, Link, News Item, and Page. If you need a custom content-type, you can extend an existing content-type, or create your own from scratch. In this example, we'll create a simple archetypes based content-type from scratch."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:17
# 894acda63e854ff9ad8bfd8b95561388
msgid "Install code template with ZopeSkel"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:19
# f7823611a72042d9aa5df471633b526e
msgid "First, we'll change our working directory to the project we created above.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:24
# 0b0856a060f14013b77898b2a0f78c94
msgid "Use paster to create a content-type skeleton. Paster is included with ZopeSkel.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:28
# 0fd87da8373d4c6087f7b91a46d98214
msgid "Again, you'll be asked a series of questions. Use *Person* for the contenttype_name.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:36
# 8fe9f9f7d5d84da893a7d3c6d891f354
msgid "This creates a few files, and edits some others. For our purposes, the most important one is **person.py** contained in the **src/example.helloworld/example/helloworld/content/** directory. Open this file in your text editor."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:40
# a1db54d1742248e58ee10cea0d769f40
msgid "Build the content-type"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:42
# 83bfc68a4a9742338e6bba5a9d111f26
msgid "Edit PersonSchema inside *person.py* so it looks like this.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:60
# 6e96108ed94a4a6394ec439e0ac3d00f
msgid "This adds a new field to our schema named **hello_name**. It is a string filed, and is required. It is visible on both the view and edit pages."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:62
# 726d477c540c43c3be7198479930988b
msgid "Restart your instance to have access to the new content-type.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:69
# 53b0df9b30484c13bab25be172c2309a
msgid "Add content to the site"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:71
# 11d963d7b34b4f5c8b62c777c9453e23
msgid "To create a new object using the new content-type, select *Person* from the *Add new...* menu of your Plone site. This brings up the *edit* view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:75
# fe71d6f63f75472c8edaa5a9418dc7d5
msgid "Fill in the fields and click *Save*. This brings up the *view* view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:79
# acfff2b5d28e4bdb9d621a12d5d675c8
msgid "You should see an *info* message telling you your changes were saved, and a new tab in the navigation bar with the title of your object."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:81
# d607ca0cc88b4bda8be93e850bdb6ef5
msgid "Notice the **State** menu on the right hand side of the green bar. It tells you your content is **Private**, meaning only you can see it. You need to select **Publish** from the *State* menu."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:83
# 5edcc0d6513648ccb68a92f3b37d1a1a
msgid "Also notice the url of the page. It is based on the Title of the object, with two main differences. The letters are all lower case, and spaces are turned into dashes.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:87
# b6b0227abf6a4d9fbd90d96a76ece122
msgid "For more information about content in Plone, see the :doc:`Content management </content/index>` section of this manual. For more information about content types, see :doc:`Content Types </content/types>`."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/files.rst:3
# 58a174030b234d62a28ba27ec52fcc3b
msgid "Files and Directories"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/files.rst:11
# 28b03f22c48f44f6af13b934737ab85c
msgid "Before we start writing code, I want to review some important files and directories. In the examples above, we created the **hello_world** directory that contains our Plone installation. We sometimes refer to it as the **buildout** directory. It contains the **buildout.cfg** file."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/files.rst:13
# 30cdbff3285d426c88d8bf4cceb35010
msgid "We also created an add-on package named **example.helloworld**. It contains the **example** directory which contains the **helloworld** directory. We also call the *helloworld* directory the **product directory**. Among other things, the *product directory* contains the **browser** directory. Many of the changes in our examples happen in the *browser* directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:3
# b3e95e9f7fe3479c81743bbc164f4d88
msgid "Add a simple form"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:11
# 3f010db28d7148aaa0902409850aa102
msgid "In this tutorial we add a simple form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:13
# 9afc76b259b3419f893be84e4e58d586
msgid "There are many ways to add a form to Plone. In this tutorial, we use z3c.form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:15
# 05c92f3e3a0249189963d3eb1737cbed
msgid "There are two steps to building a simple z3c.form form; registering the form in **configure.zcml**, and writing the Python code to handle the form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:19
# c1b11653a7e146cb863f16ac8c930783
msgid "Register the form"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:21
# 1e21b4dc8c6049308fb803999d909a96
msgid "To register our form, we need to add an entry in configure.zcml."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:23
#: ../../reference_manuals/active/helloworld/extend/view.rst:21
# f370a81b9c5d41f0b1a2755ecf639251
# bf60ddecfe50490d8abd5873fac975c1
msgid "Edit the **configure.zcml** file in the **browser** directory. Open *configure.zcml* in your editor and add this just before the closing </configure> tag.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:34
# b14f47e1535d4d0baaa5db1e903c083b
msgid "We use the **name** attribute to access the form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:35
#: ../../reference_manuals/active/helloworld/extend/view.rst:33
# edc1575fe9224f74994fcbbc52c77458
# b4d82640d7a84de893151a8f359f3df9
msgid "The **for** attribute allows us to limit context to a particular interface. With the asterisk, we are not limiting access."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:36
#: ../../reference_manuals/active/helloworld/extend/view.rst:34
# 0d795c62dd924fdc9dc7eb13be373fe0
# 47314ea3845b45d597a8fdfb915ee7ff
msgid "The **permission** attribute allows us to limit access with a permission. In this case, we have a wide open permission."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:37
# eba90763830f4e27ac2f8c8b1610b81b
msgid "The **class** attribute points to our Python class. Here, we have a **HelloWorldFormView** class in a file named **hello_world_form.py**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:40
# 6ce42d41b25943a1a5ff046c9635823e
msgid "Our entry uses the **browser** prefix, so we need to define it in configure.zcml before we can use it."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:42
# 1f86315c489642979a6f588578297782
msgid "Add **xmlns:browser=\"http://namespaces.zope.org/browser\"** at the top of configure.zcml so it looks something like::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:49
# 4b0549c028704e44a516e93ce105528e
msgid "When we are done, configure.zcml should look something like this.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:71
# 050777a875a5493ab139fcf7ad44fa78
msgid "Python code"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:73
# 49445f7c0238453b85105d211cdfa640
msgid "Now we need to create the code to handle our form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:75
# e6f5f61e00c9490095c0ae303b984821
msgid "create the file *hello_world_form.py* in the *browser* directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:79
# 7c9cc30ae5e54a70829b54790db2c6a8
msgid "Open the *hello_world_form.py* file in your editor and add the following code."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:81
# 5700f3355bc14af9aabdc3c3526a7f17
msgid "Define our form field in an interface."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:83
#: ../../reference_manuals/active/helloworld/extend/form.rst:105
# 368e788736204694afa007764d5da16b
# 0860a0220566455eb076648aed450b69
msgid "The imports::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:90
# 820279cd89754cfc85ff306465f972f2
msgid "The interface::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:100
# ea71e09a93b74075b3303807fd4222ed
msgid "This defines a TextLine field with an id of **hello_world_name**. The title and description will show up on the form. It is not a required field."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:103
# 8d9b40acb54a429db9d7a6a325448599
msgid "Create a class for our logic. This is used when our view is accessed."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:111
# 629ce0c2902e4f4dad674fab818157be
msgid "The class::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:148
# fbdbe9f8ee1a4562bc3e31047815d9ad
msgid "We first import the field from our interface above."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:149
# 8ad4b7b509f645298e2bdc6d64860d1f
msgid "The **ignoreContext** directive means this form is not meant to be called in the context of an object."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:150
# 5815f05c658841abbc6e93f092474ac5
msgid "We define **updateWidgets** to the same method belonging to our parent."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:151
# 119abf7ca15643ef9a4ee413acc79c06
msgid "We create 2 button handlers."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:153
# 792fed9e7bd24089b3d6e9b4782266c0
msgid "The fun parts here are the two button handlers; **handleSave** and **handleCancel**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:155
# df1cacf861204c0ca5556b4ce5214c3f
msgid "At the bottom of *hello_world_form.py* we need to use **wrap_form** on our class. This wraps our form in the standard Plone layout, placing our form in the content area. This also creates the view **HelloWorldFormView** referenced in *configure.zcml*.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:162
# f1227f9c047b45ca9ec867b8465e57f4
msgid "Access the form"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:164
# 88963731e06045f78f2df05946fa5d05
msgid "You can access the form with an url like::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:174
# 8939314bfd1442cfb46ecb916d774d43
msgid "Type in a name and click *Save*, or just click *Cancel*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/index.rst:3
# 648e002d6a394cb0b7a64bf3cbf5c859
msgid "Extend Plone"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/index.rst:18
# 98d2cb1be5a948d89078c555a513a364
msgid "In these examples the tutorial extends Plone. First, we create an add-on package on the filesystem to put our code. Then within that package, we add a simple form, a content-type, and a custom view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:3
# f48ea33a38434118a19adabf568278f8
msgid "Add a custom view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:11
# 5ece14c2bc0f40d5a216c4aed5ed05fb
msgid "In this tutorial we add a browser view. Plone uses views to display dynamic content."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:13
# f88916bb7e334b859f75c3f602142db7
msgid "There are now two ways to add views to Plone; Zope 3 and Grok. This tutorial covers the Zope 3 method. For more information about views, see the :doc:`Views and viewlets </views/index>` section of the developer manual."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:15
# 05420edad72e49e2ac9bfe29179dead4
msgid "There are 3 parts to our view; a Python class, a page template, and a ZCML registration. We will add the two files and edit configure.zcml in the **browser** directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:19
# f89410829efa41d7aaff49a9485bcce2
msgid "Register the view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:32
# 6399ba329d2c47a18de5e2517c527392
msgid "We use the **name** attribute to access the view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:35
# 0fad0f9fc9a643d1a2e3f9eedf7d4bf0
msgid "The **class** attribute points to our Python class. Here, we have a **HelloWorldView** class in a file named **hello_world_view.py**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:37
# 50d1e49a07c7494c8b47a40ce0e87b99
msgid "If you have not already done so, you need to define the browser namespace in configure.zcml by adding this to the configure tag.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:41
# 39058019bebd4922b68e55f7a4d8617a
msgid "If you also went through the simple form tutorial, then *configure.zcml* should look something like this when you are done.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:72
# a6ed35f984ad4fe4933c17f227f53ab3
msgid "Create Python class"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:74
# 899a03af59d24abeaf5959795ebdccf4
msgid "We need to create our Python class. In the **browser directory**, create a file named **hello_world_view.py** and add the following code.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:90
# dafe2a9bd0f8480b8d18c8fbce926801
msgid "Our BrowserView class is a Python callable. The __call__() method is the entry point. In it, we add a **hello_name** attribute to the view. Our page template will use the value of hello_name when the page is rendered."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:92
# 9018969c7d1b4e5bbb5083c32a8bd3af
msgid "The logic in our class is pretty simple. If our context has a hello_name attribute, then we use its value in our view. If not, we use the string 'World'."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:94
# def18c360cc0419d96c26f21a5dcc321
msgid "In the class, we also define our page template **hello_world_view.pt** and save it in the **template** attribute."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:98
# 436c3f54a4ef4090a7b3f5fd5fc43223
msgid "Create page template"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:100
# d31b6752037c4a7aa6b4f20bb3136769
msgid "The third part of our view is the page template."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:102
# 9d4eba4e98aa46e0b095c8b1f66c77bc
msgid "In the browser directory, create a file named **hello_world_view.pt** and add the following::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:119
# cef8029d13764d49868b10a12a124b17
msgid "Plone uses Zope Page Templates (ZPT). For great documentation on ZPT and the TAL, TALES, and METAL languages, see the :doc:`TAL page templates </templates_css_and_javascripts/template_basics>` section of the developer manual, and the `TAL/TALES & METAL Reference Guide <http://www.owlfish.com/software/simpleTAL/tal-guide.html/>`_"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:122
# 75f0f1acccfc4d3b9137afa62ce4bcb7
msgid "In the above code, we define some xml namespaces; **metal** and **tal** that we use in our template.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:127
# 43116ab79e5a4688b73e36fd7a8d37c5
msgid "The **metal:use-macro** statement tells ZPT to use **main_template** to draw our page.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:131
# 02c7c3aa4cc8438ca6691759dbdc8641
msgid "The master template *main_template* contains predefined **slots**, or areas on the page, that we can fill with content from our template."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:133
# 742d81cf7dbb4a35bdd692c80c767c45
msgid "Anything in our code, between the::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:137
# a85ff694e56e45379aa4e93b7f535428
msgid "and::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:141
# b2a83e469bdd406cbd9f03e8e1533d45
msgid "gets put in the **content-core** area of main_template and is displayed on our page."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:143
# a64c75c7ff754c8eb5312da6c72d7d6a
msgid "We also have access to our view class using the **view** namespace. In our case, we are interested in **view/hello_name**.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:147
# c33768a2d0c2489e8be5d3075fd660ce
msgid "In our Python class, we defined a *hello_name* attribute. This code says take the value of the *view/hello_name* attribute and use it as the content for the span tag. So, the string \"this gets replaced\" gets replaced with the value of *view/hello_name*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:152
# b6cb093bd3b44461a6156149955e05e6
msgid "Access the view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:154
# fb56fe1966884152ad059aecd9b55ded
msgid "To access the view, restart your instance to have access to the new view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:156
# bd7e9e5748a049e7a940bdbde9c2d7f9
msgid "Then, add @@hello_world_view to the end of an object url in your plone site.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:160
# d0f6ce98b7364c5cbe0a784cab53405e
msgid "Since our object has a *hello_name* attribute, the value is displayed along with the word *Hello*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:164
# 5144619220c34ad48f29864cb322791a
msgid "We can also call our view on the root of the site.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:168
# 768b147365aa4ca5ba79156a117ce925
msgid "The root of the site does not have a *hello_name* attribute, so *Hello World* is displayed."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:172
# 39501f751eb8498b828be8752120fb50
msgid "For a more in depth explanation of views, see the :doc:`Views and viewlets </views/index>` section of this manual."
msgstr ""

#: ../../reference_manuals/active/helloworld/index.rst:3
# 1acb2bd0f81b40738958afe4f55afaf8
msgid "Hello World Tutorial"
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:11
# e5e488c493ee4ac58b669f7a21db9544
msgid "This tutorial uses simple examples to introduce Plone development. The examples cover a basic form, custom content-type, and dynamic view."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:13
# 7414034900e64fd0b7d531268c5512b0
msgid "It also has detailed sections on building a development environment, installing Plone, and creating an add-on package for your development code."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:17
# 80d91a1350da4457b4745286e35e45c9
msgid "There are many ways to install Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:19
# ecb01c0d04a64956be68893ee6fd8e6c
msgid "In the examples, we build a new version of Python 2.7 and create a virtual_env using the new Python. We then install Plone within the virtual_env using ZopeSkel 2.21.2."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:21
# 1036e1d571a74ce2bce794659069cf3e
msgid "This can be a lot of work, just to try some hello world examples in Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:23
# 834f131553514a708a04026f54ff52ea
msgid "You don't have to do it this way. You can create a similar environment using the `Plone 4 installers <http://plone.org/products/plone/releases/4.2>`_. The examples should all work with little or no adjustment."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:25
# 9ab2cf1781e14484a4e5b055d7ec2bdf
msgid "There are benefits to managing your own Python development environment. The choice is up to you."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:27
# ad22e73f29fb495bb3641abe5b17e9d9
msgid "This tutorial is only an introduction to Plone development. Other areas of the developer manual have more detailed information. We link to some of those areas in the examples below."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:3
# 396e0cb217e44bc59e4e5dcce930080c
msgid "Ideas for improvement"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:10
# 0b2718e7db1a4376863e2385804c60b6
msgid "Ideas for improving the tutorial"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:12
# f5ac06af96e84d73a452d95bf8dba3c2
msgid "Add more information about universal installer."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:13
# 080c95f6b95d42f2994abc2af1cd3046
msgid "Add section on Dexterity content-type."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:14
# 87900690ffbc4835b4bb370c6ecc6f21
msgid "Put example code on Github as collective.hello_world."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:16
# e7cdae73e91547688fb1071d4e397a74
msgid "General editing"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:16
# 69283b1c8e1b48e58da53dfd41326357
msgid "allow individual sections to stand on their own"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:17
# 0dcca7871ac84eff918eb6345bb626df
msgid "better narrative if read beginning to end"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:3
# d6556137d47b424cbaa7f83fd8c914c0
msgid "Adding CAPTCHA Support"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:7
# e01b7cfebada4eec91c26c0a99ccd937
msgid "PloneFormGen has built-in support for Re-Captcha. This howto-tells you how to enable it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:10
# 7ed5407373ed4db3bd9cf369d843f942
msgid "PloneFormGen and CAPTCHA Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:12
# b0789098705445d98023e833268f2144
msgid "When PFG is installed in a Plone instance via add/remove products, it will look for evidence that either collective.captcha or collective.recaptcha are available. If that's found, the CAPTCHA Field will be added to the available field list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:14
# 30441c3eef3043f08e5efdbe30d5404d
msgid "If you are using collective.recaptcha, you need to take the additional step of setting your public/private keypair. You get these by setting up an account at recaptcha.net. The account is free. You may specify your keypair in the PFG configlet in your site settings."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:18
# ba4103cbd6dd42f096b0a837bc71e62a
msgid "If you add a captcha facility *after* installing PFG, you will need to reinstall PFG (via add/remove products) to enable captcha support."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:21
# 91d2e9b02b454c5189a4fe8c17e9f3e6
msgid "Installing collective.recaptcha"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:23
# 8d31305c9aeb450ebb02d43e3930881e
msgid "Add the following code to your buildout.cfg to install collective.recaptcha and Products.PloneformGen together:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:36
# 4dd0664a390e4a4091ba557792af246f
msgid "Re-run bin/buildout and relaunch your zope/plone instance."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:37
# 5518395846044384af5997943021e949
msgid "Open the PortalQuickinstaller or plone control panel and install (or reinstall if already installed) PloneFornGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:38
# afb06812d4f9402cab6f4ad3929c894a
msgid "Open the PloneFormGen configlet in the Plone control Panel and fill in the fields with your Public and Private Keys of your ReCaptcha Account. Obtain keys from `reCaptcha.net <http://www.google.com/recaptcha/whyrecaptcha>`_."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:3
# 85ba5b67ba41419e8840a5500c350141
msgid "Creating content from PFG"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:7
# 8bcf83efbb2649a9a32cbf7cac3a6e8d
msgid "This how-to covers simple creation of portal content from PloneFormGen. We'll create web pages from sample form submissions."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:9
# c2763b1997d5439e87f196a2eb9649bc
msgid "A question that's come up frequently on IRC and the Plone users' mailing list is \"How do I create an event, news item, page, or some other content item from PloneFormGen? It's common that there's some security need or extra content needed that prevents just using Plone's \"add item.\""
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:11
# de722243af974b4795813c0914e83673
msgid "This is actually very easy if you know a little Python and are willing to learn something about the content items you want to create."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:13
# 7056ad26c8f643d9b06f5561d9dc1430
msgid "Please note that I'm not going to show you how to create new content types here. Just how to use PFG to create content objects from existing types. If you want to create new content types, learn to use Archetypes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:15
# 9a6c891e5fb14e19b6926903cb426078
msgid "Your first step should be to determine the attributes you want to set in the new content item and how they'll map from your form fields."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:17
# 0e6ab6df8ad24d43baa3da0b3561faa2
msgid "In this case, we're going to use the sample contact form created when you first create a form folder to create a page (Document)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:19
# 6d544808e90544f38ca83e27f820522b
msgid "Our mapping of form fields to content attributes will look like this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:21
# c9813e41c39245d6a150526b924c1d55
msgid "Form Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:22
# 120ae5928e434a3093e1fcc6f662ce54
msgid "Document Attribute"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:23
# 79510b1f55ec4a9f96585d08207d5d06
msgid "Your E-Mail Address (replyto)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:25
# 1ee47741c0ef4c13a5ca0c18a7c03314
msgid "Subject (topic)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:26
# 173f693314bd4e89a68d6861b026e9c9
msgid "Title"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:28
# d3cae548e50546feaf8363e9f11cdb3b
msgid "Comments (comments)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:28
# 296188ee16394b02993eea4b29e56ef1
msgid "Body text"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:30
# c0f4ba758758469db41223db9139bd07
msgid "Note that for each form field, we've determined its ID in the form. We'll use those to look up the field in the form submission."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:32
# 7a10802d9b4a41d99627cf3e32181173
msgid "Next, we need to learn the methods that are used to set our attributes on a Document object. How do you learn these? It's always nice to read the source, but when I'm working fast, I usually just use DocFinderTab and look for \"set*\" methods matching the attributes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:34
# 403c5573ecec4aadbba9cf8349109a3f
msgid "Now, determine where you want to put the new content. That's your target folder. It's convenient to locate that folder in a parent folder of the form object, as you may then use the magic of acquisition to find it without learning how to traverse the object database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:36
# 46fe74f3f5554c729686246f7a04ff7a
msgid "Now, in the form folder, we add a \"Custom Script Adapter\" — which is just a very convenient form of Python script. Then, just customize the script to look something like the following:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:72
# 26a80c1a4eab4a7db4a4ca6e23bb9dbe
msgid "That's it. This will really work."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:75
#: ../../reference_manuals/old/zope_secrets/security.rst:3
# 9fe460c1aafe4393aacc91abbed39f85
# 0f7a599a5c4a445eaaaded0722739733
msgid "Security"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:77
# 38fb90fa69524370a240d05efacbfb0c
msgid "At the moment, the person that submits your form will need to be logged in as a user that has the right to add pages to the target folder, then change their attributes. You may need to allow other users (even anonymous ones) to submit the form. That's where the Proxy role setting of the custom script adapter comes in. You may change this setting to Manager, and the script will run as if the user has the manager role — even if they're anonymous."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:79
# 6369a7859bec409da1edea82e724a021
msgid "I hope it's obvious that you want to be very, very careful writing a script that will run with the Manager role. Review it, and review it again to make sure it will do only what you want. Never trust unchecked form input to determine target or content ids."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:81
# a7f0e5db51e84b3fa9436ff9a86f0c90
msgid "If I'm doing this trick with a form that will be exposed to the public, I often will use a Python script rather than the custom script adapter, as it allows me to determine the proxy role for the script more precisely than choosing between None and Manager. I may even create a new role with minimal privileges, and those only in the target folder. Credit!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:87
# f1ac36496024471381599f6ce61af451
msgid "A big thank's to Mikko Ohtamaa for contributing the Custom Script Adapter to PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:3
# dc219bfc8b0a4c9fae66207fda2a569b
msgid "Adding Custom Fields, Action Adapters or Thanks Pages"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:7
# 8a0ba6c79cd749699f44414d33cd3a9e
msgid "You may add custom fields, action adapters and thanks pages to PloneFormGen. By far the easiest way to do this is to derive a subclass from one of the field types in fieldsBase or an action adapter from actionAdapter.FormActionAdapter."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:12
# 2700909f93224744b809d41d0c179850
msgid "When PFG is installed, or reinstalled, it will automatically add to its available fields, adapters and thanks pages list any installed Archetypes content type that implements one of:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:16
# d5854edafdbc48f198e3d38725f5d19d
msgid "Products.PloneFormGen.interfaces.actionAdapter.IPloneFormGenActionAdapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:18
# 05a2638d07d44d0cb4f8e0aca7929cc8
msgid "Products.PloneFormGen.interfaces.field.IPloneFormGenField"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:20
# f68b277f3eb7460b859cca6676236868
msgid "Products.PloneFormGen.interfaces.thanksPage.IPloneFormGenThanksPage"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:22
# ca9ddb9119304850a8e44af548ce4233
msgid "Also, the Archetypes class *must* specify a meta_type in the class definition that matches the meta_type defined in its GS type declaration. Otherwise, it won't be found."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:3
# 6d63151294b844f9b6c0bd402b18b63d
msgid "Custom mailer script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:7
# 860be59855aa40a8bb689f3029cf7b72
msgid "Customizing email output from PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:12
# e7eba8b4ff184c4fa9e673145db1ed8c
msgid "Below is an email script example to customize how PloneFormGen generates the email output."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:15
# 32f5c66d5c5747c7b36a75f858beb6dc
msgid "Installation instructions"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:17
# 9b929785e0de4aa692f4c08384f2f7bf
msgid "Go to form, on the contents tab remove the existing Mailer item."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:19
# a0210e0c47264688b413b2283520e35d
msgid "Choose create new... Custom script adapter. Pick any name."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:21
# 2132940c771f49e1904ef0fcf63e0dd5
msgid "For the script, set Proxy role: Manager."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:23
# 0938687fbf404ed9a5b07a0b48912db6
msgid "Fix the email addresses in the script below."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:25
# 7af549204ccc4a8cbcc3ae55796b4947
msgid "Paste the code to the script body field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:27
# 826981138c3145998822ee9fb824b9f0
msgid "Save."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:29
# 3b2708b7d2944e09bfe0928726e961f9
msgid "Test."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:32
# 833734bea27a475e8df598720139ad91
msgid "Example script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:3
# 4838f3096a584539a86de2174c2aeed1
msgid "Customizing an individual thanks page"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:7
# 46e0983ecd9a4c85b105f551cc9965ee
msgid "It's not hard to customize the thanks page for an individual form. This trick is particularly useful for purposes like adding 'pay now' buttons."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:9
# f9066b48dc554373875c6c7a9f6a9e9d
msgid "If you can tolerate a little work in the Zope Management Interface, you'll find it very easy to customize the Thanks Page for an individual form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:11
# 9131cde27267431f8f41677be690165c
msgid "The steps:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:14
# cf6ebf523ac34c63ab865b6540f45cac
msgid "Create your form;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:16
# 5d7595a6dfb64d0da74a485241691d6a
msgid "Bring up the Zope Management Interface; navigate to portal_skins/PloneFormGen;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:18
# 9ca57b8c2ec94a2b92684552fdf7ee60
msgid "Open the fp_thankspage_view template; push the Customize button; this puts an editable copy of the thanks page template in your custom skin folder."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:20
# 2f0606c0b8d64a1084e4e5e9448ec353
msgid "Step back to the Custom folder listing (still in the ZMI); cut the fp_thankspage_view template;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:22
# e3dedcc7ff5a4ef696b63d3f946a6c9b
msgid "Navigate to your form folder; paste it there."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:24
# 4ede5eb2f9694ecbb8a02bd0b2df30fc
msgid "Edit the template to insert your Pay/Donate Now form and button code, or whatever other custom code you might need just for this form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:28
# 2c4fa5b3d2b24cc6b67e18b7d21aa1a1
msgid "Note: If there is already an fp_thankspage_view template in your custom skin folder (perhaps because you've already customized the template for the site), you'll be cutting and pasting a new copy."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:3
# b7713e3d5ae946d4876ff02629720019
msgid "Creating custom validators"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:7
# b433075a4ab6496ba65b158ae4c2564a
msgid "PloneFormGen allows you to create a custom field-input validator by specifying a TALES expression that will be used to validate input when it's submitted. This how-to explains what that means, and offers a few examples."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:9
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:11
# d32db5f248274c1690ea3eb7c9c7e4e9
# fac73bc019624fa9b891d2c125c69c45
msgid "`Template Attribute Language Expression Syntax` (TALES) is a simple notation that allows determination of a value via path (as in path/to/object), string or Python expressions. It is used in `Zope's Template Attribute Language` (TAL), and is ubiquitous in Plone templates. This how-to does not teach you TALES; for that, try the `Zope Page Templates Reference <http://www.plope.com/Books/2_7Edition/AppendixC.stx#1-10>`_."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:13
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:15
# 8ef656949acb4b8ea060d291e8fb6fa6
# b603ebce9e1a494c8df06fff9cc06836
msgid "Please note that it's easy to make a mistake when working with TALES fields that will cause an error when you try to display your form. Stay calm! Take note of the error message, and return to the field edit form to fix it. Don't be scared of this kind of error."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:15
# 14f26d0a8d154306954a7fc29fb378bf
msgid "The rules for writing a validator are:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:17
# f21835eac5d64c949202c6ecf9127ebb
msgid "You should validate against the the variable value, which will contain the field input. Note that -- for simple fields -- value will be a string. But, for a lines field, the contents of value will be a list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:19
# b1496f4a32cc4bf1ae7a5b8e40ad3a79
msgid "Return False or zero if you wish to accept the input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:21
# cfc571fa833247a0871876b5d2593644
msgid "Return a string containing a user-feedback message if you don't wish to accept the input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:23
# 714490f2c49c460cb7db4c1f125d2d56
msgid "Don't change the value variable. It won't do you any good."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:26
# 5699e779466e43f8bd7912b30c467abd
msgid "A simple example"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:28
# d27fa79adccd4304bef2c9737576bd42
msgid "Let's say that you are operating a restaurant that serves only dishes containing spam. You may wish to check to make sure that the input to a string or text field contains \"spam\". You may do that with by setting a custom validator that reads::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:32
# 57cf267a24a44fd8b35795195bdfc9b2
msgid "The odd logic comes from the need to return `False` for valid input. Look at a couple of examples of validation in action with literal strings. Remember, we want to force spam on the user:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:43
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:44
# 26e74330dca64faebdc3919c29562264
# 4b427182cd80490f901f5084aeb278ab
msgid "The name space"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:45
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:46
# d8c6de62e6c940659edc819df67abcd2
# f1fe2420bdfe40179fa6400e996db71c
msgid "Here are the objects available when your expression is evaluated."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:48
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:49
# 2f1a44adc3844eca9c937eebaacac69f
# 8132cd774d9a4191900cd2401e519c49
msgid "TALES context"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:50
# 382c2821c95443c7a7bf5f47a6eb7486
msgid "value"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:51
# db35ea04cbf64521ab9c30eadb65b8ca
msgid "The field input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:52
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:51
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:159
# 5add35442f8149c2b3858739d72cf759
# d0d2db4afa1541b1aa9a3eaea400a56f
# d1183c9cf541482ba7cc0321ec7be9be
msgid "here"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:53
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:52
# 89e0648b15a34f97bc1b734988ae75c1
# e0112d7688cd4ab8a571ad2474023dee
msgid "The current object. A bit dangerous since this varies depending on context."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:54
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:53
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:69
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:248
# 472053f1d3234565b225a389b0c5ff81
# 0268b576df66429aa27e128a379ebfb4
# bca318957423477492890d858d4e2b94
# e120f0e224874d65a9e0ba04bf30e94f
msgid "folder"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:55
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:54
# 6017591ccd594341b04da1e3767b0668
# f7a1d6f00ed64dc8a9297e4dcc15f788
msgid "This will be your form folder."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:56
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:55
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:19
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:109
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:113
# 90410ab979ea4b018f6d9b8956dd8395
# 7524b5da9ec1419fadfd496f9c8e4e5d
# c4643dce8ed34a5886b4cab02a014e84
# b6753745c48147eeb5ccc9807bddb964
# 5ffa2baf9f474b9d84535b748c91386d
msgid "portal"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:57
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:56
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:20
# ce7f4ad4f2b7482fbf95d922fd964cf5
# 1580baeba37c4bd2a2f840dbae0248d4
# 334473dc753c468f9fdcf6dc04d1395a
msgid "The portal object."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:58
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:57
#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:178
#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:76
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:168
#: ../../reference_manuals/old/portlets/architecture.rst:134
# bae7b430d8ab4844a9453aeed5f4b377
# 35afa7d966574698905e54e907fe053b
# 14317be1ae68448a8a6cd6d48f767a7a
# cd3459dfaa6e4cb7b14f6cb6062258ed
# d8e5b444396d4bb2a5baccc46b66d0b5
# b255755f75c143cd9bf27b32f8593f5b
msgid "request"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:59
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:58
# 43526adf0a034ecc8aaf94f9582c6e8c
# 4ebb3897d8554987af6b3e6b7d350a55
msgid "The REQUEST object. Note that request/form contains form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:60
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:59
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:23
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:155
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:159
# 5e97ace3862949868e3bc106c756bc04
# 2549aabffbb04620b2569dc1e12f60c5
# a32b3154b8b049d69d4da8889d4e49b0
# 6b13ff6c10b94f1ca635c22d03e20d97
# a4a9d6bb137047baa992872c501e1bee
msgid "member"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:61
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:60
# bd025db2d7074b1489a3ede86a52cffa
# bb0ab2732f4343249fb2edbfda22e831
msgid "The authenticated user's member data -- if any."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:62
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:61
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:139
# cc7fcf51e29e49558843b5905aba5bd6
# a2b778cb2c7c40c3a5fafc1d706f4e3f
# 8f41f9c3508042f3950289d0373e9127
msgid "nothing"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:63
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:62
# 940410c9a57c4155a1bb3e3486ca413c
# 8e349dcfee6245a8b89b2583a997dc2a
msgid "Equivalent to Python None."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:64
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:63
# 74cfa49c7d704bf8919f3aacc43d9a62
# dd1df7709cc14782a840e43a032cdb1f
msgid "folder_url"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:65
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:64
# 7f3bb92d7e034a53b94aa7dafa42d0b7
# 1729ac2be0d34824a90ead4c5ce82f8c
msgid "URL of the form folder."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:66
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:65
# 1091ab81ee8343c6a125f23f13576470
# d58f750b4108435580213d6889912b90
msgid "portal_url"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:67
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:66
# 9130f0dd3b14405b9e99a4ef72d9e567
# 8bade9759e8f4dfe8342d69b05afd458
msgid "URL of the site."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:69
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:68
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:171
# d5ef1576f3294b5480a861c7ded4d9a3
# 19ca62ac3dd04fcea46384ec89ed5eb8
# 833ea1b1907c484e9cac95be6ee7216d
msgid "modules"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:69
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:68
# 09119c02f93d485eb950643c36e1cfc0
# 3bbd3c34c060424988fecec83c930e4f
msgid "Module importer."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:73
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:72
# e17afe99363e43c081c676af7515caa9
# 51e527e0dc0049cc934028e5065db4ec
msgid "Some of these identifiers are supplied by PloneFormGen and are not available in other contexts."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:76
# a755f94ec1b6427fb7cefdc32b35173d
msgid "Using a Python script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:78
# ba0d38f53cb349d39b4fcd0260e379cd
msgid "You'll be frustrated fast if you try to do anything smart in a single TALES expression. If you need to do something more complicated, add a Python Script to your form folder and call it via TALES. For example, if you added a script with the id includesSpam, you could call it with the expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:82
# 300fc1d2e9a0477a93f10ae2d692e8dc
msgid "Make sure your script returns False if you wish to accept the input, or an error string otherwise."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:84
# 22500c39a46f4633a977ec216fec093b
msgid "Here's what a validator script to check for spam might look like::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:91
# 672507f3f69a40e79c61e54ceffb2ac0
msgid "Make sure your script parameter list includes value. (Alternatively, you may check the request.form dictionary, which will include form input.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:96
# e7169fbcd0254e63af4b371d6abc122c
msgid "Python scripts are not the same as the Custom Script Adapter. The latter is meant to make it easy to add a custom adapter that's processed in the same way as the mail or save-data adapter. Python scripts are just simple Python code fragments that act like functions. They are added via the Zope Management Interface"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:3
# 114a2a04a3864fd68020bf3919b94dc1
msgid "Embedding PloneFormGen forms"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:7
# 787bf1cf26c74cf0926cf1bb337e2178
msgid "PloneFormGen forms may be rendered from other templates, viewlets, and portlets."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:11
# de84f3d921ca47089fbbb47f6965c5c7
msgid "This feature requires Plone 3.0 or later to work out of the box.  You can make it work in Plone 2.5 by turning on the PLONE_25_PUBLISHER_MONKEYPATCH config option, which applies a monkey patch to the Zope publisher exception hook based on some code included in Plone 3."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:16
# 76fa6f41e4af44dab4f2e130753a475b
msgid "*Caveat*: This feature should be considered beta quality.  I've written code that takes advantage of it, and you shouldn't be afraid of it, but take care to test thoroughly.  There may be certain types of contexts for rendering the form with implications that I haven't taken into consideration."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:21
# 7cd2521272904d9d821cb00fb224ddb7
msgid "To insert the form into an arbitrary template, use the 'embedded' browser view::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:25
# 6d4cf9694ed44a49959c3c4e350d6658
msgid "If you are including the form on a page that features another form, you'll probably need to set a prefix on the 'embedded' view to disambiguate submissions::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:32
# 9b3bf686f96c4e4eb9f38bd9f2958f0b
msgid "Or if you are using a view class, you could define a method like::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:41
# d8a785ae8a2c4a21bac4650cee6e8b4a
msgid "(Note that restrictedTraverse expects a path relative to the object you are calling it on, with no initial slash.)  And then in the associated template::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:46
# 3434a34e30424e32a2eb5fc07734a8ee
msgid "By default the embedded form uses the current URL as the form's 'action' parameter. When the form is rendered upon submission, it will perform validation, run the normal action adapters, and redirect to the success page as normal.  If you want to submit to the form's real location or somewhere else, you can override the action by setting the 'action' attribute on the 'embedded' view."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:52
# 4ffff33ba8a64d88b47f6d95e89e1763
msgid "*Known limitation*: Embedded forms have no way of injecting javascript or CSS into the page head like their standalone counterparts."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:2
# b8bb7636bdaf48d2937d1f94c007dc8f
msgid "Fail-safe email sending"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:4
# d725873d87af4740bc88a5808e8a08a3
msgid "By default if SMTP server rejects the message send by PloneFormGen the page will crash with an exception. Possible reasons for SMTP failure are"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:7
# f91e78c6b95c47f09d9709cf2443c99d
msgid "SMTP server is down"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:9
# 62e0559bfe1c4eb2b8d8bd6a4651760a
msgid "SMTP server is overloaded"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:11
# 5f56147845684d3e8ee387a16b097b23
msgid "SMTP server spam protection is giving false positives for your email sending attempts"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:13
# 385fbaad6dc349bea65349b687e78907
msgid "If you have a situation where gathering the data is critical the following process is appropriate"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:16
# 92a0a0cc7a674b64a7308c5d30b42d00
msgid "Use save data adapter to save results"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:18
# 56faeb8db34b4fa28375535c4a6b1aa6
msgid "Use a custom email sender script adapter to send email and even if this step fails then the data is saved and no exception is given to the user"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:21
# 36c5bfa7df784ce48841fd159a8ad42f
msgid "Example PloneFormGen script adapter (using proxy role Manager)::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:3
# 67fd4c196d4a48a18dcf3d11fd695eb8
msgid "Frequently Asked Questions"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:8
# 38a4b969698b412ba43785ade129319e
msgid "Q. How can I make a date/time field default to current time?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:10
# 1b03726fe2054de2b529b82a39928fcf
msgid "In the field's \"overrides\" fieldset, specify as Default Expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:14
# 25ccbb6850234c65a14240fa99b2ade5
msgid "Note that you may do some simple date arithmetic. To set the default a week after server time, use::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:20
# fbdb71b5d6a14b24b90310d28abf7793
msgid "Q. I've made an error in a TALES expression, and now I can't view or edit my form!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:22
# e46297c0f5834f709c642d9c172421dd
msgid "An error in a TALES override may prevent you from viewing the form, but it shouldn't stop you from editing it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:24
# 50954bbb7c594742a4ee99f59567e3e3
msgid "To edit, navigate to the form (you'll see your error)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:26
# 2a0d9d3a5f984f98bed083153a1a993c
msgid "If the error is in a form override, add \"/atct_edit\" to the end of the URL to reach the editor. That will allow you to reach the form editor; now go to the overrides fieldset and fix the problem."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:27
# ffa771fc38f743a9a5b3380e70d37486
msgid "If the error is in a field override, add \"/folder_contents\" to the end of the URL to reach the folder contents. Click on the troubled field; you'll again get an error. Now, add \"/atct_edit\" to the end of the URL to reach the editor."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:30
# 80906cce67da4fd29fefeed46f7ee149
msgid "Q. How do I make a field default to the member's name/address/id?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:32
# c31e8ce7f73a4caba47e191e60de2d51
msgid "In the field's override fieldset, set the Default Expression to::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:36
# 0051f8a3d2604a67b31835222cf0125b
msgid "memberEmail is a method of the form folder which will return a member's e-mail address, if one is available, and an empty string otherwise."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:38
# 30c6535bbb2b448ab1a6c1dd1d5431f2
msgid "You may also use \"here/memberFullName\" to get the member's name, and \"here/memberId\" to get the login id."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:42
# fadbae8e64ae4012b4f255b61a3d0cf9
msgid "memberEmail, memberFullName and memberId are just a convenience facility of PloneFormGen. They are not part of the Plone API."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:45
# 98f3ad89d56849728ba0c7e077f035f0
msgid "Q. Where is the encryption option?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:47
# 1228926224f14cba81dfe36e9dae7f20
msgid "I understood PFG could GPG encrypt mail, but can't find the option to do it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:49
# 3f7ff00a671e4aa398acd14a948e8749
msgid "Navigate to your mail adapter and edit it. Look in the fieldset list (the list of bracketed sub-forms at the top of the form). Do you see an encryption field set title? If so, you've found the option. If not, it means that PFG was unable to find the gpg binary when it started. Read the README_GPG.txt file in the PFG product folder for details on how to solve this problem."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:52
# 1cffd978f2dd41f3a7738209fdf98813
msgid "Don't forget that after you install GnuPG, you'll need to restart Zope or refresh your PFG product. Where is the save-data adapter?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:56
# a4c5f911a2dc4654979a4ca3c944739c
msgid "Q. I've just added a form folder, and the action adapter list only includes \"None\" and \"Mailer\". Where is the save-data adapter?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:58
# e76cb070379a4732abb32a81c1343fec
msgid "You need to add it to the folder via the add-item drop-down."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:60
# 9e8e992bb97249b79097269070dbdf61
msgid "A mailer adapter is in the \"sample\" form created when you add a form folder because it's probably the most common use. Other adapters need to be added."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:63
# 4d2b65e9ca874679949518536291e33d
msgid "Q. Why are these action adapters content types? Why aren't they just built into the form folder?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:65
# b9e8cffcdd1c43b9a1fdd6123f7edbfb
msgid "There are several reasons. One is that doing it this way makes it easy to copy configured action adapters from one form to another. How do I specify a recipient e-mail address?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:69
# 1dcbbb179f20488eb32e12e8e00142a2
msgid "Q. When I attempt to submit a form, I get an AssertionError \"You must specify a recipient e-mail address in the mail adapter.\""
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:71
# 9ba48646c5c7468e98584863f17a1085
msgid "The error is occurring because PloneFormGen doesn't have a recipient address to which to mail the form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:73
# 6f5916e3f4c640a7ab5d6f611ae6d0bb
msgid "To fix this, choose the contents tab of your PFG form folder. Navigate to the mailer and use its edit tab. Choose the \"addressing\" fieldset and specify a recipient address."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:75
# 734bf63888f746ee8e457c733e6396a9
msgid "By the way, if the recipient address isn't specified, PFG tries to use the e-mail address of the form folder's owner. So, you'll only see this error if you've failed to set an e-mail address in personal preferences."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:78
# 49cd2055100448d8b0d947343f4ab961
msgid "PloneFormGen missing from Add list?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:80
# 13ee685b17a048f5ad17c42f5270420f
msgid "I installed the release of PloneFormGen in my Products directory in Plone 2.5.x, and neither the ZMI (/Control_Panel/Products) nor Plone (Quick Installer) seemed to recognize it after restarting my Zope."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:82
# b3cea86597774cada4c089744d2bb09b
msgid "Zope has probably encountered an error in the course of loading the product."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:84
# 1817747e8e8a4b79bc0615b6851687af
msgid "Try checking your event.log for related error messages. You may wish to try starting Zope in foreground mode (bin/zopectl fg for a standalone zope) for more diagnostics."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:87
# cb52f5fd36d04a7a8cf70c13c1acc7d4
msgid "How do I add a hidden field with the username?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:89
# 6a673b8b6fac47a291661b1db86410e5
msgid "Create a string field and mark it hidden."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:91
# d9ad92f928e84a9abdfdf741e84efce7
msgid "On the overrides tab, set \"here/memberId\" for the Default Expression."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:95
# bd455f86d4834aaea04007ec735dea9d
msgid "To follow this recipe, you'll need to have permission to edit TALES fields."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:98
# cbe42bb853564be495b4327ed036ab12
msgid "Q. Dynamically populate selection fields?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:100
# c8c4a44feec04d0ca0af06b4f4c4bca2
msgid "Can I dynamically populate selection and/or multi-selection fields in PloneFormGen?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:102
# 32206419488e44c7aec112e6c3b8d09c
msgid "Yes, just use the [overrides] panel of the field's edit view to set an Options Vocabulary."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:104
# be87d541efbe40248b8556ae90c92abd
msgid "It should be a TALES expression that evaluates as a list of value/label lists (tuples are also OK)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:106
# ee97cc3dcaac4bb8810681e04f398088
msgid "For example, let's say that we wanted a selection field populated with option values '1', '2', '3', '4' and matching visible labels 'one', 'two', three', 'four'. The TALES code for this would be::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:110
# 95ec38bd5d8f4c508174d69e18401d38
msgid "It's unlikely, though, that you'll be able to do what you need in a single line of TALES. So, a more typical use would be to create a python script that returns a sequence of value/label sequences. If you put that script in your form folder, you can just fill in::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:114
# fda14037fbf04f13ba0d1229174b7987
msgid "in your Options Vocabulary field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:117
# 2aa33b5ca9654498a77c204675824bd4
msgid "Q. Could a selection field in a FormFolder be used to redirect?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:119
# 5a489a30404d4d4bb07dde89dfe1f9ee
msgid "I have created a custom FormFolder, using PloneFormGen. Within the FormFolder, I have created a page and added a selection field with value/label pairs equivalent to: path (url) | company department -->i.e. http://Plone/reports/accounting|Accounting I am wondering if it is possible to create an action override that would 'redirect_to' the 'selected' value in the selection field, something like: 'redirect_to:string: ' If so, how might I access the value from the selection field?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:121
# 7d2f1f61f9dc47c196a63d923fdf24d0
msgid "For the redirection, just put something like::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:125
# 4923029e1bca49049201348d82214b72
msgid "in the Custom Success Action field on the form folder's [override] panel."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:127
# 399035ab1bc14a49ae31542390b4c377
msgid "If you need to do something more complicated, you can use the \"Custom Script Adapter\" in the 1.1 alpha and end your code with::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:133
# d50b9a175d2e4d3a9377d5a0965dd1ee
msgid "Use a \"From\" address other than the site address?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:135
# 1cdfea21267f4b3fa1d437448c1387fd
msgid "One stock-field is called replyto and contains a valid email address. I want this address to be in the From: line - not just in Reply-To:. So I could fill in a TALES expression to overwrite the default sender-address. But what's the correct TALES expression for that?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:137
# aadcac319f92412194ae382426894253
msgid "By default, PloneFormGen's mailer sends mail with the \"From\" address set to the site's global \"From\" address (specified in site setup / Portal Settings). That's the standard return address for portal-generated mail, but you may wish to use another."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:139
# ece8857150ab4242987c38dd2becbab6
msgid "In the mailer's overrides sub-form, set the Sender Expression to::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:143
# 09a576593747490bb092fbe06619811a
msgid "to use the address filled in for the \"replyto\" form field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:145
# 3e43dac72d944e7b9aa48a8fa469bb5f
msgid "You could also specify a literal::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:149
# 698df31614964c80b5f3a30b6cc90db7
msgid "Be cautious about using user-submitted addresses for the \"From\" address. It's important that the \"From\" address be a real one, owned by a responsible person."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:152
# 84b899a233594debad2790d0742ff85d
msgid "Q. Can I integrate my favorite field/widget?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:154
# d945912a4ff04d56ba6554ce1c3ed388
msgid "I'd like to integrate a new field/widget into PloneFormGen so that it will be useful as a form field in a PFG form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:156
# cb14ff9705914484aaad4769e5d11de5
msgid "PFG is designed to allow this, but it's going to take some programming by you or the field developer. See the PFG \"examples\" directory for a heavily commented, really working, example of integrating a third-party field into PloneFormGen without touching the PFG or field code. How do I save the uploaded file from \"file field\"?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:160
# 38c8f764d6c142afb9cd381a2ebc183b
msgid "Q. Captcha field is not accessible?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:162
# d899d84b5f9a4122b9332cadb68ad987
msgid "Or, not always readable for some people with low vision, or using mobile this type of control is strongly blocking"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:164
# 1120deb85c524eb09c32e0518b5ed3b3
msgid "To effectively replace a Captcha, just add a text field mandatory (must match the size of two char. Max.) That can be called eg 'Filter' as help text with the following question: \"to avoid spam can you answer this question: 7+2-1 = ?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:166
# 56a2f7ed63cf4dcb968270e167d275bc
msgid "Next, modify the object and choose the menu 'overrides' and fill in the \"custom validator\" by this expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:3
# c6bc74dfe40344309a8394ee00c76bc8
msgid "Getting Started with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:7
# 2cfbfef22f7d429d9f0885058e5cb68d
msgid "Learn the basics of creating web forms with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:14
# f7629033411f40ce8cc54af524a03596
msgid ":doc:`Please read general PloneFormGen information first </reference_manuals/active/ploneformgen/index>`"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:17
#: ../../reference_manuals/old/archgenxml/getting-started/index.rst:3
# bd44aaf024a64b2291efcdb67910064b
# 72671004606d4a65aeddbad1e2605271
msgid "Getting Started"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:21
# 4b271d813a37491da3f225035de86f73
msgid "The best place to start for non-technical Plone users."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:23
# 2421e4b2dbce490486687e52e9df9cf0
msgid "To get started building a custom form using PloneFormGen, you must first create a **Form Folder**. A form folder is a lot like a normal Plone folder - you use it to organize and hold other types of content. The Form Folder also has some settings of its own that will control the behavior and appearance of the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:25
# 9bfd60cc0e284b63830bbb389113ccbd
msgid "Click *Add Item* and choose Form Folder from the drop-down menu."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:31
# 80cee7995693457eaa4e68cc3cf1bc99
msgid "Create the form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:33
# a66bb73ec2694fff8a90243da563c851
msgid "Provide a *Title* and *Description* for the form. You can also change the wording of the *Submit* or *Reset* button if you wish."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:35
# df066e79b0734145ac65e25cf5403d72
msgid "Ignore the rest of this edit screen for the time being and just click *Save* at the bottom."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:42
# 2308949fca6f40feb52ae2c9bc52a22a
msgid "Form Folder Settings"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:46
# 5a5b48dbae924d53a82fbfba23014649
msgid "Learn how to configure your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:48
# 3b35298c60fe4a45b32ed45c408ebb5a
msgid "You now have a basic form to work with. By default, a form starts with *E-Mail Address*, *Subject* and *Comments*. These are fields you get automatically, every time you create a new form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:54
# fdc47690e0994a5c96590b045992a574
msgid "Adding text to the form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:56
# 277c3deaaec547b9bdf9a819381e95d7
msgid "Before you learn how to add new fields, or change existing ones, let's look at how you can add some simple text above and below the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:58
# 15fb14c3a0dc4790bffcba0f51e82260
msgid "You may want to include instructions to your site visitor about how to fill out your form, or what the purpose of the form is supposed to be. You can add that descriptive text as follows:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:60
# c82e224c7a3047cbbcfc57b5a73b20e4
msgid "Edit the Form Folder by clicking on Edit in the taskbar"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:62
# 8bb304ca3e7e45b5856903573e60caf1
msgid "Now you'll see two Body Text areas called Form Prologue and FormEpilogue (which means before and after). Use the text editor to format your content, include links, and even pictures. Click Save when you're all done."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:68
# 013f30e915464aaaa25e68a44137c2ec
msgid "Overrides"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:70
# 3951a2668ac44f1d8537dfabe5c5c299
msgid "When in the *Edit* mode on the Form Folder, notice the *Overrides* tab on the right-hand side of the page properties tabs. Form submission behaviors can be customized in this tab."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:72
# 4a75168ffb4442569de662359e1aced1
msgid "Read the on-screen help to give you an idea what sort of customizations are possible here. Depending on what you need to do, you may need to learn how to write some basic TALES or Python code. Don't be afraid though!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:78
# 3899e69cff514ce4b85988c3fbd32d49
msgid "Overview of Field Types"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:82
# 2f83d698ea54423399a79e05fbc8d4fd
msgid "Learn about the commonly used field types in PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:84
# 70728e6079ee414383c6cd1f81152ac7
msgid "By now you've seen how to create a new form. The next step is to learn how to add new fields to the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:86
# ceb0c6c5a09a4e959cc78408450663d6
msgid "There are a lot of different types of fields that one can employ. You've probably seen many of those types of fields around on the Internet like a text box, a list you can choose from, a checkbox, radio buttons, and so on."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:88
# 3a25cbdd89bc4691a1a1c593653d8fbc
msgid "Some of the field types that are included with PloneFormGen will not be discussed here as they are used more for advanced applications than for basic web forms. The field types discussed here should be all you need to create useful forms in Plone."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:91
# f7159249a2b64f73a7cbda47bdde7c71
msgid "Common field types"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:93
# ba00719d5ca7428ea9274972652b1168
msgid "Navigate to your Form Folder and push the Add Item button. You should see a long drop-down menu appear. There's a lot of choices, but we've chosen the four most common to focus on for this tutorial."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:96
# e491f0375b174515901fb90ae50f13b4
msgid "String Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:96
# 8958c5cb24e64b55b90cb53d8e579a2f
msgid "This is probably the most commonly used field. It's a simple, one-line text box for gathering info like name, address, e-mail, phone number and so on."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:99
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:184
# 9cbe74b5eee14c8ca02940a7e2ec1658
# 0239b10000fd45cfa996e46da84b2250
msgid "Text Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:99
# 0871871f579e4894ac93c347c333ba52
msgid "A large text box for gathering things like comments or other long-form text responses."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:102
# d33330aebdaa4e0486bbae6567305f8f
msgid "Selection Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:102
# b04997cd24cc4d5a858ebc0eef65ac39
msgid "This field type is to gather one choice from a list of selections. The list can be checkboxes, radio buttons, or a text list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:106
# b53f6df0148049ce8edeb2a541c395cf
msgid "Multi-Select Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:105
# 36f3da79a7d1432f881572b40409230b
msgid "Use this field type if you want to let your site visitor select multiple items from a list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:108
# 747b73bcb7ca45b29a9ba825577cd4f3
msgid "You'll notice that there is a special icon for each field type. It's a good idea to get familiar with how each one looks so you'll be able to recognize the different field types at a glance."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:110
# cb511c6c8c034564b63531cbb099bdf0
msgid "In the next section, you'll see how to add and configure a string field; the most common type of form field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:113
# 7c75799f01cd4bd4b1a41276ae86fd28
msgid "Adding a String Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:115
# 397f94d951474579ad1f225eb8de7916
msgid "Steps to adding a single text line field called a String."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:117
# 5f784d8bca4148b388fc0c2d80580766
msgid "Navigate to your Form Folder and click Add Item. Select String Field from the drop-down menu."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:120
# 524150a1388347c99be35a1e2d5e25af
msgid "The string field creates a simple one-line text box. Some common uses for this field type are:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:122
# f7c8173947964b22958b512706a204d7
msgid "First Name"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:123
# 45eeab89ca9a43218562bcdb3583710c
msgid "Last Name"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:124
# 33313abb090749fa958da8bcb855ac8a
msgid "Email"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:125
# 07dce81983704bdd890eb2375bacf0db
msgid "Street Address"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:126
# f1a921ae46b5405e87c5eb6220986586
msgid "Lots more!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:129
# 2b7d2ad551ee47ed8a3e5769e46b27da
msgid "Basic field info"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:131
# 38757fb3d5ce48dea7bd3e10dc2ba85e
msgid "Many field types have the same information on their edit screen. Here's an explanation of each of these:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:133
# f17c1511b3474c139ed53cbcd3805853
msgid "Field label"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:134
# 489ac92b6f164bcd8cbb1b50ff12dd5f
msgid "The title of the field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:135
# 5f96a0c19e5c4e64b80e4051b8defbe7
msgid "Field help"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:136
# 66bb62eff30145f284686431fb6e70e3
msgid "Some text you can provide to the form submitter to help them figure out what you're asking for."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:137
# 41b08b1a665f4bc1ac00da202d081dbb
msgid "Required"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:138
# b40aa0e9f4a648838c7de4af87e5e5cb
msgid "Is this a required field?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:139
# 9ee6e7a1bd7b4613a44f1b6ca973196a
msgid "Hidden"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:140
# a9110e4f925c43c3a7aa15623cbfaad0
msgid "Is this a hidden field? This is useful for passing data back to yourself."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:142
# f0008dece7054aaca92c166039cce702
msgid "Default"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:142
# 46d54c27c5fa43b4a9fa4ff81db40abd
msgid "You can supply a defult value that the form submitter can change if they wish."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:144
# 70924a6ec0104b45961c575265b5bb09
msgid "Other types of information can be defined for other field types, and we will cover those as they come up. Since we're talking about the string field, let's take a moment to talk about validation."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:147
# 4c3ace29b4074845ad6c3179f7d0aba5
msgid "Validators"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:149
# 7b8906e29aa44240bb964e56db70aecd
msgid "Validation is a feature common to many web forms. A validator checks that the input being provided conforms to a particular format. For example the \"email address\" validator simply checks that the input contains an @ sign (i.e. contact@groundwire.org). There are a set of standard validators available for string fields such as: Valid US phone number and Valid zip code."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:151
# 509c3c2dfd1a451f97180937a0f85c40
msgid "In practice validators can be helpful, but in some cases they may be too restrictive. If your site visitors are from outside the US, they mey become frustrated with trying to get past US-centric form validators!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:154
# 00cd19247ab34c8bbb1048d410c02a4e
msgid "PloneFormGen editing environment"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:156
# 7cd1bda30bac4c8685863ef704243c6b
msgid "Note that PloneFormGen has both an *Edit* tab and a *QuickEdit* tab on the taskbar. The *Edit* mode mainly allows you to edit major settings for the entire form. The *QuickEdit* mode allows you to interactively edit the form. It's much a much easier way to add, edit, delete and reorder fields."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:158
# 32518905f0554025aa56628999e441a8
msgid "In *QuickEdit* mode, you may add fields by dragging them from the toolkit at the right side of the page and dropping it into the target position in the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:160
# 9c53474030054c858e0e4f89258fd670
msgid "If you want to see the form the way that your site visitors would, you can click on View in the taskbar. Likewise you can get to the editing environment from the normal view, by clicking the *QuickEdit* tab in the taskbar."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:162
# d502bd80e9294baf9cdcce34bc5ccbd9
msgid "Note that you cannot complete or submit the form when working in the editing environment. You will need to return to the normal form view first."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:168
# 56f51bea964849eeb651fa1f0795f94a
msgid "Changing the Order of the Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:172
# 89674bb1252c4b61b49514f295e9aeba
msgid "How to rearrange fields in your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:174
# d6d220a11056429bb2c61ff3d1d8ded6
msgid "By now you're probably wondering how to change the order that fields appear on your form. By default, when you create a new field, it will appear at the bottom of your form. Often, this isn't the result you wanted to see."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:176
# 0c409f42857440a8849dc254b1c5e318
msgid "Navigate to your Form Folder and click on the *QuickEdit* tab on the taskbar to enter the form editing environment."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:178
# b3a8869616154cab830caa785c1b4c15
msgid "Notice that the column on the far left called Order. You can move the position of each field by clicking and dragging each field around if you hover your mouse pointer in the Order column. Continue to rearrange fields until you have the layout you want."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:180
# df6e7690029f4806837ae31dff3f1cb5
msgid "To see the results, you need to click on the View tab to see your form the way your site visitors will."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:188
# 54da97d3785540d19c83b22f2f96b7d9
msgid "How to add a text box for collecting comments or other text."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:190
# 2db818cc723f4d64a63a33efbfc66674
msgid "A *Text field* is like a string field except that it's a large box instead of a single line. You can change the size of the field by adjusting theRows and Max Lengthparameters."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:192
# 0cc0e9d9ecf9432f849eb67ba725b4fe
msgid "Rows controls the vertical height of the text box. Max Length controls the number of characters the site visitor can input at a time. If you want to limit a Comments text box to short comments, you might choose 500 characters as the limit."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:194
# 06720bbc42c14d1abdac67b3949cf533
msgid "The *Default* field can be used if you want to suggest some content to the site visitor or wish to show an example of the sort of information you want from them."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:196
# 128580f5a26f4dc48fb6d409a0941e82
msgid "You can also *Reject Text with Links* to discourage people from adding links to your text area field. One reason why you might choose to do this would be if you're asking someone to enter some information and you don't want them to simply link to a blog entry or other online content."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:199
# 5a7921c3aa6244aa880bd14e9cbf0645
msgid "Selection and Multi Select"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:203
# f3a073bd456847e9a7cf954f9f33ab82
msgid "How to create menus and checkboxes for selecting items from a list within your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:205
# 14c756c8ffba43bc843efcb6cb006f09
msgid "In addition to text boxes and the string field, *selection* and *multi-select* are commonly used field types. They allow site visitors to choose a selection from a list, drop-down menu, radio buttons or checkboxes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:208
# 7055e9fea1de48c1b36917fab87796f0
msgid "Selection field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:210
# 75f6c65e726a4a43ae30e8f1ba9f87bd
msgid "As before, you must be in your Form Folder to add additional fields. Choose *Selection Field* from the list in the Add New drop-down menu or the QuickEdit toolkit."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:212
# f4f1eff26b5e443a8bf76d4976769f2d
msgid "In addition to the regulars like *Field Label* and *Field Help*, there is *Options* and *Presentation Widget* to consider."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:215
# 8a6f0b9e7c08469f94775c4ff192c0a5
msgid "Options"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:217
# 633ada24451f45bd836a938f2339b3d9
msgid "Options is for establishing what the options in the field are going to be. Each option should be separated with a line break."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:220
# 338d72d6d3674f1296b31930b1d44c22
msgid "Presentation widget"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:222
# 0155de2b61884264b74f85e582b0cc2c
msgid "The *Presentation Widget* is the kind of graphic used for gathering the input: you can choose either Radio Button or Selection List (a drop-down menu). The option Flexible simply means that you leave it up to PloneFormGen to decide which widget is most appropriate. Basically, if you have more than three choices it will use the selection list. Less than three will appear as radio buttons."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:225
# 4abf3fac667242248f2ad27a08fc1004
msgid "Value|label"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:227
# ccba6a4fa99842a189c6b723bd31439b
msgid "Entering Options can be done in one of two ways. Either \"one line per option\" or the \"Value|Label format\". One line per option is described above, but what about *Value|Label*?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:229
# e9c1c4894ed7431ea604175461dfbfd3
msgid "Let's say you want to present some choices, but the actual value recorded by the form is different than what the form submitter sees on the screen. For example, let's say that you want to ask a site visitor what county they live in, but in your program work you classify counties into regions like \"Northwest\" and \"Southeast\". Instead of asking the visitor to identify which region they live in (which some might get wrong or misunderstand) you could present them a list of counties."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:231
# f1c609268eac4cad93143a37dc73d26b
msgid "In the above example you would format Options like this::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:240
# 49f8eef835a542149ce751d917ae50ef
msgid "In this example, if a visitor selects \"Jefferson\" as their county, the form would record the entry as \"Northwest\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:243
# bd654746aaf44a66ab28d91e39d9c886
msgid "Multi-select"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:245
# 645c8aa7133f42fd95db9e6e0b12e413
msgid "Multi-select is very similar to a Selection Field except that you have an additional widget (the checkbox) and your site visitors can choose many options from one list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:247
# 460b5f56afe34080bea98e64046aacf8
msgid "If you plan to use the Selection List widget for a multi-select field, it is helpful to include a note about the Control key in Field Help. In order to actually choose more than one option in the list, you must hold down the control key (CRTL) on your keyboard and then click to select/de-select options. Because of this, it is most often the best choice to use the Checkbox widget instead of Selection List for a multi-select field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:250
# d3f4122f225d4418829f8caca1c57ce0
msgid "The Thank You Page"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:254
# e58b26160ba5410d827b7215f8add5ad
msgid "How to customize the page a site visitor sees after submitted the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:256
# 13292e6467444098b39152fd28e1cb48
msgid "After a site visitor has filled out your form and clicks submit, they will see a page thanking them for their input. Look in your Form Folder and you should already see a Thank You page in the contents."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:258
# dd4e94246a9743ed8b78645cdadb2007
msgid "It doesn't matter where the Thank You page appears in your Form Folder contents. It will always work the same, no matter its folder position."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:260
# e878a55ec00344a29798bafa609df920
msgid "By default, the thank you page only lists a summary of what the site visitor put into the form. Here's an example of what that looks like, to the right."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:262
# 929f9494c1e440f698b4a8b4c3057835
msgid "Note: You will only see this result if you fill out the form and submit it. Otherwise, if you try to navigate or link to the thank you page directly, you get a message that says something like \"no input was received\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:265
# 7a617b3ac92b40d39a2dc107c94ffa0e
msgid "Add content to the thank you page"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:267
# 1d2268ccfeef4cbebecf2bad666787c7
msgid "The above example is decent, but there will be times that you may want to say something more, or even provide a few links for your site visitor to follow. Edit the Thank You page in your list of Form Folder contents. You should now see the familiar Title and Description fields, but you'll also see:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:269
# ce22546864bf44629e4817292c8b775f
msgid "Thanks Prologue"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:270
# d6e08274bcb04bdc88326c7e8917dd53
msgid "Thanks Epilogue"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:271
# bf418a8c41834ef39e82ab8d64215360
msgid "No Submit Message"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:273
# 3160d9822f1542de865e794063d603ef
msgid "If you've chosen to display any field results the Prologue content will appear before those results and the Epilogue content will appear after. If you aren't going to display field results, just use the Prologue."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:275
# ab4b8fb272fa4cc08a79b14566ce040d
msgid "Should you wish to change the No Submit Message (remember, if you just hit submit on your form without filling out any fields, you'll see this message) you can do so here. You have the full power of Plone's text editor so feel free to include links and formatted text here."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:278
#: ../../reference_manuals/old/archetypes/fields/index.rst:3
# 39c352ebb20a4c238132a5b221316a2d
# d36e12192a1d4171a1daad8da04a047f
msgid "Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:280
# 8d349f53965f47ba84536061ad2a55ac
msgid "thanks-fields.gif"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:282
# 58a21eeea01b4b968681ac6397692bb1
msgid "When editing the Thank You page, notice the Fields tabnext to Default. Here's where you can control which field results to display or which ones to take out. Simply uncheck Show All Fields if you don't want to display any results on the Thank You Page."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:286
# c9ac7dab492549d98162fce3f5faba9f
msgid "The Mailer Adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:290
# 819d1441508e4a3eb2dc216d5bc6fcc9
msgid "Learn to configure the adapter which sends an email after the form is submitted."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:293
#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:12
#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:12
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:2
#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:2
#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:2
# 6155071bad6440dba435b614e09dfc54
# bd3090e0e6e64b8ba8ccb488e1a3b0bc
# b4c5a01609354187a6ec30ecf0386cd6
# 75654f9e2053499e8669f4835eb440bf
# 19b259d7afd7464c949b3218d9c78f6b
# aa3990b7ceba47beb324c778849b05e3
msgid "Overview"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:295
# d3de57d2266a478eac60e53042aeab77
msgid "Adapters control what happens to the form data that your site visitors submit the form. The Mailer Adapter will send form data to an email address or addresses of your choosing. The Save Data Adapter will save the results in your Form Folder so that you can export any time you wish. You can even use adapters concurrently to get the functionality of both."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:298
# 59de891e6a2e42778c94a148afcdbfd1
msgid "Configuring the mailer adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:300
# 17e5c35b81bd47f3be724c2c66b9a88a
msgid "The *Mailer Adapter* is probably the more complex of the two adapters covered in this tutorial. As such, we won't go through and explain all the options present in the Mailer Adapter. However, we will cover the most important options available."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:302
# f783fef0c228480eb9a46afa52916a9a
msgid "Go ahead and edit the Mailer Adapter in the form editing environment. The first screen you see look like this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:304
# ae9ad7feff3f46ebb8d5e86daaf296ed
msgid "From here you can do three things:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:306
# ffc98602670e4eb9b56eee476962fa01
msgid "Change the Title of your Mailer Adapter (really no reason to unless you have more than one)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:307
# f89ebd2c8ea945bc8d884844147f75d5
msgid "Choose a recipient name"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:308
# a1d98b52edf84445b22fe5a3687d9b5b
msgid "Choose a recipient email address"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:311
# 2dbce89a2f1543778d31b4aa472550ff
msgid "Addressing"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:313
# 208f526942474cd683c2c20a74c85ca4
msgid "Now notice the tabs [default] [addressing] and so on. Click on [addressing]."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:315
# 802f585c1bb74077adcde5a496031f73
msgid "The *Addressing* screen allows you to make selections about other recipients any dynamically populate the *From* and *Reply-to* fields directly from form data."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:318
# 6faf3cf931bc43b9bc68a4622b7f76a1
msgid "Message"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:320
# d794cb0bf8f544bcb68c86ad88fdbe0c
msgid "The Message tab allows you to configure the:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:322
# 81d2f478ebca4389b699d860e332a9b8
msgid "Subject Line"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:323
# 3119d8b6770d41849cd4f1a49adf79c0
msgid "Email body content"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:324
# fe88748e4e704b5395393200230d0825
msgid "Form field data that appears in the email message"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:327
# cafab6246de94d4896440fe64106cc6e
msgid "Template, encryption, & overrides"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:329
# a08531c47aa74ec4a1b085e2be244c18
msgid "These options are beyond the scope of this tutorial as they require a discussion of HTML, TALES and Python programming languages as well as an understanding of mail server configuration."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:332
# f11982b7568447e3b0350b955778a682
msgid "The Save Data Adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:336
# 68c5da8032854b3cb46b931946a327e2
msgid "Collect and save answers from each from submission with the Save Data Adapter."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:338
# e8a1fed4189b4339963ff75288f48a8e
msgid "Unlike the Mailer Adapter, the *Save Data Adapter* isn't automatically created when you build a new Form Folder. As such, you must add it yourself by clicking Add New (when you're in your Form Folder) and selecting the *Save Data Adapter* from the drop-down menu. Or, drag and drop it from the toolbox in QuickEdit mode."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:340
# 08c93090a6394b88a257ff1ab2e1eb57
msgid "The first thing you'll see is a screen like the one to the right."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:343
# b71b66bfe47e4312bf7cf56ef56d1e38
msgid "Configure the adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:345
# d5b24caa49b4476296b7a6a577071939
msgid "Enter in a Title that sounds good to you (*My Saved Form Data*, for example). Your site visitors won't see this title at all, so anything will do."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:347
# 6e06c82b71b7487fb71bc33437a10c9a
msgid "Next, you can select some *Extra Data* to store if you wish. Most of these choices are for fairly esoteric things, but Posting Date/Time could be helpful if you want to know when someone filled out your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:349
# ee4f050a1de846e2a77416e6de538e62
msgid "*Download Format* depends on what your preferences are, but *Comma-Separated Values* is probably the most common. It really depends on if you are going to plug the info into a database, and what type of file is most appropriate for that. If the info is for human eyes only, then it doesn't really matter what you pick here. Europeans: you may choose to use a colon rather than a comma for CSV on the PloneFormGen config panel in site setup."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:351
# 4dba235a613442eeadc0922cc21233ec
msgid "Now click on *Save* to finish. You do not need to put anything into the Saved Form Input box. If your Save Data Adapter had any data in it, it would appear in that box."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:353
# a49b1d10cffc42c8ab10cc1dd32762c7
msgid "That's all there is to it. Sit back and wait for the data to come pouring in!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:356
# 50c6d647ce7b49cea53cdc26fe5d17a7
msgid "Retrieving your data"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:358
# 5393e6a2b5654843ad15a61bf753c70e
msgid "Once your form has been filled out a few times by site visitors, you can start retrieving the form data. You need to navigate to your Form Folder and click on the Contentstab to get a view of all contents."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:360
# a1e6d936d1964ad3b12306c8caebacdb
msgid "Now click on your *Save Data Adapter*. You should then see a screen like this one at the right."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:362
# c2d8a1c48b8a4974b1e661b0c9478c21
msgid "You can download the form data as many times as you want. The data will always be there as long as you don't delete the *Save Data Adapter*. If you click *Clear Saved Input* all data will be erased as well."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:365
# e5bc055d556e4a3380d08e46ae456436
msgid "Safety Net"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:367
# f3a196f0d2cb466e9d890f94f855d042
msgid "A common way of saving important data is to use two *save data* adapters in your form. Use one to occasionally harvest new data and clear it. Use the other to save all your history."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:372
# 6198baa92f4846acb1bb910da0a53bd9
msgid "This document was originally written by Sam Knox for Groundwire. Thanks to both Sam and Groundwire for passing it on to the Plone Foundation."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:3
# 3bcb650052f74c1c8bf1fe35b8067848
msgid "Using GnuPG encryption"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:7
# 622fc044007a4a5d93ca6aa2a5041892
msgid "The Gnu Privacy Guard may be used to encrypt emails sent by PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:11
# 72be87e1054243ae9fcdcb494c6e508a
msgid "Encryption is serious business, and this how-to does not teach you about it or about the Gnu Privacy Guard. You should develop expertise with both of these before attempting to enable PFG encryption."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:13
# 5e6f1046facc46d5adc5971c4e669142
msgid "Using GPG encryption with PloneFormGen requires:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:15
# 1b2dd9456a3e437f8546a744ba0a6ec4
msgid "1) That gpg be installed on your system and available on the search path or in a common location (e.g., /usr/bin);"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:18
# 15f8cf111f014ce8a4b5a5290346414b
msgid "2) That gpg, when executed as a subprocess of Zope/Plone, be able to find a public keyring;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:21
# 67c5de67af1b4a9d934bfbe3ca5ea852
msgid "3) That gpg, when executed as a subprocess of Zope/Plone, have the rights to read the public keyring;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:24
# 1605c221610f456aa0c2654720a12487
msgid "4) That you, as administrator, understand how gpg works, and be able to maintain the public keyring."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:27
# 35bddc186361422e9060b8b60803f527
msgid "PloneFormGen tries to find the gpg binary when it's installed, when the product code is refreshed, and when you restart Zope. If it finds it you will see an \"encryption\" field set in the mailer adapter form. If you don't see the \"encryption\" fieldset, it means PloneFormGen didn't find a gpg binary. Fix this by adding the path to the gpg binary to the PATH environment variable when you start Zope."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:34
# 59fab7d3279d4ceba5342548730deafa
msgid "gpg will typically look for a public keyring in the current user's home directory, .gnupg subdirectory. If it's not finding it, consider the possibility that the user id you're using to maintain your keys isn't the same one that you're using to run Zope. You may need to use the GNUPGHOME environment variable to point to your .gnupg directory. Make sure your Zope process can open the directory and read the file!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:41
# baed7816f1564733945decd3e1415e06
msgid "Windows"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:43
# 0fd6143674ab41ed90b9b957bc43344a
msgid "gpg can work in a Windows environment, but you'll need to have a command-line gpg. http://www.cygwin.com/ is a good, free source."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:3
# 8437e4a45abc455a88d750a51cb6ca2e
msgid "Creating forms without programming: PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:7
# bb3cc8d31b624e21af7f48ec25190f89
msgid "PloneFormGen allows you to build and maintain convenience forms through Plone edit interface."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:12
# ac6c310ea76442ed9009223645f39fac
msgid "*PloneFormGen* is a Plone add-on Product that provides a generic Plone form generator using fields, widgets and validators from Archetypes. Use it to build simple, one-of-a-kind, web forms that save or mail form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:14
# e5b43f3680d64780a91d385a51bc0ff0
msgid "To build a web form, create a form folder, then add form fields as contents. Individual fields can display and validate themselves for testing purposes. The form folder creates a form from all the contained field content objects."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:16
# 1cac107764ed410f877ec77560554711
msgid "Final disposition of form input is handled via plug-in action products. Action adapters included with this release include a mailer, a save-data adapter that saves input in tab-separated format for later download, and a custom-script adapter that makes it possible to script simple actions without recourse to the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:18
# 0392fec0c8c74348ae4b285c51821440
msgid "To make it easy to get started, newly created form folders are pre-populated to act as a simple e-mail response form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:20
# 2afd5d0a9eab4137a04f20ea62b0bb45
msgid "`PloneFormGen product page <http://plone.org/products/ploneformgen>`_"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:23
# 265d8d60a3d9411e9276ea75dffc6e3c
msgid "Getting started with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:31
# 57f108fb7fe24aa78a0ce7f194185cdb
msgid "PloneFormGen topics"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:49
# 2d6e7fd0d5de44d3a1d33c4c34c433ea
msgid "Advanced topics"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:3
# a727576e282742bcb21926b6be209ceb
msgid "Installing PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:7
# b26065a3d6e14672a5110eb4db36c145
msgid "PloneFormGen is a Plone add-on product, and is not included with Plone. Fortunately, it's easy to install."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:9
# 0f6aae86abde4c6f8997334d8a949aee
msgid "PFG installs just like most other Plone add ons. Edit the buildout.cfg file at the top of your Plone instance and look for the ``eggs =`` section that specified Python Packages that you with to include. Add PloneFormGen:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:18
# e028188b4bb1451b902be65e84b86398
msgid "Run bin/buildout and restart your Plone instance. Dependencies will be loaded automatically."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:20
# 625749eb42144df1b5ddb63bd07cefc2
msgid "After restarting Plone, visit your site-setup page and use the \"add on\" configuration page to activate PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:3
# f9a5f2818da5444bb232ce6237d9ac33
msgid "Adding a JavaScript event handler to a form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:7
# 5ca46a6fa7194cbb92d393f8a8f98af4
msgid "Need to make your PFG forms more dynamic? It's easy to add JavaScript."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:9
# 65551fd66178493c8dfa074b0f8092a9
msgid "There are two basic steps to injecting JavaScript into a PFG form:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:11
# 2075a0b636cd44d1a7f2a466f57622d6
msgid "Use the Zope Management Interface to create a text file (object type: file; mimetype: text/plain) either inside the form folder or in a skin folder;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:13
# 4586e7c51bc947f6aa472153efe345e3
msgid "Use the form folder's edit / overrides pane, header injection field to tell PFG to inject it into the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:16
# 174fae869e5a4dafa53ec056fdfc3544
msgid "Injection"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:18
# 2e19ec414b73449480e41d8acfe99da4
msgid "Let's look at the second step first. Let's say that your JavaScript file is named form_js. Then just specify::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:22
# 7cb1ab9b04574676bc6506b929fa661a
msgid "in the header injections override field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:25
# d9c8d8d8d05e48de8c94afbb7f333e9c
msgid "The JavaScript"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:27
# eedae7d9e5b44a1689f1bb934a1648d3
msgid "There are a couple of considerations here:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:29
# 7a1bdaa8741f4d27bcb665e901f346c4
msgid "Since this is a header injection, you'll need to supply the ``SCRIPT`` tags;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:31
# 3d16b47be8c54096ab5eea0c41a2e606
msgid "You'll nearly certainly want to use jQuery to attach the event handler, since jQuery is part of Plone."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:44
# cfae7543be6945de83fe97f78ac73a20
msgid "This code fragment shows off both, and attaches an alert to every input in the ``mqy-questions`` field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:46
# 37ca805a487f406097f7d656ba0d07cf
msgid "Note the use of the common jQuery idiom:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:54
# c293dc906d614d5faf25f57cb61f3577
msgid "This accomplishes a couple of things: 1) it sets the code up to run once the page is loaded; 2) it aliases \"jQuery\" to \"$\" so that we may use common jQuery shorthand."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:57
# a970cfad8b1841498799f8edf84f2e48
msgid "An alternative injection"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:59
# 3c518d7dc6464a469d34256472ea8781
msgid "If you want to use a separate JavaScript file that is actual JS (no ``script`` tags) and will be shared among forms, just use the header injection override like this::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:63
# d9492689ce13445dbf6754013d072238
msgid "assuming your script is named ``form_scripts.js``. You may make it a little more sophisticated if you need an absolute URL::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:67
# 1ca09464954940dd8cf377000e055d47
msgid "using TALES string interpolation."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:3
# 3566d1f9c2a5480a9ff10df25fdc089c
msgid "Creating a Multi-Page Form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:7
# ca4e7433c2d949bcadba79c28e66a0c1
msgid "You can create a multi-page form as a chain of form folders."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:9
# de4e203c7d28462981abd8669da15b8c
msgid "Creating a multi-page form is probably much simpler than you might suppose. You may do it by just creating a sequence of form folders that each link to the next. The basic procedure is:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:12
# aaad7173a5a74c5aac34263208f6abf1
msgid "Create your sequence of form folders, typically all in the same normal Plone folder;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:13
# a38997f48bf44bf7949b865e3b64e044
msgid "On all but the last form folder, turn off all action adapters and set the Custom Success Action override to \"traverse_to:string:id-of-next-form-folder\";"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:14
# f52f4e22d2b04f2e8a25eb51b43a289e
msgid "On all but the last form folder, set the Submit Button Label to something like \"Next\" and turn off the cancel button."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:15
# 5665e5a909e8488799eb71cfec30a645
msgid "On all but the first form folder, set the Exclude From Navigation flag in the properties tab;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:16
# 83922de7bf0642d0af5c51f209595ef5
msgid "In each form folder, create a set of hidden form fields matching all the fields in all the previous forms;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:17
# b666ffe8be06464abed254f13b3c403f
msgid "In the last form, turn on your real action adapter(s)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:19
# 9238b9bd4d9740449f2e77f94c5900df
msgid "As your user moves from form page to page, input will be automatically saved in the hidden fields of subsequent pages."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:23
# 685fc2264a0c467e9f8cb5c9ca432825
msgid "A Note on Hidden Fields: The hidden flag is not available for all form field types, but you don't need it. String, Text and Lines fields are adequate to carry all the basic data. Use a hidden Lines field to hold multiple selection field input, string or text for the rest."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:25
# b91aef9c4ac5473b9b714ced6d885261
msgid "An added bonus"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:27
# 77b41fb322c64220a75264c7f36aa34e
msgid "If you want to create a sequence of forms, where the answers on form_A could lead to a form_B or form_C, you can use a traverse_to override."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:29
# f88da7bb698b4b88b98a5e66b4a7e7c8
msgid "Create a selection field in form_A, which could be called 'formnext';"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:30
# ccee9f2cfcd34ce3abf39a5a59e4f02e
msgid "As values in the selection field, put the paths to the next forms in the sequence;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:31
# 76b5cc8d00364e84b59d53142e3b1736
msgid "Then, in the form overrides -> custom success action use"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:33
# 030e8db526ba41669ac32497784fe39f
msgid "traverse_to:request/form/formnext"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:36
# dbda22f623264a978d716b7c5398fb06
msgid "use traverse_to as opposed to a redirect_to as this will preserve the form object in the request."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:3
# 8a5dfba1f2464edb9115c9f2f8470df4
msgid "Overriding field defaults dynamically"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:7
# 697dd511b97447ee834c1ab9ffb3c14f
msgid "PloneFormGen allows you to supply dynamic field defaults by specifying a TALES expression in the Default Expression field of the overrides fieldset (sub-form). This how-to explains what that means, and offers a few examples."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:9
# b63b5ead9b7d4ad9892613a7adbaed1d
msgid "Creating a dynamic field default means to have a form field's initial value change with context. We might, for example, wish to use a member's e-mail address, which would vary with the user. Or, we might be looking up some data via a catalog or RDBMS query, and wish to supply that to the user for correction."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:18
# b75abeed00c146a3b766f6b87b57f68b
msgid "A quick example"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:20
# e40c260e736a4cfe90874b1d5394b090
msgid "Let's say you wish to put the member's id in a string field default. You may do that with the TALES expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:24
# c6fcc12878a24b5b80b0161979c4a15f
msgid "This is a path expression. \"id\" is found in the \"member\" object and returned."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:26
# f28f56c822774f9890240e46e6f29556
msgid "There's a gotcha here. What if the form is viewed by an anonymous visitor? They'll receive an error message. We can avoid that with the expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:30
# 05195f78ac96403494e8e1191bf99667
msgid "The vertical bar (|) marks alternate expression that is used if the left-hand expression is empty or can't be evaluated. Here we're saying to show nothing if member/id can't be evaluated. Using Python"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:33
# 3370d34d3fa24bd3a63412fd4075213a
msgid "You may also use Python expressions::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:37
# 4d2a94317c9f4023b069ea2857116517
msgid "would supply a value of 8. This is trivial, but what about::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:41
# 014ee420f54f4661aae7318e1e0c0df8
msgid "This would supply the current date/time plus seven days."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:74
# 1c49c0c31e074d72a9629690cdfb01d9
msgid "When you compose your TALES expression, keep in mind that it will need to return different types of data for different types of fields. For simple field defaults, return a string value; for the lines field, return a list or tuple."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:77
# f06e825ff618445883eeee5e9e3426c2
msgid "Calling a Python script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:79
# 90a3961e905343629a1fa25d5aa38e75
msgid "You'll be frustrated fast if you try to do anything smart in a single TALES expression. If you need to do something more complicated, add a Python Script to your form folder and call it via TALES. For example, if you added a script with the id getEmail, you could call it with the expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:83
# 66237db2eb0a43ee9949a32d09dc99e6
msgid "Make sure your script returns the value you wish to use as a field default, in the appropriate format. Setting Many Defaults With One Script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:86
# 75be5b1990934d1bb0d53d2a007b5511
msgid "If you need to dynamically set several fields, you may do it with one script. Call the script by specifying it in the Form Setup Script field of the form folder's overrides fieldset."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:88
# 39edd39651ee4dbab60173a95a82a54c
msgid "Set the form fields by putting them in the request/form dictionary. Make sure you don't overwrite anything that's already in the dictionary, as that is probably previously submitted input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:90
# 9f56d9c80d5c41edb4be7a4f8b1dc97e
msgid "For example, we could create a Python Script (using the ZMI) in the form folder:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:98
# ead6fe45af8c4b779b3ed9b786ea1e1d
msgid "If the script id was setTopicDefault, we'd call it by putting::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:102
# 289b27cb9dab4477b0482acc8535ec37
msgid "in the `Form Setup Script` field of the form folder's overrides fieldset."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:3
# 13d61551c00f495ea5da61b66395d8ea
msgid "What's in a Request"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:7
# 30c2f846474f41f2a6892762c4d891b1
msgid "If you're trying to use PloneFormGen overrides, you're going to need to use the request object. Here's a quick trick for exploring it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:9
# a36edde800d54a37bd02550aacc38cc9
msgid "As a page is assembled by Zope and Plone following a browser request, information about that request is bundled into a non-persistent, pseudo-global request object. This object is available in the scripts, templates and TALES expressions you may use in creating PloneFormGen overrides. It will contain the form input submitted by the user."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:11
# a5f541ab8d354da19a137862b43f11c4
msgid "To effectively write more complex overrides, you're going to need to know how to get information out of the request object."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:15
# 4630033be510446095ec1f99451d9508
msgid "The Request class itself is well-documented in the Zope help system (API section) and in the source at Products.OFSP-2.13.2-py2.X/Products/OFSP/help/Request.py."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:17
# a45f474f44174f8d8f29b1a0834a6c63
msgid "Here's a quick recipe that will help you examine the form input contained in the request."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:19
# 46e2e2c77b55465dbd53935c2c06c2e4
msgid "Jump into the ZMI and navigate to your PFG Form Folder. Inside it, create a Page Template named showrequest. Now, just before </body>, add::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:23
# 17707cf39f8d4a0eb50ad96da8ae7b80
msgid "Note: when the request object is called, it renders a readable, HTML version of the data. We use \"structure\" to prevent escaping the HTML."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:25
# df253eadcf7e408aa65239f62eeb946f
msgid "Give your template a title and save it away."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:27
# d4dab12bd8a7485cad2d578543cfb795
msgid "Return to Plone and your form folder. Edit it, and on the form's [overrides] pane, set a Custom Success Action of::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:31
# 3b8d892358924854998271bbdc8a310a
msgid "Note that this will override any thanks page you've specified. Just clear it when you're done developing."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:33
# 2c06fcb5654d4cdbac431c47a5771893
msgid "Now, just fill out your form, and submit it. You should see the contents of the request object. Take a particular look at the form section. That's a dictionary available as request.form when you're composing an override."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:3
# e0edc53ecda9473b89f0c8fb4e4e7fb1
msgid "Restyle a form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:7
# d3b61c5588944613aee07613fc18e575
msgid "How to inject CSS into a form page to turn a label green ... or pretty much anything else."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:9
# 06b394d2ffb6404983e6d3af1631ab4e
msgid "The general answer to \"how do I restyle a form\" questions is: use CSS."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:11
# 1d802b9d41284bf6869667ae7744a126
msgid "The underlying Archetypes form generator surrounds every form element with a <div> with a distinct ID. For example, a sample form with a textarea contents field has the generated XHTML:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:27
# c847f90c1e08406bbf5d18ed4392d92c
msgid "That's more than enough ID and Class selectors to do pretty much anything in the way of visual formatting."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:29
# d09e7d9dabaa49f3ae490463847178c9
msgid "So, how do we get the CSS into the form's page. You could add it to the site's css, but there's a much easier way. Using the ZMI, create an object of type File inside your form folder. Set its Content Type to \"text/plain\" and give it the ID \"newstyle\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:31
# f1995af5fbeb46098f708ba7783e515c
msgid "Let's turn the label for the comments field green. Just fill in the big text field on your file with:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:41
# d30cb9f06c5c45f1b5333260e35f4a73
msgid "Now, just save it, return to the Plone UI and edit your form folder. Specify \"here/newstyle\" for the Header Injection field of the ``overrides`` pane. Now, enjoy your green label."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:44
# c7523fc49cd44b608a1fe40005668b22
msgid "Putting checkboxes in a row"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:46
# 5b5ad854ea0249a3aa977ffb593cb713
msgid "Now, for a more useful example. It's a common requirement to want to put a set of checkbox fields on a single line."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:48
# 8b276b1300d64c6883bad033a544cbdb
msgid "The easiest way to set this up is to create the list of checkboxes as a multi-selection field with \"checkboxes\" designated for display. That's going to generate markup that will look something like this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:71
# a70a0ba457b0424a9adc86dd0159fd6b
msgid "Note that each checkbox/label pair is in a ``DIV`` with the class \"ArchetypesMultiSelectionValue\". The basic CSS couldn't be simpler:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:82
# 68bbe3f813d14628b4d157359bd81c1a
msgid "Of course, you'll need to do some more styling. First of all, you'll need to set a ``clear: left`` on the following control. And, you'll need to do some padding."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:85
# 8e8335f90ee04811a0bec62673beb6cb
msgid "Putting string fields in a row"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:87
# 702a4aeb8a754ce4b60aed9bcfa2c391
msgid "Making string fields display horizontally is a little different than the solution for checkboxes.  There is no div wrapping the string fields like there is with check boxes.  To get around this, add a fieldset and put the fields in the fieldset.  This also lets you isolate the horizontal fields from other vertical fields.  Here, two fields are required, one is not.  The markup will look similar to this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:114
# da6cfac3568e45058fb41d20b74eb1f2
msgid "Here is the CSS:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:142
# 1461db80b0cf431897c68c4e2efeb884
msgid "An alternative way to inject CSS"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:144
# 3e69be01aa924e5c84cd1725992fdae6
msgid "Let's say you've got a lot of CSS. You may want to use an external style sheet file rather than inject the whole bundle into the header with every form display."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:146
# 0d3f51d0a8174bea9e601cad938ad9d1
msgid "Let's say the CSS resource is named ``form_styles.css``. Then, just put the following in your overrides / header injection field::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:151
# effdd21906c44051b70642c482a88d32
msgid "We can get a little fancier to generate absolute URLs for the style file::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:156
# 584638bd63c54d4eba8781a43ebf1528
msgid "using the string interpolation feature of TALES."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:161
# f6c7b7166ffe41b393b87a4d43881c2a
msgid "Need to do something more sophisticated? You can use a Python script to generate dynamic CSS or JavaScript."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:3
# 17559f69a9cf479ab1aa94c29840da82
msgid "Using a selection field to pick mail destination"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:7
# 770afde7d5754039a3f7cd922c37e45c
msgid "You may allow form users to use a selection field to choose a destination address for their form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:9
# d14ed06a56384565a8fbe49ce2b306b9
msgid "I'm trying to use a PloneFormGen form as a support center for my project and I would like to have the mail sent to different email addresses based on a choice from a selection field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:11
# 3c08371b5dd14f27b4d6676a5f6b4169
msgid "How can I do it?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:14
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:183
# 839562cf92ec4dcda7581305d7746185
# a4b8c2e505bf4e37926847ac796a1677
msgid "The form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:16
# ed7eccbda8604ddb971b68c6d06bdd12
msgid "First, create a selection field in your form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:18
# 175f09a71835415ebefbdcc206d4b250
msgid "In the Options field, specify your set of possible destination addresses in a \"value|label\" format where the e-mail address is the value and its readable name the label. For example::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:23
# 8ae5f9bc6a6e497d93133e880031e8c9
msgid "Then, pick the address (the actual e-mail address value,  not the label) you wish selected by default. Put it in the Default field. Make sure the Required checkbox is selected."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:25
# 7548a0aab8334d9b83d14fbe23f8b25e
msgid "Save the form field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:28
# d14bd007b7f04138af7a73c8051330b3
msgid "Configuring the mailer"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:30
# 8033ebe01e3748388ec835a8c10bca0b
msgid "Now, edit the mail adapter for your form. (Navigate to the form folder, click on contents, find your mail adapter and follow the link; select the edit tab.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:32
# df9916caa033453e85567aabfb58f6eb
msgid "Choose the `[addressing]` sub-form and find the Extract Recipient From field. You should see a None choice and a list of all of the selection fields in your form. Select the field you just created and save your changes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:3
# a47ad5caa33e448784b93e72b8d6ec17
msgid "Simple SQL CRUD with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:7
# 85c646ecdf754fdebb61f8434e6e3795
msgid "A step-by-step lesson in using PloneFormGen to read, insert and update rows in a single SQL table."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:14
# 91e51663cb934f7d802333c5d6974d11
msgid "One of the goals of PloneFormGen is that it should be useful for simple update operations on an external database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:16
# 501db14091fd41e2a88a8defc73b6eda
msgid "This tutorial covers the use of PloneFormGen to update and insert rows in a single-table SQL database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:18
# d43694456f104cc38d03ef69649837ea
msgid "The simple application we'll develop here would need quite a bit of polishing before you'd wish to expose it to the public, but it will demonstrate the basic techniques."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:20
# 3cb18bb359ab4450a901b008dfedfff0
msgid "Skills required to understand this tutorial include:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:22
# 4db384a1fd2241a881ad5b18a25d5a1c
msgid "The ability to add an SQL database connection and Z SQL Methods via the Zope Management Interface and to understand what they do. If you've never read the Relational Database Connectivity chapter of the Zope Book, take some time now to do it; it's fundamental."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:24
# 7ed83da8a42849559557a973996aa7b5
msgid "Simple Python scripting via the ZMI. Read the python-based scripts portions of the Advanced Zope Scripting chapter of the Zope Book if you're new to this vital Zope/Plone development skill."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:26
# a5c1886f0a634ce9a2f4021b554371a7
msgid "Our basic steps will be to:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:28
# b791c63367bc4992aa2ca49022e520cb
msgid "Add a database and table to our SQL database and create a matching form in PloneFormGen;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:30
# 70d9d62b667243f399c0aacd552b20ad
msgid "Add a Z SQL Method to insert rows into the database and show how it can be used in PFG;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:32
# 29a2ced7b7f54e7585e79b9d7f761f5a
msgid "Add a Z SQL Method to read a row, write a Python script wrapper and use it to fill out the fields of our form;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:34
# 87f671d45f304aa781febbc585522765
msgid "Add a Z SQL Method to update a row, write a Python wrapper for it and the insert method and use it as a form action;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:36
# 5030665651f24baf841e87a13e0b5e3f
msgid "Consider the security implications of the fact that the SQL access methods we just created are not part of the Plone workflow."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:38
# d8ca60edbb7e46ada04b4d0526d2dbf8
msgid "By the way, we'll be skipping the \"D\" in CRUD. Deletion is up to you. :)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:42
# ee6c604e9fda449db9305a604ff59a27
msgid "This tutorial uses *Z SQL Methods* because they're easy to teach quickly. If you're doing any significant database work with any Python application, `SQLAlchemy <http://www.sqlalchemy.org>`_ is a much more scalable way to use a relational database from Plone."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:45
# d707368639f94a90a1d65fea560895f0
msgid "Database table & form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:47
# 47857bdef499407e824d1ad249a5dea3
msgid "In this step, we create a simple database table and a matching form. The database"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:50
# cfe07ad6c36044028c44e6b1bda4d13b
msgid "Hope you're not feeling too ambitious at the moment, because this is going to be a very simple demonstration table. It's going to have just three columns:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:53
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:81
# 4a001475ed0348858b51231aa359749a
# 438d0689f7694828af5af93521616deb
msgid "uid"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:53
# db526ca2afbe4b928d0f45a1c99951e5
msgid "A unique ID that's the primary key for the table. We'll make it auto-increment so that our SQL server (MySQL in this case) will do the work of keeping it unique."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:56
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:84
# 464402b3e2b543b08500b624b5dcb272
# 99604e3c490448bcaddf7fda7a9d1ff8
msgid "string1"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:56
# 4e7c1e25a97c4e8cac4efa4ff7b31e64
msgid "A simple string."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:60
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:87
# 6d80cd2d98bc4393a0418cb867bd4763
# 3e22a856e6ea4c2f9126d80798cd8a90
msgid "string2"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:59
# 0b8a3fa7e24a4f139ae8a2a7431e14dd
msgid "Another simple string."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:62
# 1355dd57c85d41faae9b1e1d1f2dcfcb
msgid "(I told you this was simple!)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:64
# b4523f73af974e9ebb11170bc9d25d0f
msgid "Create a test database and then the table. In MySQL, the CREATE code to set up the table is:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:75
# 410d3c158a9b4771a2f4c94888f32afe
msgid "Now, set up an SQL user with privileges adequate to select, insert and update the table. Use that user identity to set up an SQL database connection object via the ZMI. (If you're using MySQL, this would be a Z MySQL Database Connection.) The connection must be in a place where it will be visible to the form you'll be creating. The form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:78
# dc8b9f7451e745d0806f1423948e3e76
msgid "Now, create a PloneFormGen form with three fields:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:81
# 10845395d3514314bfeb27f9836aa408
msgid "An string field with id uid, marked hidden, with a default value of \"-1\". Later in the tutorial, we'll use the \"-1\" as a marker value to indicate a new record."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:84
# 7278a8ea73654664b5c65ad3b492267c
msgid "A string field with id string1."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:87
# 6145d956e6c84c80a74cf58632d761f6
msgid "A string field with id string2."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:89
# e1cb415b8d104326a7dc703052316c59
msgid "Note that the form field ids must exactly match our column ids. You can script your way around this requirement, but it's a lot easier this way."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:91
# d68e14ac18504e75bf4b032721b91ac7
msgid "While you're at it, turn off or delete the mailer action adapter. It's harmless, but it would be a distraction."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:93
# 99897c6f0932485db8cd299559131d9a
msgid "That's it. We now have a form that matches our database table."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:96
# 4906576c57a844649bdc2d353d13757c
msgid "Inserting rows"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:98
# 0c90cd44772d4976ac03c6950e538fe3
msgid "In this step, we create a method to insert a row, and show how to make simple use of it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:100
# da026466371a4a6bb97dd08d6c7f7620
msgid "Now, inside the Zope Management Interface, in your form folder, create a Z SQL Method with the id *testCreateRow*."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:102
# 8d9df70d1352443ba74f65d95d53437a
msgid "Set the parameters:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:104
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:131
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:208
# 83f88955f056487c87d00f48abda5f70
# 62e177588d4d45cbac511c4258608d19
# 675f268810cb41fd9e2b58459e2ea500
msgid "Connection ID"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:105
# 35fd00564bc94e51a8cc64a33a23b6ff
msgid "This should be the database connection you set up to allow access to your test database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:107
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:134
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:211
# 41e1c228ea984dae9a7d9973008cce0a
# a2e59cc601d944aabb68885f6171ee2d
# 5383d4b6cf0e4f4d8f42034709bdc9f8
msgid "Arguments"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:107
# 5d79c1dfb5c04053b470566570870b7b
msgid "On separate lines, specify \"string1\" and \"string2\". (Leave off the quotes.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:109
# fea22a0b18334bc1854c244091887fe5
msgid "Then, in the big text area, specify the code:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:119
# 163533c2ffd64693ba83d49f28878218
msgid "Note: always use <dtml-sqlvar ...> to insert your variables. It protects you against SQL-injection attacks by SQL quoting the values."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:121
# b8fdec5748cb45ebbc984e6539a0f176
msgid "Now for a little magic: Z SQL Methods can pick up their arguments from REQUEST.form, which is exactly where Zope is putting your form variables when you submit a form. That means that you can just go to the [overrides] pane of your Form Folder and set ``here/testCreateRow`` as your After Validation Script."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:123
# 850fa7af21b9497f8c21c506eea03b03
msgid "Your form will now store its input into your SQL table! Add a few rows to check it out. Reading a Row, Filling in the Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:126
# 7f6bb766ae224af2980e7af76ea9617a
msgid "If we want to update records, we're going to have to get rows from our SQL table and use the columns to populate our form fields. The SQL"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:129
# e7fef8db64674798869d5f3a286db845
msgid "Now, use the ZMI to create, inside your form folder, a Z SQL Method named testReadRow. Set up the following parameters:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:132
# 3c262874683f4b79a529548d655e74f9
msgid "Choose your test database adapter."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:134
# 8a0c14feb670462bada614509413c951
msgid "Just \"uid\""
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:136
# 84d09fb2246945c1a5d0259c500d198d
msgid "Then, add the SQL Code:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:143
# 693d94a3573a4ecf8afbbe2aa0f05f14
msgid "The <dtml-sqltest ...> operator is a safe way to use user input for an SQL \"where\" test. The default test is \"=\". The Script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:146
# df9b3d692715499c856ce9ac4953cc91
msgid "Let's wrap this method in a simple Python script that will selectively use it. Create a Python Script with the id formSetup and the Python:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:160
# 68e14c5d7888455e992cfbc42ec33947
msgid "Let's deconstruct this code."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:162
# 18f3f508dd434dd9a0cb943d821c01c8
msgid "The if test:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:168
# 86a6c01656794c638187b85fe5095fba
msgid "will make sure that this code does nothing if the form has already been submitted (we don't want to overwrite values the user just input). It also won't do anything if we don't have a \"uid\" variable in the form dictionary. (form.submitted is a hidden input that's part of every PFG form.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:170
# 3b6f8138c5cd4654bd5a386f6918c2d1
msgid "If we have a uid variable and we won't be overwriting user input, then we call our SQL read method:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:176
# 2f7853618a4f4f688255811cb6d482b5
msgid "This will return the results of our SQL query in the form of a list of dictionaries. The dictionary entries will be in the form columnid:value."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:178
# 56d22cf075ed4168a8bae02741b3b898
msgid "Note that the uid value is being passed via the request variable, and doesn't need to be specified."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:180
# 5ce51722baab4c6592ba3c8a2a45f6e1
msgid "The rest of the code checks to make sure that we got one result, and throws all of its key:value pairs into the form dictionary -- just where our form will expect them."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:185
# f3b8ed7f491741efb2690978913793a8
msgid "Now, just go to the [override] pane of your form folder, and specify ``here/formSetup`` for your Form Setup Script."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:188
# 9e44c719b80e4f4bb34cb704e3566259
msgid "Calling The Form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:190
# ca73b37fc3334cb6be0c890cc7a0aa2f
msgid "Hopefully, you've got a few rows in your table. Now, try calling your form with the URL::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:194
# e23cb9696c784aeaa3134750c48fc106
msgid "Everything up to the question mark (the query string marker) should be the URL of your form folder. The \"?uid=1\" specifies that we want to use the data from the row where the uid is \"1\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:196
# e64314a4307d4176860fbfe6956cad08
msgid "How would you actually get your users to such a URL? Typically, you'd have some sort of drill-down search that offered them a list of links constructed in this fashion."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:198
# bf32bd745053444fa61a3a8a83e8bdb1
msgid "Creating a drill-down template is left as an exercise for the reader."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:201
# fe38651f052f4727bdd8645d138fa5cd
msgid "Updating or inserting as necessary"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:203
# a60636c4b53c4816a19e5d9474fc9105
msgid "In this step, we'll create an update SQL method and show how to selectively update or insert data."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:205
# b47e84cf9f5047c2abfb5775cefec207
msgid "Using the ZMI, create a Z SQL Method inside your form folder with the id testUpdateRow. For its parameters, set:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:209
# 13f96051aa43436fa158e718a69d86bd
msgid "Choose your test database connection."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:211
# cdaf003273bb41048c65ae8cb5556253
msgid "Add \"uid\", \"string1\" and \"string2\" on separate lines, without quotes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:213
# 2e21655073a447128ab379b0d270ccb0
msgid "Then, specify the SQL code:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:223
# d5a5627417b34a7a858fae68dec0a4ae
msgid "Notice the use <dtml-sqltest ...> for the SQL set id=value lines. This is just a hack that uses sqltest where we could have instead written lines like \"string1=<dtml-sqlvar string1 type=string>\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:225
# 66afea52f766488fb552612db9f30808
msgid "Now, we've got to solve a simple problem. How do we update our table under some circumstances, and insert new values under others?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:227
# 5a5abfa250784a8cb37e52ec97de7e76
msgid "Remember how we set \"-1\" as the default value of our hidden \"uid\" form field? If we've read a record, uid will have changed to match a real row. If it's \"-1\", that means that we started with a clean form rather than values read from a table row."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:229
# f543a3e65b364ea4894aefe163b27774
msgid "Let's use that knowledge in a simple switchboard script with the id doUpdateInsert:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:242
# 014deb7c6041493e9d7077e17925b275
msgid "Now, go to the [overrides] pane of your form folder and set ``here/doUpdateInsert`` as the *AfterValidationScript*."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:244
# 66fbcb2dc0ec4881bda6b55ae6749e17
msgid "Believe it or not ... you're done."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:246
# aa9dc6ef52084498a1864f424c13a6b6
msgid "Time to go back and repeat the process with your own table. Don't forget to add lots of sanity-checking code along the way."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:249
# 82c2a53d89cc4297b0919fa99a2dc285
msgid "A note on security"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:251
# bb95cadee7394c9b9def1078b6652de5
msgid "It takes extra steps to secure a database connection and SQL methods."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:253
# 1bfa07b6659747ef94f21e2543a4f1f9
msgid "If this is the first time you've worked with a Zope database connection, there's an important security point you may not have considered:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:257
# a7c9ceb1c60942158205e03c8746f20e
msgid "Zope Database Connections and Z SQL Methods are not part of the Plone workflow."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:259
# 5af004d6b494463a80968d2ec3bc6a9f
msgid "This means that you may not depend on the Plone content workflow to provide security for these connections and methods. You must use the Zope security mechanisms directly to control access."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:261
# 974bbf81dffe41dc90c0fd6a8eb35ec9
msgid "This is also true of Python scripts and other Zope-level objects you might create via the ZMI. But Zope provides a safety net of security for most of those. There is no such automatic safety net for external RDBMS access methods."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:263
# 44b1169403984634867e381ea13724ac
msgid "The easiest way to do this is to use the ZMI to visit the top-most folder of your form and use the Security tab to customize security. Look in particular for the Use Database Methods permission, and make sure it is not extended to any user role that should not have a right to read or update your external database."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:2
# ae3ade84314a4634945041f61322cada
msgid "Creating a package"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:4
# d24f02c058864c78a2f18ccc0591befd
msgid "**Giving our forms a home**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:6
# 28ad6af2152d438b9ed6facdcaa238fd
msgid "For the purposes of this tutorial, we will create a simple package that adds the necessary dependencies. If you have an existing package that requires a form, you should be able to add the same dependencies. If you have read the Dexterity manual, most of this should be familiar."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:11
# 1a510fcc8e7c4cd5b25af828b76dcb3a
msgid "For details about creating new packages, see `Bootstrapping Plone add-on development <http://developer.plone.org/getstarted/paste.html>`_."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:14
# 0db20a25500a4de798f0a634c61d6b6e
msgid "First, we create a new package:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:20
# 785c07d69b934ae8955a7e0bf12c7db3
msgid "After answering the relevant questions, we edit *setup.py* to add *plone.app.z3cform* and *plone.directives.form* as dependencies. This will pull in the other pre-requisites, including *plone.z3cform* and *z3c.form* itself. We have also removed the *ZopeSkel* local command support, which we will not need, although there is no harm in keeping it in. Finally, we have added a *tests* extra to pull in *collective.testcaselayer* for our integration tests."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:68
# cf319bddc00a42818bccb152ced9970a
msgid "Next, we edit *configure.zcml* to add some boilerplate:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:91
# 7ff752f7089c487387351892a1fdd225
msgid "This will:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:93
# 8f68e3bf313c4f66b6d13676b8b49076
msgid "Include the configuration of the packages we have listed in the *install\\_requires* line in *setup.py*. This saves us from manually including them with individual ZCML *<include />* statements."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:96
# bf8d1326429c45668af4e60d8b7b1f1d
msgid "“Grok” the package, to configure the forms we will add. See the `five.grok manual`_ for more details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:98
# 8960db4b2cc049caa9b0d5ff5d23f484
msgid "Create an installation profile that will install this package and its dependencies."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:101
# 03dce2700673452d94a1bf2254154944
msgid "The installation profile contains the instructions to install our package’s dependencies into the Plone site. We create a *profiles/default* directory, and add to it a *metadata.xml*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:115
# 9d6c232b9d3441a6883794a5e6881cd7
msgid "We need to install *plone.app.z3cform* to ensure that our forms have the proper widgets and templates available."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:118
# 3495b48097864d2ab3f76d5bd9e7780c
msgid "Next, we add a *message factory* to allow the titles and descriptions in our form to be translated. We’ll do this in a module *interfaces.py* at the root of our package:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:127
# 70d252774f36466b8b4eeabc4df60418
msgid "The name of the factory should normally be the name of the package."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:129
# c30066d849a7482ab979b1570430f6d6
msgid "Finally, we add this package to our *buildout.cfg* and re-run *bin/buildout*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:151
# 7b795e30930a45f1b1a3486aad9eff94
msgid "Obviously, we have omitted large parts of the buildout configuration here. The important things to note are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:154
# 320edf9b0f754a90bf5a21c73295f3a6
msgid "We have included the known good set (KGS) of package versions for the latest 4.x release of Plone."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:156
# a109853b255349cc83efba7e3bda36c2
msgid "We list the new egg as a develop egg, and make sure it is in an eggs list that gets used for the Zope instance."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:158
# 028b685d50e24d6abb55573cb27f3532
msgid "We use the [*tests]* extra when listing the testable eggs in the tests section. This ensures that *collective.testcaselayer* is installed for the testrunner."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:2
# 4baf355539e3447a960daf101e59b212
msgid "Creating a schema"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:4
# f27a2321994c413385135d05e775d13b
msgid "**The starting point for our form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:6
# 5bfcb894ea3349efa9dc485d764f69b4
msgid "With the form package created and installed, we can create our form schema. Whilst it is strictly not necessary yet, we will use the *Schema* interface base from *plone.autoform.* This lets us use schema directives (as seen in Dexterity content type schemata) to configure custom widgets, set up hidden fields and so on. Later in this manual, we will cover in more detail how you can perform these operations imperatively in Python code."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:14
# 92eefc518f46400f8dc07046c04be76c
msgid "The example we’ll use for this form is a pizza ordering form. We’ll build on this form over the coming sections, so if you look at the example source code, you may find a few extra bits. However, the basics are simple enough."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:19
# 7ca934277ffa488bab43053afd7acb70
msgid "We’ll create a module called *order.py* inside our package (*example/dexterityforms/order.py)*, and add the following code to it:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:65
# be61ab0756ed42ffbeda89d4879a964a
msgid "For now, this form is quite simple. The list of pizzas is hard-coded, and we can only choose one of each type. We will make it (a little) more realistic later by adding a better vocabulary, creating a custom widget for the pizza order part, and improving the look and feel with a custom template."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:71
# 39591b09938241878cd33ff15e5fe5a9
msgid "At the top, we have included a number of imports. Some of these pertain to the form view, which will be described next. Other than that, we have simply defined a schema that describes the form’s fields. The *title* and *description* of each field are used as label and help text, respectively. The *required* attribute can be set to *False* for optional fields. For a full field and widgets reference, see the `Dexterity manual`_. (It is no accident that the Dexterity content type fields and widgets are defined in the same manner as those of a standalone form!)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:81
# e2dc435ec1654fd8a56bf1c8fe50b7a9
msgid "Also notice how all the user-facing strings are wrapped in the message factory to make them translatable. The message factory is imported as *\\_*, which helps tools like *gettext* extract strings for translation. If you are sure your form will never need to be translated, you can skip the message factory in *interfaces.py* and use plain unicode strings, i.e. *u“Postcode”* instead of *\\_(u“Postcode”)*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:88
# 486c775dc0cc4b1791fb6ac438282a47
msgid "We are almost done with our most basic form. Before we can use the form, however, we need to create a form view and define some actions (buttons). That is the subject of the next section."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:2
# a41d9a41e8b54b64a15e8c6ed38bda89
msgid "Creating the form view"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:4
# 1d5916c0f9df4c62857426e852352961
msgid "**Using our schema in a form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:6
# 03f89e373a2e425ba4201711a9d06107
msgid "To render our form, we need to create a view that uses a *z3c.form* base class. The view is registered like any other, either in ZCML or, as we will show here, by using convention-over-configuration ala `five.grok`_. It is then configured with the schema to use for form fields, the label (page title) and description (lead-in text) to show, and actions to render as buttons."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:13
# 6a9428b6c7004e219099cbdf200024c2
msgid "Still in *order.py*, we add the following:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:72
# ca7f2142a4df4ea787d1bc20cf34935b
msgid "Let’s go through this in some detail:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:74
# d6cffe2e241a4b97ae2e7a0926ae00a5
msgid "We derive our form view from one of the standard base classes in *plone.directives.form*. The *SchemaForm* is a *plone.autoform*-based form (so it configures the form fields from the schema automatically and takes schema hints into account), without any of the standard actions that can be found on more specialised base classes such as *SchemaAddForm* or *SchemaEditForm*. It basically mirrors the *z3c.form.form.Form* base class."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:81
# e6d2f4f3e39a4cfd9fbc4a07209d6fb3
msgid "We then use the standard *five.grok* view directives to register the view: *grok.name()* gives it a friendly name (used as a path segment in the URL); *grok.context()* sets the type of context where the form is available (here, we make it available on the Plone site root, though any interface or class may be passed; to make the form available on any context, use *zope.interface.Interface* as the context); *grok.require()* specifies a permission which the user must have to be able to view the form (here, we use the standard *zope2.View* permission). See the views section in the `five.grok manual`_ for more detail."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:91
# 2b978ea1b81c4af79b4de9e75cf2fd5b
msgid "Next, we specify the schema via the *schema* attribute. This is the equivalent of assigning the *fields* attribute to a *field.Fields()* instance, as you may have seen in documentation for “plain” *z3c.form. (*In fact, the \"*fields = field.Fields(ISchema)*\" pattern of working is supported if you use *plone.directives.form.Form* as a base class instead of *SchemaForm*, but you will then be unable to use form schema hints in the schema itself - more on this later.)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:98
# ccbada21b33b4b81a024bb546b25ffa0
msgid "We set *ignoreContext* to *True*. This tells *z3c.form* not to attempt to read the current value of any of the form fields from the context. The default behaviour is to attempt to adapt the context (the Plone site root in this case) to the schema interface and read the schema attribute value from this adapter when first populating the form. This makes sense for edit forms and things like control panels, but not for a standalone form like this."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:105
# 54e036d309a74f3cbd05864366ade461
msgid "We then set a *label* and *description* for the form. In the standard form template, these are rendered as a page header and lead-in text, respectively."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:108
# 188bd3d616a24095878137696d28586b
msgid "We override the *update()* method to set the *disable\\_border* request variable. This hides the editable border when rendering the form. We then call the base class version of *update()*. This is crucial for the form to work! *update()* is a good place to perform any pre-work before the form machinery kicks in (before calling the base class version) or post-processing afterwards (after calling the base class version). See the section on the form rendering lifecycle later in this manual for the gory details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:116
# ce453650a1424d2a9f40ea861c3b2a10
msgid "Finally, we define two actions, using the *@button.buttonAndHandler()* decorator. Each action is rendered as a button (in order). The argument is a (translated) string that will be used as a button label. The decorated handler function will be called when the button is clicked."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:122
# 42f5f953e661475c8fd3adb0c457c82a
msgid "For the purposes of this test, the actual work we do with the main handler is relatively contrived. However, the patterns are generally applicable."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:126
# 3b823aecb5f64c5ab8cfe8d730537c8d
msgid "The second button (cancel) is the simpler of the two. It performs no validation and simply redirects to the context’s default view, i.e. the portal front page in this case."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:130
# b2277bd5b368457aaf1f04a036108cb6
msgid "The first button actually extracts the data from the form, using *self.extractData()*. This returns a tuple of the form data, which has been converted to the field’s underlying type by each widget (thus, the value corresponding to the *Set* field contains a *set*) and any errors. If there are errors, we abort, setting *self.status* to confer an error message at the top of the page. Otherwise, we use the form data (here just printing the output to the console - you need to run Zope in foreground mode to see these messages), add a cookie-tracked status message (so that it can appear on the next page) and redirect the user to the context’s default view. In this case, that means the portal front page."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/index.rst:2
# 8b3aebc22ce14abd8e4dbb3af4deb4a2
msgid "Creating a simple form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:2
# 1560592c62584aa8af99c308fbcc9702
msgid "Testing the form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:4
# 6f9b034017154c6e9d97e436a59adf7e
msgid "**Seeing the form in action**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:6
# 04f2bf638b554a329cfc8a4bf768e2b0
msgid "The schema and (grokked) form view is all that’s needed to create the first iteration of the form. We can now install our new package and test the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:10
# 452045787ab54f03a8a1c0dac1d8f2f9
msgid "First, we make sure that we have run *bin/buildout* so that the new package is available to the Zope instance script. We then start up Zope in foreground mode:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:18
# ec3c9e7ba1684434b88f9ec7f476b6a8
msgid "Next, we create or go to a Plone site, and install the new *Example forms* product via the new Plone site creation form or the Add-ons control panel. This should also install the product called *Plone z3c.form support* (from the *plone.app.z3cform* package) as a dependency."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:24
# cbfac5f6429142fc8f87c3f95504a18b
msgid "We haven’t created any links to the form yet (though you could easily do so in a content item or portlet by inserting a manually-entered URL), but the form can be visited by going to the *@@order-pizza* view on the Plone site root, e.g.:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:29
# aaf519dfd24d4ab3aa48c5b930b554c4
msgid "*http://localhost:8080/Plone/@@order-pizza*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:31
# 1d3912972568410586b724a5039d5eea
msgid "It should look something like this:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:37
# fae1fbb3160a49e09c18d72141a98b2d
msgid "Try to fill in the form and use the two buttons. You should see the validation (both on-the-fly and after submit if you ignore the on-the-fly warnings), as well a message printed to the console if a valid form is submitted when clicking the *Order* button."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:2
# 68241936abd4479fb25195958416ab7a
msgid "Actions (buttons)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:4
# 86b980cc63f34d73ba2ed419a1490869
msgid "**Defining form buttons and executing code when they are clicked**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:6
# 68ab81f7f89549c7b937386cfb2e1bf6
msgid "*z3c.form* defines a rich framework for defining, processing and executing *actions*, an abstraction of the “outcome” of a form. Actions are not necessarily related to form buttons, but for the vast majority of use cases, we can think of forms buttons as a special type of widget that represents an underlying action. Such “button actions” are usually the only type of action we will ever use. Actions are nearly always associated with a handler method, which will be called by the framework when a form was submitted in response to a click of a particular button."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:15
# 86bf3cfa11c4474db3d44dea3665bf79
msgid "The usual way to define actions and buttons is to use the *@button.buttonAndHandler()* decorator. This takes as a minimum the button title as an argument. We have already seen two examples of this in our pizza order form:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:30
# 14ee729842304529aaa5657387e3652d
msgid "The name of the method is not particularly important, so long as it is unique. The body of the handler function may react to the button however is appropriate for the form’s use case. It may perform a redirect or update form properties prior to re-rendering of the form. It should not return anything. Use the *self.extractData()* helper to return a tuple of the form’s submitted data and any errors, as shown in the preceding examples."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:38
# 580fcb6921474a21b4c9dab8e9cbd250
msgid "The *action* argument is the action that was executed. We normally ignore this, but it may be introspected to find out more about the action. The *isExecuted()* method can be used to determine if the corresponding button was indeed clicked, and would normally be *True* within any action handler that is called by the framework. The *title* attribute contains the button title as shown to the user."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:46
# 55f2d61d7ffe4894b45c39c836250be7
msgid "Access keys"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:48
# 14e05aeaa0f149c79404074c06c0c9a8
msgid "To define a HTML access key for a button, use the *accessKey* keyword argument:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:58
# 089eed61c5664db88628b7cd7d6c993d
msgid "Conditional actions"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:60
# 95a97e776d474eaca0732e2593faee87
msgid "If a button should only be shown in some cases, we can use the *condition* keyword argument, passing a function that takes as its only parameter the form to which the button belongs. If this does not return *True*, the button will be omitted from the form:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:85
# e5c33fc8dd7b4889b9a94d869123ad9d
msgid "Updating button properties"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:87
# 3cf4eb0999f1497a82c47e3167fd215d
msgid "As with regular widgets, it is sometimes useful to set properties on buttons after they have been instantiated by *z3c.form*. One common requirement is to add a CSS class to the button. The standard edit form in*plone.directives.form* does this, for example, to add Plone’s standard CSS classes. The usual approach is to override *updateActions()*, which is called during the form update cycle:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:101
# 7beed698456342018f9f4b9204ff81c1
msgid "Notice how we call the base class version first to ensure the actions have been properly set up. Also bear in mind that if a button is conditional, it may not be in *self.actions* at all."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:105
# 89acf0442e2f4cdaacd265b608bcbb4a
msgid "Buttons are really just HTML input widgets, so you can set other properties too, including attributes like onclick or ondblclick to install client-side JavaScript event handlers."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:2
# 288a7c1ca01248f6a2beee0dbd25ba48
msgid "Fieldsets"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:4
# ccfcc821d558463c89a835db791c40d5
msgid "**Breaking forms into multiple fieldsets**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:6
# d1dd2693bcec4000afacb6b23177d196
msgid "*z3c.form* supports the grouping of form fields into what is known as *groups*. A form class may mix in *z3c.form.group.GroupForm* to gain support for groups, setting the *groups* variable to a list of *Group* subclasses. The *Group* base class behaves much like the *Form* base class, but is used only for grouping fields, and cannot have actions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:12
# ace74889857c443789d008560c428ef3
msgid "In Plone, groups are represented as fieldsets. The standard templates make these look like dynamic tabs, much like those we can find in the edit forms for most Plone content. For this reason, *plone.supermodel* provides a directive called *model.fieldset()*, which can be used to create fieldsets."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:20
# e6311bc469734a91ace8a6a1012b9342
msgid "The *z3c.form* *Group* idiom is still supported, and can be mixed with the more declarative *model.fieldset()* approach. However, the latter is usually easier to use."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:25
# ca933224b4174e4587791b30bd6ab4ac
msgid "To illustrate fieldsets, let’s give customers the option to leave feedback on our pizza ordering form. To keep our main form short, we will put this in a separate fieldset. Note that there is still only one set of submit buttons, i.e. all fieldsets are submitted at once. This is purely for aesthetic effect."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:106
# 221d2e136f714c928521e44b88ec4175
msgid "Since this approach uses form schema hints, the schema must derive from *model.Schema* and the form base class must extend *plone.autoform.AutoExtensibleForm*. In our example, we are using *SchemaForm*, a subclass of AutoExtensibleForm."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:110
# 894c3d01c21142ca9d8dd6a7f37e46fc
msgid "Above, we have declared a single fieldset, and listed the fields within it. Those fields not explicitly associated with a fieldset end up in the “default” fieldset. We also set a fieldset name and label. The label is optional."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:115
# 2fe317f5376d4045860b55be714b4fbf
msgid "It is possible to use the same fieldset name multiple times in the same form. This is often the case when we use the *additional\\_schemata* property to set secondary schemata for our form. In this case, the *label* from the first *fieldset* directive encountered will be used."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/index.rst:2
# b5671008ea4d4266b3aeafd48408600c
msgid "Customising form behaviour"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:2
# 24ff7d00b5154a82bc2ab3c5a4c26ae5
msgid "Validation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:4
# 96b26ce95e2640c485aad7b90e90cb85
msgid "**How to validate a form prior to processing**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:6
# 0875677c00d14aa283c6838b92c33245
msgid "All forms apply some form of validation. In *z3c.form,* validators can be executed in action handlers. If the validation fails, the action handler can choose how to proceed. For “submit” type buttons, that typically means showing error messages next to the relevant form fields. For “cancel” type buttons, the validation is normally skipped entirely."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:12
# dafa9ce400f84b8c923d46195aa8538e
msgid "Form validation takes two forms: field-level validation, pertaining to the value of an individual field, and form-level validation, pertaining to the form as a whole. Form-level validation is less common, but can be useful if fields have complex inter-dependencies."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:18
# ffc6ec84e4f44183a39103ef8bade72b
msgid "Field-level validation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:20
# d927bd27c4b143fcb757bd891ce2fb65
msgid "The simplest field-level validation is managed by the fields themselves. All fields support a *required* attribute, defaulting to *True*. The default field validator will return an error if a required field is not filled in. Some fields also support more specific properties that affect validation:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:26
# 4ef9da73c1ff40678c011fe04d930b09
msgid "Text fields like *Bytes, BytesLine, ASCII, ASCIILine, Text*and *TextLine*, as well as sequence fields like *Tuple, List, Set,**Frozenset* and *Dict* all support two properties, *min\\_length* and *max\\_length*, which can be set to control the minimum and maximum allowable length of the field’s value."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:31
# af9c01091f1d405f8720149b57461e34
msgid "Numeric fields like *Int, Float* and *Decimal*, as well as temporal fields like *Date*, *Datetime* and *Timedelta* all support two properties, *min* and *max*, setting minimum and maximum (inclusive) allowable values. In this case, the min/max value needs to be of the same type as field, so for an *Int* field, the value of this property is an integer, whereas for a *Datetime* field, it is a Python *datetime* object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:38
# 533532a4207941edb2d6df34d9065b16
msgid "A *Choice* field only allows values in a particular vocabulary. We will cover vocabularies in the next section."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:42
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:37
# 1a7d0ce705104dcdb4d40b69500a24cf
# 28384dc2d7574e18aa6c7e654548bb57
msgid "Constraints"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:44
# f820861a1b6c4c0d9930105ab796b78e
msgid "If you require more specific validation, and you have control over the schema, you can specify a *constraint* function. This will be passed the submitted value (which is converted to a value appropriate for the field, so that e.g. a *List* field is passed a list). If the value is acceptable, the function should return *True*. If not, it should raise a *zope.schema.Invalid* exception or a derivative (returning *False* will also result in an error, but one without a meaningful error message)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:52
# 24151bc3876e472db71b189ddf4bf837
msgid "Here is the order form schema again, this time with a constraint function:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:106
# 4b4c4617aabc48ceaeeef69441094cce
msgid "Notice how the *postcodeConstraint()*function is passed a value (a unicode string in this case, since the field is a *TextLine*), which we validate. If we consider the value to be invalid, we raise an *Invalid* exception, with the error message passed as the exception argument. Otherwise, we return *True*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:113
# 06a1dfc6b93a4d9f940b5beab1fc199c
msgid "Field widget validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:115
# f26c7d7675164e959d2d17eb6ffb1637
msgid "Constraints are relatively easy to write, but they have two potential drawbacks: First of all, they require that we change the underlying interface. This is no problem if the interface exists only for the form, but could be a problem if it is used in other contexts as well. Second, if we want to re-use a validator for multiple forms, we would need to modify multiple schemata."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:122
# 572b59e86d7c42798455bf10e90a3246
msgid "z3c.form’s field widget validators address these shortcomings. These are specific to the form; by contrast, constraints are a feature of *zope.interface* interfaces and apply in other scenarios where interfaces are used as well. *plone.directives.form* provides a convenience decorator for creating simple field validators."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:128
#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:273
# 392797a835dc4280b415149d8ef39fdd
# 6430a96445894a05a4666a9fcc37d15c
msgid "For example:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:164
# 19569fee0f594cb38e94d42cf7d126d0
msgid "The *@form.validator()* decorator registers a validator adapter. When the validation is invoked, the decorated function will be called with the field’s value as an argument and given an opportunity to raise a validation error, much like the constraint above. Again like the constraint, the default validator is called first, so things like the required flag and indeed any custom constraint are processed first."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:171
# 5a13eb5cfdf54e92bf22e363e75f01de
msgid "The *@form.validator()* decorator can take keyword arguments to make the validator more specific or more generic. The valid values are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:175
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:157
#: ../../reference_manuals/old/portlets/architecture.rst:132
# 78d6cb2dc8184f3d983ab13eda1fb7ed
# 36b486fe809d45f0b4109612570a96be
# b00f3be103ef46e29c58956239160db4
msgid "context"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:175
# a2644296bf204c21a8db61353c6c6e29
msgid "The form’s context, typically an interface. This allows a validator to be invoked only on a particular type of content object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:178
# 666b39b4c15d40b8b10baecceba88619
msgid "The form’s request. Normally, this is used to specify a browser layer."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:182
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:174
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:196
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:760
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1072
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:176
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:29
#: ../../reference_manuals/old/portlets/architecture.rst:139
# 4fd618fadc16404696c4542e80a2d6ab
# 335e6124fb824a53a761f475b2b8ac10
# c2107457e07242e9a6f03c7145f4e302
# 980b2bf1bca246fb97fc12f46de84495
# 117014a42b6b4a68b7abe1388b976ec2
# 1c719bb55e43413fa19edd78f4c4baf7
# 0cc678c82d7145fbb556d9aa3ead09d5
# 0e76d160426a4a28adb7d4461608288f
# fdc4f7dcad1c433ba6c2fcc315be71ee
msgid "view"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:181
# 563bdbc41fce4a6e88eaa09514bdd99a
msgid "The form view itself. This allows a validator to be invoked for a particular type of form. As with the other options, we can pass either a class or an interface."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:185
#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:82
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:63
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:52
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:430
# 2c7cee1bd72747cda8c98080e89f3280
# cd47b439ea314da59be80a44c7e20cc7
# 84fdbf50cc184ae0ac7e5c309c056103
# cc284e0efd4c4de3bb650fdb3fb1cb55
# 971f0c21b36340dbae8ef726c6cfca93
msgid "field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:185
# 94647324b6e543f083a7633afe543a17
msgid "A field instance, as illustrated above, or a field *type*, e.g. an interface like *zope.schema.IInt*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:188
#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:78
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:144
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:217
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1081
# cebda8221a2642dcbcaf454ceaae0319
# 976915fda3e746eb84baba06409a0e44
# a6170e9941984b869558777de6b71fea
# 0877d598b29c414993f36757957afc37
# 1c3b50040f104be7bcaacd74cfd64dd8
msgid "widget"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:188
# 5925ae0903944245aba8c4304816600c
msgid "The widget being used for the field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:190
# eb5286b69dd84507a5cc02ef30b2722d
msgid "It is important to realise that if we don’t specify the *field* discriminator, or if we pass a field type instead of an instance, the validator will be used for all fields in the form (of the given type). Also note how we had to define the constraint function before the form schema interface (since it was referenced in the schema itself), but we define this validator after the schema and form, since here we need the interface to have been defined before we use it."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:199
# 9dd740562af3465cad2b4e7145e2323f
msgid "Advanced field widget validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:201
# db4b87587b6f450fbc3613091acd87f9
msgid "z3c.form validators are in fact a little more powerful than what we have seen above. A validator is registered as a multi-adapter providing *z3c.form.interfaces.IValidator* and adapting the objects *(context, request, view, field, widget)*, corresponding to the discriminants seen above. You may wish to register an adapter directly instead of using the *@form.validator()* decorator if you:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:208
# b769673bf04f4975b64b435eaa5ed704
msgid "want to skip the default validation of field properties like *required* or *min*/*max*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:210
# aead322c34e04419a7166c4750d5a159
msgid "need to access the context, request, form, field and/or widget instances to validate the value"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:213
# b9b7d35305e747bdbda57cac81c19ed6
msgid "We won’t show a full example here, but as an outline, consider the following code snippet:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:236
# 76671c8e93fb4fb4908b854d4a92c73f
msgid "This registers an adapter, extending the SimpleFieldValidator base class, and calling the superclass version of validate() to gain the default validation logic. In the validate() method, we can use variables like self.context, self.request, self.view, self.field and self.widget to access the adapted objects. The WidgetValidatorDiscriminators class takes care of preparing the adapter discriminators. It takes the same keyword arguments as @form.validator() seen above."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:245
# 1620182d525f49958d079b2b06c1a54a
msgid "Form-level validation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:247
# b8de406bd8b94bd082b3814e09602668
msgid "Form level validation is less common than field-level validation, but is useful if your fields are inter-dependent in any ways. As with field-level validation, there are two options:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:251
# c6d277c6a9a34de494b2fe1eafb01bd4
msgid "Invariants are specified at the interface level. As such, they are analogous to constraints."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:253
# d1edcdc8360d4a7183b2d9d711d9badd
msgid "Widget manager validators are standalone adapters that are specific to *z3c.form*. As such, they are analogous to field widget validators."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:258
# 2e8cff210c3043a6b6f1c467a52d0020
msgid "Invariants"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:260
# 65d6474c408b442789201ea69ce65bcc
msgid "Invariants work much like constraints, in that they are called during the form validation cycle and may raise *Invalid* exceptions to indicate a validation problem. Because they are not tied to fields specifically, an error resulting from an invariant check is displayed at the top of the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:266
# 90c23e56c6cf4627bd7f1606b639ad47
msgid "Invariants are written as functions inside the interface definition, decorated with the *zope.interface.invariant* decorator. They are passed a data object that provides the schema interface. In the case of a *z3c.form* form, this is actually a special object that provides the values submitted in the request being validated, rather than an actual persistent object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:327
# e8659bed1a0743d99c18d192640548c7
msgid "Here we have defined a single invariant, although there is no limit to the number of invariants that you can use."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:331
# 3244d2eb35f7494ebf91e2d59de3218e
msgid "Widget manager validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:333
# a714bc56cb6e4fdd842ce6542b1bba09
msgid "Invariants have most of the same benefits and draw-backs as constraints: they are easy to write, but require modifications to the schema interface, and cannot be generalised beyond the interface. Not surprisingly therefore, *z3c.form* provides another option, in the form of a widget manager validator. This is a multi-adapter for *(context, request, view, schema, widget manager*) providing *z3c.form.interfaces.IManagerValidator*. The default simply checks invariants, although you can register your own override."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:342
# e859b763c467467f806f0506f460d9ec
msgid "That said, overriding the widget manager validator is not particularly common, because if you need full-form validation and you don’t want to use invariants, it is normally easier to place validation in the action handler, as we will see next."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:348
# 19c79339f98f4fbdb4865523cddac47a
msgid "Invoking validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:350
# 3417b8d2d01c4f5b8e8c92cac38e4bfa
msgid "Unlike some of the earlier form libraries, *z3c.form* does not automatically invoke validators on every form submit. This is actually a good thing, because it makes it much easier to decide when validation makes sense (e.g. there is no need to validate a “cancel” button)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:355
# 57c564ae79254a478af9c3f3fb725d4e
msgid "We have already seen the most common pattern for invoking validation in our handler for the “order” button:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:373
# 80016638cc504a878f87355759f00d87
msgid "Notice how we call *extractData()*, which returns both a dictionary of the submitted data (for valid fields, converted to the underlying field value type) and a dictionary of errors (which is empty if all fields are valid)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:379
# 2c70c4c219e047e9b6cdf564d23e9a02
msgid "Validating in action handlers"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:381
# 6eeaf3741a4942ea95122957c1b7a66d
msgid "Sometimes, it may be useful to perform additional validation in the action handler itself. We can inspect the *data* dictionary, as well as any other aspect of the environment (like *self.context*, the context content object, or *self.request*, the request), to perform validation."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:386
# 5f1134efaf85466d890bc6252871ea64
msgid "To signal an error, we use one of two exception types:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:388
# b65ba5c11caa47da81192b533b755642
msgid "*z3c.form.interfaces.ActionExecutionError*, for generic, form-wide errors"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:390
# 28a9481f48054594bb33355f11d3fdde
msgid "*z3c.form.interfaces.WidgetActionExecutionError*, for field/widget-specific errors"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:393
# 89e1af1f39a645bfae1e9bc2b03c357b
msgid "In both cases, these exceptions wrap an *Invalid* exception. Let’s add two examples to our action handler."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:437
# aa6ad6f76d6247e2b627cac502259727
msgid "Notice how we perform the check after the *extractData()* call, but before the possible premature return in case of validation errors. This is to ensure all relevant errors are displayed to the user. Also note that whilst the invariant is passed an object providing the schema interface, the *data* dictionary is just that - a dictionary. Hence, we use “dot notation” (*data.address1*) to access the value of a field in the invariant, but “index notation” (*data[‘address1’]*)**to access the value of a field in the handler."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:2
# e25779436c9f419ba6c924803f52225c
msgid "Vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:4
# 831d7f27eed7483ebb34b54e1840311d
msgid "**Static and dynamic lists of valid values**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:6
# ebdeadb5ac354ee0a6073203ef29600a
msgid "The term “vocabulary” here refers to a list of values that are allowable by a given field. In most cases, that implies a field using a selection widget, like a multi-select list box or a drop-down."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:10
# 6bf4c9f4564440f69dfacf52aa5a6f04
msgid "Selection fields use the *Choice* field type. To allow the user to select a single value, use a *Choice* field directly:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:21
# 63ffeefa0f8848d5af2b8aa35b64fcf4
msgid "For a multi-select field, use a *List*, *Tuple, Set* or *Frozenset* with a *Choice* as the *value\\_type*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:35
# 2547077868354888887be51ee34aea8e
msgid "The *Choice* field must be passed one of the following arguments, specifying its vocabulary:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:38
# 2eb33784cfe1490ba1b86a9c5c42d24b
msgid "*values* can be used to give a list of static values"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:39
# 122b777507424cefa3c3757f2df0b43f
msgid "*source* can be used to refer to an *IContextSourceBinder* or *ISource* instance"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:41
# e6ea20d1738c4d1f86f99872f548bd9d
msgid "*vocabulary* can be used to refer to an *IVocabulary* instance or (more commonly) a string giving the name of an *IVocabularyFactory* named utility."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:45
# c798d09e96e347689d2108bdb9c225e8
msgid "We’ll now explore various ways in which we can improve on the *orderItems* list."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:49
# 0bab4a650dd74450bfc2fb4cc45824ae
msgid "Static vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:51
# 0f212fed5d7d41b4991cfedba77648e5
msgid "Up until now, we have been using a static vocabulary, passing the list of allowable values as the *values* parameters to the *Choice* field. This is simple, but has a few draw-backs:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:55
# 200a5d9bfcd64104857d482ed83e6448
msgid "If the vocabulary changes, we have to change the interface code."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:56
# 49bfe2ea695948b98316c43bdd9e10fd
msgid "There is no way to separate the label that the user sees in the selection widget from the value that is extracted."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:60
# 7d3241e3b87c417eb265b5022d97b213
msgid "Dynamic vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:62
# 0686638017f44e6eac6fcbadac4bfcae
msgid "To implement a more dynamic vocabulary, we can use a source. Before we do that, though, let’s consider where our data will come from."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:65
# 09fb173de2c3461cad03345d797c58d2
msgid "We want to make the “order items” list more dynamic, and allow the list of available pizza types to be managed through the web. There are various ways to do this, including modelling pizzas as content items and creating a source that performs a catalog query to find them all. To manage a simple list, however, we can use *plone.app.registry* and install the list with our product’s extension profile. An administrator could then use the registry control panel to change the list. We won’t go into *plone.app.registry* in detail here, but you can read its `documentation`_ to get a full understanding of what it is and how it works."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:76
# 71eb8abae23f483cb0203fa2080d0dcb
msgid "First, we need to add *plone.app.registry* as a dependency in *setup.py*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:88
# 7a75a94477764271a81e5f43a225cb1c
msgid "We also want to configure it when our product is installed in Plone, so we edit *profiles/default/metadata.xml* as follows:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:101
# 3f31d6861cca40bdae8294e43e071042
msgid "Next, we create a registry.xml containing the following:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:121
# 2f57ea49dfdc4b738bc5bbcf53c4dcf7
msgid "After re-running buildout and (re-)installing our product in the"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:124
#: ../../reference_manuals/old/buildout/packages.rst:10
# 2fc9f5211858443093fac24ec6d8ff25
# 6ee63050a3b84b76829a94f0612ee79e
msgid "Terminology"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:126
# 815aa66257d147f18ed9e44e80bd6dfe
msgid "When working with dynamic vocabularies, we come across some terminology that is worth explaining:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:129
# 717b4cd29d154210bfc3f354634bc9d9
msgid "A *term* is an entry in the vocabulary. The term has a value. Most terms are *tokenised* terms which also have a token, and some terms are *titled*, meaning they have a title that is different to the token."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:133
# 3ba68a87c29d460a986a5337f50ac1d5
msgid "The *token* must be an ASCII string. It is the value passed with the request when the form is submitted. A token must uniquely identify a term."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:136
# 334269d6fa264e05ab5b532d61db6ae7
msgid "The *value* is the actual value stored on the object. This is not passed to the browser or used in the form. The value is often a unicode string, but can be any type of object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:139
# abcb13934b484354a4667021245bf11b
msgid "The *title* is a unicode string or translatable message. It is used in the form and displayed to the user."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:143
# 9f8b54f2284a4ee89a6e09525b920b38
msgid "One-off sources with a context source binder"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:145
# 5b831f1bd6634f10b544d15e14e9173c
msgid "We can make a one-off dynamic vocabulary using a context source binder. This is simply a callable (usually a function or an object with a *\\_\\_call\\_\\_* method) that provides the *IContextSourceBinder* interface and takes a *context* parameter. The *context* argument is the context of the form view. The callable should return a vocabulary, which is most easily achieved by using the *SimpleVocabulary* class from *zope.schema*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:153
# 82f7735efffd4ba3b1010a82cdaf4bfb
msgid "Here is an example that returns our pizza types:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:186
# b61126cc36d84a67b104807a56c26d67
msgid "Here, we have defined a function acting as the*IContextSourceBinder*, as specified via the @*grok.provider()* decorator. This looks up the registry and looks for the record we created with *registry.xml* above (remember to re-install the product in the Add-on control panel or the *portal\\_quickinstaller* tool if you modify this file). We then use the *SimpleVocabulary* helper class to create the actual vocabulary."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:193
# abc4b66206274e9e90e3396506e2c53b
msgid "The *SimpleVocabulary* class additionally contains two class methods that can be used to create vocabularies from lists:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:196
# d16d93649417420cbb87edc09c82ab32
msgid "*fromValues()* takes a simple list of values and returns a tokenised vocabulary where the values are the items in the list, and the tokens are created by calling *str()* on the values."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:199
# 0275152a830d4356b79ac258d83bbfee
msgid "*fromItems()* takes a list of *(token, value)* tuples and creates a tokenised vocabulary with the token and value specified."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:202
# 6e16e71aec034572beb164542fa57e65
msgid "We can also instantiate a *SimpleVocabulary* directly and pass a list of terms in the initialiser as we have done above. The *createTerm()* class method can be used to create a term from a *value*, *token* and *title*. Only the value is required."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:207
# 9fac2c7895154d82ba8a92b4c469f57d
msgid "To use this context source binder, we use the *source* argument to the *Choice* constructor:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:222
# 298008f2646f4bb2a7f262c73e2c1ef8
msgid "Parameterised sources"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:224
# ecc7126891dc498f9920ccd00e630982
msgid "Sometimes, it is useful to parameterise the source. For example, we could generalise the pizza source to work with any registry value containing a sequence, by passing the registry key as an argument. This would allow us to create many similar vocabularies and call upon them in code easily."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:230
# 297613ca967d44c4b7ca31d9b7de85b5
msgid "This degree of generalisation is probably overkill for our use case, but to illustrate the point, we’ll outline the solution below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:233
# 7da5a7b46db9499fb98a9f900dd18ebb
msgid "First, we turn our *IContextSourceBinder* into a class that is initialised with the registry key"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:254
# 5539dd8df72a4cd48d91f311ca49b1a0
msgid "Notice how in our first implementation, the function *provided* the *IContextSourceBinder*interface, but the class here *implements* it. This is because the function was the context source binder callable itself. Conversely, the class is a factory that creates *IContextSourceBinder* objects, which in turn are callable."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:260
# 55274535d3f94cfa9b8054766e7c52c8
msgid "Again, the source is set using the *source* argument to the *Choice* constructor."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:270
# 771376065768411ca671210fa8f2744c
msgid "When the schema is initialised on startup, the a *RegistrySource* object is instantiated, storing the desired registry key in an instance variable. Each time the vocabulary is needed, this object will be called (i.e. the *\\_\\_call\\_\\_()* method is invoked) with the context as an argument, and is expected to return an appropriate vocabulary."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:277
# ae981de39bed43d58a7a9343f0ca4464
msgid "Named vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:279
# 5cd13db578ce4ab8a20babe93f9cb30e
msgid "Context source binders are great for simple dynamic vocabularies. They are also re-usable, since we can import the source from a single location and use it in multiple instances. However, we may want to provide an additional level of decoupling, by locating a vocabulary by name, not necessarily caring where or how it is implemented."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:285
# fe18103e5ce840b794d9c668efbf9db9
msgid "Named vocabularies are similar to context source binders, but are components registered as named utilities, referenced in the schema by name only. This allows local overrides of the vocabulary via the Component Architecture, and makes it easier to distribute vocabularies in third party packages."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:292
# 5d04d610a8294d8aae05bba7c5e273e4
msgid "Named vocabularies cannot be parameterised in the way as we did with the context source binder above, since they are looked up by name only."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:296
# ac784ee6419d4a1ab615050a3951293c
msgid "We can turn our first dynamic vocabulary into a named vocabulary by creating a named utility providing *IVocabularyFactory*, like so:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:327
# 3ee2464ff4054677b4230734cf35eca4
msgid "By convention, the vocabulary name is prefixed with the package name, to ensure uniqueness."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:330
# 4ec424d2e2764ab0bdb30ba68da40513
msgid "We can make use of this vocabulary in any schema by passing its name to the *vocabulary* argument of the *Choice* field constructor:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:340
# 95090dbb25df44f1948140dc5f0a4d0b
msgid "As you might expect, there are a number of standard vocabularies that come with Plone and third party packages, most of which are named vocabularies. Many of these can be found in the *plone.app.vocabularies* package, and add-ons such as *plone.principalsource*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:2
#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:3
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:118
#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:44
# f4c910cbe9bf4f8b85da4038cd254fa5
# f61307246d1d441398be67b423838a42
# d73a5e01052a4eb49b2604f4670e69b7
# bdb2ed2ade6b46c2aa0f3a8499ffc7bc
msgid "Widgets"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:4
# 14eb2e25583d4562947b64e38402ef0a
msgid "**Changing the widget used to render a field**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:6
# 5ddf69521c3042d1915480d649458080
msgid "Like most form libraries, *z3c.form* separates a field – a representation of the value being provided by the form – from its widget – a UI component that renders the field in the form. In most cases, the widget is rendered as a simple HTML *<input />* element, although more complex widgets may use more complex markup."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:12
# a86874d0ef8048eb937eb20800200bfd
msgid "The simplest widgets in *z3c.form* are field-agnostic. However, we nearly always work with *field widgets*, which make use of field attributes (e.g. constraints or default values) and optionally the current value of the field (in edit forms) during form rendering."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:17
# ac1d6a9444fd40fab28110abf80b585a
msgid "Most of the time, we don’t worry too much about widgets: each of the standard fields has a default field widget, which is normally sufficient. If we need to, however, we can override the widget for a given field with a new one."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:23
# 27784abc3fa04148ab11c79b85ea7955
msgid "Selecting a custom widget using form directives"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:25
# 177960f6ddc94497afebe31876840d4d
msgid "*plone.directives.form* provides a convenient way to specify a custom widget for a field, using the *form.widget()* directive:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:51
# fef9e2948a474b9eb81867175d667f07
msgid "The argument can be either a field widget factory, as shown here, or the full dotted name to one (*plone.app.z3cform.wysiwyg.WysiwygFieldWidget* in this case)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:56
# 493fb3140d63444598c908e275474318
msgid "Updating widget settings"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:58
# 5a8cddfa0d94401091abfe61faededf4
msgid "All widgets expose properties that control how they are rendered. You can set these properties by passing them to the widget directive:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:74
# f8987c0f81a34198adbfec33c3cba89f
msgid "Support for specifying widget properties was added in plone.autoform 1.4."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:76
# 9978cdfd373241a2b4a95a1d2dc788ba
msgid "Some of the more useful properties are shown below. These generally apply to the widget’s *<input />* element."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:79
# 551d212f62844bf7a6ad28220d01ce6e
msgid "*klass*, a string, can be set to a CSS class."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:80
# bec43ae9055e4ec899ac5a558b26c644
msgid "*style*, a string, can be set to a CSS style string"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:81
# 30daa689d4b5448ba0070510022f2a55
msgid "*title*, a string, can be used to set the HTML attribute with the same name"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:83
# a1fefdb48dde4a6c987f341f2aa9c5d3
msgid "*onclick*, *ondblclick*, etc can be used to associate JavaScript code with the corresponding events"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:85
# 0e60f13346454571a9b3a1ef6d92477b
msgid "*disabled* can be set to True to disable input into the field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:87
# da15be43b21a4aaaacc29063227f917f
msgid "Other widgets also have attributes that correspond to the HTML elements they render. For example, the default widget for a *Text* field renders a *<textarea />* , and has attributes like *rows* and *cols*. For a *TextLine*, the widget renders an *<input type=“text” />*, which supports a *size* attribute, among others."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:93
# 23d1a91454b94f43a6691942213873c5
msgid "Take a look at *z3c.form*’s *browser/interfaces.py* for a full list of attributes that are used."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:98
# 3bcda7ee10d549e29b3c2e969db2e017
msgid "Supplying a widget factory"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:100
# 2ed04cafa94a46beaa4498f5bc8b4668
msgid "Later in this manual, we will learn how to set up the *fields* attribute of a form manually, as is done in “plain” *z3c.form*, instead of using the *schema* shortcut that is provided by *plone.autoform*. If you are using this style of configuration (or simply looking at the basic *z3c.form* documentation), the syntax for setting a widget factory is:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:117
# 92728dbcc02b4577aef8b2dfc6ccd25c
msgid "Widget reference"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:119
# e7ff1264380e4538b66a03d7af33496a
msgid "You can find the default widgets in the *browser* package in *z3c.form*. The *z3c.form* `documentation`_ contains a `listing`_ of all the default widgets that shows the HTML output of each."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:123
# 3ebb3a4af0c744b2a69aee1118f5821c
msgid "In addition, the Dexterity manual contains `an overview of common custom widgets <http://developer.plone.org/reference_manuals/external/plone.app.dexterity/reference/widgets.html>`_."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:2
# 3b82e1b7786a4f1aace9a0c6a5f9224a
msgid "Error snippets"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:4
# a79a82ae621443d992eed85d5c88808a
msgid "**Customising error messages**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:6
# 8eea87d5ec5d452e93ebfb4f3b044749
msgid "When creating custom validators, as shown earlier in this manual, it is easy to tailor an error message. However, *zope.schema* and *z3c.form* already perform a fair amount of validation for us, which results in generic error messages. For example, if a required field is not completed, a rather bland error message (“Required input is missing”) will be shown. Sometimes, we may want to change these messages."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:13
# baa23980826244469dedb121d14a80bb
msgid "*z3c.form* allows error messages to be customised at various levels of detail. For example, it is possible to register a custom *z3c.form.interfaces.IErrorViewSnippet* adapter, which behaves like a mini-view and can output arbitrary HTML. However, in most cases, we only want to update the output text string. For this, we use what’s known as a “value adapter”. This is simply an adapter which *z3c.form*’s default *IErrorViewSnippet* implementations will look up to determine which message to show."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:22
# 2061a25df6ba44edaf58f2306fe53ad3
msgid "The easiest way to create an error message value adapter is to use the *@form.error\\_message()* decorator from *plone.directives.form*. This decorator should be applied to a function that takes as its only argument the (invalid) value that was submitted, and return a unicode string or message indicating the error. To illustrate this, we will add a new function to *order.py*, just after the interface definition:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:65
# 3925f096ad11459ab417827ae116b576
msgid "As with the *@form.validator()* decorator, the *@form.error\\_message()* validator takes a number of keyword arguments, used to control where the error message is applied. The allowable arguments are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:72
# 36d95e635abd40919b06ba59831a96b3
msgid "error"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:70
# faae3b84679742b786c63a15289c27a7
msgid "The type of error, which is normally represented by an exception class. The most general type will usually be a *zope.schema.interfaces.ValidationError*. See below for a list of other common exception types."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:75
# fa36106954da4f01ab73fcd65b992f5d
msgid "The current request. This is normally used to supply a browser layer marker interface. This is a good way to ensure a general error message is only in force when our product is installed."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:79
# 7f6fdeeb96b84cea8f2950630c81ebfd
msgid "The widget which was used to render the field."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:81
# 35005152bf664d8cb26092e6a0327986
msgid "The field to which the error message applies. If this is omitted, the message would apply to all fields on the form (provided *form* is supplied) of the given error (provided *error* is applied)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:87
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:168
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:190
# 16ea28653ee84620b4bb2f21a2086418
# 88460d30627b40c58e5276a17cbca9a3
# 2b72dcf78c064192934c134ddf1298f0
msgid "form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:85
# dd4b58c904254be59b22d103e310c105
msgid "The form class. We can use this either to apply a single message to a given error across multiple fields in one form (in which case *field* would be omitted), or to customise an error message for a particular form only if a schema is used in more than one form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:90
# f53561cb24b14e4bb84f5b7e6fd6f684
msgid "content"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:90
# 534cc1e40d5840a7a2bddd729ffba48b
msgid "The content item (context) on which the form is being rendered."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:93
# 4d623f9649c949d1913e88a39d03a3dd
msgid "In almost all cases, you will want to supply both *field* and *error* at a minimum, although if you have multiple fields that may raise a particular error, and you want to create a message for all instances of that error, you can omit *field* and use *form* instead. If you supply just *error*, the validator will apply to all instances of that error, on all forms, site-wide, which is probably not a good idea if you intend your code to be-usable. At the very least, you should use the *request* field to specify a browser layer in this case, and install that layer with *browserlayer.xml* in your product’s installation profile."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:103
# dcb7db6a68a14552bf7ed8a88338957d
msgid "The exception types which may be used for the *error* discriminator are field-specific. The standard fields as defined in *zope.schema* use the following exceptions, all of which can be imported from *zope.schema.interfaces*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:108
# d3e7cacc59de49e0906327bb95405ea5
msgid "*RequiredMissing*, used when a required field is submitted without a value"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:110
# bdd0e2f9ac3547a6962e7305b13e2d26
msgid "*WrongType*, used when a field is passed a value of an invalid type"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:111
# 90662fa5ebb54f109dc87ec962f4bda5
msgid "*TooBig* and *TooSmall*, used when a value is outside the *min* and/or *max* range specified for ordered fields (e.g. numeric or date fields)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:114
# 7469c7b9da404b05a312e132bca80625
msgid "*TooLong* and *TooShort*, used when a value is outside the *min\\_length* and/or *max\\_length* range specified for length-aware fields (e.g. text or sequence fields)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:117
# a4ef5d753fb94ebfbdce290517a09674
msgid "*InvalidValue*, used when a value is invalid, e.g. a non-ASCII character passed to an ASCII field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:119
# 6ef977d4d868463e91eb00c6bc9ede88
msgid "*ConstraintNotSatisfied*, used when a *constraint* method returns *False*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:121
# 27754f1987014f1b806f76779459e399
msgid "*WrongContainedType*, used if an object of an invalid type is added to a sequence (i.e. the type does not conform to the field’s *value\\_type*)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:124
# 82367d830ce24926ac887df0f4a4a43f
msgid "*NotUnique*, used if a uniqueness constraint is violated"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:125
# 7568a57c874746db80fa830e260f3f25
msgid "*InvalidURI*, used for *URI* fields if the value is not a valid URI"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:126
# 8e13d9fb6cd0481092fddbcce1ef7996
msgid "*InvalidId*, used for *Id* fields if the value is not a valid id"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:127
# 61bfa1a6eab2426f8abfc16be019983a
msgid "*InvalidDottedName*, used for *DottedName* fields if the value is not a valid dotted name"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/index.rst:2
# 716a5abf3e07434eb3ff6bf2bd20790f
msgid "Customising form presentation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:2
# d0f74707655949c499995359688d29bf
msgid "Layout templates"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:4
# 71d22ae988524303bad0454c4f51293f
msgid "**Creating a custom layout for our form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:6
# ded7ddb7ad274339a5791ab575511b9d
msgid "So far, we have relied on Plone (in fact, *plone.app.z3cform*) to supply a default template for our forms. This uses the default Plone form markup, which is consistent with that used in other forms in Plone. For many forms, this is all we need. However, it is sometimes useful to create a custom template."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:12
# 698ff4bbef614f96a153f1a06a7f4792
msgid "Custom templates are normally needed for one of two reasons: Either, to insert some additional markup around or inside the form itself; or to radically change the form markup itself. The former is more common, since changing the form look-and-feel is normally done better with CSS. For that reason, *plone.app.z3cform* registers a view called *@@ploneform-macros*, which provides useful macros for rendering forms using the standard markup. We will illustrate how to use this below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:20
# 5171f0c3e9474d77a7fcd68029e4b606
msgid "The easiest way to associate a template with a form is to use the default grokked template association. Our form is called *OrderForm* and lives a module called *order.py*, so the grokker will look for a template in *order\\_templates/orderform.pt*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:26
# 471ce8188fbe436193124fbc2900395a
msgid "With the exception of *DisplayForms*, there is always a default template for forms extending the grokked base classes in *plone.directives.form*. Therefore, the template is optional. Unlike *grok.View* views, there is no need to override *render()* if the template is omitted."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:31
# cccec4e786e14986a1719f06fc012ad1
msgid "As an example, let’s create such a template and add some content before the form tag:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:57
# e1ff0b083f2c40539c347ec0f0369f8c
msgid "Notice how the *@@ploneform-macros* view does most of the work. This contains a number of useful macros:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:60
# a90b7603ff1d4f9b8a1f2d3cb4386290
msgid "*form* is a full page form, including the label"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:61
# c5f4d52f91b741a29f8c6ac9d905b787
msgid "*titlelessform* includes the form *status* at the top, the *<form />* element, and the contents of the *fields* and *actions* macros. It also defines three slots: *formtop*, just inside the *<form>* opening tag; *formbottom*, just before the *</form>* closing tag; and *beforeactions*, just before the form actions (buttons) are output."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:66
# 4f14ad81eec34d10984943f4faee52f7
msgid "*fields* iterates over all widgets in the form and renders each, using the contents of the *field* macro."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:68
# 59946a1c026f45c09117904450815c41
msgid "*field* renders a single field. It expects the variable *widget* to be defined in the TAL scope, referring to a *z3c.form* widget instance. It will output an error message if there is a field validation error, a label, a marker to say whether the field is required, the field description, and the widget itself (normally just an *<input />* element)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:74
# 668ba2365c6045198a2d104eef6a4c29
msgid "*actions* renders all actions on the form. This normally results in a row of *<input type=“submit” … />* elements."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:78
# c5f189d7cd044e7582332bb6b95a83cd
msgid "If you require more control, you can always create your form from scratch. Take a look at *macros.pt* in *plone.app.z3cform* for inspiration."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:82
# 46c48f38d5fc4b83b0a9aacaa53abb14
msgid "If you don’t require tabbed fieldsets or “inline” field validation, the template can be simplified substantially. See *macros.pt* in *plone.z3cform* for a cleaner example."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:86
# dcdc4868ec014a38a6de93aabe698466
msgid "The most important variables used in the template are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:88
# 55d499a3130847fab9f8b7bd59d24cd4
msgid "*view.id*, a unique id for the form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:89
# 5a5893fb50204a848de9e203f106e9cf
msgid "*view.enctype*, the form’s *enctype* attribute"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:90
# 0180ab262c33447db6a8117b519ac43e
msgid "*view.label*, the form’s title"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:91
# 7b0eb34dc40a4e6f848f66ced48e9a12
msgid "*view.description*, the forms’ description"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:92
# 88c5f0cb6d9c40d4a44f96dbd96bcc3b
msgid "*view.status*, a status message that is often set in action handlers."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:93
# 0212fd9f3a3e41d2b2dd8db11cc79b0b
msgid "*view.groups,* a list of fieldsets (groups), as represented by *Group* instances."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:95
# ed1865a2e2cd4c69aadb200d31582a63
msgid "*view.widgets*, which contains all widgets. *view.widgets.errors* contains a list of error snippet views. Otherwise, *widgets* behaves like an ordered dictionary. Iterating over its *values()* will yield all widgets in order. The widgets have been updated, and can be output using their *render()* method."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:100
# 6cd37fe151784002ab8bd144bebf87a0
msgid "*view.actions,* contains an ordered dictionary of actions (buttons). Iterating over its *values()* will yield all actions in order. The actions have been updated, and can be output using their *render()* method."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:2
# 1e3c1d591cc84e81ba0cbeab0b29fc75
msgid "Add forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:4
# 3bbe2d4d06864bcd9cafb0f16fa78606
msgid "**Forms to create new content objects**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:6
# b833a7876d104eacb1eecaf70ab67bcd
msgid "An add form, as its name implies, is used to add content to a container. Add forms are usually registered as views on a container. For generic CMF or Plone content, the *IFolderish* interface is normally a good candidate. The fields in an add form usually represent the fields in the type that is being added."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:13
# 8d7e955304884196b14d6bf1bed4fec4
msgid "If you are using Dexterity or Archetypes, these frameworks have their own add form factories, which you probably want to use instead of the more basic version described here."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:17
# 5e1b54c9e3f1485daee442348729bb67
msgid "Add forms derive from *z3c.form.form.AddForm*, which is extended by *plone.directives.form.AddForm* and *plone.directives.form.SchemaAddForm*, adding grok support and standard Plone semantics."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:22
# ff31c450b8244e4ba7e956bb04ddd05e
msgid "To use an add form, you must implement two methods - *create()* and *add()*. The form then takes care of emitting the proper events and directing the user to the newly added content item. You can also set the *immediate\\_view* property to the URL of a page to visit after adding the content item."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:62
# 4ecf2b73fa1242db962b178ebe8b4e75
msgid "*create()* is called after validation, and is passed a dictionary of marshalled form fields. It should construct and return the object being added. That object is then passed to *add()* (after an object-created event has been fired), which should add it, normally to *self.context* (the container)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:68
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:53
# be972d07502d4b3a83a7ba730db5ed0a
# 46603dec6e324d5eae4d7ad2bda15ad2
msgid "A non-schema version would look like this:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:2
# f3cdb1534d4340afb69e166cccd8d9c7
msgid "Base forms and schema forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:4
# 2e3114f9fb814ae88e6188b190ebb78f
msgid "**Understanding the two types of forms work with in this manual**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:6
# 7d643176a1ea43c889f0dcad1c4df63f
msgid "*z3c.form* comes with a few base classes for forms, covering common use cases including page forms, edit forms, add forms and display forms. In this manual, we are actually using some intermediary base classes from *plone.directives.form*, which serve two purposes: they allow the forms to be “grokked”, for example to associate a page template or register the form as a view using directives like *grok.context()* and *grok.name()*; some of them also provide a hook for *schema forms*, which use form hints supplied in directives (like *form.widget()* as we saw in the previous section) that are interpreted by *plone.autoform* to configure the form’s fields. Whilst we can do everything in code using the plain *z3c.form* API, many people may prefer the more declarative style of configuration that comes with *plone.autoform* and *plone.directives.form*, because it involves less code and keeps the field-specific form configuration closer to the field definitions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:21
# 41d915a9623746698a785fedb297589e
msgid "Over the next several sections, we will discuss the various form base classes. A brief overview follows."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:34
# 3ab8380bf03e46429eb7cc1f389e98d5
msgid "**z3c.form.form.BaseForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:25
# e1cf424517614287a8b64eb31b60cf1a
msgid "This base class is not to be used directly, but is the ancestor of all *z3c.form* forms. It defines attributes like *label* (the form’s title), *mode* (the default mode for the form’s fields, usually *‘input’* in regular forms and *‘display’* in display forms), *ignoreContext*, *ignoreRequest* (see below) and *ignoreReadonly* (which omits readonly fields from the form). It also defines the basic *update()* and *render()* methods that are the basis of the form rendering cycle, which we will explain towards the end of this manual, and the *getContent()* helper method which can be used to tell the form about an alternative context - see below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:38
# 238b7e50552f4ebdb40f71d24a28916a
msgid "**plone.directives.form.Form (extending z3c.form.form.Form)**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:37
# d816c3cc9b4b4c0c9b715a5c67df4087
msgid "A basic full-page form. It supports actions (buttons), and will by default read field values from the request (unless *ignoreRequest* is *True*) or the context (unless *ignoreContext* is *True*)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:43
# c8d00fdaa1fc49278eb47f867c829384
msgid "**plone.directives.form.SchemaForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:41
# 85c958cb470b4a98bf231e05be7f9a18
msgid "This is identical to *Form*, except that it will construct its fields *plone.autoform* schema hints. The *schema* attribute is required, and must be a schema interface. The *additional\\_schemata* attribute may be set to a tuple of additional schemata - see below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:48
# 405531aeb01a4329b1df5085e6dcaa0f
msgid "**plone.directives.form.AddForm (extending z3c.form.form.AddForm)**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:46
# 3ca004cab736422b81148f77d5d081f5
msgid "A basic content add form with two actions - save and cancel. This implements default Plone semantics for adding content. Note that if you are using Dexterity, you should use the Dexterity add form instead. See the Dexterity documentation for details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:50
# a91e1d8f1ae94c20a7a768a27f215f58
msgid "**plone.directives.form.SchemaAddForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:51
# 75633dfa49e9411d8722a433e4543ac2
msgid "The schema form equivalent of *AddForm*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:59
# 857a46f0bea7408d86c6ed727c8a10f4
msgid "**plone.directives.form.EditForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:53
# ca1bb8a22a2f4f34a60e9472cb5b4e5c
msgid "A basic edit form with two actions - save and cancel. This operates on the context returned by the *getContent()* helper method. By default, that’s the context of the form view (*self.context*), but we can override *getContent()* to operate on something else. In particular, it is possible to operate on a dictionary. See the section on edit forms shortly. Note that if you are using Dexterity, you should use the Dexterity edit form instead. See the Dexterity documentation for details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:61
# 2a2b9950616743fb932abf471d8d2aff
msgid "**plone.directives.form.SchemaEditForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:62
# f29fcc8bf168417ead3094b85b71b776
msgid "The schema form equivalent of *EditForm*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:69
# f16a18b78f3540609b37503f5f20c5f5
msgid "**plone.directives.dexterity.DisplayForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:64
# bc03096db8b748a5a5206c7f55d2222d
msgid "This is a display form view based on the *WidgetsView* base class from *plone.autoform*. You can use this much like *grok.View*, except that it must be initialised with a *schema*, and optionally a tuple of *additional\\_schemata*. There are several helper variables set during the *update()* cycle which provide easy access to the form’s widgets in display mode."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:72
# a1a695d389cc4010a49968c9d2ceed08
msgid "Context and request"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:74
# c46442dd889c4c9a9c231b91dfdeef24
msgid "When a form is first rendered, it will attempt to fill fields based on the following rules:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:77
# de920d6e871b46a3be8cbc7d3777594a
msgid "If *ignoreRequest* is *False* (as is the default for all forms bar display forms), and a value corresponding to the field is in the request, this will be used. This normally means that the form was submitted, but that some validation failed, sending the user back to the form to correct their mistake."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:82
# f99061889b254d4fa378a3b5983490be
msgid "If no request value was found and *ignoreContext* is *False* (as is the default for all forms bar add forms), the form will look for an associated interface for each widget. This is normally the schema interface of the field that the widget is rendering. It will then attempt to adapt the context to that interface (if the context provides the interface directly, as is often the case for edit and display forms, the context is used as-is). If no such adapter exists, form setup will fail. If this happens, you can either set *ignoreContext = True* (which is normally appropriate for free-standing forms like the examples earlier in this manual), supply an adapter (which is normally appropriate for forms that edit some aspect of the context), or override *getContent()* to return a content that is adaptable to the schema interface."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:95
# 0a51d186729244a69d3afe33d984d0e6
msgid "If no request or context value was found and the field has a default value, this will be used."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:99
# 70a022004fd8495f8b0fa0c26b5e2d41
msgid "Primary and additional schemata in schema forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:101
# 179a3ac316bf42c7b9bfd6674cc77fbc
msgid "When using a schema form, it is possible to set two form properties supplying schemata for the form:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:104
# 1c39a5d4b4014981a65c3f69ab1672bc
msgid "*schema* is required for all schema forms, and must point to a schema interface. This is known as the default or primary schema for the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:107
# f1ce7a44728d4ed5acd7307698fdedcd
msgid "*additional\\_schemata* is optional, and can be set to a tuple or list of schema interfaces. These will also be included in the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:111
# a817a6c527c84e908ac7d34d25f7b144
msgid "If you want to make the schema dynamic, you can implement these as read-only properties. this is how Dexterity’s add and edit forms work, for example - they look up the primary schema from the type information in *portal\\_types*, and additional schemata from behaviours."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:116
# f98ab3d6354a425a9cd92f1a64af9b29
msgid "Later in this manual, we will learn about creating tabbed fieldsets, also known as groups. The schema forms support a property *autoGroups* which default to *False*. When set to *True*, the primary schema will be used as the primary fieldset, and each schema in *additional\\_schemata* will become its own fieldset. The schema name will become the fieldset name, and its docstring will become its description. This is obviously somewhat inflexible, but can be useful for certain forms where the fieldsets need to be dynamically looked up."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:2
# 75254a339eef45a694a0a572e312807f
msgid "Display forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:4
# 01f8926d404b4b2fb8a0ee8a49042bbd
msgid "**Using widgets in display mode**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:6
# 30ebc424c83f46fcb8e61c5c752d1755
msgid "Both forms and widgets support the concept of a “mode”. The form’s mode acts as a default for its widgets. The most commonly used mode is *‘input’*, as indicated by the constant *z3c.form.interfaces.INPUT\\_MODE*, but there is also *‘hidden’* (*HIDDEN\\_MODE*) and *‘display’* (*DISPLAY\\_MODE*). The latter is the form mode for *display forms*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:13
# 979265b978da40c09031ef464380f6b2
msgid "Display forms derive from *z3c.form.display.DisplayForm*, which is extended by *plone.directives.dexterity.DisplayForm*. This also mixes in *plone.autoform.view.WidgetsView*, which provides various conveniences for dealing with display mode widgets and fieldsets (groups). Note that this is a “schema form”, i.e. we must set the *schema* property (and optionally *additional\\_schemata*) to a schema deriving from *form.Schema*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:22
# bf04f3b8cb8c445680f3b23865bac17e
msgid "If you require a grokked alternative that is not a schema form, you can derive from *z3c.form.form.DisplayForm* and *plone.directives.form.form.GrokkedForm*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:26
# 82c28dec98744cbfba40238bb8d3e1c6
msgid "Display forms are not very common outside framework code. In most cases, it is easier to just create a standard view that renders the context. In a framework such as Dexterity, display forms are used as the default views of content items. The main reason to use display forms for anything bespoke is to use a complex widget that has a display mode rendering that is difficult to replicate in a custom template."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:33
# 1b30aa16b56d411ab5cbfe150a439ecd
msgid "It is also possible to put some widgets into *input* mode (by setting the *mode* attribute in the *updateWidgets()* hook), thus placing a widget into a form that is otherwise not managed by *z3c.form*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:37
# bbc5f036f411469595e4af9f57bdcf77
msgid "Display forms are used much like standard views. For example:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:56
# d517417a9bc54463a10a4aee47a84cd6
msgid "There would typically also be a template associated with this class. This uses standard five.grok view semantics. If the display form above was in a module called *display.py*, a template may be found in *display\\_templates/mydisplayform.pt*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:61
# 7141f48754db43548ed4579a130746a0
msgid "The *DisplayForm* base class in *plone.directives.form* makes the following view attributes available to the template:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:64
# 2dc558a7a98840729db73888572125a8
msgid "*view.w* is a dictionary of all the display widgets, keyed by field names. This includes widgets from alternative fieldsets."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:66
# d2e50a2438734a6d8e4095e76e87de57
msgid "*view.widgets* contains a list of widgets in schema order for the default fieldset."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:68
# 47ee77b81c7b4683b3a92a2e50bb46f5
msgid "*view.groups* contains a list of fieldsets in fieldset order."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:69
# 781cadc4500440e5b4a967f4f08f2b1b
msgid "*view.fieldsets* contains a dict mapping fieldset name to fieldset"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:70
# 8ba2e5b215b94f899db99f0cc9325c1d
msgid "On a fieldset (group), you can access a *widgets* list to get widgets in that fieldset"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:73
# 55a67e3e567f403b87bad2a671502846
msgid "The *w* dict is the mostly commonly used. To render a widget named *foo* in the template, we could do:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:2
# 98c87f74ab6340939fe8e416b0dcc185
msgid "Edit forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:4
# 012b62ff140b47bfbd674feb13c25b44
msgid "**Forms that edit something**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:6
# 44c2ff1f817640e984b77435584b52ce
msgid "Edit forms, unsurprisingly, are used to edit content objects or other contexts. They derive from *z3c.form.form.EditForm*, which is extended by *plone.directives.form.EditForm* and *plone.directives.form.SchemaEditForm*, adding grok support and Plone semantics. The edit form takes care of firing object-modified events, and implements default save and cancel actions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:14
# ba94d322d4f34ac7a33da2e110d9ba81
msgid "As with add forms, frameworks like Archetypes and Dexterity provide their own default edit forms, which should use for editing content objects built with those frameworks."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:18
# 341ca862f294432593845f86fbc56668
msgid "The schema of an edit form is normally a content object schema, which normally also describes the context of the form view. That is, the edit form is normally a view on the object that is being edited"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:22
# 4bffeabeaa3249659d091efa1be6c20e
msgid "That said, we can implement *getContent()* to supply a different context. This would normally provide the schema interface, but it does not need to. As with any form, the context need only be adaptable to the interface(s) associated with its fields."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:27
# a16cdce5c4714bfea9a7841e8885049d
msgid "A simple edit form in a view called *@@edit* that edits a content object providing *IMyType* would look like this:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:53
# b902ae3c466e4b05a6005c3c0c3b8610
msgid "There is no need to define any actions or implement any methods. The default save button handler will adapt the context to *IMyType* and then set each field in the interface with the submitted form values."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:57
# 4f0ec958f65f43c9904f88fc7123395f
msgid "A non-schema example would look like:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:82
# 0e2456c3b47b423580ee152e537fbe21
msgid "As a slightly ore interesting example, here is one adapted from *plone.app.registry*’s control panel form base class:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:125
# 3fb4ece94d8c43669d003a0247b9f3ac
msgid "The idea here is that *IMySettings*, which is set as the schema for this schema edit form, is installed in the registry as a set of records. The *forInterace()* method on the *IRegistry* utility returns a so-called records proxy object, which implements the interface, but reads/writes values from/to the configuration registry. The form view is registered on the site root, but we override *getContent()* to return the records proxy. Hence, the initial form values is read from the proxy, and when the form is successfully submitted, the proxy (and hence the registry) is automatically updated."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/index.rst:2
# de9d9cb9a7c040af9659b499521dff61
msgid "Form types"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:2
# 9585954944d742ae9cfcad36ef7d0437
msgid "Page forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:4
# 693ce62335a644fc8983142e61bd06dd
msgid "**The most basic type of form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:6
# 69366107d83e45c0a63f6ed7a17ad175
msgid "A page form, or simply “form”, is a basic, “standalone” form. The pizza order example in this manual is a page form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:9
# aec64238bd4141e08d4d56dd74ab76e2
msgid "Page forms derive from *z3c.form.form.Form*, which is extended by *plone.directives.form.Form* and *plone.directives.form.SchemaForm* as described in this manual. They will typically have actions, and be registered as a view for some context. For a completely standalone form, the site root is often good choice."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:93
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:169
# 71d425547b70481c9c08c9ab58d1a0e3
# 6d3e7127775e439eb203050929b0667b
msgid "Many “standalone” page forms will set *ignoreContext = True*. If it is *False* (the default), the form will read the current value of each field from the context, by attempting to adapt it to the form schema, as described in the previous section."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:98
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:174
# c7d2fdf1251a410183f4c3c8ad982dfe
# 4e086514da47400ead1c4aabcc8ee1ce
msgid "Sometimes, we want to populate the form with initial values that are not attributes of the context (or an adapter thereof). *z3c.form* allows us to change the object from which the form’s data is read, by overriding the *getContent()* method. We can return another object that provides or is adaptable to the schema interface(s) associated with the form’s fields, but we can also return a dictionary with keys that match the names of the fields in the form schema. This is usually easier than creating an adapter on some arbitrary context (e.g. the site root) solely for the purpose of pre-populating form values. It also makes it easy to construct the form’s initial values dynamically."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:158
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:234
# 9c55ef3e77094678a12ca39038a47970
# 49a2a46c663d47a19a5ed95a6272bb5f
msgid "Note how the fields in the *data* dictionary returned by *getContent()* correspond to the fields of the schema interface from which the form’s fields are built. If we had fields from multiple interfaces (e.g. using the *additional\\_schemata* tuple), we would need to populate keys based on the fields from all interfaces."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:164
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:240
# 6d8cc1d7208343aa9342482cda32838c
# 5bd968fc8d4a4bd29c412fd20e71a90d
msgid "Also note that the values in the dictionary must be valid for the fields. Here, we have used *TextLine* fields, which expect unicode string values. We would likely get an error if the value was a byte string or integer, say."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:2
# b4fce156f3b7473593221bd1f32777e9
msgid "Further reading"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:4
# 9c1e2af062d249b2b0a1da8ca8a0fffd
msgid "**Where to find more information**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:6
# 2b0b452d2a8441a8a436cc7926da53ff
msgid "To find out more about *z3c.form* and its uses in Plone, consult the following references:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:9
# 229ba89b5435454d8131a1631c3e4cac
msgid "The `z3c.form`_ documentation. This provides a detailed guide to *z3c.form*’s inner workings."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:11
# a19e64aed4dc4937835019230e475d01
msgid "The `plone.z3cform`_ documentation. Describes how to use “raw” *z3c.form* forms in Zope 2, and documents the Zope 2-specific extensions provided by this package."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:14
# 643dcfb178c241fcaddf38667f585122
msgid "The `plone.app.z3cform`_ documentation. Describes how to use “raw” *z3c.form* forms in Plone."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:16
# 335ae537c2544ab7831d81710175e61e
msgid "The `plone.autoform`_ documentation. Explains the raw behaviour of the *plone.autoform* library and its directives."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:18
# 2241f26ce72e4e2f92775953e34fc9f1
msgid "The `plone.directives.form`_ documentation. Lists the form base classes."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:19
# b0361d222724438ab4d9b7dc8c8fc861
msgid "The `five.grok`_ manual. Explains the concepts of grokkers, the Zope Component Architecture, and view component registrations."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:21
# fc996cc99ec0476eb60056da5e8acd1e
msgid "The `Dexterity manual`_. Illustrates in various sections how *z3c.form* is used in Dexterity."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/index.rst:2
# f38d700e8043491f9438f7c94e3321c8
msgid "Schema-driven forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/index.rst:4
# 1952b2021f24480ea9617a304ffc5a1d
msgid "**This tutorial covers how to build schema-driven forms, using the z3c.form and plone.autoform libraries.**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:4
# 2e96099d67f1482f8a8e2f10a11f8fbf
msgid "**What is z3c.form all about?**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:6
# 774b2bef93c14353bc0a6fa0aa604626
msgid "HTML forms are the cornerstone of modern web applications. When you interact with Plone, you use forms all the time - to search the content store, to edit content items, to fill in your personal details. You will notice that most of these forms use the same layout and conventions, and that they all rely on common patterns such as server-side validation and different buttons resulting in different actions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:13
# c4884bbeedb74705a8ccf0cbffff7b23
msgid "Over the years, several approaches have evolved to deal with forms. A few of the most important ones are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:16
# 11c02986114e4d15ba423f6d869135bd
msgid "Creating a simple view with an HTML form that submits to itself (or another view), where the request is validated and processed in custom Python code. This is very flexible and requires little learning, but can also be fairly cumbersome, and it is harder to maintain a common look and feel and behaviour across all forms. See the `five.grok view documentation`_ for some hints on one way to build such views."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:22
# 937a9f6a78174ad6a08c123283540bdd
msgid "Using the *CMFFormController* library. This relies on special page objects known as “controller page templates” that submit to “controller python scripts”. The form controller takes care of the flow between forms and actions, and can invoke validator scripts. This only superficially addresses the creation of standard form layouts and widgets, however. It is largely deprecated, although Plone still uses it internally in places."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:29
# 5db10b983802417796a81a51ed845989
msgid "Using *zope.formlib*. This is a library which ships with Zope. It is based on the principle that a *schema interface* defines a number of form fields, constraints and so on. Special views are then used to render these using a standard set of widgets. Formlib takes care of page flow, validation and the invocation of *actions* - methods that correspond to buttons on the form. Formlib is used for Plone’s control panels and portlets. However, it can be cumbersome to use, especially when it comes to creating custom widgets or more dynamic forms."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:38
# e93ffd98a8fd4b599cfbae58d3b891a5
msgid "Using *`z3c.form`_*. This is a newer library, inspired by formlib, but more flexible and modern."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:41
# 0663fa2dd3f34b429d3e7251d33c7ac6
msgid "This manual will show you how to use *z3c.form* in a Plone context. It will use tools and patterns that are consistent with those used for Dexterity development, as shown in the `Dexterity manual`_, but the information contained herein is not Dexterity specific. Note that Dexterity’s standard add and edit forms are all based on *z3c.form*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:48
#: ../../reference_manuals/old/plone_3_theming/index.rst:56
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:307
# 3a49ec7236764360919b1ed213259522
# b3ed217414ec443e8cb65f165dae628e
# 99ab60129c1b4a1abd1bbe9a57de4463
msgid "Tools"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:50
# 8911985e554b41769c88f15162c05ab0
msgid "As a library, *z3c.form* has spawned a number of add-on modules, ranging from new field types and widgets, to extensions that add functionality to the forms built using the framework. We will refer to a number of packages in this tutorial. The most important packages are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:55
# b4d47a56bfea46f39cf3cb4ca05a5380
msgid "`z3c.form`_ itself, the basic form library. This defines the standard form view base classes, as well the default widgets. The *z3c.form* `documentation <http://docs.zope.org/z3c.form>`_ applies to the forms created here, but some of the packages below simplify or enhance the integration experience."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:59
# fee7408ed8414f079264310e343eeb42
msgid "`plone.z3cform`_ makes *z3c.form* usable in Zope 2. It also adds a number of features useful in Zope 2 applications, notably a mechanism to extend or modify the fields in forms on the fly."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:62
# 186906291f1d410e9827ef9f9b9ebddf
msgid "`plone.app.z3cform`_ configures *z3c.form* to use Plone-looking templates by default, and adds few services, such as a widget to use Plone’s visual editor and “inline” on-the-fly validation of forms. This package must be installed for *z3c.form*-based forms to work in Plone."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:67
# 20961a2328b84454a8e09821ffc2d757
msgid "`plone.autoform`_ improves *z3c.form*’s ability to create a form from a schema interface. By using the base classes in this package, schemata can be more self-describing, for example specifying a custom widget, or specifying relative field ordering. We will use *plone.autoform* in this tutorial to simplify form setup."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:72
# edb4799836ba4992a4eeeafc26408067
msgid "`plone.directives.form`_ provides tools for registering forms using convention-over-configuration instead of ZCML. It depends on `five.grok`_ and adds support for the patterns that apply to the *grok.View* base class, including automatic template association. We will use *plone.directives.form* to configure our forms in this manual. You can read more about this in the `five.grok manual`_. We will register all our forms using *plone.directives.form* in this tutorial."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:82
# ce4f8d23db474942aba88b332f0b0f99
msgid "A note about versions"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:84
# bae343e14ba14ec9bab3c29f66cdf231
msgid "This manual is targeted at Plone 4.1 and above (Zope 2.13)."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:3
# 64a53f9e70d14dd8a220c2baba2ea4ce
msgid "Embedded external manuals"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:7
# a12944c028e44f818eb3fa7de9d6ae46
msgid "How to get your Plone package documentation into collective-docs."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:15
# 6a8ce610785142a9968dd3bc17c5a06c
msgid "The audience of this documentation are Plone developers who are writing Plone core Python packages."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:18
# 14f7b445a4604ebfaf858a4a31a78348
msgid "collective.developermanual has a section *Reference manuals*"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:20
# dc60607db1bd49509b807b733eb547d4
msgid "You can pull in manuals to this section from external packages"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:22
# 5bc62fec7bf248a49d2a9e01756730fa
msgid "Then these manuals can be cross-references in the other documentation"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:24
# 2269217468f843088adcb2b2403f1b46
msgid "All documentation is one place to be found for the fellow peer developers"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:26
# 0156f65041d54ca0aa9a3626cdde7d83
msgid "Manuals will be hosted under *developer.plone.org* domain"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:29
# 9de22c49926f4efdaf0c4202c6a2a22b
msgid "Benefits of having the documentation in developer.plone.org"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:31
# d6823debec344e0b91b742e05777d769
msgid "The main benefit of having your manual in *developer.plone.org* instead of a custom readthedocs.org account include"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:34
# fefed946aad94113ba47967c2df464a9
msgid "Better co-developer user experience (all manuals in one place searchable). Your manual can be cross-referenced from collective-docs."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:37
# 729ceb1e874b4ee781a0644ecba074f9
msgid "Unified documentation theme with usability features like edit backlinks"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:40
# e916b86e7a7f46d9a61054892f9f52cf
msgid "Documentation team can keep an eye on you: *#plone-docs* IRC channel will get Travis CI notifications on Sphinx syntax failures (please join in on the channel)"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:44
# 744d939868b849f08a1d276a45e6b47c
msgid "*Plone AI team* has shared rtd.org account in the case we have a person missing-in-action"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:47
# 2c017f05b3244645b97bf7dc53a099d9
msgid "Disadvantages include"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:49
# 0a602b3505964244ac542f335c0b3909
msgid "*readthedocs.org* does not notice changes in your documentation and thus builds must be triggered manualy. However collective-docs is build frequently so the lag should be maximum of 24 hours or so"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:53
# fa2a632f698b4a2f861f03ab9da22717
msgid "More complex Sphinx ``conf.py`` with all sort of trickery to pull this all together"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:57
# 709d2e1afe18455d952cfdd9a42993f9
msgid "Steps to embed a reference manual in collective-docs"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:59
# b0dc473c3bfe492a818c1da8eb867cf7
msgid "Add your egg to ``[sources]`` and ``auto-checkout`` in ``buildout.cfg``."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:61
# 61d4f8abe87a498994ec68eccaf2d18d
msgid "Add directory mapping the Sphinx documentation inside that egg at the top of ``conf.py``."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:63
# 0b9c01c1c8c74cbbbf397ce7519a77bb
msgid "Add a reference in ``source/index.rst`` to point your master ``index.rst``."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:65
# 150f4d62da4f44218555aacdac70bd21
msgid "Then run Sphinx::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:70
# 01e8211aaf0144579eccbc16163bf263
msgid "See Sphinx ouput for warnings and errors."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:72
# 84d9fc5700084595a28df4a5c1425b96
msgid "See that your manual gets correctly added in the index::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:76
# 1ea2ce19cb5145cfac7125924422002f
msgid "``conf.py`` creates symlinks in ``source/reference_manuals/external``. If you manage to mess them reset the situation with the command::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:82
# 8ddb08613df74e578737aeb3349d2835
msgid "developer.plone.org builds"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:84
# a9100bceeea842b39798b579c6b7ada0
msgid "``developer.plone.org`` documentation builds are done on *deus2.plone.org* machine in ``/var/www/developer.plone.org`` folder. They are done by running `doc-holliday.sh update script <https://github.com/collective/collective.developermanual/blob/master/doc-holliday.sh>`_ in a crontab created by *deployment.cfg*."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:90
# a196c89a24c04587b8cf20a3c49e2d08
msgid "Update"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:92
# 8c20076d27b34b62b64111c90212d464
msgid "Do run the build by hand and see what's going wrong::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:99
# 7bd980e121a542f7a755b9a9f077a863
msgid "Something like this is occasionally needed to clear up things changed in external packages::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:105
# 1a7d088f050146e1a955f45f05cc1f11
msgid "Setup"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:107
# c9b9d0b238ae4382a5f8e6b1c313c8a8
msgid "The deployment is done as following::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:120
# 272a774c67db404eaafe1379ff0fd118
msgid "The folder where final static HTML files lie is ``/var/www/developer.plone.org/var/public_html``."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:3
# eb643f8bf192458fa370e2e912e99c2f
msgid "How to update and maintain collective.developermanual"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:7
# 692a04a6bc0d44b8a9cf90c975716e60
msgid "This document explains how collective.developermanual package is maintained and how changes are pushed."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:17
# 54baa222d63548a699320497a1585162
msgid "This document concerns those who:"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:19
# eb2d8c1c9675456683a3705c2c87c6db
msgid "wish to generate a HTML version of Plone Developer Documentation"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:21
# 59b98ce985da47a5a56460ea76d3684d
msgid "need to edit templates or styles of Plone Developer Documentation, or otherwise customize Sphinx process"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:25
# a728836a36464b06a8c085c8d852e6fb
msgid "collective.developermanual"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:27
# ae3b8317f4fa43baa15aab36a6daee3e
msgid "collective.developermanual_ is open-for-anyone-to-edit documentation for Plone development in `Sphinx documentation format <http://sphinx.pocoo.org/>`_, living on `Github <https://github.com/collective/collective.developermanual>`_. Anyone can provide patches through Github through-the-web editor and Pull request mechanisms."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:33
# 9d37dea0e42f46c686424aa66281c6bb
msgid "The ``collective.developermanual`` *git clone* contains buildout to:"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:35
# c18d7983e79d494295fa716e116a5214
msgid "Install Sphinx"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:37
# a3c31ec72ad74cb5a1968bf0a54000ad
msgid "Install and clone necessary Plone packages referred by documentation (API docs)"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:39
# 3ce3205a3cd74956a948ca3a8718bb17
msgid "Compile the documentation to HTML"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:42
# 0593dcd886a3439cbdc51bdd4f7a21fb
msgid "Setting up software for manual compilation"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:44
# 1e6dcff94e3d4664afbcae0e34ee16de
msgid "First you need to install Git for your operating system to be able to retrieve the necessary source code::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:49
# 9c7e4a3290ff407581155dec968e1fff
msgid "or::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:55
# 4d5c9e0233dd49c6b0c17d27c2095eb2
msgid "You must not have Sphinx installed in your Python environment (this will be the case if you installed it using ``easy_install``, for example). Remove it, as it will clash with the version created by buildout.  Use ``virtualenv`` if you need to have Sphinx around for other projects."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:60
# 07b605278d3a4b45b128fee9e41617da
msgid "Then clone ``collective.developermanual`` from GitHub::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:64
# 8a535b91a6ff44678ad815f811899907
msgid "Run buildout to install Sphinx. First step: bootstrap::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:70
# 67b21238ede742c7ad4f30fdf7d8c192
msgid "This will always report an error, but the ``bin/`` folder is created and populated with the required scripts.  Now you need to checkout all the source code using the *mr.developer* tool::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:76
# d71057af4d7c4e0d872b6951a60aafa1
msgid "Run buildout again::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:2
# 1dfc485e97b74d50bd606da5d1c881b0
# 550bb5788f4a46b1acbf941b2d019f67
msgid "Analytics"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:83
# 3d9448bdcd2c4e2b838deeb78d4a3870
msgid "developer.plone.org pages have the Google Analytics script installed. Please ask on the #plone.org IRC channel for data access."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:87
# 204b846dfe454d409bb1a1c340f783d0
msgid "Building static HTML with Sphinx"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:89
# fc5fa835d9dd4741a354415ec7747f64
msgid "This creates the ``docs/html`` folder from the source documents in the ``source`` folder, by compiling all the ``collective.developermanual`` pages, using the ``sphinx-build`` command from buildout::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:95
# ebf16dd9a5eb4b04a67c2134b53012e6
msgid "If you want to build everything from the scratch, to see all warnings::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:104
# ec335c8ad6f846f8b56cd0c02feb14a4
msgid "Editing CSS styles"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:106
# da72e1b30ff74f32b0b252e2ba358cfa
msgid "When ``sphinx-build`` is run it copies stylesheets from *sources* to *build*."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:109
# be552797f1ce4cfc9c877d2dfe3d3f5d
msgid "For live editing of CSS styles you might want to do::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:113
# 1e03fe17d3104799a6cb8f05e3a98b9b
msgid "Then copy back::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:119
# c3471df987fb404fa4b96eb2c9bfe716
msgid "Firefox does not follow symlinks on file:// protocol, and cannot load CSS files from them."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:122
#: ../../reference_manuals/old/buildout/additional.rst:175
#: ../../reference_manuals/old/portlets/tips.rst:482
#: ../../reference_manuals/old/portlets/tips.rst:893
# 300bb46b94c542c8a05158c5aa093ae8
# c015a8036cc2452d92bb7d199dcb443f
# 31d1fc01210245929dd31e83ba57d738
# 8fe8d4468325467184c8e41f91ab53d6
msgid "More info"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:124
# ad92626177db47179f2492608c80fc52
msgid "http://sphinx.pocoo.org/templating.html"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:126
# ef59ab19e9294d1dad6450496f827006
msgid "https://bitbucket.org/birkenfeld/sphinx/src/65e4c29a24e4/sphinx/themes/basic"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:130
# 3aa152c1a1b64fc1b3cc6b2fb12d2b59
msgid "Compiling the HTML manual"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:132
# 95096e358d73476faf839dc92868b03e
msgid "Use the Sphinx makefile::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:141
# 50eba7c7ecdb43bca8e59218d402a970
msgid "Setting up CSS for http://plone.org"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:143
# 8d0ff7333ede481db7b6818e69e5672f
msgid "An example ``sphinx.css`` is provided with ``collective.developermanual``."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:145
# fa96435fa029486e823897c647871e34
msgid "It sets up CSS for default Sphinx styles (notices, warning, other admonition)."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:147
# 31f33730bb42472692b455d4023c5768
msgid "It sets up CSS for syntax highlighting."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:148
# 33877847aa4b49d1b9f2ba77badeebf5
msgid "It resolves some CSS class conflicts between Sphinx and the plone.org theme."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:151
# d602d993dc7f4e6baa53d47dfc92e0c4
msgid "``sphinx.css`` assumes that a special Sphinx ``page.html`` template is used. This template is modified to wrap everything which Sphinx outputs in the ``sphinx-content`` CSS class, so we can nicely separate them from standard Plone styles."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:156
# 7df0c46e759d4fa0b592678c0ba5c790
msgid "``page.html`` can be found at ``sources/_templates/page.html``."
msgstr ""

#: ../../reference_manuals/active/writing/index.rst:3
# 9261f41798064f32b5b64f5945f53f4d
msgid "Documentation maintenance guide"
msgstr ""

#: ../../reference_manuals/active/writing/index.rst:17
# a06776b8318e43189bc9fe9382588eb1
msgid "Presentations"
msgstr ""

#: ../../reference_manuals/active/writing/index.rst:19
# eb1779b6bde54e7db8aea753ef6cd819
msgid "http://www.slideshare.net/miohtama/test-lol"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:3
# b2280654209743fa84d299c850748699
msgid "Joining doc team"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:5
# e8d00af7db304cba9b764a9791142b66
msgid "Plone documentation team team takes care of Plone documentation."
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:8
# 7f230ab6f696484b85656c16dff4ebea
msgid "Discussion channel and empowerment"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:10
# a9d880bc49c1421cb636ec1f53bb9667
msgid "**IRC**: Get yourself to #plone-docs IRC channel"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:12
# c4648d4ba2f24d8a81fe2f197ceff79f
msgid "**Mailing list**: Get yourself to `the mailing list <http://plone.293351.n2.nabble.com/Documentation-Team-f293358.html>`_"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:14
# cc9acea4233446e99e0a88b024f4dd75
msgid "**Documentation role**: Get yourself documentation team role on plone.org by creating an issue at the `Developer Documentation issue tracker <https://github.com/collective/collective.developermanual/issues/101>`_"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:16
# e020d6f2ded14dcf822d1d8ba7aac618
msgid "**Collective commit rights**: Get yourself collective rights on Github to commit to `collective <https://github.com/collective/collective.developermanual>`_. Register on github.com first. Then add yourself to the owner of ``collective.developermanual`` repository by `following these instructions <http://collective.github.com/#how-to-get-access>`_"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:20
# 939103d9d6034f5089f1587a594366bd
msgid "Go to IRC to discuss what are the current pain points of the documentation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:3
# 2e0e77700433455cb9c5d22e336c4f1a
msgid "Old documentation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:7
# dd8c07aeb9e847ab9f12c3465242ea71
msgid "How Plone documentation team deals with old documentation."
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:10
# e3671c31efdb4455bb36c82173b5b854
msgid "Ancient documentation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:12
# c38c075c6b364d069999297a7b53cb96
msgid "Plone Developer Manual has a special section *Old reference manuals* for documentation which is no longer under active maintenance."
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:15
# 9197956d603348b9a843c3ba740e0480
msgid "This includes"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:17
# 2aaf5e8ce9df4750bb8e6ce21e03a3ab
msgid "Old content from plone.org which has been migrated to Sphinx format"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:19
# 6292e46de09f472c9a4592c7b318c96c
msgid "Content from Plone Developer Documentation where the documentation team feels it no longer reflects the modern Plone versions and best practices"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:23
# 67699a0b4624419fb287e457619ea03d
msgid "The old documentation is moved to *reference_manual/old* section and will receive a special warning label to tell the readers that the information may no longer be totally coherent."
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:28
# 72c56e8fa8194ac096ce7dbcd364198c
msgid "Reactivation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:30
# 55dac31b393b44ed9921ef49f4c67659
msgid "The documentation can be moved to Reference Manual's *active* section if some developer volunteers to update it to reflect best practices."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:3
#: ../../reference_manuals/old/plone_3_theming/index.rst:8
# d4e2a3869bdf43ac9c76a5d50a712391
# 31c5e5d36ac04440a8c68b808ac088b5
msgid "Preface"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:5
# 1a427b6a4153459583997c9b52668966
msgid "Plone is an open source content management system that lets non-technical people create and maintain web content from their broswer.  With a rich ecosystem of add-on packages and a highly extensible layout system, Plone offers a robust platform for those wishing to enhance its core functionality."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:10
# ec3cd7fc6c9a4878a9bc4c721b6961a7
msgid "Plone has a number of strengths:"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:12
# fd97b2237c2a423ebab76a1a0891d710
msgid "Plone enables complex workflows"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:13
# 9ff6063a5e134091938bc59ba79eddbf
msgid "Plone has rich support for internationalization"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:14
# 9210b3393c3746929aa7c155f5bde725
msgid "Plone provides clear upgrade paths"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:15
# 11f514e383154faaa973ded5cdbec5cf
msgid "Plone integrates with Active Directory, Salesforce, LDAP, SQL, Web Services, Oracle (By using Add-on products)"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:17
# 4723d52c2d8a42ecb0a7c914a23a4962
msgid "Plone scales well"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:18
# 653f3cf4dab54936b628f0b8eb45d3fa
msgid "Plone will grow with your expanding CMS needs. Many systems will be good for simple sites, but will not be able to handle the expanding requirements you are likely to encounter over time."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:21
# e0ecb96375fb4151b1ae395cc2062de3
msgid "Plone is Open Source!"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:23
# 215701fcba3f4ac0bc2d7005778e916d
msgid "Plone and its accompanying technologies have evolved over the course of many years. The codebase contains over 6000 modules. Given the complexity of the overall system and large number of optional and included packages, very few Plone developers/users know how do everything."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:28
# d909f532c2524a5db37efc28dbe40f6b
msgid "Due to Plone's longevity it has spanned and outlasted some technologies and Python practices.  Thus you will see some Python usage which may not match today's accepted code practices. You will also see use of Python libraries which are deprecated, and/or implement code where today a standard or optional Python package would be preferred."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:34
# ae8db63b636b473593129a08d1ee0206
msgid "It's important to keep the following in mind:"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:36
# a4393f2c074647bea6392a12ba272958
msgid "Plone has a high level of complexity"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:37
# 4ce101fc5e434bfe917a255b54e35f20
msgid "Plone has more than one way to accomplish many tasks. (Some of which are deprecated)"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:38
# fe265d0b48b74fe6aed3cccd196c292d
msgid "Plone doesn't always have the most complete or up to date documention for all components"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:40
# 465aa5e29c9647e18f7fbe92469bb06d
msgid "When you encounter something you want to get accomplished, but you are unable to find direct examples of how to do it, use the following procedure:"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:43
# b34fcb9110f74ba08e3089376eebd9d5
msgid "Formulate your question to represent your issue in a way that makes it easy for others to answer [1]_"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:44
# 57651a79026d435b999ec0540aca1db3
msgid "Search via google and/or stackoverflow"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:45
# a1f5d63b5a6542b3b8aaec4c3e722cc6
msgid "Try the ``#plone`` IRC channel on freenode [2]_"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:46
# aa762ca096c644718dbc07491dc28e32
msgid "Join and send email to the product-developers email list [3]_."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:47
# ec50781453ff4873bcc8a207b71628a7
msgid "UTSL (Use The Source Luke). Plone is almost entirely Python code. You can always refer to the source to figure out anything about Plone. Plone source is made up of Python, ZCML, XML, Javascript and Page Template files."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:49
# 61f06a2d68c2447ca76a5bf722bd9f3c
msgid "If you ask the community for help, it may not arrive instantly. Please remember that People are voluntarily helping you. If you need help immediately your best option may be to find paid support for your issues [4]_."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:53
# 909291669d2d4b7db89b992326cd4bbe
msgid "Be patient. Be aware that you are dealing with a complex system and you need to reserve time to manage technology and minimize risks. The community is very supportive and will help you if you make an effort to make it easy for them to do so."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:56
# 3015bb34ba7646a389601ba5d4f89f8a
msgid "http://plone.org/documentation/kb/ask-for-help"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:57
# 874381ffa3334b2ea7607676720fcdff
msgid "http://plone.org/support/chat"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:58
# cb1c1b3c4519430e97b1443dfcaa0c49
msgid "http://plone.org/support/forums/addons"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:59
# 9cec74eec7e442d3af311e342825137d
msgid "http://plone.org/support/providers"
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:3
# 42c9a4b455d8438fad19a6d0a5156499
msgid "Automatically generated TODO list"
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:5
# d3738a08b07640468f4d6e33b604fa41
msgid "The following list is automatically generated from ``.. TODO::`` directives in the text."
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:8
# 0337bf7fe17f453ea0992a931a293853
msgid "To help fixing the todos, please see the section on .. commented out as missing resource gives sphinx error. ..:doc:`writing </introduction/writing>`."
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:12
# 78af804efcf0480f98ae5dedce42c262
msgid "See http://sphinx.pocoo.org/ext/todo.html for details."
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:15
# b7e2ed57666c4a328a6ad4cc4a6dba19
msgid "TODO items"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:3
# 1d6a2b708320498881783c75311ebd5f
msgid "Writing and updating the documentation"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:7
# 7919ce8597bd499b802aca33efccae4a
msgid "How to write and submit content for the Plone Developer Documentation."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:14
# 432ab7f55d88476fa8414895327c1936
msgid "This chapter explains the basics of editing, updating and contributing to the *Plone Developer Documentation*."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:18
# 8b9a5c0212184fe89619a8520dde787a
msgid "Reaching documentation team"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:20
# a194ccef61df497799f39b86e1ebe94f
msgid "Plone community runs a documentation team which is responsible for keeping Plone documentation coherent. To reach this team for any questions please contact"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:24
# fdaf9c3b92b34caeb7981f18724caa78
msgid "`Documentation team mailing list <https://plone.org/support/forums/docs>`_"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:26
# 7b077a5741e34362bb2686e9cb76d5df
msgid "*#plone-docs* IRC channel on irc.freenode.net"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:29
# 20f757ca467447fe85baa085f1187c7d
msgid "Editing documentation on Github"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:31
# a638b6287eeb4e79814cf8f9032e7333
msgid "You can `commit file edits through GitHub web interface <https://github.com/collective/collective.developermanual>`_ using the **Fork and Edit** button, followed by a pull request."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:35
# fa0456cbabcf44d6a5ed654d53bcbcc3
msgid "Alternatively, clone the repository using *git*, perform changes, and push them to your fork. Then submit a pull request."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:38
# c0ca8bea2d0f4b9b9d96cbc3700dbe04
msgid "The Plone collective GitHub repository has open-for-all contribution access. If you want to contribute changes without asking the maintainers to merge them, please add your GitHub username to your profile on plone.org and request access `here <http://dev.plone.org/wiki/ContributeCollective>`_."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:44
# e7017d39be344e61a01f37fed756b266
msgid "Editing documentation using git"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:46
# 5ef232f915de4f4dae07c8246229dd03
msgid "This is the recommended method of editing the documentation for advanced users. Please do not be afraid to commit.  If you break the documentation or add invalid information, it will be cleaned up sooner or later and no one is going to blame you: human errors happen all the time."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:52
# 999b006122494e6cb0f5d769e5297520
msgid "Learn about `Sphinx <http://sphinx.pocoo.org/>`_ and `restructured text <http://sphinx.pocoo.org/rest.html>`_."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:55
# a1d95634bf434726b94f5da06613cf1c
msgid "Get the documentation source files:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:61
# 5e45022fdcb74004985771ecaa41b4c4
msgid "Bootstrap with Python 2.5 or later. We use a version of Sphinx that has dropped Python 2.4 support."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:66
# 17578454fc1d481081469798d568401a
msgid "You do not need to bootstrap and buildout if you simply want to make a quick edit the documentation. Go to the \"source\" directory to find the files. Continue reading if you want to run a complete local copy."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:76
# 91efd6b2fab6456087000ccc1eff8c8d
msgid "Run buildout to install and configure all Python packages in your buildout folder for the documentation generation"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:82
# ad1ea922cccf4297b9a4039ef0ae340d
msgid "Edit the file(s) which you want to update."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:84
# 2acca029ea9749508ac3175a12820087
msgid "Check that building with Sphinx does not give warnings:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:90
# c8105cdd5c5b4cf0ab5c5a006fba57a4
msgid "Commit changes:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:99
# d892343a24b5413bb058aba9f014819f
msgid "Document page format"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:101
# ce8b0994e48c415a864aeab627967e18
msgid "Here are some Sphinx coding conventions used in the documentation."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:104
# 1c752ed66f96450c82127f8543bbc229
msgid "Tab policy"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:106
# 4b36948a49684c1a9ecbf167e652c64c
msgid "Indentation 4 spaces"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:108
# d2c30eb870684e82b8a920f88a645052
msgid "No hard tabs"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:110
# 5e45294247fa4cd79ca29a5054ab80d8
msgid "No trailing whitespaces"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:113
# fdf69836dd1142abbe808475a639e7a2
msgid "Headings and filenames"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:115
# 06567700a98849828613722f90ab0500
msgid "For the headings, capitalize the first letter only"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:117
# 979db0747ffb4402bffa0b8c1053ce73
msgid "For the filenames, use_underscore_naming_style"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:120
# 9db48e16666b4c4fbbc447901c0392f2
msgid "Page structure"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:122
# ac9bd086ec714d8596ce59f94da35605
msgid "Each page must contain, in this order:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:124
# e3752fd0af5c438e87ed8878b6339df6
msgid "The main heading. This will be visible in the table of contents:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:132
# c610faee7d4f414292a5b50c89a9a395
msgid "The description of the page, which will appear in Plone's *Description* Dublin Core metadata field. This created using the reST *admonition* directive. A single paragraph of text consisting of 1-3 sentences is recommended, so that the same text fits into the search engine results (Google):"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:145
# 37a7b5d7e5c9479d8dd8364ed5e2612b
msgid "The *contents* directive will cause Sphinx to generate the *Table of Contents* shortcut links at the start of the page.  Using the *local* option excludes the page itself and ToC title from the listing:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:153
# 6c0ab1d908cf4b0da073c7b73a60d15d
msgid "Introduction paragraph: A brief overview:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:162
# fa27a7c222264be893cb52bea69f13be
msgid "A number of paragraphs: The actual content of the document page:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:172
# f206931fdf5e45878eeb71771664ed1e
msgid "Section structure"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:174
# 88ea728f568a484384003e7468ae937c
msgid "Each section (folder) must contain"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:176
# 3b1741f5b9644fcb9efec9bdc3f82c69
msgid ":file:`index.txt` with:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:178
# e47e867d4c7340b2a1408b6bb92dccca
msgid "Section heading: This will be visible in the table of contents"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:180
# 06f20f96b87649959a66e2cf56567857
msgid "A single paragraph summarizing what this section is all about. This will be mapped to Plone folder description."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:183
# e89de1044a564aecbeaf0f1e483c3158
msgid "Sphinx toctree directive, maxdepth 2. Each ``.txt`` file in the folder should be linked to this toctree."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:196
# 9b443d11d5204be09a07187056415e38
msgid "Headings style guide"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:198
# 1202f04063364533b66bb106a4150666
msgid "ReStructured text and Sphinx enable any style you would prefer for the various heading level you would need. In example, underlining level 1 headings with ``.``, level 2 headings with ``#`` and level 3 headings with ``|`` is perfect as far as ``docutils`` is concerned. But not for a human documentation maintainer."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:204
# f531f2632d0e43ca83fa847e170f7fa8
msgid "In order to have consistent heading styles in all files that make this great document, it is recommended to follow strictly the rules stated in the Sphinx manual here: http://sphinx.pocoo.org/rest.html#sections"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:208
# 4f1a73b8c83f4694ab90474aca8af735
msgid "As individual files do not have so called \"parts\" or \"chapters\", the headings would be underlined like this:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:227
# 1e2ec45ffb8f483e8f51db243ebad052
msgid "Syntax highlighting"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:229
# 2ddcdf90d6cc420ba1d13e35fc9e557d
msgid "Sphinx does syntax highlighting using the `Pygments <http://pygments.org/>`_ library."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:232
# 20a925192f9a464080b3193a7014209d
msgid "You can specify different highlighting for a code block using the following syntax::"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:243
# 4e06d2130e994f5a945ad376a67e7d2d
msgid "You can specify the language used for syntax highlighting by using the ``code-block`` directive:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:254
# 2643b698d57f48dfb2434ee9ab6ef5df
msgid "For example, to specify XML:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:262
# bd64f8c718104d67af0f3e4a488e0e01
msgid "... or UNIX shell:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:271
# c84cfcae0d714ed5a7851525d575ff3e
msgid "... or a buildout.cfg:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:282
# ffa6ebbb7aa748d0afc589867a6648a6
msgid "... or interactive Python:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:299
# 96158f6036b14f43b50d43518bfaae41
msgid "Setting the highlighting mode for the whole document:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:309
# 1ec18a15aec149b2b11fd9dcdc5cd3f8
msgid "If syntax highlighting is not enabled for your code block, you probably have a syntax error and Pygments will fail silently."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:312
# e7393d7dc21f43d5920eb3e9f40fa736
msgid "The full list of lexers and associated short names is here: http://pygments.org/docs/lexers/"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:316
# 056a270e64b34f70bd233f5b44bc0d1f
msgid "Other Sphinx and restructured text source snippets"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:318
# a4732d2a53c74d5a8bb9afcea2642d59
msgid "Italics:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:324
# 94e4bb328d2943beb2d75d560cee62d0
msgid "Strong:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:330
# 88e7d4d4776c4f12bc6167ae0c9964d2
msgid "Inline code highlighting:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:339
# 3d3752d5bb054d7ea64e0c9f20723cc4
msgid "These Python objects are rendered as hyperlinks if the symbol is mentioned in a relevant directive. See http://sphinx.pocoo.org/domains.html and http://sphinx.pocoo.org/ext/autodoc.html"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:344
# d0018ef96bdf412788f2eb091f2dd29e
msgid "Making an external link (note the underscore at the end):"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:350
# e243a29081bb4b52bb8627617fca5eb8
msgid "Making an internal link:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:362
# bc58ef5668de409a8fe03f30f69720ec
msgid "Glossary:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:368
# ebb8b841352141c4bb0a782ad3b52e02
msgid "Bullet list:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:375
# 4865141ebe044616bcda1405f27d413d
msgid "Warning:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:401
# 313cbff5802c478e9396e8cc7066af1d
msgid "Code documentation"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:403
# 4fe28d1fd70d4716a5967745023b0c91
msgid "For certain kinds of documentation it is better to write the documentation in parts of the Plone core code base. This can be done using the *autodoc* sphinx extension."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:407
# ebb8443a266a446ea1bad817ebc2e27a
msgid "... to include a module docstring:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:413
# 70f397de9b7a4f41bc90c91be75d0a44
msgid "... to include a class docstring:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:419
# 80f757540977491eaca6e19d0441cd45
msgid "... or to include both a module and class docstrings:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:426
# 2ceb0091dcaf4f8cb9fee432d0041fc2
msgid "Not all documentation is best kept with the code. You should use autodoc if:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:429
# 15e04dbe166d4449a5a2cb114a36086c
msgid "the documentation is reasonably self-contained and relates just to that module;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:431
# a577eef3ce674ab49f51b6d88ca4f71c
msgid "it's mainly reference material, rather than tutorial-style documentation;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:432
# 1314b50ec1e5485995754cca03cbe58b
msgid "you think it's more likely to be maintained by the code authors."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:434
# 5960f85b2066412fbf944dccd3449201
msgid "Once you write code documentation:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:436
# 0fefb5b7dfbe4fd7ab9cd54b62b0bf41
msgid "find an appropriate place in this manual to place it. Make sure it flows and makes when sense read with the documentation around it;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:438
# cada84f30f3343f99ecc12e73c9f35bc
msgid "include a comment in the docstring mentioning its use in this manual so those editing the code can test the manual if changes are made;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:440
# 1f0ec2e2d819403090c3d196646a3fe1
msgid "add the module to the autocheckout value in the manual's ``buildout.cfg``."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:443
# c46234cbc30a450590ab30252eac4531
msgid "Some helper tools"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:445
# 29266a0f079442f6af16272716d4357a
msgid "**Emacs** has a nice `rst-mode <http://docutils.sourceforge.net/docs/user/emacs.html>`_. This mode comes with some Emacs distros. Try ``M-x rst-mode`` in your Emacs and enjoy syntax coloration, underlining a heading with ``^C ^A``"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:450
# 6d51e1fb8c6f4091924cbb6e6d423f57
msgid "**Eclipse** users can install **ReST Editor** through the Eclipse Marketplace."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:453
# 907a8fa8a07e43c0bd28150eab040cc2
msgid "**Vim** does syntax highlighting for RST files. There is also a nice plugin with enhanced functionalities called `Riv <https://github.com/Rykka/riv.vim>`_."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:457
# 9de4e938d93b4db9a5cb95751658a37c
msgid "Style recommendations"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:459
# 35173d0f0a8e4c9d85a82b4833cbee6a
msgid "Use **semantic linefeeds** (http://rhodesmill.org/brandon/2012/one-sentence-per-line/) when you are editing restructured text (or any other interpreted rich text format) because it will greatly improve the editing and maintenance of your documents."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:466
# c923091265f140aebe55254022a97b29
msgid "Take this example paragraph::"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:476
# 5c52b38944e742d397c69f62c3c57586
msgid "Notice how it's easier to just reshuffle sentences and add stuff if, instead of using your editor \"autowrap\" feature, you manually insert line breaks after full stops, commas, or upon \"grammatical\" boundaries (and not merely word ones)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:3
# e95b0d0c2cf744b49b43ab2c97d3288f
msgid "Product package layout"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:7
# e81b0aabe643494a964b5bc78fb8f882
msgid "Conventions and techniques for organizing the package for an AT product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:9
# 84055bdd82fc4e8db11391f92009bef6
msgid "Following Zope, Plone and AT’s conventions, the content of our example product pakage will look like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:32
# c9eb218a468c4336842c7743240bb84b
msgid "What is the purpose of these files and directories?"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:34
# 8d4afbbedfb84fdfa14b256677475640
msgid "\\_\\_init\\_\\_.py: The usual “Python package” initialization module;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:35
# 4cdb39d150984ce383383d21e8b46530
msgid "configure.zcml: Using Zope’s new Configuration Markup Language (ZCML), this file configures the services or behaviour the Zope server needs to load at startup;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:38
# 10a27c7639f7413083f56e5838bbb2ba
msgid "config.py: Provides configuration variables for the product;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:39
# cec59d6e78b94a7bad7cc37a286b5109
msgid "interfaces.py: Where you define interfaces describing what the packages’ classes will do;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:41
# b5916de93a2c442a88023bbd016be829
msgid "content: Contains the modules providing the implementation of the content types. In this case, it contains the message.py file where the ‘InstantMessage’ class should be defined;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:44
# 773f8495e2f540a1a127ee7e9b9d30aa
msgid "profiles/default: Contains a set of XML files that are needed to provide the settings that will be used by Plone’s Quick-Installer tool when installing the product within Plone; this is what we call an *Extension Profile*, an artifact of Zope CMF’s GenericSetup technology. *Note that this replaces the old way of doing based on the Extensions/Install*. More precisely, since Plone 3.0, you do not need that old-style technique;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:51
# 6a830e00a94a4464ae794523d241ac61
msgid "browser: The sub-package where the developer can add specific presentation code such as browser views and templates; the contained configure.zcml is used to provide these components registration."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:54
# ad290e6a8d734ad8a2ce8776fd7f1cee
msgid "tests: Contains the unit tests code for the product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:56
# 69ec4d182e684190ae83052f390a0cc6
msgid "If you have ZopeSkel installed, you can use the following command to create a similar structure:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:63
# 6c4eb8d6ef054694b20fa53c039b5361
msgid "Now we will go through the files one by one and add what we need to produce our application."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:3
# bd9da73141864d3ea0ce8cc7f1c1396b
msgid "Basic integration tests"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:7
# 54f2d2a1d3da48cb990284585a3c7fab
msgid "No product is complete without tests."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:9
# d13aa17b69ce43ff8734568184597de0
msgid "To build high-quality software, you *must* provide automatic tests - often known as “unit” tests (though tests for Archetypes products tend to be “integration” tests, strictly speaking)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:13
# 334c536a092a4d469d6e764bc287cde0
msgid "The `tutorial on testing and test-driven development`_ is essential reading if you want to write high-quality software (and you don’t know the techniques it advocates already). Please refer to it for details."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:17
# 31fa89f2eaf441529d12c65291796c8f
msgid "The example.archetype product contains basic tests that prove that the product is properly installed, that it registers its types, and that an InstantMessage object can actually be instantiated. If it contained more functionality, there would have been more tests, but even simple integration tests like this can be surprisingly useful - if you accidentally broke the content type with some change, you’d notice that it failed to install or instantiate."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:25
# 5efecaa7fe8544be985d0d99f1261593
msgid "The tests are in the “tests” directory. The file “base.py” contains some base classes that are used for tests, to ensure the site is properly set up:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:71
# 848b638bb6af435eb74ca4e3e90eec87
msgid "The actual tests are in “test\\_setup.py”:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:114
# f5757e3aa87444dc9eb2b083d47b8bba
msgid "To run these tests within your buildout environment:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:120
# 652b53926cc942a9b94df9c6c143a44e
msgid "You may see output like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:126
# bae43336bda34e368e8b7e3c210ce475
msgid "If there was an error with one or more of the tests, you’d be told here!"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:128
# 947b8ba098ea4b06bb412204f30b06f4
msgid "Please refer to the `testing tutorial`_ for more about writing tests - and writing *good* tests - and how to run them."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:3
# ca5cc84019cb4af0832628e22b4854b0
msgid "The configuration module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:7
# fbf6ac62757444348d7285b7eaf43f15
msgid "The configuration details for your content type, in config.py."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:9
# e2f689c7a97b47789521750b66ab86ac
msgid "First, we have to import a class from Archetypes:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:15
# 804bd45eaf8e4b08805c2ea2313c4ece
msgid "Displaylist is a data container we use when displaying pulldowns/radiobuttons/checkmarks with different choices. Let’s say we wanted priorities on our instant messages, and we wanted those to be ``High``, ``Normal`` and ``Low``. We will specify these later in the file."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:21
# 252584cf4d94421d88c3cc2abef5e66b
msgid "The next two lines set the project (Product in Zope) name, and point to the skin directory. ``PROJECTNAME`` should reference the name of the package: ``example.archetype``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:29
# 3b109a48136d4aa2be99699616b5af2e
msgid "Now, we need to specify our ‘Priority’ pulldown. It should look like this, using the DisplayList utility class that Archetypes has provided for exactly that purpose:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:41
#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:39
#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:131
#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:98
# 65a5419dcaad4ca9bbeea571ae90b757
# 7091f3cdfed7447389c3f98dd996db98
# 79452773079e474faac170000527a94d
# 66b988fc525d45f498682f7a0769a731
msgid "**Python notes:**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:43
# 8b666f22c11343d28b198de03fff9e16
msgid "The reason for double parantheses is that DisplayList is a class that you pass a *tuple of tuples* to."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:46
# 715b6802bfb14b989728228dfcad1c2c
msgid "We also need to define the “Add” permission(s) for the content type(s):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:54
# 2cc09e426f70441ba93b05326fed31c7
msgid "We recommend using the standard way of naming permissions: ‘<ProductName>: <Permission>’. This will group the related permissions together within the ZMI (Security tab), and allow the Administrator to recognize which permissions belong to which Product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:59
# f15861528a8144269b16c55a94217df8
msgid "Note that, unless you have an advanced case which needs custom security settings, you don’t need to define your own permissions for the “edit” and “view” of the content. In this simple case you will just reuse, in the modules where needed, the generic permissions defined in CMFCore.permissions: “View”, “Modify portal content”…"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/index.rst:3
# 928e9bcb33b2476c9d44e70b7ff0d5a5
msgid "A Simple AT Product"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/index.rst:7
# 7f1cc1c6a8f6454f83889c1cf2f0885f
msgid "A semi-realistic example Archetypes-based content type product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:3
# c8a7d6f202584b1f95ba7325f400d865
msgid "Installing the product"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:7
# 4633ce1ac5bb4108a00abad3b76eb596
msgid "Ensuring the product elements (types, browser layers, resources) are correctly installed."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:10
# 022bf0cf4cb0416aa8c4102a9b54f204
msgid "In this part, we will provide the code to be executed when the integrator “adds”, i.e. installs, the InstantMessage product to the Plone site. This aspect of the product code is called the “Extension Profile” (or “Setup Profile”) and is managed under the hood by a machinery called GenericSetup."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:16
# ddcb49157b6f4c99b13bba0422bc216e
msgid "For more about GenericSetup, its possibilities, and how a developer uses it, read the `GenericSetup tutorial`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:20
# 0cdfbd0c0e3e436f9124ee097b6535f4
msgid "The setup profile files (profiles/default)"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:22
# e085cf2e223a490796d4fa45a745ba59
msgid "The setup profile is composed of a set of GenericSetup XML files containing setup declarations."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:25
# 5ccde27935654fb79457c58d324bb928
msgid "**Type declaration and definition**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:27
# dfbb85d444f24e52ad66f8c6575d2bbf
msgid "First, we provide the files needed for adding the types to CMF’s types registry (portal\\_types): ``types.xml`` and ``types/InstantMessage.xml``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:31
# 0211be677b5b4bbd8a965592179fb3fb
msgid "In ``types.xml``, within the ``<object name=\"portal_types\" ... />`` element, add the setup code for the type(s) you want to install:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:44
# 20165b5032624a6e834ac5b3949e11b6
msgid "The *name* property of the ``<object>`` node constitutes the called *portal type* name of the content-type, a CMF concept which supports two things:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:48
# e6d4c7bc5c584b95a716268e968b9bfd
msgid "Dynamic typing: objects can change their content type during their lifetime. To do this use ``_setPortalTypeName(<type>``\\ ``)``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:50
# 03c772491c5a48dc868b23badd625723
msgid "You can have arbitrarily many different content types using the same base class (and having therefore the same ``meta_type``) but differing in their Factory Type Information (FTI) settings."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:54
# a27d60d78e77487e9dafdb30fac2dcee
msgid "The *portal type* name was formerly set in a content-type class attribute called *portal\\_type*, which is no longer necessary."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:57
# 6e03dbeaf1b844b49783034dc3b57d45
msgid "The name of the file inside the ``profiles/default/types`` folder must match the portal type name, with spaces converted to underscores whenever necessary. So, in\\ `` types/InstantMessage.xml``, add the code for the InstantMessage FTI object:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:72
# aafa1e1c6d1346f4add4dddd525696d4
msgid "In these first lines we give the content-type a title and a description."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:74
# c0b0406e7639429f9ee05fb7de9e0132
msgid "The *title* property indicates the user-friendly name of the content-type. This is what’s supposed to be used in the user interface, and can be accessed using the ``<fti>.title_or_id()`` or the ``Type()`` methods, which both return the content-type title if it exists or the content-type id otherwise. Like portal type, this property was formerly set in a the content-type class attribute called ``archetype_name``, which is no longer neccessary."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:91
# ba1182160dc24b828abdceaf41d6c0fc
msgid "The ``meta_type`` property of the object is a Zope concept to organize object classification or containment. For historical reasons, it is used in CMF in some places because first versions of CMF didn’t have today’s ``portal_type``. Also note that Archetypes uses the content-type class name as the meta\\_type value, unless given explicitly."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:97
# 7ef1528466ab4b498eabbc1dc486fe9d
msgid "The ``content_icon`` property specifies the icon image file which will be shown in the Plone UI for this content-type. This icon image file must be accessible from the context of the content-type, and therefore should be placed into a CMF skin layer (the CMF way) or in a browser resource directory (the Zope 3 way)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:103
# 2ba0fce658944755991ebc76427a0e41
msgid "The ``factory`` property indicates the factory function which will be used to create and initialize new content objects of this type. This factory is automatically generated by the Archetypes framework, when the product is initialized (via the code in the startup module), and is always named ``add<content-meta-type>``. The factory is also associated with a certain product by means of the ``product`` property."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:117
# 721a80d922844f31a1a0089667a4f3aa
msgid "The ``global_allow`` property determines if the content-type will be available to be added from anywhere in the site."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:120
# 19b5eb068ddf477aaaea7d0a8c05b73e
msgid "The ``filter_content_types`` property, paired with allowed\\_content\\_types, controls what content-types will be addable inside the current one."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:124
# 3a754322a2e044389e6ecc80de40820c
msgid "With ``allow_discussion``, we specify whether or not comments will be allowed by default on this content-type."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:138
# 7b44a65a27c74c80ba036811ad759e5b
msgid "Here we define CMF views (templates) and aliases that map content-type methods to views."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:153
# 8c1be3250dc14c0cb82141805c7bf42c
msgid "The ``<action>`` elements register type-specific actions for the content-type. The ``object`` category makes the render as tabs in the Plone UI."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:157
# f627d43506cc464e82ecef961c0aa095
msgid "The ``url_expr`` is a `TALES expression`_ that defines the URL from where the action will be triggered and should match one of the method aliases defined above. Hence, the ``edit`` action points to ``string:${object_url}/edit``, which means that if you are at ``/path/to/object`` and click ``edit``, you will go to ``/path/to/object/edit``. ``/edit`` then gets recognized as a method alias, which points to the page template ``atct_edit``, causing Zope to render ``/path/to/object/atct_edit``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:165
# ba2fd49be2d949cf88bc56fb8118389b
msgid "The <permission /> element specifies a guard permission for this action. If the user’s role doesn’t have this permission, the action won’t be available and the corresponding action tab won’t be shown."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:168
# efb48c6f892941b798165fb4259d66e5
msgid "In addition to the former criteria, the ``condition_expr`` is a TALES expression which will be evaluated to decide if the action is available or not."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:171
# 1aaad7e761c141339185ab10b33bd45d
msgid "The ``visible`` attribute indicates wheter the action tab will be visible or hidden. If it’s set to False, the tab won’t appear even when the action is available, but the exposed page will still be accesible from the associated URL."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:176
# b2a3d35b850d4d979f3d0fa2c16325e4
msgid "\\ **Notes:**\\"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:178
# c0a082974cbe4c228ec4861e9ba86c2f
msgid "Defining new content-type actions this way, i.e. using GenericSetup, supersedes the old ``updateActions`` function from ``ATContentTypes.content.base``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:181
# f1f4d972656b44eea088e79210f184ce
msgid "Don’t worry. You don’t have to type all this XML each time you create a new content-type; since most of it is boilerplate (XML is very verbose) you can copy & paste an already working example (like `the CMFPlone ones`_) and modify only the changing bits."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:189
# b2fffcb819b54bf99a3be6e8e3cc8681
msgid "**Roles - Permissions mapping**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:191
# 419bd803755144eca406baf9765f82e3
msgid "For our content type(s) to be usable, we need to assign the required “Add” permission to the Plone site’s default roles: Contributor, Owner, and Manager. This is done using the ``rolemap.xml`` file as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:208
# ea10c6eb5a2b458ab3fda8bb9bb75014
msgid "**Browser skin layer**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:210
# 77676743f4354e449c27e52c60302c39
msgid "In order to install our browser skin layer, we also add a ``browserlayer.xml`` file with the following code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:222
# 97a7341249bc4d49b08d14315f6f15ba
msgid "Registering our setup profile"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:224
# 9380052e8dc44b2a9f0bcb54a5ca61be
msgid "This last step ensures everything can work. We update the package’s ``configure.zcml`` file with the code snippet that will load the extension profile:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:251
# b9321900433f443f87b736dc88d892a3
msgid "Restarting Zope"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:253
# b2914c66d1144705b922ce4b4bd88cb3
msgid "Now that you have a first version of your product ready to be tested, and installed via your buildout, you need to (re)start Zope."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:257
# 918644ace8a64e47ac6477cece18ac58
msgid "Quick-installing the product"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:259
# d505a90968f64355baad15be6827751d
msgid "Back in the Plone configuration (or Plone control panel), when you visit the “Add/Remove Products” interface or the *portal\\_quickinstaller* tool through the ZMI (at the root of the site), you can see the product show up under the category of “installable products”."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:264
# d09da0a1d1c64fd692148706369d47ea
msgid "Select and click the button to install the product. If everything goes fine, the product should be installed, and you’re ready to start using it!"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:3
# 556e618b28b94fccacfee2f726116c6a
msgid "The content package and its modules"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:7
# 568c80d68dce42b48982e925bc64f0a7
msgid "Now we are ready for the core of the product, i.e. the content class definition module (content/message.py)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:10
# 2c1ec90035a54beebcbea1c975cf71b8
msgid "Since it provides a Python (sub)package, the ‘content’ directory contains 2 modules:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:13
# 3fbdbeb81119428999bd2d51feeb8340
msgid "the usual \\_\\_init\\_\\_ module that initializes the package,"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:14
# 722c20a3617c48b88dc46e915df7d61b
msgid "the message module (message.py) where we will define the ‘InstantMessage’ class."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:18
# bdf5b1426cb24ce0a5b01fb94bef8b0d
msgid "The message module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:20
# e655676d6c234c69adbe867f3953350a
msgid "**First imports we need**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:22
# 8eb8f8dcf9124615b9448035ce862287
msgid "We start the message module by adding the general Zope-related imports we need, such as the ``implements`` function from the ``zope.interface`` module:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:30
# 7ecddea24db84b9f9fc4c9f8eb7940d9
msgid "We need to use a few classes and/or functions provided by the core of our codebase, i.e. CMF/Archetypes. It is possible to have access to all the classes and helper functions made publicly available by Archetypes, by importing its façade or API module (``Products.Archetypes.atapi``) this way:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:40
# 84d0bb9f74504e528a0e3e7dd21b695d
msgid "**i18n support**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:42
# 308c22489f744673a4fbfab36d660d4e
msgid "It is always a good idea to have an i18n-enabled application. To start using Zope’s i18n support, let’s import the MessageFactory object created in the product’s startup module:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:50
# a5bd4685fee240ca9b2d2a8eb2288490
msgid "The MessageFactory referenced with the ``_`` symbol can now be used to provide i18nized labels, descriptions, and all the miscellaneous text snippets that are injected in the UI, also known as “messages”. For a content type implementation, this is useful for UI widgets; for example to define the label of the content title field widget, we could define ``label = _(u'Title')``. (See later for how we make use of this tool/practice.)"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:58
# 54d36a8d0f984326904ac988b7c77b6b
msgid "**ATContentTypes-based schema definition**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:60
# e19b6139bb7d464499bf853994e53eb8
msgid "You can base your implementation directly on these stock Archetypes schemas. But you can add better support for Plone’s UI and content management policies (such as the parameters that allow showing/hiding contents in the navigation menu), by basing the implementation on ATContentTypes’ base schema, ``ATContentTypeSchema``. To be compatible with that schema, you will also need to inherit from ATContentTypes’ ATCTContent base class."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:68
# 56866e781a454b80ab834e2954826b65
msgid "Let’s add the import of modules we need for that:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:75
# acab8d881fc846e88c06a7d242cadf92
msgid "Then, we import things internal to our product package, such as our defined interface(s) and the configuration module (for access to things such as ``PROJECTNAME`` and ``MESSAGE_PRIORITIES``):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:85
# d46f3f8fbe1e4a35a99da277daa1aa07
msgid "Now, we have everything we need to start building the schema, and then the class that will use it. We start out by copying ATContentTypes’ ``ATContentTypeSchema``, and we extend it by adding our specific fields and/or overriden field properties. ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:111
#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:176
# 59f2582d343e450a93f608d6c6a303ef
# d4fe23d4a6fc4187a002e1bd558e878e
msgid "**Notes:**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:113
# f1d450a5c5f842efb1263411e29599dc
msgid "To instantiate an Archetypes schema object, you pass a tuple of field objects to the ‘Schema’ class."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:116
# 74fb0431c1894b82bacab238ffacbaa5
msgid "We define the body of the InstantMessage object using a RichWidget, so the user can use formatting with a WYSIWYG editor."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:119
# 55d9a8291dd94bddad5188a9a139ea1f
msgid "The full list of out-of-the-box available Fields and Widgets can be found `in the Fields section at the end of the manual`_. You can find more 3rd party fields and widgets `here`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:123
# b8585bfe67124bcf931c2db4e0111d54
msgid "**Content-type class definition**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:125
# ff2d2dcd651e41e89925d29c8dbfa907
msgid "The last step is to create the class for the InstantMessage content. It inherits from ATContentTypes’ ATCTContent, which itself is based on AT’s BaseContent, which automatically gives its ‘id’ and ‘title’ attributes, and the entire Dublin Core metadata set (Title, Description, Creator, CreationDate, etc):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:140
# 1b568dc255724db9874c8b7d0c30e87f
msgid "The first information we add for the class definition is saying that it implements the ``IInstantMessage`` interface that we have previously defined (in ``interfaces.py``) and imported."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:148
# e792cda81d634d63b12aa250706b410e
msgid "The next thing is assigning the reference of the Archetypes schema, using the ``schema`` class attribute."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:155
# bd4d8efea24c4a549a0d6d8292fcd2a5
msgid "The content class definition is done. Now, we are ready to activate the content type in Archetypes’ internal types registry. This is done using the helper function called ``registerType``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:163
# 0b11f10ccc944fec9ab0395d49be3c7a
msgid "Congratulations! You have just created your first Archetype for Plone! It allows you to handle the content of an instant message with Zope-based persistent objects which:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:167
# 6a6edcbdc4204649abd1230fce581441
msgid "can be added within your Plone site,"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:168
# bf0cb7331fba4517b614670140af11c3
msgid "published by the Zope Publisher, which means you can visit them via their URLs, etc…"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:170
# 6b896a2f169a4b50a5a12fda54f55ff9
msgid "searched since they are automatically indexed,"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:171
# ca913524525b405ebc57ae286d884a6c
msgid "etc…"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:173
# 678797031e9d46e099ee68eb453491a8
msgid "But wait! You have some final packaging work to do to ease installation of the product within your Plone site."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:178
# 6266bb8c346f4063a4f6c568703fd378
msgid "At the content class level, you could also provide the ‘actions’ attribute useful for defining the settings of the type’s actions (for the portal\\_actions tool). In Plone 3, this is no more needed, since this is part of the FTI’s configuration details, and should be provided using GenericSetup, in the types-related XML files (i.e. ‘profiles/default/types/InstantMessage.xml’). *Same for the aliases.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:186
# d2b95e5889514d9e9004393285fba231
msgid "The \\_\\_init\\_\\_ module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:188
# 4934eb197f844fa19b42467a9b943a2d
msgid "The trick here is to simply import the message module so that all the code of that module gets interpreted as soon as the Python interpreter initializes the package."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:3
# ff9cab5e495944cba0439381ba6086ff
msgid "The interfaces module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:7
# 0ab68b54870b41cab4fa91c1782054c6
msgid "The module where you define interfaces describing what your content class(es) will do."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:11
# abf97becf8d346f1aa7229a7cccb8b32
msgid "Why do you need interfaces?"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:13
# 8b80dcf7b4364541ae888c17f6072971
msgid "Interfaces are useful to describe what a class will do. They are a kind of contract between a class and the components that class interact with. Starting a content management functionality package with writing interfaces is recommended practice as it helps document your code. In addition to that, Zope Component Architecture (ZCA) allows us to use interfaces as components for adapting a class (which is useful as new user requirements appear) and thus specializing its behaviour."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:22
# 5de1002cefe040ddbfb2f5903b20c29a
msgid "The interface for the Instant Message class"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:24
# dd72496e34324ecaa98b6ce144c920f6
msgid "This is done by convention in the ``interfaces.py`` file, that you need to add at the root of the package."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:27
# 0aa3810cfb5f4d28923e8d8c317c9200
msgid "First, we need an import from Zope’s ``zope.interface`` module, which is included into Zope 2’s distribution since version 2.8:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:34
# b0e2b64538ee471f8cd774fb923e09e4
msgid "Following ZCA naming conventions (interface names start with an *I*), we define the ``IInstantMessage`` interface we need for the ``InstantMessage`` class that we will define later:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:45
# d377da68cc6e412a82b53be4a79eaf9f
msgid "That’s it!"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:47
# a608e108f3e3476191c9bf7450fb2d9e
msgid "We could add attribute definitions to it using the ``zope.interface.Attribute`` class, but this is not mandatory. When an interface is defined as above, without any function nor attribute, we call it a “marker interface” meaning that it will be used simply to “mark” the instances of the class that implements it."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:53
# 07359ac74c7c4c13b09a9e511412fb66
msgid "More information about interfaces in the context of Archetypes can be found in the `b-org tutorial - Interfaces section`_. For a detailed presentation of interfaces and their usage patterns, read the `doctests document available from Zope’s documentation site`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:7
# 7c9d1f777e9940c5b37c329a3b0d2cc5
msgid "Introducing a sample AT Product and the contents of the tutorial."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:9
# 8b4ece5e3771485fb13315716744f4b4
msgid "In this part of the manual, we discuss a sample AT Product to explain CMF/Archetypes practices. We will be building a product called **example.archetype**, which will implement a content type (InstantMessage) that members with specific rights can use to add messages readable by other members. However, as you may have guessed, this is more a learning example than a usable product for a real website application."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:17
# e517cef11e0644ec8968694516e5f0f8
msgid "What is a Product ? A product - a Zope product to be precise - is a third party add-on that can be integrated to provide additional functionality. It is a code package written using the Python language and conventions."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:22
# 7291e4a6540f4f21a0b795940e967119
msgid "In order to understand this section you will need to have some prior knowledge of working on the file system and programming protocols common to Python and Zope."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:26
# 69db08b191b54abe95eed909f2ba9029
msgid "The **example.archetype** product features the following CMF and Archetypes capabilities:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:29
# 33b61e9e45144ce889348a32a0065dff
msgid "basic fields and widgets;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:31
# 70b738ea38cc46fba8c4375be5b3c7f2
msgid "defining and using a vocabulary for a field with a selection widget;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:33
# b214866554514c35bfade7acfa070fab
msgid "defining specific “Add” permissions for the contents."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:35
# 7cdb4db6d8ea4a858650a5fe9a26909f
msgid "The code of the product can be downloaded here: `http://plone.org/products/example.archetype/`_"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:3
# 73de3130e06c44ee907305e34be1d509
msgid "The startup module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:7
# 20d67913651e4d098d0194e7d397b312
msgid "The initialization module (__init__.py) provides the script that is run when Zope is started."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:10
# 48f387d63e194f1498ac604ac219a0bb
msgid "Before starting the usual Zope product initialization code, we need to define a Message Factory for when this product is internationalized."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:19
# 6291e4839fd34fd3aea31110b0c4b55f
msgid "The defined ``MessageFactory`` object will be imported with the special name “\\_” in most modules, and strings like \\_(u“message”) will then be extracted by i18n tools for translation."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:23
# fa3414959c634589b8c0e5df07d2c2f7
msgid "Now, we import some useful stuff from the Archetypes API:\\ ``process_types`` is useful to get the product’s *content types*, associated *constructors,* and *Factory Type Information* (FTI) data structures, while ``listTypes`` can be used to list the types available in the product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:29
# 5aeeb9fa0a74421ba2ec6645c0ef5daf
msgid "We also need to import the ``utils`` module from ``CMFCore`` to be able to use its ``ContentInit`` class later."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:41
# 1ae6d3af715c40e28d9252d8854ea6c1
msgid "Factory Type Information (FTI): Part of a CMF portal’s configuration, the FTI for a content type is the data structure that holds the information needed to expose a content type within the portal. From the integrator’s perspective, the FTI is the object (Factory-based Type Information object) within the portal\\_types component that tells CMF and Plone how to create a content from the type and how to display it."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:49
# 75c7b26c570c46479d7e6a24bd981b32
msgid "How exactly does ‘listTypes’ work: See those registerType() calls in your content type modules? Notice how we also import those modules (but do nothing with the import) in the ‘content’ package’s \\_\\_init\\_\\_.py. The registerType() call tells AT about the type so that listTypes() can find it later."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:55
# c9929d75084b49aa9bc80e6e7a2ebaac
msgid "One of the important import steps : we import everything that is defined in the content sub-package, i.e. all its modules:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:62
# 5ca74258befe4ba7bca1408ee989f47d
msgid "Now, we import the configuration module, in order to have access to the variables it contains, such as the “Add” permission setting:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:69
# f5eff6f9f7114d6581b4ce749219d81c
msgid "Now for the real action. You define a function that is required by Zope and CMF internals to initialize our content type(s):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:76
# e8efc15838dd4c89acd9725e7cd5dbd2
msgid "The first part of the code of this function generates the *content types*, the *constructors* and the *Factory-based Type Informations* (or FTIs) required to make your types work with the CMF:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:86
# 049c914b9ceb44d984c4254d12652bc2
msgid "The second part instantiates an object of the class ContentInit (from CMFCore), and registers your types in the CMF:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:99
# 6cd34844ee9f4523a968fdae86bbe952
msgid "**Handling several content types**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:101
# 6c7292e7598f41d6b7b2147ef7bd4276
msgid "There is a better way to write the code that initializes the content type class with its “Add” permission and constructor, so that it still works if you define several content types. This is useful if you plan to later augment your product with additional types."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:106
# ac4ccddd09c149968670fbf5eb0907ab
msgid "Here is the improved code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:133
# 7b0ce7621fca4c7796753efbcde561d6
msgid "We can use the “ADD\\_CONTENT\\_PERMISSIONS[atype.portal\\_type]” construct because ADD\\_CONTENT\\_PERMISSIONS references a dictionary in which the keys are the potential content types names."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:137
# a01b9e5dc3e64550bccc806a162f2cee
msgid "The zip() function is a Python built-in that pairs up elements of two lists. In this case, “allTypes” will be a list of tuples containing a content type from “content\\_types” and the corresponding constructor from “constructors”."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:142
# 85fb5a9ab4be464da03ba054772906ca
msgid "If you have several content types, you should not forget to import each content module, as is done for the message example discussed here !"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:3
#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:203
#: ../../reference_manuals/old/buildout/additional.rst:512
# 8a7d54db4d1948ce8b995035d012c536
# eb0c5f371d77439e80d3fded8601a454
# 0ce790aefd1a48beb063e90fee4f9374
msgid "Troubleshooting"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:7
# 3dce6659a53740cf85dba22d511368a7
msgid "When creating new content types, many factors can silently fail due to human errors in the complex content type setup chain and security limitations. The effect is that you don't see your content type in Add drop down menu. Here are some tips for debugging."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:12
# a20ccdefac96401bae91fc19b9a53e50
msgid "1. Is your product broken due to Python import time errors? Check the \\*Zope Management Interface (ZMI from now on) → Control Panel → Products\\*. Turn on Zope debugging mode to trace import errors. To see error messages directly in the console with buildout, use \\*bin/instance fg\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:18
# 2a1d6a9fb8ab41c080eec86a733945d7
msgid "2. Have you rerun the quick installer (GenericSetup) after creating/modifying the content type? If not, (re)install the product from the \\*Plone Control Panel → Add-on Products\\* or from the \\*ZMI → portal\\_quickinstaller\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:23
# 8e1f85ef880240aaab41d9285c7bba7c
msgid "3. Do you have a correct Add permission for the product? Check the call of the \\`\\`ContentInit()\\`\\` method inside the \\*\\_\\_init\\_\\_.py\\* file. See `The startup module <http://plone.org/documentation/manual/archetypes-developer-manual/a-semi-realistic-example/the-startup-module>`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:28
# 1e5b4e31c029401781d224de6e734501
msgid "4. Does it show up in the portal factory? Check \\*ZMI → portal\\_factory\\* and \\*factorytool.xml\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:31
# e19c03e372f2421c88cb2300bc41ce6e
msgid "5. Is it correctly registered as a portal type and implictly addable? Check \\*ZMI → portal\\_types\\*. Check \\*default/profiles/type/yourtype.xml\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:35
# 609d0bda459d47529ab6d9c0f833f706
msgid "6. Does it have a correct product name defined? Check \\*ZMI → portal\\_types\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:38
# b297d7c0c950448aa9103185e0ecfe4d
msgid "7. Does it have a proper factory method? Check \\*ZMI → types\\_tool\\*. Check Zope logs for \\`\\`\\_queryFactory\\`\\` and import errors."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:41
# f6bc47e5d8894786adf1c12f3ac393b9
msgid "8. Does it register itself with Archetypes? Check \\*ZMI → archetypes\\_tool\\*. Make sure that you have \\`\\`ContentInit\\`\\` properly run in your \\*\\_\\_init\\_\\_.py\\*. Make sure that all modules having Archetypes content types defined and \\`\\`registerType()\\`\\` calls are imported in \\*\\_\\_init\\_\\_py\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:3
# ae05c91db85b48a780dae0db0b9ac7a3
msgid "Adding a custom view for the content"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:7
# 8d6d609708f34d4dafd9aaa89a8094ba
msgid "Providing the custom presentation template for the InsantMessage, using Zope's browser layer mechanism."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:11
# bf87b03eeeba4955afa425b28666dc27
msgid "The browser layer concept"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:13
# 71744dedb2a048ffbc7ddc21784103c3
msgid "A browser layer is a concept introduced by Zope Component Architecture (Zope 3), and which can be used in Plone. It is useful for registering views and resources (images, CSS, JS) for the site, in a way that they can override default elements (which are implicitly registered for the default browser layer) or be overriden when needed, even through the ZMI. *A browser layer is similar in purpose to a CMF skin layer, but is implemented differently*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:21
# 62757b37930d4aaeb550eca7deeb4520
msgid "To add a browser layer to your product, you need 3 steps:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:23
# 160059f576ec410aa3fc7c528321e718
msgid "Define the marker interface for the browser layer (for example, ``example.archetype.interfaces.IInstantMessageSpecific``.)"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:25
# fac7e7bb66db47afb28664254192989c
msgid "Add an XML file in your extension profile named ``browserlayer.xml`` providing the browser layer settings to the site. *(This step is covered later as part of the various product setup details.)*"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:28
# 58d396d5234a4d49ae77805344c8baab
msgid "Register (using ZCML) your browser views, templates and resources."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:30
# 48c530ebd7ad4d809f81ec97ce19d3b5
msgid "For more about browser layer techniques, check `this tutorial`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:33
# d4095829e20d452fac4f755eb368843c
msgid "Defining the browser layer interface"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:35
# 1ea21dcf2ac34cc790b1e74d0e6f7d4a
msgid "Add a marker interface for the browser layer (in ``interfaces.py``):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:46
# 939f724d796d41aa9d43022360a68a06
msgid "Adding and registering the browser template"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:48
# 9cc6b09a6a9d4447adf43f6bb164178e
msgid "To provide a custom view template for your content type, you need a page template called ``instantmessage.pt`` in the ``browser/`` directory, and a ZCML declaration in the ``configure.zcml`` to associate the template to the ``IInstantMessageSpecific`` Zope 3 skin layer."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:67
# 82835c7835564832aa0400fd4f63492f
msgid "Here is the example template code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:100
# 10cee19e2418452ba685fecbe16b209d
msgid "The new methods we use on the content object (getPriority, getBody, etc), called the “accessors”, are generated by Archetypes as part of its internal mechanisms, based on the field definition in the content schema; so if the field is called ‘priority’, there is a generated method called ‘getPriority’ responsible to return the stored value on the object. Note that the code of the method is not available somewhere for modification ; “generated” here means it is available in the server’s memory, within Archetypes engine’s registries, when the Zope server has started."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:110
# c560a93ea27743a4972219f62b1db6da
msgid "After the product installation step, which we still have to discuss (see later), Plone should be able to find this template and use it as the content object’s default view when you invoke the content’s URL."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3
#: ../../reference_manuals/old/portlets/appendix/index.rst:3
# 8fc5e76e5c834c0e9f55e387bf0c9ea5
# 525d1c835897417f92577229835d287c
msgid "Appendix: Practicals"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:7
#: ../../reference_manuals/old/archetypes/fields/index.rst:7
# 7aaa703019ce4fe3a53a5fb5583bca92
# 6503e94edf314d8e9fa0032a5e6bef7a
msgid "Plone Developer Manual is a comprehensive guide to Plone programming."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:10
# 963e39895c724644927b32feee5ffbf3
msgid "1. How-To Extend A Basic Archetype Content Type"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:12
# b609f50ee470477d878a02ba019f1280
msgid "This How-To describes what to do next after you've gotten the basic Archetype examples working. You can add functions, views, actions, and edit-page validation."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:16
# 646f3d002a324991bfe53c18d47bace1
msgid "Ok, so you've got the Archetype examples to work, and now you'd like to know how to flesh out the basic example into something useful. (That's how I started; I knew I needed to make new Content Types, but didn't know how they worked. I got the examples going, then tried to figure out how to modify them to do what I wanted.) I found learning Plone/Zope very frustrating until I got to this point. Then, once I figured out how to make Content Types do what I wanted, it all made sense."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:25
# 4eab353004e3475ba614453037a80a3c
msgid "**Adding Functions** This is probably one of the first things on your mind. Where do I add functions to my Content Type? How do I call them? What syntax do I use? Well, these were the things that I wondered about. I figured out how to do them after some trial and error. I never made a real website before, where I had to write scripts (a blog doesn't count). So even though I had a lot of python experience, I was confused at first. [*First, know that the Zope server converts a URL path into an object path, to find the object that will render your page. This is covered in the Zope Developer's guide. The key point you need to know is that there's a parallel between the URL and your object hierarchy, but it's not exactly the same*.]"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:35
# 3254cf40743a4ccd918f92d65b496fb3
msgid "To cut to the chase, Zope figures out which object/function the URL is pointing to, and it takes the query string (?arg=val,arg2=val2, etc.) and uses it to figure out all the right arguments for the function call. So, you define your function in the ususal way, i.e.,"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:61
# 64517d9eeee34f9fae8766b3c50dcb03
msgid "**Adding Actions** I was confused when I saw the description of *actions* in the Plone manual. Here's how I think of them: they're just the hyper-linked tabs along the top of the Content Type (content actions) or horizontal site navagation (site actions). The links are typically to a Content Type function (that returns a page), or to a page template (I only know how to make .pt and .cpt types so far). The actions for the Content Type are defined (overriden) using the Factory Type Information format, and the process well described in the Archetype tutorials. I'll just add that you can make most of the tabs (actions) visible=True or visible=False. You can append your own actions that show up as tabs for your content type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:74
# 54c5ad7874d64460bef9849ea7eac79f
msgid "**Changing Page Views** You can change the various views of your content type by defining new page templates to display your data. Typically, these page templates (.pt) are placed within the skins/ directory of your product. I can't fill you in on exactly how Zope maps the URL (http://.../myArchExample/my\\_view) to the my\\_view.pt, but the details are taken care of (by the Install.py script?) and you should put your page templates in the skins/ directory. *[This section needs updating, as soon as I learn how it's done.]*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:84
# 5658a68cc4554e268b218a0161b53883
msgid "**Validating the Edit Form** You probably have a need to validate the data that users enter on the edit page. This process is called *validation*, and the scripts that implement the rules are called *validators*. There's a clean way to do this in Archetypes using built-in field validators and your own post\\_validation() function for the Content Type. You don't have to write any (.cpt,.cpy,.vpy) form templates, or controller scripts. Of course, validation is optional, so you can skip either step."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:95
# 2b781cb253514de1a9dad81dbcd75d39
msgid "Use field validators on individual entries (see the validator = (,) field attribute). This is the first-line of validation."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:97
# 945e0b8537cb4bb9bdf503dec6c6f3a8
msgid "Define a post\\_validation() function. This allows you to validate fields in the context of the entire class, and set error (re-do) flags for individual fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:101
# 304162c753e44b15a98cb861c48f3ebe
msgid "After the user hits the 'submit' button on the edit page, the field validators are run first. If any validators fail, the input field is highlighted, and the user is sent back to the edit page to fix the errors."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:106
# f88da09e449b4b21b46fe11164c58a04
msgid "If all the field validators pass, then your post\\_validate(self, REQUEST, errors) is called. The form keys and data are passed to you in the REQUEST dictionary. Your code will validate the edit form values in the REQUEST dictionary. If you see errors that require fixing, you'll set them in the errors dictionary (using the corresponding key in the REQUEST). For example, here's a"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:127
# 1ffe7e8463c54559b0d2b79d18748e90
msgid "**Adding Child Members** If your content type is a folder-like object, you can write functions that will add child objects. This may be useful, for example, if your Content Type is a ledger, and you need to add new transactions when the user hits an action. The following example code shows how to do this."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:152
# b777385c911a4b289548ae76d99ece74
msgid "2. Implement Archetypes ComputedField and ComputedWidget on your Product and reference other Fields"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:154
# 369e32c9eed6410486963d5ec137a043
msgid "A simple use of ComputedField and ComputedWidget referencing other fields, built-in or 3rd party, in the same Plone product"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:158
# 22b11b5f9957460ba9d6d353f3016f30
msgid "Motivation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:161
# 762b3771e2ba4146940971624afbe4f6
msgid "There are many reasons why this how-to exists:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:164
# 6ff8ab79d6ab494996d8701d69a05f68
msgid "Almost no Archetypes examples using ComputedField and ComputedWidget"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:166
# 6a3fa3d1770c4d5eaaebbac6e4b4d969
msgid "We want our product to process some data on itself, but reload isn't a matter of concern"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:168
# f98506bbc18b4502a6707a0b79003fe0
msgid "We love PZP (Python-Zope-Plone)!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:171
# 0e0ed07c9a1d44009c056d5f3e615257
msgid "What do we need?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:174
# 9ed703835b704700a80987da60d34af0
msgid "A Plone installation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:175
# 79f0965b4e3640c1a19596e340ddea65
msgid "A nice text editor (my wintel box runs SciTE)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:176
# 9ab25a90b92b463681fe0ea6772bfb62
msgid "Some product (for real dummies like me, try http://plone.org/documentation/tutorial/anonymously-adding-custom-content-types-with-argouml-and-archgenxml/view)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:179
# b179e071bfe346f684e676406992547a
msgid "**What we are going to achieve?**"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:182
# 4fb0807be152475eb1679f5f08cc0297
msgid "Make a page process it's own information"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:184
# 3e0304e88c6640e49acf39a90ded140a
msgid "Let's say you created a product, maybe using ArgoUML (an UML editor) and ArchGenXML. One thing you might realize it's missing on creating UML's is that: we create classes (Plone products), their types are also classes (Archetypes' fields and widgets) and Attributes (Fields and Widgets' properties) as TD's (tagged data) for Archetypes' types, but we have no *methods*! But we could do more if we inserted code: classes are made of attributes and methods (code). But as UML editors are not that Python friendly, we do that by hand."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:195
# 1f5ace48260f4e7a80187c07715067ec
msgid "So, how?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:197
# c9fe19b1e74d479e8746d97915a3326c
msgid "If you already have navigated the path of a product, you've stumbled on some source files (.py) inside, so take some time to read their source (*Read the source, Luke!*). Probably you've seen some like this (for example, MyOrder.py):"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:277
# 2aa8aefc74fb4497ba6178d409a4c063
msgid "Aargh! I've just core dumped and almost killed 30! The above code can be divided in two parts: Schema and Class (Product). We have declared 3 different fields in the schema: the first is a bultin trivial Archetype field; the second is imported from the Product DataGridField (you need it installled on your Plone instance to work); the third is our the field we want to change as someone changes values on the form."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:289
#: ../../reference_manuals/old/archetypes/appendix.rst:295
# 18e3ed9809cc488ba6e55f86240eddf0
# be7dc2f67e72497faf584b9a5d119e61
msgid ","
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:301
# 7e76523262174fd3a0ce61bce0079375
msgid "or"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:307
# 903a054bdec1410b94bf7b93862e7e56
msgid "We've just called something (a function, in fact) named *calculateTotal*. But smart as we are, we realized that expresssions called this way must be somewhere in our context scope. I mean, inside our class definition. The function definition itself isn't that simple: it adds up the total and returns its value. What isn't simple? Our generous DataGridField returns a tuple of dictionaries like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:326
# 45cc5fc91f98494ab1643a300603d34c
msgid "The *for* loop iterates over every item on the tuple and searches for two dictionary items. Other field are rather simple to retrieve data: just use field's name attribute. The *widget=SomeWidget(modes='view',...)* realizes the feat of showing this field only on the view mode: not when adding the item and editting, nor when editting an existing item."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:334
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:224
# 68eed1e6cadf4bbabd93ea93ce37e8b7
# e89740675b4f4911874d100a0c39ec4b
msgid "What's next?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:337
# 5c16d97aebdb490382b267d19432e5bd
msgid "What could we do with PhotoField (ImageWidget)?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:338
# da53ac5d04604010826a3acb87cb6878
msgid "try-except is always recomended"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:339
# 9077a7e279f843c4afc9917b490b0e1e
msgid "Could this better than *mutate* ?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:340
# e146d9bcd044463199827b840e732a79
msgid "Can we make a file avaible for download with some strange mime type based on the information of this product?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:344
# 4f5e4e77f56d4ff0afcbb51e2984e865
msgid "3. Making the view page of a content type use your schemata declarations"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:346
# cea70b46707e4976abdf053eecd5390b
msgid "How to make the schemata declarations in a Archetypes schema be used in the view page of a content type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:352
# d46a0f2abfa04fbf868a7395803de353
msgid "Declaring schematas in your Archetype schema has the nice effect of displaying the fields of the different schemas on different edit pages (very much like a \"wizard\" for adding a new content type instance). Often times you might like to also have the view page be divided according to the different schemas you have declared. This is not done automatically by Archetypes so in this document I'll show you how to do it yourself. Don't worry! It's really quite easy."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:362
# d2e66dea0b7d4f69b1e2b6dd0e2a21ee
msgid "Python class and schema"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:364
# d7b572f451e1469292ee100e84690284
msgid "I'll be using a simple article content type I have constructed for this how-to to show you how the schematas can be used on your content type's view page. The example type is really not very usable, but just complex enough to show you how to do this. It has a schema of four fields in addition to the default id and title fields: abstract, body, firstname, lastname. The abstract and body fields are in a schemata named article and the firstname and lastname field in a schemata named author."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:373
# d194c6a327b5457099305a7bbd07f489
msgid "I have also defined the title and id fields to be in schemata article. This was done so I won't have an extra schemata called default and so I can use the title field for the title of the article. (Remember to use ``BaseSchema.copy()``!)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:378
# be9bcc429aa14be6a74d96f70c4a31ed
msgid "The class itself has just the schema declaration and a new view action definition. I have defined the view action to use a template called article\\_view that we'll be getting to shortly."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:382
# 004fcfc8e3fb4d61a61d76088a7c99dd
msgid "Here is the file in it's entirety:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:475
# c5524a291d26496a807511a069c35d68
msgid "View template"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:477
# 49c26b9440b249108bbf30f11831b368
msgid "The view template article\\_view is the main part of this how-to. It has the page template code to generate the different pages for the different schematas."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:481
# ef3b4b8447c643419254d07a3f5949d9
msgid "First you should copy the base.pt file from the Archetypes skins folder (on my Debian GNU/Linux unstable it's in /usr/share/zope/Products/Archetypes:1.3/skins/archetypes) to your product's skins folder. It has most of the template code you'll need ready, so you'll only need to make some minor changes to make this work. Also it uses all the default macros and such, so you'll view page will look like a real plone page."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:489
# fb58d01fc3c6417b9743540a910e47ad
msgid "The base.pt template just goes through all the fields of your content type and shows their widgets. What we want to do is to have it only go through the fields of one schemata at a time and give us links to see the others. This will be done using REQUEST parameters to the scripts."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:495
# ed8e4db85be2401a937fde9fd69df1b1
msgid "I'll go though the changes from the top of the file downwards so you'll have a easier time keeping up and making the changes to your own template."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:500
# 3ed092b54d2a41409a7aec2f6c68c7b5
msgid "Links to the different schematas"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:502
# 1e9802d441064fe4a91c8fee0c82f3a5
msgid "We'll want the list of different schematas to be at the top of the page, so that'll go in first. Find the line that says '``<metal:main_macro define-macro=\"main\">``'. This is where the body of the template starts. After this line is the header with the title and the little icons for edit, print and such, and I want to have my links to show up above that. So after the beginning of the body and above the header add the following code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:524
# 15b94209096549418d21677bae42ae1b
msgid "This just repeats over our schematas' names (we get them with ``here.Schemata().keys()``) and prints all of them on one line as links, each one in square brackets. The links are to the same view page, but they all set a parameter in REQUEST called page that points to the schemata we are linking to. This isn't very pretty so you'll probably want to make them look nicer if you like. The '``schemata != 'metadata'``' part is because there's a schemata called metadata created automatically for your content type to support default standard metadata which can be set via the properties tab and that we do not want to include here."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:536
# f716c09f0915492488152a147175042f
msgid "Showing only the schemata we want"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:538
# 538431c3f55443c9b44505f2eb4dbfd6
msgid "In the next part we'll be diving deeper into the code. You're looking for a part that says '``tal:repeat=\"field python:here.Schema().filterFields(isMetadata=0)\"``'. This repeats through the fields of your content type and the following parts show their widgets. What we want to do here is to have it repeat through the fields of the schemata we want instead of all of them. In the previous part we set a parameter in REQUEST called page that points to the schemata we want to see, and here we want to use that to pick which schemata's fields to loop over. So just go ahead and replace the part with '``tal:repeat=\"field python:here.Schemata()[here.REQUEST.get('page', here.Schemata().keys()[0])].filterFields(isMetadata=0)\"``'. This just gets the page parameter from REQUEST (if page is not found, ie. the template is called with no parameters, then first schemata, in this case article, is used) and loops through the fields of the schemata with that name."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:554
# c5b3d556c550407580d2864e5444767b
msgid "The completed article\\_view.pt looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:685
#: ../../reference_manuals/old/archetypes/appendix.rst:1587
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:2
# 13f3298bfe1c445c9eeb6522c42d24c1
# e669b3acaad442ae9b2536d1dd06defd
# 2b9c0cb371da4d0fa9a1884d955548c2
msgid "Conclusion"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:687
# 79ec7b8912694891b7160792376612e7
msgid "So that was it. I told you it was going to be easy!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:689
# 6f2eb0a0d4244da489425466950e43db
msgid "Happy hacking!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:692
# 66c83b5a46874a2cb60e0735575197d7
msgid "4. Enabling versioning on your custom content-types"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:694
# 7696b45172654c3a9f10406c82a60121
msgid "Plone 3 includes a robust versioning system as well as a tool for viewing diffs, which allows you to easily see the changes between two revisions. This document explains how to integrate versioning and diff functionality with your custom Archetypes-based content-types."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:701
#: ../../reference_manuals/old/archetypes/create_event_hook.rst:15
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:28
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:13
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:17
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:19
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:16
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:12
#: ../../reference_manuals/old/buildout/prerequisites.rst:3
#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:25
#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:14
# ee004c11c74944b1a0baed9463af2cf0
# dc4a937c69ba4a36af77bb60358fae08
# cc146aeebe734dc4933fbeac49a71959
# 2513472fdffb4caabea9fcfbf05af45a
# 042e274b0b574874926ad484e20075ee
# e908e334d53f491aa1febb325de53113
# 3d5582b919a246ca9fd2f3103c7dfa59
# 03f3e2ef68984a7b9f1d4ed431bf2547
# 7a1562933f0a4374abb58fa4ccd7618a
# f92fe4ce0e594371af5f5add6db86e88
# f1ad1a1b1f1749a097a7ff8c05382f87
msgid "Prerequisites"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:703
# 800370f376db411babf5d8b0d912db44
msgid "You'll need a Plone 3 instance and a custom product which contains at least one Archetypes-based content-type on which you want to enable versioning."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:707
# c3694ca0eb164c3d82c87d3c5ad23fea
msgid "You'll also need to have the **Working Copy Support (Iterate)** product installed.  This product is part of the Plone core so to install it, all you need to do it visit the **Add-on Products** section (a.k.a. Quickinstaller) of the **Plone control panel** and select it for installation."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:714
# 81a85247b30e4ecbb5597a62941141c6
msgid "Creating a setup handler script for GenericSetup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:716
# 7653cd6f01bf4ce4a6656e4c6dbc77ec
msgid "The integration code we'll be writing here is best run as a setup handler using GenericSetup. If your product doesn't already have a GenericSetup profile and a custom setup handler, `this tutorial <https://plone.org/tutorial/borg/setup-using-genericsetup>`_ provides instructions on how to create those."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:723
# aac0a35ef0b44b37a80af5bb125f243f
msgid "Declaring versionable types in your setup handler"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:725
# 5426f2c80b4a4f5493aabb8c09e1d495
msgid "The portal\\_repository tool stores a list of content-types on which version is enabled.  With the following code we create a list of the custom types on we which we want to activate versioning and then notify the repository tool to start versioning the types in this list."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:731
# 2e2c36bce51842558fbef0317618d94f
msgid "If you copy the code below, make sure to edit the TYPES\\_TO\\_VERSION setting so that it contains a list of the types on which you want to activate versioning."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:756
# 0b8085c038e545d299a020a3fcd671d0
msgid "Now we call this function from the importVarious() function in our setup handler script.  Make sure to pass the portal object as a parameter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:770
# eb5476ec6a114867b3678369ebb21fa9
msgid "Enabling visual diffs on your versioned types"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:772
# 6ccdc0020ce54d729541ab6de8e042db
msgid "Now that you've enabled versioning, you'll probably want to enable visual diffs so you can compare the changes made between different versions of an object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:776
# 8e94be464c7e4d8d990a9c205bb8741c
msgid "Starting in Plone 3.2 the diff tool can be configured via a GenericSetup configuration file.  You'll want to create or edit the **diff\\_tool.xml** file in the /profiles directory of your product.  Here's an example confirmation file that enables compound diffs on the 3 content-types used in the example above."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:801
# 9003f9b8bb6d49bb9aff90be28a4f35e
msgid "For Plone versions earlier than 3.2, there is not a GenericSetup handler for configuring the diff tool, but you can create these settings through the ZMI using the **portal\\_diff** tool.  In the **Portal Type** drop-down menu select the content-type on which you want to enable diffs.  In the **Field name** box type \"any\".  For the **Diff Type** select \"Compound Diff for AT Types\".  Finally click the **Add Field** button.  Repeat these steps for each content-type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:811
# 27fc764d57bb4256b506b33f371c2bff
msgid "Deploying your new versioning and diffs policy"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:813
# cc55d04cda41413580e49adfd76e132d
msgid "To deploy these changes you'll need to re-run you product's GenericSetup policy.  If your instance is not running in debug mode, you'll first need to restart your Zope instance to make your new filesystem code available."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:818
# 2ec5354a97da434dabf4510029a0168e
msgid "Assuming you've used paster to create your product package, reinstalling your product in the **Add-on Products** section of the **Plone control panel** should be sufficient to re-run your** GenericSetup policy** .  If your product's install method does not run your GenericSetup policy, you may need to visit the **portal\\_setup** tool in the ZMI and run it manually."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:826
# 4bdd7a3b210f4d6f83df0358fdac02ef
msgid "Verifying that versioning and visual diffs are now enabled"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:828
# 859b2ec08eaa4be4924ef85dc69c7ec7
msgid "Visit an instance of one of the types on which you've enabled versioning.  Make some edits to one or more of the fields save those changes.  Next, visit the **history** tab for the item you just edited. You should see a list showing two versions.  Click the link to compare versions you should see a diff showing you what has been changed between the two revisions."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:836
# a633bbecf5874b94a9263109ac4e0eeb
msgid "5. b-org: Creating content types the Plone 2.5 way"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:838
# b06138b2fe0f45a499c9bb5211d374bf
msgid "Plone 2.5 brings us closer to the promised land of Zope 3. Zope 3 brings us a new way of working. This tutorial will show how to marry the old and the new, to make Plone products that are more extensible, better tested and easier to maintain."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:844
# 024a23bb32a8402bbeec505d4586811a
msgid "5.1. Introduction"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:846
# 7cb6b7ef122b4028885913718bb990f9
msgid "What is b-org, and what will you learn here?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:848
# 3336a7902de1437aa79ed7157ca879ed
msgid "b-org stands for \"base-organisation\". The name had nothing whatsoever to do with my desire to get an svn URL of `http://svn.plone.org/svn/collective/borg <http://svn.plone.org/svn/collective/borg>`_. Promise. In fact, it used to be called *company* , which some people rightly pointed out is a bit too generic and opens up the possibility of conflicts with other people's code. It just proves that naming generic components is difficult."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:856
# 10d2051d7ea44c5597d0050860e3123b
msgid "**Generic** is the key word here. Functionally, b-org provides infrastructure to help you manage **Departments** , **Employees** and **Projects** in a natural way. Departments are containers for employees, employees are linked to projects by references. Using *membrane* , these objects become sources for users and groups, so that a department is a group for all the employees in it, and employees become real users of the system, with usernames and passwords. Projects manage local roles, so that employees that have been associated with the project are able to add and modify content in it. Other users may or may not be able to view content in a project, depending on its workflow state."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:868
# 1c01584171c443568832d25b20260f59
msgid "However, b-org makes no assumptions about which metadata you want to associate with departments, employees or projects. For that, it expects you to plug in your own content schema. It also delegates almost all its functionality to smaller components, so that if you, for example, want to store authentication details via LDAP or change the way in which users are employees to projects, you can do so by implementing small, isolated components rather than sub-classing and re-implementing large chunks of the three basic content types."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:878
# b301348f52fa413197f78719883d2a63
msgid "That's all well and good, but you're probably not going to want to read a lengthy tutorial just about how great b-org is. As the title promises, this tutorial is about **leveraging new technologies available in Plone 2.5** to write better content types and other software in Plone. Hopefully, you will find the techniques described here useful whether you are writing a member management module using membrane (mmmm), or other code. I for one, want to go and rewrite several of my products (like Poi) to make them more extensible and flexible after having adopted these techniques. Hopefully, you will also learn something about the **development process** , in particular **test-driven development** , that I followed, and how the future of Plone is entangled in **Zope 3** ."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:892
# 89cb3b736ddb45a69efe5adb624ec920
msgid "This tutorial should be viewed as complementary to, rather than superceding, my earlier tutorial entitled `*RichDocument - Creating Content Types the Plone 2.1 way* <https://plone.org/documentation/manual/developer-manual/archetypes/appendix-practicals/richdocument>`_. The techniques of RichDocument, in particular relating to extending ATContentTypes, are still valid in Plone 2.5. What Plone 2.5 allows us to do, however, is to achieve better separation of concerns between content storage, business logic and view logic, due to the added spices of Zope 3. For RichDocument, the gain wouldn't be that great since it's relatively simple (and focuses on doing as little as possible by re-using as much as possible from ATContentTypes). Hence, I didn't update the RichDocument tutorial, nor do I feel as compelled to update RichDocument itself (yet). b-org is a more ambitious example which allows us to illustrate the new techniques more fully."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:907
# ca856280e6f84d6ba9134ce7d4bc8362
msgid "One thing to note is that this tutorial is still centered on **Archetypes** , and assumes you know the basics of Archetypes development on the filesystem. Archetypes is rooted in a pre-Zope 3 world, and there are times when we have to accommodate it in ways that make our clean patterns a bit messier - luckily, not too often. There are ways of managing content in Zope 3 that can be applied to Plone, for example by way of `zope.formlib <https://plone.org/documentation/manual/developer-manual/archetypes/appendix-practicals/using-zope-formlib-with-plone>`_, but these are generally not quite ready to replace what we can do today with Archetypes. In the future, they may be, but more likely Archetypes will converge a bit more with its Zope 3 equivalents and blur the lines between the two approaches. The upshot is that what you know about Archetypes today continues to be relevant, and is augmented by the Zope 3-inspired techniques you will find here."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:923
# b30af11ead23406ba0efe9c6e4e50778
msgid "5.2. A whirlwind tour of Zope 3"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:925
# 6926f897ffa7481284ae1dca8161b292
msgid "Zope 3 is still fairly new. After reading this tutorial, it should hopefully start to feel a bit more familiar. In this section, we will give a brief overview of what is different in Zope 3 and how it fits into Plone."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:930
# fb1c9d3ab0fb4a1dafbe90599bb81509
msgid "The name Zope 3 is a lie. True - it is brought to you by many of the same clever people who built Zope 2, one of the most advanced open source app servers of its day. True, it is still Python, it still publishes things over the web, and there are still Zope Page Templates. However, Zope 3 is about small, re-usable components orchestrated into a flexible framework. It is this flexibility that allows us to use Zope 3 technologies in Zope 2 applications like Plone."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:939
# 5e9fd2dd466c40c49819c899ed48f300
msgid "A piece of wizardry called *Five* (Zope 2 + Zope 3 = Five, geddit?) makes a number of Zope 3 components directly available in Zope 2, and since Zope 2.8, almost all of Zope 3 has shipped with Zope 2 as a python library. Plone 2.5's primary purpose was to lay the foundations for taking advantage of Zope 3 technologies in Plone."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:945
# 060487b31e574365aa53e92f04f2b2f0
msgid "Zope 3 may seem a bit alien at first, because it uses strange concepts such as **adapters** and **utilities** . Luckily, these are not so difficult to understand, and once you do, you will find that they help you focus your development on smaller and more manageable components. You will also find that these basic concepts underpin most of the innovative parts of Zope 3."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:955
# c11cdcaf1eee494b95297514d2c2d3e8
msgid "Everything in Zope 3 starts with interfaces. Unlike Java or C#, say, Python does not have a native type for an interface, so an interface in Zope 3 is basically a class that contains only empty methods and attributes, and inherits from *Interface* . Here is a basic example:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:980
# bc3654ca5fcd4fc4b2e65ba57bf2e11c
msgid "Interfaces are primarily documentation - everything has docstrings. Also note that the *wear()* method lacks a body (there is not even a *pass* statement - the docstring is enough to keep the syntax valid), and does not take a *self* parameter. That is because you will never instantiate or use an interface directly, only use it to specify the behaviour of an object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:987
# 5bb6fbd90d354722aa5c70d280ec5843
msgid "An object can be associated with an interface in a few different ways. The most common way is via its class. We say that the class *implements* an interface, and objects of that class *provide* that interface:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1005
# 9ef8540120674f2890f6daaa0439ee00
msgid "The *implements(IShoe)* line means that objects of this class will provide IShoe. Further, we fulfill the interface by setting the two attributes (we could have implemented them as properties or used a an \\_\\_init\\_\\_() method as well). The *IShoeWearing* interface will be implemented in the section on adapters below."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1011
# 356d2b6a8ba54670aa03e41531a39de9
msgid "We use interfaces to model components. Interfaces are normally the **first stage of design** , in that you should define clear interfaces and write actual classes to fulfill those interfaces. This formalism makes for great documentation - interfaces are conventionally found in an *interfaces* module, and this is typically the first place you look after browsing a package's documentation. It also underpins the adapter and utility system - otherwise known as the Component Architecture - as described below."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1021
# e684b6c3eea344a5bea0a1e443654b05
msgid "Note that you can use common OOP techniques in designing interfaces. If one interface describes a component that has an \"is-a\" or \"has-a\" relationship to another component, you can let interfaces subclass or reference each other. An object will provide the interfaces of its class, and all its base-classes, and all base-interfaces of those interfaces. Don't worry about untangling that - it works the way you would expect."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1029
# 6d9140429b0c43379a252c1e936040a4
msgid "You can also apply interfaces directly to an object. Of course, if that interface has methods and attributes, they must be provided by the object, and unless you resort to crazy dynamic programming, the object will get those from its class, which means that you may as well have applied the interface to the class. However, some interfaces don't have methods or attributes, but are used as markers to distinguish a particular feature of an object. Such **marker interfaces** may be used as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1054
# abcc283beff5424dbc6b68cff456f40f
msgid "Marker interfaces are very useful for things that change at run-time in response to some event (e.g. some user action), and thus cannot be determined in advance. In a moment, you see that what you will learn about adapters and adapter factories below also applies to marker interfaces - it is possible to alter which adapter factory is invoked by applying a different marker interface."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1062
# db93c1ff36e04a53a4380ba26fdf7e37
msgid "It's also possible to apply interfaces directly to classes (that is the *class itself* provides the interface, as opposed to the more usual case where the class implements the interface so that objects of that class provides it - this is useful because it allows you to group those classes together and describe the *type* of class they are) and to modules (where you want to describe the public methods and variables of a module). These constructs are less common, so don't worry about them for now. Look at the documentation and interfaces (!) in the *zope.interface* package for more."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1075
# 75dede5f3a6040df9172322ed46c0828
msgid "The most important thing that Zope 3 promises is **separation of concerns** . In Zope 2, almost everything has a base class that pulls in a number of mix-in classes, such as *SimpleItem* (surely, the most ironically named class in Zope 2) and its plethora of base classes that include *RoleManager* , *Acquisition.Implicit* and many others. This means that a class written for Zope 2 is nearly impossible to re-use outside of Zope."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1083
# c2270f541aab44c3a3ae05cb816b042d
msgid "Furthermore, in Zope 2 we are tightly wedded to the *context* (aka *here* ) because it is so convenient to use in page templates, workflow scripts etc. For example, people often write an Archetypes class that contains a schema (storage logic), methods for providing various operations (business logic) and methods for preparing things to display in a page template (view logic). Often, people do this simply because they can't think of a better place to put things, but it does mean that re-using any part of the functionality becomes impossible without importing the whole class - and its base classes, which include Archetypes' BaseObject, CMF's DynamicType, and Zope's SimpleItem - to name a few!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1095
# bf99ae5fe12a4af68f0b1ddd8217c4ba
msgid "Think about the example above. The *Shoe* class is well-contained and only concerned with one thing - storing the attributes of shoes. It can be used as an abstraction of shoe anywhere, and is very lightweight. Now let's consider that we may want to wear shoes as well. We can create a pair of shoes easily enough:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1108
# fa85992a90974fa0b34765348ef71b3c
msgid "Now we want someone to wear these shoes. Let's say we have a person:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1127
# 8a8edc07ebcd4ba38f5d2334e86a812c
msgid "In a Zope 2 world, we may have required Person to mix in some *ShoeWearingMixin* class that specified exactly how shoes should be worn. That makes for fat interfaces that are difficult to understand. In a Zope 3 world, we would more likely use an adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1133
# 7f5eb89c732247df90acdc5ea139a305
msgid "An adapter is a glue component that can adapt an object providing one interface (or a particular combination of interfaces, in the case of a multi-adapter) to another interface. We already have a specification for something that wears shoes, in the form of *IShoeWearing* . Here is a snippet of code that may use this interface:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1145
# 5a47efb1f30a43e09666388765140557
msgid "The question is what to do with the '...' - how do we obtain an object that provides IShoeWearing? Code like this is normally operating on some context, which in this case may be a *Person* . If that Person implemented IShoeWearing (or at least the *wear()*method), it would work, but then we are making undue demands on Person. What we need is a way to *adapt* this IPerson to something that is IShoeWearing. To do that, we need to write an adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1171
# 50bbbf9cd61f4673acf4aaaf2da587ba
msgid "Here, we implement the IShoeWearing interface. Note how the *wear()* method now has a *self* parameter, since this is a real object. Also note the *\\_\\_init\\_\\_()* method, which takes a parameter conventionally called *context* . This is *the thing that is being adapted*, in this case an object providing IPerson. We store this as an instance variable and then reference it later. Note that adapters are almost always transient objects that are created on the fly (we will see how in a second)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1180
# f8ce483d0c834d419f4be68c921e6fda
msgid "We could now do something like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1187
# 56ff4c6d2f324f9d9cdc3dc0f7bea931
msgid "However, this still requires that we know exactly which adapter to invoke for the particular object (*person* in this case), effectively creating a tight coupling between the adapter, the thing being adapted, and the code using the adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1192
# 3f3c7be5b6e1431ca9e5a88ff6742547
msgid "Luckily, the Zope 3 Component Architecture knows how to find the right adapter if you only tell it about the available adapters. We do that using **ZCML** , the Zope Configuration Markup Language. This is an XML dialect that is used to configure many aspects of Zope 3 code, such as permissions and component registration. You can do what ZCML does in Python code as well, but typically it's more convenient to use ZCML because it allows you to separate your logic from your configuration."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1201
# d4410459b3cd4cbf91504cbd6f663bc3
msgid "ZCML directives are stored in file called *configure.zcml*, which itself may include other files. A *configure.zcml* file in your product directory (Products/myproduct/configure.zcml) will be picked up automatically by Five. Here is a snippet that will register the above adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1211
# 7a138ef2a9624dbd81a660cc1cb59b96
msgid "You will sometimes see a fuller form of this directive, like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1221
# 83d7271e619e4409968b1c57410895e6
msgid "Here, we are specifying full dotted names to interfaces in the *for* or *provides* attributes. These are equivalent to the *adapts()* and *implements()* calls we used when defining the adapter. Note that *adapts()* did not work prior to Zope 2.9 (so the ZCML *for* attribute is mandatory), and that if your adapter class for some reason implements more than one interface (e.g. because it's inheriting another adapter that has its own *implements()* call), you may need to specify *provides* to let Zope 3 know which interface you're really adapting to."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1231
# b05aa6169fcb49a7a75e30bea02d10eb
msgid "Notice here that the dotted names begin with dot. This means \"relative to the current package\". You can write *\"..foo.bar\"* to reference the parent package as well. You could specify an absolute path instead, e.g. *Products.Archetypes.interfaces.IBaseObject*or *zope.app.annotation.interfaces.IAttributeAnnotatable*. Typically, you use the full dotted name for things in other packages and the relative name for things in your own package."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1239
# 58348740d27a48ffb1c394cb4e68b4e9
msgid "The *factory* attribute normally references a class. In Python, a class is just a callable (taking the parameters specified in its *\\_\\_init\\_\\_()*method) that returns an instance of itself. You can reference another callable as well if you need to, such as a function that takes the same parameters (only *context* in this case - obviously there is no *self* for functions), finds or constructs and object (which must provide *IShoeWearing* ) and then returns it. This is rarely used, but can be very powerful (for example, it could find an object providing the given interface in the adapted object's annotations - but don't worry if you don't understand that for now)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1251
# 828ca889c3514ce8b41d6201dc60a9a5
msgid "With this wiring in place, we can now find an adapter for an IPerson to IShoeWearing. The Component Architecture will ensure that we find the correct adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1262
# e30e84a20d23434a995b921011a7eb68
msgid "We are \"calling\" the interface, which is a convenience syntax for an adapter lookup. If an adapter cold not be found, you will get a *ComponentLookupError* . There are plenty of functions in *zope.component* to discover adapters and other components - see *zope.component.interfaces* for the full story."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1268
# ff8268d3caa94a0c92501f078b22b598
msgid "It is important to realise that the adapter lookup is essentially a search. The Component Architecture will look at the interfaces provided by *person* and look for a suitable adapter to IShoeWearing. As mentioned before, it's possible for an object to provide many interfaces, e.g. inherited from its base classes, implemented explicitly by the object (by declaring *implements(IFoo, IBar)*), via ZCML or because an object directly provides an interface. It is therefore possible that there are multiple adapters that could be applicable. In this case, Zope 3 will use the *interface resolution order* (IRO) to find the**most specific** adapter. The IRO is much like you would expect of polymorphism in traditional OOP:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1282
# 0edce582ebf2477995cab2c24b6ed72f
msgid "an interface directly provided by the object is more specific than one provided by its class"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1284
# 51e284513cc04280ac0c6d4737145210
msgid "an object provided by an object's class is more specific than that provided by a base class"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1286
# 7f042ed3781849e3a81df0c9b347d84e
msgid "if an object has multiple base classes, interfaces are inherited in the same order as methods are inherited"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1288
# 4e2ccbd4ac144ab3abce434eba3bdcc4
msgid "if a class implements multiple interfaces, the first one specified is more specific than the second one, and so on"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1291
# 26d400bcd8ba42b1b0248e7ff067f8e5
msgid "Remember marker interfaces? One use of marker interfaces is to imply a particular adapter. Think about the case where you may have  specific adapter to IShoeWearing for some marker interface IAmputee. If you mark a person as an IAmputee due to some unforunate accident, the IShoeWearing adapter may raise a warning rather than modify the apparel list."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1298
# 0a5ea10b53ac470d85709f93e915ab81
msgid "All of this may seem a little roundabout and unfamiliar, but you'll get to grips with it soon enough. Let's re-cap how we arrived at this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1303
# 6b118f284bf044c3921547960e4837e4
msgid "We modelled our application domain with some interfaces - IPerson, IShoe"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1305
# b385d8002be3452dba6bc7fe59432396
msgid "We modelled an aspect of a person (or other object) for wearing shoes - IShoeWearing"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1307
# 9bcffc76a5014ba19ff3f008163eb0a1
msgid "We wrote some simple classes that implemented the domain interfaces IPerson and IShoe"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1309
# bb6f85744f40490ba8f833348e91b356
msgid "We wrote and registered a simple adapter that could adapt an IPerson to IShoeWearing"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1312
# 50685800502c4c3499bf1ba25a992c46
msgid "Then we showed how this could be used by some hypothetical client code. The upshot is that the client code only needed to know about IPerson and IShoeWearing, not how the aspect of a person that involves wearing shoes is implemented. The Component Architecture will ensure that the appropriate adapter is found, regardless of whether the person is a vanilla IPerson, a sub-class with a more specific sub-interface, or an instance with a marker interface applied."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1324
# 60d983611a4f41dfa6c3b5e95e43324e
msgid "Multi-adapters, named adapters and views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1326
# fc7efc2373b3486aa7b16ca352154e62
msgid "In the example above, we used an adapter with a single context. That is the most common form of adapter, but sometimes there is more than one object that forms the context of an adapter. As a rule of thumb, if you find yourself passing a particular parameter into every method of an adapter, it should probably be a multi-adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1333
# 3da0fb92873147f2beb0dc4b425b0c6d
msgid "The most common example of a multi-adapter that you will come across is that of a *view*, which incidentally is also how Zope 3 solves the \"where do I put my view logic\" code. We will cover views in detail later, but for now think of them as a python class that is automatically instantiated and bound to a page template when it's rendered. In the template, the variable *view* refers to the view instance and can be used in TAL expressions to gain things to render or loop on."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1342
# f9de8c3861344e7482e26b1087d5091b
msgid "When dealing with a view, there are two things that make up its context - the context content object (conventionally called *context* ) and the current request (conventionally called *request* ). Thus, a view class is a multi-adapter from the tuple *(context, request)* to IBrowserView. As it happens, there are ZCML directives called *browser:page*and *browser:view* that make it easier to register a view and bind a page template to it, handle security etc. However, abstractly a view looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1367
# d9a5785efae54fd7a9846673eef7ac83
msgid "Notice how this adapts both IPerson and IHttpRequest, and thus takes two parameters in its *\\_\\_init\\_\\_()*method. As you will learn later, views typically inherit the *BrowserView* base class for convenience, but the principle is the same."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1372
# 2814517742374e329e0de30bc0a8a60b
msgid "To obtain a multi-adapter, you can't use the \"calling an interface\" syntax that you use for a regular adapter. Instead, you must use the *getMultiAdapter()* method:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1382
# 0d522bbe29be4a5e929f38892787f334
msgid "You could use *queryMultiAdapter()* instead if you wanted it to return None instead of raise a ComponentLookupError when it fails to find the adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1386
# 5a6015f08d904c5483aa99926d5f4fa0
msgid "The above code has a problem, however (apart from being an incomplete example) - what if you have more than one view on the same object, say for two different tabs? To resolve this ambiguity, views are actually *named multi-adapters*. The names correspond to the names used as part a URL, and are registered using the *name* attribute in ZCML. This is used in *browser:page* and *browser:view* directives, but can also be used in the standard *adapter* directive:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1399
# f8adfbe090d24b079b62b1c6aa2da524
msgid "To get this particular view, we can write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1405
# 843f11d3fd67490aa1dd6fd9369a7c3e
msgid "conventionally, we leave off the required interface when we used named adapters, although you can supply it if necessary."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1408
# d85366a58fe3475790d3cd9b0b4dd38b
msgid "Multi-adapters are useful for other things as well. If you have an adapter and find that every method takes at a common parameter, it's a good candidate for a multi-adapter. Also observe that in the case above, we could register a different adapter for a different type of request as well as for a different type of object. Again, the Component Arhictecture will find the most specific one looking at both interfaces."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1416
# 843446d0e2a44a47a32ee7b21334c077
msgid "Named adapters do not have to be multi-adapters, of course. They are typically used in cases where something (e.g. the user) is making a selection from a set of possible choices (such as choosing the particular view among many possible views)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1424
# 4cfa09ac4050472398e1981a7f375c0e
msgid "In the CMF, we have *tools*, which are essentially singletons. They contain various methods and attributes and may be found using the ubiquitous *getToolByName()* function. The main problem with tools is that they live in content space, as objects in the ZODB, and require a lot of Zope 2 specific things."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1430
# af58ae8ed43740f1b4d9432491fd32ce
msgid "Let's say we had a shoe locating service (very useful when you can't find your shoes):"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1449
# b9a8ed0b7f08436aad6cf935e9e567e5
msgid "The Component Architecture contains a very flexible *utility registry*, which lets you look up things by interface and possibly by name. Unlike adapters, utilities do not have context, and they are instantiated only once, when Zope starts up. Global utilities are not persistent (but local utilities are - see below)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1456
# c70cac4638d040c2ae0957a7ccef6a1e
msgid "As with adapters, we register utilities with ZCML:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1462
# a9bd4bead2d64a6b880c159c50119f1e
msgid "Alternatively, you could skip the *implements()* call on the factory and set it in ZCML. This may also be necessary in order to disambiguate if you have more than one interface being provided by the utility component:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1474
# 80a510525f854634bc46c83de2f5db9a
msgid "Now you can find the utility using *getUtility()*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1483
# e6445e83846545729b1c5e9b5ff3c921
msgid "The utility registry turns out to be a very useful generic registry, because like the adapter registry, it can manage *named utilities*. Let's say that you had a few different shoes you wanted to keep around:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1498
# 13cf6d00789b43a5b9899002997db7aa
msgid "We can now find these utilities again using the *name* argument to *getUtility()*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1505
# 517d5824a7da46d79dbad168fa7356cd
msgid "Of course, we are still using the transient global utility registry, so these will diseappear when Zope is restarted. We could use local components instead (see below), or we could register them using ZCML. If we had defined the shoes *left* and *right* in a module *shoes.py*, we could write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1523
# 6c6fc50665274123a3931a54ac4281a4
msgid "An alternative would have been to define two classes *LeftShoe* and *RightShoe* and use the *factory* attribute of the directive instead of *component* (which refers to an instance, rather than a class/factory)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1529
# 5f9a92b884c845a1b059d5d10ed00b4d
msgid "Local components"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1531
# 6afd5b3ec2ae4fc3ba1a0dd44aa6889a
msgid "The examples above all use global, transient registries that are reloaded each time Zope is restarted. That is certainly what you want for code and functionality. Sometimes, you would like for utilities to be a bit more like their CMF cousins and also manage persistent state. To achieve that you need to use local components, which are stored in the ZODB."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1538
# 2dcc7ad0c52a48f08e6521b95ae96033
msgid "Prior to Zope 3.3, which is included in Zope 2.10, local components were a bit of a black art. Then came the *jim-adapter* branch and everything was greatly simplified. The theory is still the same, the API is just much more sane. Each time Zope executes a request (or if you implicitly invoke *zope.component.setSite()*, for example in a test), it discovers which is the nearest *site* to the context. In Plone, the site is normally the root of the Plone instance, but in theory any folder could be turned into a site."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1547
# fd1d658bf0054768b8d8b5ed5fdfb235
msgid "A *site* has a local component registry, where local utilities and adapters may be defined. This means that a particular utility or adapter can be specific to a particular Plone site, not affecting other Plone instances in the same Zope instance. You cannot use ZCML to register local components, since ZCML is inherently global (at least for now) - it does not know anything about your particular sites. However, you can register them with Python code, e.g. in an Install.py or a GenericSetup profile, using calls like *provideUtility()* (and its equivalent, *provideAdapter()*) called on a local site manager instance:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1570
# 6544a57dd4454ba395aed834d05d9fa0
msgid "Unfortunately, Plone 2.5 does not run on Zope 2.10. We won't cover local components here, because, well, I never learnt how to do it the Zope 2.9 way, and what I saw of it scared me. I'm told it's not that bad, and there is documentation in *Five* and in Zope 3 itself. Local components will become more important in Plone 3.0, where Zope 2.10 or later will be required and more things that use local components will be part of the core."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1578
# e4a06a050c9743899ba5ef4a06bb06a6
msgid "b-org does not use local components yet, and we will see how the extension mechanism would benefit from local components so that you could have one b-org extension installed in one Plone instance and another extension installed in another Plone instance, without the two interfering. Luckily, to code that *uses* adapters and utilities, it is completely transparent whether they are global or local."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1589
# a4c783838cd642a79d479db4f6b01f47
msgid "That's it! If you can master the concepts of interfaces, adapters and utilities you will go far in a Zope 3 world. They will become much more natural as you use them a few times, and you'll probably wonder how you ever managed without them. Hopefully, that point will come before the end of this tutorial, which is largely focused on showing how the principle of separation of concerns can be imposed upon your Archetypes and Plone code."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1598
# 0c1321ab72c14351814944b0b6f0de9c
msgid "5.3. Overview of b-org"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1600
# d7097291db194101bfd097c46fa0f258
msgid "The big picture"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1602
# 1eb31eeeb58e4e7b99afcbb68c3ac473
msgid "To the user, b-org presents itself as three content types:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1608
# 6293aa3658424c6aae71ba8fc30d01cd
msgid "Department"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1607
# b2e8150f19844c2fad1eb4d582c76cb8
msgid "A container for employees, and a source of groups. That is, each department becomes a group, and the employees within that department become group members."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1612
# a1b6afaec4dc424b88321405a71b4360
msgid "Employee"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1611
# f562e7e1c9e142259d06a3c686d2abe1
msgid "Information about employees, and a source of users. That is, each active employee object becomes a user who can log in and interact with the portal."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1618
# c9fdef7ff52248ddb514355fa5164705
msgid "Project"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1615
# e672586b2b8b458294e45e05e4ce0604
msgid "A project workspace - a folder where employees can collaborate on content. Content inside the project folder has a custom workflow, and employees who are related to the project (by reference) have elevated permissions over this content."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1620
# 2e4db63692d74e0fb6282700be9ea2e2
msgid "Out of the box, these are not terribly interesting, because they have only the minimum of metadata required to function. The task of providing actual schema fields, view templates, content type names (if Department, Employee and Project are not appropriate) and other application-specific facets is left up to simpler third-party products that plug into b-org. One example of such a product is included, which models a hypothetical charity use case and is called *charity*. This seemingly innocuous orchestration of functionality is achieved by a variety of means:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1632
#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:31
# c9e17d73a3aa4a438c50227cfc7d3264
# 35eadac70b654b76aed387eb99e63301
msgid "Archetypes"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1632
# 6b4902335b524f9280fdd61b4875f2f6
msgid "Used to build the actual content types and their schemata."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1636
# 87f048eeaf4e4cfca602a64345742727
msgid "The Zope 3 Component Architecture"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1635
# abd72a7357e54dda941e0ab85e06b604
msgid "Is used to make all this exensibility possible - you will see lots of examples of interfaces, adapters and utilities."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1640
# 61bb7fcd8c064c048f66a85da5edb1be
msgid "Membrane"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1639
# f6b52cf07ca54703abeab4bfb227d3e9
msgid "The content types are registered with *membrane* to be able to act as groups and users"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1646
# da38200e57974848a3a6e337af4fc4b0
msgid "PAS and PlonePAS"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1643
# 281eea7d05ab48e08aba9cfb8ed6063d
msgid "The Pluggable Authentication Service is used by membrane to actually provide user sources. A custom PAS plug-in is also used to manage local roles for members and managers within projects and departments."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1652
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:59
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:41
# 68efbf37bb374c629e6e0b4146472385
# a0100d5a03124ed19cf4cc9199a99c9b
# 2e67808bfdc54994be67683340010e60
msgid "GenericSetup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1649
# 19e8772c2bee405eaf143adec960f9c6
msgid "The next-generation set-up and installation framework is used to install and configure b-org. *charity* demonstrates how GenericSetup XML profiles can be used directly, without depending on the actual GenericSetup import mechanism."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1656
# dac64c698d76481a9bcfe37eeb2a6f51
msgid "Zope 3 events"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1655
# 8acb11d3ca18439f8f6608d59381a84f
msgid "Zope 3's event dispatch mechanism is used to ensure employee users actually own their own Employee objects, among other things."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1659
# 1f032184495546cdbf2eefa347050d83
msgid "Zope 3 views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1659
# 0292707840a34d90bcdbf0124940a607
msgid "The *charity* demo uses views for its display templates."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1662
# 794c156c7c9a47bfa47ce63e1bd60586
msgid "Employees' passwords are hashed and stored in an annotation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1667
# 316c618bcf5a4ec18a39ea3754fb2997
msgid "Placeful workflow"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1665
# 32e573430ae94171a315da17cd386219
msgid "To let content inside projects have a different workflow to that of the rest of the site, each project uses a *CMFPlacefulWorkflow* policy."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1669
# f6042af87bff4e71bfe73e01868fd45b
msgid "On the following pages, you will learn about each of these components and how it fits together. Meanwhile, you can follow along the code by looking in the `subversion repository <http://svn.plone.org/svn/collective/borg/trunk>`_, or getting b-org from its `product page <https://plone.org/documentation/manual/developer-manual/products/borg>`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1677
# d8b468162e824f06a5879255930d659a
msgid "5.4. To Archetype or not to Archetype"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1679
# 18012f46fea24a4e9b12022ad2624c72
msgid "Archetypes is still the most complete framework for building content types quickly. With the advent of Zope 3, there is an alternative in Zope 3 schemas. Here's why b-org doesn't use them."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1683
# 62c52e9520dd4dd197c30f2b8e513ba1
msgid "There is a growing consensus that Archetypes has grown a little too organically. On the one hand, Archetypes has given us a lot of flexibility, and made many of us more productive than we would ever have thought possible (for those who remember the heady days of plain Zope 2, and then plain CMF development). On the other hand, Archetypes has become fairly monolithic. The reference engine, for example, is woven tightly into the field type machinery, and the way that views are composed from widgets makes these almost impossible to re-use outside of Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1693
# e5994b3589564fa296965a2f1376ca06
msgid "In practical terms, the biggest headache that arises from Archetypes' evolution is the very same problem we identified when introducing Zope 3 concepts - it's hard to re-use Archetypes-based components without sub-classing and repeating a large portion of a type's configuration. Take `the Poi issue tracker <https://plone.org/products/poi>`_, for example - I frequently get requests from people who want to add a few use-case specific fields to each issue, or add some new functionality such as having private issues or issues submitted on behalf of someone else. The problem is that I don't want to put all this functionality in Poi itself, because this would increase the complexity of the product and thus the maintenance burden and probably impact the intuitiveness of the UI, when in reality not everyone would benefit from such new features."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1708
# 365951ed4dfd41fc8648c5ac8f442c7f
msgid "Ideally, someone would be able to plug in their own schema fields and add some logic in well-defined places without having to re-invent all of Poi. However, this is difficult, because, for example, the \"add issue\" button assumes you are adding a *PoiIssue* object, which has a schema defined wholly in *Products/Poi/content/PoiIssue.py*. There are custom form controller scripts to handle saving of issues, and a lot of methods are found in the various content classes to do things like send mail notifications or perform issue searches for various lists. Again, changing the logic of who gets an email notification or how a particular list of open issues is calculated may involve subclassing one or all of Poi's content types, re-registering view templates and other content type information, and possibly customise a number of templates and scripts to reference the new subclassed types. Of course, when Poi itself changes, keeping these customisations up-to-date becomes difficult."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1725
# bc3f0d29754a4e23b9b6e815dc588c68
msgid "Zope 3 has, in keeping with its philosophy, approached these problems by promising separation of concerns. In Zope 3, you would typically define an interface that specifies the *schema* of a content type, and then create a class that is only concerned with holding and persisting the data for this schema:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1735
# 45a911a0ba5247bea2fd0dfd256ddf10
msgid "The actual functionality for sending notifications etc would be in various adapters (e.g to *INotifying*), the view logic in views. Forms can be created from schema interfaces like *IIssue* above, using *zope.formlib*. This can handle proper add forms (so the object is not created until the form has been filled in, which is another headache with CMF content types and therefore also Archetypes), validation, edit forms etc. Each form, adapter and menu entry (for the \"add\" menu, say) is registered separately, meaning that they can also be overridden and customised separately. Rocky Burt has written an excellent tutorial on `how to use formlib in a Plone context <https://plone.org/documentation/manual/developer-manual/archetypes/appendix-practicals/using-zope-formlib-with-plone>`_ that may be enlightening."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1748
# 02105b25a8c5408fac344dd1f538744f
msgid "There are voices that say we should dump Archetypes entirely in favour of Zope 3-style content objects. Other voices (including my own) say that this may be a bit premature. Certainly, Zope 3 schemas and content objects are not yet fully integrated into CMF and Plone, so you end up depending on some CMF base classes at the very least. Moreover, the number and richness of widgets available for Zope 3 forms does not yet match that of Archetypes. Fundamentally, Archetypes has been around for a long time and has grown to meet a wide variety of use cases, whereas in the context of Plone at least, Zope 3 schemas are a new kid on the block."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1759
# ccaf0e0ef2204a09bbcc6c73264f98b7
msgid "The point is - Archetypes is not going to go away, not for a long time anyway, and are still the right choice for many types of applications. Almost all of Plone's add-on products use Archetypes, and it is well-understood by our developer community. The more likely scenario is that Archetypes will evolve in the same way that Zope 2 is evolving, by seeing its internals refactored piecemeal and pragmatically to take advantage of Zope 3 equivalents and concepts, until theoretically an Archetypes schema and content object is just a different spelling for what Zope 3 is doing, and Zope 3's content type story offers the same richness as Archetypes does (and more)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1771
# b2e8007cc3394dba86e73b78c0f3e9f5
msgid "In the meantime, Archetypes is the right choice for b-org (and for other membrane-based systems). What we will try to do, however, is to alleviate the aforementioned problems by making use of Zope 3 design techniques, in order to make b-org extensible and flexible."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1777
# b2ac131111594c87a6b36a679a510a74
msgid "5.5. The extension story"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1779
# ab415ede1758401bae2bcbaa147a5f2d
msgid "One of the main drivers behind the componentisation of b-org is that it should be easy to extend and customise for third party developers. We'll take a look at how such customisations may look, before considering how we made it possible."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1784
# db386c6cfc6d4f569321dd48dc620eb5
msgid "b-org ships with an example called *charity*, found in the *examples/charity* directory, which demonstrates one use-case specific implementation of b-org. This is quite simple, consisting of the following top-level files and directories:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1792
#: ../../reference_manuals/old/archetypes/appendix.rst:2106
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:82
# ee412946752b4318b338d37a273f32f9
# d4327ff520c4425cbb90be1672846d27
# 3657fa0299a34dc1a9c7169cc1c6804f
msgid "configure.zcml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1792
# 4cf4d8139dc349b9a713c5e5a77b36bf
msgid "Registers the schema extension adapters (see below) and references the browser package"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1797
# c26b251a44d84dcdafb11cf261c9f3de
msgid "Extensions/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1795
# 75613610697849edaef1a399c18a5470
msgid "Contains an *Install.py* script that configures the Factory Type Information for the Department, Employee and Project content types. It does so by using GenericSetup XML files, but invokes the import handlers explicitly rather than through a GenericSetup profile."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1801
# 0153a16914e1401e864037a0c803763b
msgid "Â browser/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1800
# 16c93d283ebe44ff9c085767573d5294
msgid "Contains Zope 3 views for the charity department, employee and project content types, and a *configure.zcml* to register these. More on views in a later section."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1807
# 5c247a0a0bc245b2b92604f6b5494aab
msgid "schema/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1804
# 1112fa731d3c4d28b559cfd179a780db
msgid "Contains adapters that extend the schemas for Departments, Employees and Projects with use-case specific fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1809
# 63d3df4aec8543af870e1d247fb8d5e3
msgid "To use *charity* you should copy or symlink it from *Products/borg/examples/charity*to *Products/charity*. It can be installed as normal, but you must install b-org first. See *borg/README.txt* for the full install instructions!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1814
# c8409664c2d04eca8e10d858d3310bf3
msgid "A key aim is to make it possible to meaningfully extend b-org without needing to subclass all its types. Of course, you *can* do that, but in most cases it's not necessary. Unfortunately, the mechanisms and techniques described here will be \"global\" in nature. That is, you will not be able to have two different modes of customisation for two different Plone instances in the same Zope instance. This is because prior to Zope 2.10 (which Plone 2.5 does not support - it wasn't out until several months after Plone 2.5 was released), the \"local\" components story in Zope 3 was not fully developed. There is also a specific problem with the way the schema extension mechanism works which makes it inherently global."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1826
# c238bf2446d54515a96a3c4c90683eda
msgid "When Plone 3.0 rolls around, it will support local components much better, and Archetypes 1.5, in conjunction with a third-party product called ContentFlavors (or possibly another similar tool), will enable the kind of extension story described here to work on almost any type. At that point, the forerunner you see in b-org now will be obsolete."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1833
# 959d20bdc35840df8e3a3b06e052be9d
msgid "Of course, if you don't need two different b-org customisations for two different Plone sites in the same Zope instance (which I suspect most people can work around - having two separate Zope instances of course isolates you from all of this), you should be fine."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1840
# c039d8fe467743b49cf4caa60669ec5b
msgid "The schemas extenders"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1842
# 2cc38c981f814156b3c65d96794ea8e3
msgid "If you look at *charity/configure.zcml* you will see the following registrations:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1851
# 678d0802cec946beafd58a66390ce306
msgid "These schema extenders are adapters that hook into a specific part of b-org. We will describe this in more detail later, but here is how they look from the point of view of the extending product:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1859
# d1819d06e0aa4c61986d36b28a808ceb
msgid "This example is *employee.py*. The other extensions are simpler, and work on the exact same principle. When calculating the schema of a content type, the b-org types (by virtue of *Products.borg.content.schema.ExtensibleSchemaSupport*, a mix-in class that all the b-org types uses, and which the aforementioned changes to Archetypes should make obsolete) will look up an adapter from the content object (which is marked with *IEmployeeContent*, in this case), to *ISchemaExtender*. This will be given the chance to extend (and modify) the schema of the type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1869
# f61453e493524cee8331287de56d24cb
msgid "The returned value is cached (to avoid an expensive re-calculation each time the schema is used). This cache can be invalidated upon an event, which you will see in *charity/Extensions/Install.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1884
# daa23cbc0e664bd684ab44fab726ec15
msgid "The event is an instance of a class that implements *ISchemaInvalidatedEvent*, and takes a class as an argument to know which class the schema is being invalidated for."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1889
# 536203c03b2b438eb9deb2bd79a8948e
msgid "Defining new views and type information"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1891
# 61afd86d22104374ac7520af2434b3d7
msgid "We have now managed to add new schema fields to Department, Employee and Project. The auto-generated edit form will pick these up for editing, but we probably also want some custom views. We may also want to change other aspects of the Factory Type Information (FTI) which controls how the type is presented within Plone's UI (an FTI is an object in *portal\\_types*). First, we define some views in the *browser* package. These are described in a later section, but lookin at *charity/configure.zcml*, you will see:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1905
# 1510136ccb9f4e8a8352f933949e7b82
msgid "This will bring in *charity/browser/configure.zcml*, which contains several directives like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1918
# 10f523421a3f49f7b4551302ee21b5bd
msgid "This, along with the class *Products.charity.browser.employee.EmployeeView*and the template*charity/browser/employee.pt* will make a view *@@charity\\_employee\\_view* (the @@ is optional, but serves to disambiguate views from content objects, for example) available on any employee (or rather, any object providing *IEmployeeContent*). We then need to tell Plone that this view should be invoked when you view an Employee object or click its 'View' tab. This is done by setting the *(Default)* and *view* method aliases for the Employee type. See `this page of the RichDocument tutorial <https://plone.org/documentation/tutorial/richdocument/actions-and-aliases>`_ for some background. To achieve this, we could modify *portal\\_types/Employee* in Python during the *Install.py* script. However, to make it easier to define the FTI, we use a GenericSetup XML file instead. Take a look at *charity/Extensions/setup/types/Employee.py*, for example:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1977
# ea880627fbcc431a8fc4098ccc87e98e
msgid "To learn more about HTML Tidy see http://tidy.sourceforge.net Please fill bug reports and queries using the \"tracker\" on the Tidy web site. Additionally, questions can be sent to html-tidy@w3.org HTML and CSS specifications are available from http://www.w3.org/ Lobby your company to join W3C, see http://www.w3.org/Consortium"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1983
# 516754813f2d4f0e8883ae6a1e36b435
msgid "This defines the various aspects of the FTI, and is basically a modified copy of the equivalent file from the b-org extension profile. You'll learn more about these in the section on GenericSetup, but for now observe that we invoke this explicitly in Install.py, via some boilerplate utility code: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1992
# cdb47ce1223f4ac7b1676d357f4a7dbb
msgid "This will update the FTIs by examing *Products/charity/Extensions/setup/types*. Each file there is named corresponding to the name of the FTI it modifies."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1997
# bc0bf577d41240858ca3385c4a45a875
msgid "Adding new functionality"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1999
# 14dd6950825c4a7fb708c04fffdd8e47
msgid "Extending the schema and modifying the FTI to support different views is probably enough for a large number of use cases. If you find yourself thinking \"I wish I could add a method to the Employee class to support ...\", take your left hand, hold it out, raise you right hand and slap your left wrist sternly, then read the section on adapters again. For example, let's say you wanted to send an email to administrators when a particular button in the view was clicked. You could do that in an adapter. For examples, in your *interfaces* module, you could could have: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2013
# 9af0032ae5584428b98b21a8b1b67b24
msgid "Then, an adapter from IEmployee in module *nag.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2019
# 8e1a16b2cb254433bd4384e7e54851b2
msgid "And finally, in your *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2025
# da88bd011b8f4aa194899e44addcdd36
msgid "Then, in the form handler that is about to nag the employee, you would do:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2032
# 28ccc3c475ec4da8a1cf1dd848c52427
msgid "Obviously, this is a somewhat contrived example, but hopefully you get the gist."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2036
# f090fa0a18094cd6b01d50c0fd8e7b7e
msgid "Modifying workflow and other configuration"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2038
# f8f6a148235d49a88adea57bfe1b9591
msgid "The b-org workflows are not special. In your Install.py, you could modify them or change the workflow assignments as you would any other content type. You can also use *CMFPlacefulWorkflow* to assign different workflows depending on context, if need be."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2043
# 02fac4539b2e4dcda9186fc75c54af20
msgid "Similarly, if you need to modify the behaviour of the Department, Employee and Project types in other ways, for example by modifying settings in *portal\\_properties*, you are of course free to do so. The intended pattern is that your b-org customisation product encapsulates the various settings and extensions that describe your use case."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2051
# b100b201463d43d39ad555c6654ce37e
msgid "Changing fundamental b-org behaviour"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2053
# 9a4cfe9fcc2e4b98b2c6989b04a1becc
msgid "Lastly, as you learn about b-org you will see how it uses adapters to hook into membrane. If you need to override its behaviour, you can add an *overrides.zcml* to your product, which is otherwise identical to a *configure.zcml* in format, but is able to override earlier registrations (such s those in b-org). For example, you could override the adapter from *IEmployeeContent* to *IUseRelated* to change the way in which user ids is assigned, or the adapter to *IUserAuthentication* to change the way in which authentication is performed."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2064
# 505feef11a7f47009b3b48df5bd3ea5c
msgid "5.6. Filesystem organisation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2066
# 3cc1643448374ba6807dd4c9c84a3b17
msgid "b-org attempts to adhere to modern ideal about how code should be laid out on the filesystem."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2069
# 0e62349921f449f1841131da8140bad1
msgid "In the Zope 3 world, the *Products* pseudo-namespace is frowned upon. In Zope 2, every extension module lives in the Products/ folder. This raises some obvious namespace clash concerns, but also separates Zope modules further from plain-Python modules. In Zope 3, you can install a module anywhere in your *PYTHONPATH*. For example, in Plone 3.0, there will be a module called *plone.portlets*, normally installed in *lib/python/plone/portlets*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2078
# b7a7ca2eb33849ca8fe77da97363ba84
msgid "For modules that need to act like Zope products (i.e. they need an *initialize()* method, they install content types, they register a GenericSetup profile or CMF skins or use an *Extensions/Install.py* method, say), this works in Zope 2.10 and later. It can also be made to work in earlier version of Zope using a product (ironically) called *pythonproducts*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2085
# f42b6dbe5cd54fd3a0cd83e3cd75454d
msgid "For the purposes of borg, we stick with the traditional *Products/* installation. It's nice to have imports like *from borg import ...*, but fundamentally, b-org is very closely tied to Zope (2) and Plone, so the re-use argument goes away, and that nice import syntax is not really worth the extra dependency and configuration."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2092
# aff0a4947bd2496b89c9cd9a53f3f257
msgid "One thing you may notice, though, is that the *borg* product is named in lowercase, in keeping with Zope 3 and Python naming conventions. Looking inside it, you will see the following key files and directories:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2101
# 6a47dd861e0743f1ae697574e40c08c2
msgid "\\_\\_init\\_\\_.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2100
# cf1fbf52ce2c4c39b83c9958e6966506
msgid "Initialises the Zope 2 product machinery, registers content types, the skin layer and the GenericSetup extension profile that is used to install b-org."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2103
# 7068833c3cd346378bb5a58d636ebc44
msgid "config.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2104
# 88f4f7b5b5be4f86b4d8f2215cc6072c
msgid "Holds various constants"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2106
# 4578bb022a424ba9b2178e53eb9776bb
msgid "Starts the Zope 3 snowball going. This references other packages with their own *configure.zcml* files."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2112
# cf554821f6af497fb150199c7244e4f4
msgid "content/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2109
# 9ca44e325edd4329bca921faccb2eeeb
msgid "Contains the Archetypes content types for Department, Employee and Project. Also contains some utilities, like *EmployeeLocator*, an adapter to find employees, two utilities used to provide vocabularies *AddableTypesProvider* and *ValidRolesProvider*, and the the schema extension mechanism in *schema.py*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2117
# b5489af2c0b840beb7650c9ef778e59a
msgid "events/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2115
# f1bb7305582542a3b6f98c2e8564397e
msgid "Contains event subscribers which modify ownership of an Employee object so that the employee user owns it (and can thus edit their own profiles, for example), as well as to set up the local workflow when a Project is created."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2123
# 8533d20284824c659ce9c0fd30e15e01
msgid "interfaces/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2120
# 96ffc8c2860d4019a8ebdf2dea553f88
msgid "Contains all the interfaces that b-org defines, in various sub-modules like *interfaces/employee.py* for the Employee-related interfaces. All of these are imported into *interfaces/\\_\\_init\\_\\_.py*, so that you can write *from Products.borg.interfaces import ...*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2126
# a78b49966a4a41c594ff77e8c16ddce0
msgid "membership/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2126
# 43079d7991d043d59aedeec9feb1d1bd
msgid "Contains various adapters for plugging into membrane which enable b-orgs user-and-group functionality."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2129
# 7a563bdabd60470ea32b2fbade89084e
msgid "pas/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2129
# efe6208c7d4a4b2b9e980aa29e8b9f8d
msgid "Contains a custom PAS plug-in which is used to manage the local roles for Project members"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2133
# f34a86a3006b4699be2cfe630616a187
msgid "permissions.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2132
# 0270a54d620d4d15b6633ada6e7ca5a5
msgid "Contains custom add-content permissions, so that the ability to add Department, Employee and Project content objects can be controlled by different permissions."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2136
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:72
# e0a8f5bbfc2241f6a76cc7b038aa406e
# fb2a60a19e1f4326ba68a9d7cc1eace5
msgid "profiles/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2136
# d5dabe6635ed4d1c9a418fa5c8e97ed9
msgid "Contains the GenericSetup extension profile that sets up b-org. This is registered in the *borg/*\\_\\_init\\_\\_.py*.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2140
# 92730060f81a4369b1455bb5f047c664
msgid "setuphandlers.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2139
# 5d55bcbb00b346fa9b497cdbc147232b
msgid "Defines a custom GenericSetup \"import step\" which configures aspects of b-org that cannot be expressed in the existing GenericSetup XML formats."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2147
# e4b066d3856440e7bf63ce005261d439
msgid "skins/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2143
# a114d58518db44b9bab67f7057a1bea9
msgid "Contains the borg skin layer, which is registered in *borg/\\_\\_init\\_\\_.py*. This contains only the b-org icons. These could potentially have been defined in a *browser* package using Zope 3 resources, but are included in a traditional skin layer to make them easier to customise using conventional methods. See the section on Zope 3 views for more details."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2149
# f5ac57c5d43f45e4896bf139f534f475
msgid "tests/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2150
# 5f3e3b89463a44ffba22dff2859e45d5
msgid "Contains unit and integration tests."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2153
# 551360f36ba8466ab610158e1413765f
msgid "zmi/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2152
# 716a3f34dcaf4f1d93ccb2f646cd50d4
msgid "Defines a ZMI page for adding the PAS plug-in, for completeness' sake."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2155
# 33ed862bde0f427daa168359eb83549b
msgid "You will notice that there are many directories, and many of these directories contain the same set of files - *employee.py*, *department.py* and *project.py*. This is a side-effect of the finer-grained components and increased separation of concerns that stem from Zope 3 design concepts. For products that act less as framework, the degree of separation may be lower, and thus the product may appear smaller. However, as you browse b-org's source code, it should become obvious why things are placed where they are, and how code is grouped together by logical functionality rather than a tight coupling to Archetypes content types."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2169
# b00d33a8c1304abd90a9d6455ee3573f
msgid "5.7. Interfaces"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2171
# 37a28cad48514a96bb4db585788a75d0
msgid "In Zope 3, everything is connected to an interface in some way. Sure enough, b-org has a slew of them. Getting the interface design right is often more than half the battle, so pay attention to this part."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2176
# d56678df97af4b55aa66fac8d27a6d7a
msgid "If you were trying to understand b-org without a comprehensive tutorial to hand, you would do well to look at the *interfaces* package. You will notice that this is subdivided into various files"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2185
# 816bd8223af840cfbc0ba6e910f3693c
msgid "interfaces/department.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2184
# fdb333df140f48a5be0745b954a95995
msgid "Contains a description of a department (*IDepartment*) and a marker interface for the content object that stores the department (*IDepartmentContent*)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2189
# b88e3ba4656242c282339395d07cd917
msgid "interfaces/employee.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2188
# 05b2bc82b2e149edb7987fb3d074fccb
msgid "Contains the equivalent interfaces, *IEmployee* and *IEmployeeContent*, as well as the definition of a specific event interface, *IEmployeeModified.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2193
# ae1284f5aacb4162bd6b74567a5d6e02
msgid "interfaces/project.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2192
# b790d8eddf554df28a41b881df4998cd
msgid "Again contains *IProject* and *IProjectContent*, as well *ILocalWorkflowSelection*, which is used to denote a utility that defines the placeful workflow policy that projects will use."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2197
# 27a1284f92304b9598f3e3943a1d1da4
msgid "interfaces/workspace.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2196
# bdfed8f14c034d5c8ccf44a66bdb9e75
msgid "Holds the interface *IWorkspace*, which is used by the local-role PAS plug-in to extract which users should have which local roles in a project."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2201
# 294713c7f683499fa7f04be02c0a729b
msgid "interfaces/schema.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2200
# 95ab970c47a343749bb465351618d73f
msgid "Contains interfaces relevant to the custom schema extension mechanism - *ISchemaExtender*, *IExtensibleSchemaProvider* and *ISchemaInvalidatedEvent*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2208
# ca54ecf9d09844de8e648a77cd2e783a
msgid "interfaces/utils.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2204
# 0503abdf00b041be9db484c8316dc8e4
msgid "Defines interfaces that are used as input to various vocabularies - *IEmployeeLocator*, *IAddableTypesProvider* and *IValidRolesProvider*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2210
# 54b3c0cda17b4ff1acbae58b4a3e20c8
msgid "In order to understand what each of these interfaces describes in more detail, look at the files above. Recall that interfaces are mainly documentation - these interfaces are accompanied by docstrings and generally self-documenting code."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2215
# cdd09f23924d4f449b7d862d90d952df
msgid "The various interfaces intended for public consumption are imported to *interfaces/\\_\\_init\\_\\_*.py, so that client code can write, e.g.:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2223
# 86c03ae7cdd5449a83fe4578a3141f6c
msgid "This is a common idiom. If you find yourself with too many interfaces to manage in *interfaces/\\_\\_init\\_\\_.py*, you don't necessarily need to do this, but it's probably a sign that you should be breaking your code into smaller packages! Remember that unless you have a particular need to depend on Zope 2, then you don't need to pollute the *Products* namespace with such components! (and even if you do, with *PythonProducts* or Zope 2.10, you can do without the Products/ namespace too). For example, we could have placed the employee functionality in a package *borg.employee*, found in *lib/python/borg/employee* as a plain-python library, possibly depending on Zope 3 components (i.e. packages in the *zope.*\\* namespace). Conversely, if you have relatively few interfaces, you can simply have an *interfaces.py* module without a directory."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2239
# 70c9fc790f6b41ff8ae61c776e3c632a
msgid "Separating Archetypes from real components"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2241
# 65a04b41832c4a179784a5e14b3cd171
msgid "One thing you may notice is that we have split the interface describing the concept of e.g. an employee (*IEmployee*) from the interface that describes the employee content object in the ZODB (*IEmployeeContent*). Whether this is always the right thing to do is debatable, but the reasoning goes something like this: Archetypes objects contain a very large API. Archetypes *schemas* and the infamous *ClassGen* generate methods on the content objects corresponding to schema fields, so that a field *name* gets an accessor called *getName()* and a mutator called *setName()*. This is all rather Archetypes-specific, and in Zope 3 schemas, we typically prefer simple properties (a *name* attribute) to pairs of methods. To avoid being constrained by the Archetypes when defining interfaces (Archetypes is just one implementation choice), we created *IEmployee* as follows: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2259
# f82e01e2a094459e81e4e863d017a3c1
msgid "To support this, we could put the relevant properties into the Archetypes content object, but this is cumbersome, since the *property()* declaration normally used to convert methods to properties will only work when those methods actually exist, not when they are created by *ClassGen*. Instead, we mark the content object with a marker interface, *IEmployeeContent* and then register an adapter to *IEmployee*. Strictly speaking, this is cheating, since the adapter makes assumptions about its context (such as which methods are available, and the fact that it uses Archetypes) that are not formally defined in the interface. To save excessive typing and retain some sanity in the interface definitions, it's not a terrible compromise though. Here's the adapter, from *membership/employee.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2276
# b0929d889282414c995ff934ff21a288
msgid "Now, you can write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2282
# 6bd40466ef6042b3a5aff1ad2f54840a
msgid "Another side-effect of this pattern is that we can separate things that are Archetypes-dependent from things that operate on the more general notion of an employee. For example, membrane generally makes assumptions about operating on Archetypes content objects, so the various membrane adapters adapt IEmployeeContent, whereas the view for charity employees is only concerned with \"real\" employees and so adapts the context to IEmployee."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2290
# 1b6893df57ce47eab8bcc5692d7e9776
msgid "This pattern is repeated for Departments and Projects as well."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2293
# 9d5043b055534b5fb8c74923b8909872
msgid "Interfaces intended for utilities and adapters"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2295
# ee2b0760d63d4464944b542a84c01d72
msgid "Although interface design should generally not be too concerned with how those interfaces are implemented, you will often think \"this is going to be used a a utility\" or \"this will most likely be an adapter\". In this case, you may want to make some reference in the doc-string at least. For example, the *ILocalWorkflowSelection* interface states: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2305
# c63e470f74cc43389a53dcc2804bb09b
msgid "Conversely, many interfaces are context-dependent, which means that most likely they will either be directly provided by a particular object or adaptable to it. Take the *IAddableTypesProvider*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2312
# c803d0279fee4db5953b0a7d31dcbcca
msgid "The implication here is that client code will do something like: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2317
# 1ec1a6cb3454472892c493ecc5f31b5e
msgid "Whether IAddableTypesProvider was provided directly by the context or (more likely) provided via an adapter is not important. The only time this distinction is really useful is in the case of marker interfaces, such as *IEmployeeContent*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2325
# d28293236eae4c7da5c430944c94f34f
msgid "These are often checked with *providedBy()*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2330
# 11899722fba44d1fb31ca646f4a6be75
msgid "Again, the guiding principle here is *separation of concerns*. The aspect of a component that can provide a list of addable types (*IAddableTypesProvider*) is logically distinct from (and could be varied independently of) the aspect of a component that specifies it represents a project (*IProject*), even though it so happens that at present projects are the only time we concern ourselves with restricting addable types. In the olden days, we would probably have put methods like *getAvailableProjectAddableTypes()*into the *Project* content type. Hopefully, you'll see why this is less optimal than having it in a separate component (hint: what if you in your customisation of b-org wanted to be much more particular about which types were addable?). You will hopefully start to pick up \"fat\" interfaces during interface design - if you had a neat *IProject* interface that described attributes of a project that were to be saved alongside the project object, and then found a couple of methods about defining addable types that were related to one another but not so much to the data of a project in general, you would hopefully reach for a new interface. If so - well done, you're getting there."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2352
# dd132221eaff45b2ac18f5c60c3a985b
msgid "5.8. Test-driven development"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2354
# 82aad769d50649e4a4a8a588b8c22218
msgid "Testing should come first, not last, when doing development."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2356
# 88fb6bce08d640ec957eb5f668ef669b
msgid "One of the greatest things that Zope 3 has established is a culture of test-driven development. Because Zope 3 components tend to be small and not dependent on a large framework or (typically) a running application server, tests are easier to write and execute faster. Most Zope 3 testing happens in the form of testable documentation - DocTests - which tell the story of how a component should be used along with testable examples."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2364
# d25a7f70e6ec4d26ab9f737d164c53e3
msgid "The `testing tutorial <https://plone.org/documentation/tutorial/testing>`_ explains the philosophy behind test-driven development and the tools and techniques available in Zope. It is **required reading** if you are not familiar with testing in Zope, and probably quite useful even if you are."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2372
# 895ce8304445460b8042b7fd4335ebb1
msgid "Testing strategy"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2374
# 4751a59c30054de9b91a27161a85baed
msgid "Tests were (largely) written against interfaces and stub implementations, before the actual functionality was written. One of the first test cases to be created was *test\\_adapters.py*, which simply verifies that the various adapter registrations are in effect. This is obviously an integration test (using PloneTestCase), since it is verifying what happens on a \"normal\" Zope start-up. You will also notice tests named after the three content types, *test\\_department.py*, *test\\_employee.py* and *test\\_project.py*. Each of these contains tests that verify the given type is available and can be instantiated and edited. This catches errors in Archetypes registrations or schemas. There are then further tests for the *membrane*integration and for the adapters to the canonical interfaces *IDepartment*, *IEmployee* and *IProject*. Lastly, non-trivial methods in content types and relevant adapters are given their own test fixtures. By being systematic and diligent with tests, many, many bugs were caught and dealt with before they ever hit a live system. Of course, this does not replace in-browser acceptance testing, which was also performed regularly. At the time of writing, there are no *zope.testbrowser* based functional tests for the user interface. That is regrettable - and this is an open source project after all, so feel free to contribute some!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2400
# 932dfee4a0364b928a5bc48106d28887
msgid "Test set-up"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2402
# 025057b2437b4f278c3eb57bc9f0d38b
msgid "You will find b-org's tests in the *tests* module. Most of these use are DocTest integration tests, using PloneTestCase. Make sure you use a recent version of PloneTestCase (or svn trunk) since there have been some recent changes in how Zope 3 components (or rather, ZCML registrations) are loaded for test runs. The upshot is that with PloneTestCase, things should \"just work\" for integration testing - components you have defined in ZCML in your products will be loaded as they would when Zope is started."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2411
# 72cdce80c2a247908a0078a5774b7036
msgid "The file *base.py* contains an insulating base class for b-org tests, called *BorgTestCase* and its sister-class *BorgFunctionalTesetCase*. When imported, this file will trigger the setup of a Plone site with the *membrane* and *borg* extension profiles installed, as such:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2422
# 9b97384536134141ac1861b0fe2a6033
msgid "Integration and unit tests"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2424
# 7c04f9324ed94fdf9563c34bb0f5fbfd
msgid "Most of the tests are integration test that are set up like so:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2430
# 301460636e82460d80d3e0c02c136329
msgid "There is also a plain-python (no loading of Zope necessary, which is much faster) unit test for the password digest in *test\\_passwords.py*. This is appropriate because the functionality under test does not depend on the Zope application server or database being loaded. Use plain-python (or perhaps rather, plain Zope 3) tests whenever you can to reduce interdependencies and test load times:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2442
# f54236ed0ec940bfa85b030224dd13ad
msgid "The functions *configurationSetUp()* and *configurationTearDown()* are defined in *utils.py* and are used to load specific ZCML files that enable the test environment to function. This is necessary because without PloneTestCase's integration test layer in effect, there will be no compnent registrations when the tests are run! This may be more cumbersome (though in reality, the same set of components tend to be used), but also allows better control over the environment in which test are run, in addition to (much) faster test execution times."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2452
# eae49548647e4f57a113b7a95d70be28
msgid "From *utils.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2458
# b15b21237625410bac06babc29658bd2
msgid "You will also find a regular unit test in *test\\_setup.py*, simply because this was quicker to write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2465
# 1e23e61d8dc84caaa6c66cfb29c80d5d
msgid "Finally, there is an docstring DocTest for the *ExtensibleSchemaSupport* class. This is because this class if largely standalone (it probably shouldn't be b-org at all, but in a more general module, except Archetypes will gain similar functionality of its own for Plone 3.0) and the test provided important documentation in the class' docstring."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2472
# ed4cff1e021a4814afef2cfe65f56caa
msgid "The class looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2478
# dc9fff5737b84ca188f640a6d298603d
msgid "And the test runner, in *test\\_schema.py*, contains:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2485
# 60f0dbbb212d4d0ba1b1adb4c9713084
msgid "5.9. Setup using GenericSetup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2487
# e35fc2324d6d425f86a8aa3d5fad49d4
msgid "b-org uses GenericSetup to impose itself on your Plone instance. Here's how it works."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2490
# 2a72cca677304d268808015909145a0f
msgid "Hands up if you have ever written a workflow definition in Python and tried to figure out how to install it in your *Extensions.py* and thought, this is the least useful API I have ever had to deal with. Actually, the API is not that bad, it's just not very good for performing set-up. Similarly, it may start to make your separation-of-concerns-brainwashed mind a little uneasy that we tend to define aspects of the type's configuration as class attributes in an Archetypes class (though of course it's better than using a CMF FTI dict or mangling *portal\\_types* directly)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2500
# f30ef6d30e2640dfa431f1534c659a92
msgid "The fine folks who gave us the CMF came up with another way, called *GenericSetup* (after a few name changes - you may see the names *CMFSetup* and *ContentSetup* as well, which refer to predecessors of what is not GenericSetup). This is based on a declarative XML syntax that can represent site configuration. The configuration of an entire site is called a *profile* and can be imported and exported to replicate state across multiple Plone (or CMF) sites. There is a smaller version of a profile called an *extension profile* which can be used to extend a base profile. Both membrane and b-org use extension profiles to install themselves."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2512
# 161db85f3ddf4d6980fe65dab00b6ea4
msgid "GenericSetup is described a `tutorial <https://plone.org/documentation/tutorial/understanding-and-using-genericsetup-in-plone>`_ by Rob Miller, cheif GenericSetup protagonist, so we won't repeat too much of the detail here. However, you should be aware that in Plone 2.5, GenericSetup has a slightly awkward user experience and does not have any well-defined way of performing uninstall, which stems from the fact that it was originally designed for the use case of taking a snapshot of the configuration of an entire site, not for installing and uninstalling products and extensions!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2522
# 39f74885814f44b4b01769412007fd6c
msgid "The other main shortcoming at the moment is that there is no way to specify interdependencies between profiles. It is important that membrane is installed before b-org, but if you're not careful it will happen the other way around. When you create a Plone site, you will be able to choose a number of extension profiles to apply (including meaningless ones like *Archetypes* - meaningless because Plone already invokes those when you set up a site). In this list, \"Base organisation\" comes before \"membrane\" by virtue of alphabetical sorting. Therefore, you can't just choose both and click \"Add\". Instead, you should select \"membrane\" first, and then add \"Base organisation\" via portal\\_setup, as described in the b-org *README.txt:*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2536
# b47c59460d384c949f4ab3e2fc3265c9
msgid "Go to *portal\\_setup* in the ZMI"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2537
# 75109ba8dca04651a9d91c4548580ef3
msgid "Click the *Properties* tab"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2538
# e1cd57dc19ef4f1cab3de866c2e21ca5
msgid "Select \"Base organisation\" as the active profile (since this is an extension profile, it won't override the base profile that set up your Plone site) and click *Update*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2541
# 25105dd81cd24d4783d0a27132400462
msgid "Go to the *Import* tab and click *Import all steps* at the bottom. Note that although it seems like this will re-install a whole bunch of stuff, it will only execute those steps that are actually listed in the *import\\_steps.xml* for the *active profile*, which in this case is b-org's."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2547
# edeaba403898478589dddcf3304b41a7
msgid "If you didn't already set up membrane and you created a Plone site without the membrane extension profile, follow the same steps to install membrane *before* you install b-org. So why did we do all this? Firt of all, both membrane and b-org are really infrastructure that fundamentally influence how you build your site, so the lack of uninstall isn't as bad as it would have been for more user-facing products. Secondly, with Plone 3.0, this will become easier, as the QuckInstaller (and hence the *Add/Remove Products* control panel page) becomes Extension Profile aware and gives some uninstall support. At the end of this section, you will see how you can use a traditional QuickInstaller *Install.py* method and still get the nice XML syntax, with a bit of extra work."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2562
# e05a1cd9f7e14094ab9e0b94d89a8a9e
msgid "Import steps"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2564
# 7d25b5a4caf84fbcba781c37d762c731
msgid "To GenericSetup, the installation of a third party product via an extension profile is considered to be the *importing* of that profile. A file *import\\_steps.xml* is used to determine which actual import steps will be executed. First, we need to tell GenericSetup where the import steps are defined, though, by registering the extension profile. This is done in the product's *\\_\\_init\\_\\_.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2576
# 157bc352fe4e49e0a7615900e319d35f
msgid "This references the directory *profiles/default*, which contains various files:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2581
# c138ec19ddac4fe98d914f4751105bac
msgid "import\\_steps.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2582
# e2a052dd30124b569d362b4523e0b0a2
msgid "Lists the steps to be performed during import (set-up)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2585
# 5590455e8e2a4ab1975ce669d1809735
msgid "export\\_steps.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2584
# b19caa63adb743e1a439baf8d129961b
msgid "Lists the steps to be performed during export - that is, if the configuration is changed in the ZODB and the site admin wishes to export the configuration to a file, these steps will be performed."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2587
# 77985c1662ef4e748dfc3943f0fdd666
msgid "membrane\\_tool.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2588
# 82a9ac00a6d848c289750212132b76fb
msgid "Configuration for membrane tools"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2589
# b44ee124f41b4e93bb929233d71964a3
msgid "skins.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2590
# 7b7192120c6d414aaabda764e6c28220
msgid "Sets up skins in portal\\_types"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2596
# fb8594b6fc7843448fd4cc975ffbf4c6
msgid "types.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2592
# fb463da635de44c9a0948351c2314f60
msgid "Configures FTIs (Factory Type Information settings) for the content types that b-org ships with. Each of the types listed here has a corresponding file in *profiles/default/types* (the name of the type and the name of the file should match). This file contains all the various FTI settings, such as friendly name, meta type, actions and aliases."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2603
# 0b5380a5bf15465a89c211f39241b3f6
msgid "workflows.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2599
# 2e18635422ab4a8d9dd5cec3d9797655
msgid "Configures workflows. This works in the same way as *types.xml* - the main file configures the names of the workflows and the bindings of workflows to content types. The actual workflow definitions, including states and transitions, are found in *profiles/default/workflows*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2605
# b56b98eb6ea447e981ed9fb38ad50a13
msgid "The *import\\_steps.xml* which orchistrates all this looks like follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2613
# bb92cdb1ee9b43d8ab1340ad1c914d6d
msgid "Note that we don't actually specify most of the files - they are referenced by the *base profile* that was used to set up Plone or the extension profile for membrane. GenericSetup knows all the registered profiles' steps, and looks for the corresponding files."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2619
# 3cf0493fd46f4d86bfc05c5e1b50f445
msgid "Various setup handlers"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2621
# 791f4567188e420fb6ec09be7246abd4
msgid "The one setup handler you do see is the \"various\" handler. This is dependent on the set-up of type info, skins and workflow. Ordinarily, setup handlers will utilise GenericSetup base classes, adapters and utility functions to parse XML files. However, it's not always convenient to invent a generic XML syntax for all types of configuration. The *importVarious* pattern is used by many products that need to perform some custom set-up in Python. It is invoked as if it were a handler for an XML file, but it just happens to have different side-effects. The main caveat with this type of set-up, of course, is that it cannot symmetrically export (and then re-import) the configuration, and it is more difficult to re-use."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2634
# 81c0ca4e458843f68fba707fdc6302c9
msgid "*importVarious* looks as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2640
# 409e38dc2fec41b6a0ce284400c3c048
msgid "We set up the PAS plugins, register our types with *portal\\_factory*and add a placeful workflow policy. The exact code to perform each of these steps is not listed here to save space, but they use the same techniques you would use in an *Install.py* file. Note that the *portal\\_factory* setup is available in a more friendly XML format in Plone 2.5.1 and later, which was released after b-org."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2649
# 9617f1bc9bf34f84a1638dadc45e720a
msgid "GenericSetup without portal\\_setup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2651
# b1030f532d204119b691715fa6ad1e05
msgid "When Plone 3.0 arrives, it will make the *Add/Remove Products* control panel aware of extension profiles, and thus provide a more user friendly way of performing install using GenericSetup. It will also support uninstall. Until that time, however, it is possible to re-use the GenericSetup XML handlers to parse files like *types.xml*Â  and *workflow.xml* from a regular *Install.py* installation. We do this in the *charity* example. When importing, GenericSetup requires a setup environment, and usually an object to work on. A simple *SetupEnviron* is found in *charity/Extensions/utils.py*, along with a method called *updateFTI()* which can take an FTI object and update its settings based on a *types.xml*-like file. This method takes a module and the id of an FTI to update, and finds the corresponding file. It is used in *charity/Extensions/Install.py* as follows: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2669
# 07e7ae35c910459c86c174e183c3fbcd
msgid "The relevant files may be found in *charity/Extensions/setup/types/*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2673
# a3270df38efe4ff5a0f6af4051e49baa
msgid "5.10. Using membrane to provide membership behaviour"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2675
# b18136c981a74623b6aab26fb85d0df9
msgid "How b-org uses membrane to let employees be users and departments be groups"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2678
# 8d3a586741af4613ac99d5dd93f922a2
msgid "Since version 2.5, the user management infrastructure in Plone has been replaced by PAS, the Zope Pluggable Authentication Service, and PlonePAS, a Plone integration layer for this. PAS offers several advantages over plain user folders, mainly in terms of flexibility. Unfortunately, it is also more difficult to work with through-the-web and has a very decentralised API, based on the notion of plugin components, that can be difficult to understand at first."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2687
# b2a78a7fc925409d8bebf6af7543e8ef
msgid "Membrane (or rather, *membrane* with a lowercase m) is a component first developed by Plone Solutions and later improved by Rob Miller and others. It is similar to *CMFMember* in that it can turn content objects into users, although it is less concerned with replicating existing Plone functionality and more concerned with making a thin integration layer to plug into. It therefore fits b-org very well."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2695
# 7485fbad495c498e83c62315b08ca620
msgid "Membrane works on Archetypes objects (though theoretically it could be used with other objects as well). It adds a tool called *membrane\\_tool* which contains a registry of content types that are member- or group-sources, as well as a special catalog. Using the Archetypes catalog multiplex, it is able to catalog objects (which may also be cataloged in *portal\\_catalog*) and find them again based on various interfaces (that is, it catalogs the interfaces provided by an object). membrane provides a number of PAS plug-ins that will search this catalog when looking for users and delegate to the content objects (or rather, adapters on the content object) for obtaining user information, performing authentication and so on."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2709
# 17687b83db2a4d39b52914464a0bdea1
msgid "Registering with membrane"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2711
# d9f07a1188ee4d118aadcaaede0e2666
msgid "*membrane\\_tool* contains an API for registering content types as membership providers, but the easiest option is to use a GenericSetup profile (see the section on GenericSetup for the full story). In *profiles/default/membrane\\_tool.xml*, you will find: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2719
# 556525f032684376b62ee1b4db324291
msgid "This registers the three content types (by their portal type), and specifies the workflow states in which they are \"active\" as member and group sources."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2724
# ca77fcf0d1164cf288552e1275e9db3c
msgid "Applying marker interfaces"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2726
# 64ecb92f37934b308e805a98fd578ee9
msgid "When looking for content objects that provide group and member information, membrane will use a number of marker interfaces that indicate support for various types of behaviour. These are implemented by the three content type classes. In *content/department.py*, you will find: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2735
# 32812f0ec7ed41d3b25b054dab6778c2
msgid "All this means is that the Department's schema is capable of providing properties to PAS. Properties (normally related to users, but groups can have properties as well) are just metadata about the user or group. Membrane supports as PAS properties plugin that will look for Archetypes schema fields with *member\\_property=True* set and report these back as user properties. Although *Department* does not use any such properties at the moment, we add this marker so that extension modules that use the schema extension mechanism can benefit from this. The equivalent setup for Employees, in *content/employee.py*, is a little more interesting. ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2750
# 6fdc10130a9944d98c269b01133999f0
msgid "Here, we are saying that:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2752
# d79e6eb587a54587b3ce1399a30b59fc
msgid "An Employee can be used as a source of authentication (i.e. as a user), since it is marked with *IUserAuthProvider*. Note that the actual authentication is performed by a different adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2755
# 16adeeb53e4c420984b83ed1e719764f
msgid "An Employee can provide user properties to PAS via membrane, following *IPropertiesProvider*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2757
# 7fe21b8fbf8a44b7a41034df7a79c56d
msgid "An Employee can be part of a group, because of *IGroupsProvider*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2759
# cedef33c92064cacab972967d90d3823
msgid "An employee can be given roles. There is an *IRolesProvider* interface that we cold use for basic role awareness. The *IGroupAwareRolesProvider* is a sub-interface that will cause membrane to also look at the user's groups."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2764
# 2272a45376b444209f991c12a2e61378
msgid "The *IAttributeAnnotatable* interface is part of Zope 3's annotations framework, discussed in a later section. Projects does not require any particular marker interfaces."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2769
# 543afc2fb3dc4c98ab41b8b76ca52be0
msgid "Providing membership behaviour"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2771
# d7f07ae43622469580402055914ee0f4
msgid "When membrane looks for objects to provide membership-related behaviour, it will not only look for objects directly providing a particular interface, but also for objects that can be *adapted to* that interface. For example, the presence of the interface *IGroup* informs membrane that an object can act as a group, and contains methods that describe the members of that group. Of course, we could have declared that *Department* implemented *IGroup* and written these methods directly in the Department content object. Hopefully you'll agree now that this would not be optimal, since it mixes the content-object aspect and the group-behaviour aspect of Department into a single monolithic object. Instead, we will use an adapter, which also means that if you require different behaviour in an extension to b-org, you have only to override the adapter, leaving the core content object alone. In *membership/department.py*, you will see: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2791
# a015f40016d143efbb612e9aeb6b3bbf
msgid "Mostly, this is about examining the Department content object to find roles (which are listed in an Archetypes field, editable by the Manager role). When calculating roles, we make sure that we don't give roles if the Department group-source is actually disabled (by virtue of its workflow state and the settings in membrane\\_tool). The group title and id are taken from the object as well. The most interesting method is *getGroupMembers()*. Here, we perform a search in the *membrane\\_tool* catalog for objects adaptable to*IMembraneUserAuth*. This interface is the basic interface in membrane describing things that can act as users - there is an adapter from *IUserAuthProvider* to *IMembraneUserAuth*. We restrict this to objects inside the Department object. The net effect is that all Employee objects inside the Department are returned. Now, let's say you had a need for a Department which in addition to acting as a group for all members inside it, also allowed some members from other departments to be in that group. In this case, you could use a schema extender to add a *ReferenceField* to the schema of Department that allowed the Department owner to reference other Employees. You would then provide an override adapter, perhaps subclassing *Products.borg.membership.department.Group* but overriding *getGroupMembers()* to append the ids of the referenced users as well as the contained ones ... or instead of, depending on your needs. As it happens, Projects also act as groups, with members being assigned by reference, using two reference fields - one for project members, and one for project manangers. Here is the equivalent adapter from *membership/project.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2824
# 3a72b3cf98bc4bfab8eaaedd609f499f
msgid "As may be expected, the membrane adapters for *Employee* are a bit more involved. They consist of the following:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2830
# d43f77ffc25040eb9bc371f2812a972d
msgid "IUserRelated adapter"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2828
# fe4a22b8da04466cb4845b6965acdfb6
msgid "Provides a user id for employees. Note that user ids and user names are possibly different when PAS is used: the user id must be globally unique; the user name is the named used for logging in."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2834
# 2d5ae711948742038745c63ba71dbc48
msgid "IUserAuthentication adapter"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2833
# 88e35c90f5dc441786867877e04f830d
msgid "Used to perform actual authentication by validating a supplied username and password."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2837
# 52093404b396429c84a81a2ff44a7294
msgid "IUserRoles adapter"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2837
# 0d2103b6be0a4f20a5a55c06c97931b7
msgid "Used to determine which roles the particular user is given."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2841
# 6f3792464c944f12b9407a31467fea0f
msgid "IMembraneUserManagement"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2840
# 55b2a999af7847428c1384dae8b3cfe5
msgid "Used by membrane and Plone's UI to deal with changes to the user, such as the adding of a new user (not implemented here, since we"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2843
# abced7b2a32d40ba97fa5afdc84e0894
msgid "All these adapters are found in *membership/employee.py*. The *IUserRelated* adapter is the simplest, as it simply invokes the user name. Note that by default, membrane will use the Archetypes *UID()* function as the user id. This is sensible, but unfortunately Plone's UI (and that of third party products) is not always aware of the distinction between user id and user name. Ideally, only the user name would ever be displayed, the user id being an internal concept, but in practice you may end up with things like member folder names that are long, unfriendly UID strings. Sometimes this may even be unavoidable in the general case, because it's possible that two different sources of users could use the same user name for two different user ids! For the purposes of b-org, however, we assume user names are unique and well-defined. The adapter is therefore quite trivial: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2861
# 962b73bc2bd24d07a27e2ed86a3f5ec6
msgid "The id of the content object that represents the employee is used as the user id. This is also used as the user name, as defined in the *IUserAuthentication* adapter: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2868
# 9f4b3dcd3df74a4ca98f0af7f3e6fa81
msgid "In the *verifyCredentials()* method, the adapter is passed the login and password as entered by the user in a dict (*credentials*) and then compares those to the values stored on its context (the Employee content object). The password is stored as a SHA1 digest in an annotation to make sure it cannot be read back by examining the content object - more on this in the section on annotations. Be aware also that the *IUserAuthentication* adapter is called on every request after a user is logged in and can deny access for whatever reason by returning non-True. This means that it is important that the method is as efficient as possible - expensive database lookups, for example, are probably not a good idea here! The *IUserRoles* adapter is trivial. Roles are stored on the content object in a field that is editable only by managers. Of course, we could have picked roles from some other rule if necessary: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2887
# 30fa4857da274b74a4dd57bfa41f4e35
msgid "The *getRoles()* method returns an iterable of strings representing applicable roles. Note that depending on group membership (and the *IGroupAwareRolesProvider* marker as described above) and local roles the user may in fact have more roles than what this method returns! The *IUserRoles* interface is concerned only with global roles intrinsic to the user. Finally, we have the *IMembraneUserManagement* adapter. This lets membrane know what to do when it is asked by Plone's UI to add, edit or remove users. In particular, the *doChangeUser()* method enables the *PasswordResetTool* to do its magic. Note that we have not implemented *doAddUser()*, because there is no well-defined global policy for where the actual *Employee* content object should be added! Recently membrane has gained some functionality whereby a site-local utility providing *IUserAdder*** from membrane can be queried for this policy. That may be useful for b-org extension products, but b-org is still not in a position to make a general policy for this, so it is not implemented out of the box. ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2908
# 607d59f6ddf244a5b13e4ceb81e59f3d
msgid "That's it! Through these adapters, the three b-org content types are able to act as sources of groups and users. Hopefully, you will appreciate the flexibility of the separation of concerns into adapters for things like editing user properties, determining user id, calculating roles and performing authentication. If you extend b-org, you can provide a more specific adapter to any of the above interfaces to customise the membership behaviour."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2917
# 135691e7b9fa46c9894e934e3995d217
msgid "5.11. Writing a custom PAS plug-in"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2919
# d47b000fcc2a458d9411cbabecedacb2
msgid "Projects require that members are given particular local roles within a project space. This is achieved using a custom PAS plug-in."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2923
# 572e0091c7a74be79b6039aad0aba2cf
msgid "PAS was introduced in the previous section on *membrane*. Truth be told, it can be a bit of a jungle of plug-ins and delegation because it is so very generic. Luckily, Plone (and membrane) takes care of most of the complexity for us. Sometimes, however, it is desirable to influence the authentication and role management at a lower level."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2931
# f11aef40d43941a98719a9bc95e019a1
msgid "Workspace adapters"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2933
# 7aef77e4ec4044db9d3fe64d1790026e
msgid "b-org ships with a bit of framework, adapted from some similar code in an unreleased version of *teamspace* by Wichert Akkerman, which can provide local roles in a \"workspace\" - in this case a Project. It relies on an adapter to the *IWorkspace* interface to determine the mapping of users and roles in the particular context. Before showing how this plug-in is written and registered, however, let's look at how it is used by a Project. In *membership/project.py* you will find: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2945
# 377ffc1571ae4a4da2ba3313a37e738e
msgid "This queries the lists of managers and members assigned (by reference) to the project and specifies that both managers and members should get the role *TeamMember* and managers should also get the role *Manager*. As it turns out, this behaviour is also useful in Departments, which can be given one or more department managers by reference. The idea is that department managers should be allowed to add and remove Employees within that Department (recall that *Department* is a folderish container for *Employee* objects). The analogous adapter in *membership/department.py* reads: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2959
# a25c57844a834188ae900ebf8a9b90c3
msgid "Thus, a container wanting to use the PAS plug-in we're about to see to manage local roles only need to be adaptable to *IWorkspace*. In fact, this whole machinery ought to be factored out into a separate component, possibly sharing code to *teamspace*, another product which provides similar functionality. Mostly, this is down to laziness - creating another product (with all its boilerplate) and managing another dependency in the *Products* folder seemed too onerous when b-org was being developed. Hopefully, with Zope 2.10/Plone 3.0 and a growing preference for plain-Python packages and \"eggs\", it will seem a little less of an obstacle to split products up into multiple smaller pieces. So much for making excuses."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2973
# 40d45036b7924d25a44897cebcae031b
msgid "The plug-in"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2975
# d0f7bf5468df49ab80347ce53be3f0ad
msgid "The PAS plug-in that uses the *IWorkspace* interface can be found in *pas/localrole.py*. It looks like this: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2981
# f49facb1c21c4711b1d4329760d83ff1
msgid "On first glance, there is quite a lot going on here, but it is not so hard to understand. First, we define a good old-fashioned Zope 2 factory and ZMI add form. This is good practice, because PAS plug-ins can be managed via *acl\\_users* in the ZMI. If you find yourself wandering there, however, remember to bring a torch and keep a trail of breadcrumbs to find your way out. A backup wouldn't hurt either if you try to change things. It is, unfortunately, not the most intuitive of interfaces. We will see how the plug-in is registered and activated in a moment, but first notice that the plug-in implements an interface, *ILocalRolesPlugin*,Â  which is defined by PlonePAS, the PAS-in-Plone integration layer. This defines methods that will be called by the PAS machinery to determine, in this case, local roles. Note that this is *not* an adapter (perhaps it would have been if PAS had been invented in Zope 3, though Zope 3 has its own authentication machinery that is evolved from PAS and works slightly differently). When created, the *ProjectLocalRoleManager* is an Zope 2 object that lives in the ZODB in *acl\\_users*. The methods of the *ILocalRolesPlugin* interface are fairly self-explanatory in purpose. They allow PAS to extract the local roles for a particular user in a particular context (*getRolesInContext()*), to check whether a user in fact has one of the roles required to access a particular method attribute in a particular context (*checkLocalRolesAllowed()*), and to get a map of users-to-roles in a particular context. The complex parts are, as often is the case, concerned with acquistion. The helper method *\\_findWorkspace()* attempts to walk up the object hierarchy to find the first possible *IWorkspace* (it will only consider one) to get hold of the appropriate *IWorkspace* adapter that is then used to determine the actual roles that apply, as above. Without walking up the content hierarchy, it would not be possible to let the local roles of a particular project apply when in the context of a piece of content *inside* that project (i.e. a sub-object of the folderish *Project* object). There is some reasonably hairy acqusition-juggling going on in the \\_*chain()* method to return this chain as a generator. The hairiness comes from the fact that the thing that is being checked may in fact be a method that is being accessed, and aqusition chains can get themselves in all kinds of knots, especially when Five is in the mix. Lastly, we need to declare a *ClassSecurityInfo* and call *InitializeClass* to get Zope 2 to play ball."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3025
# 9a51cf2e5b054851bc05ff47b542e85c
msgid "Registering the plug-in"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3027
# c156791f88024e4386bdefed8807efd9
msgid "To be able to use this plug-in, we must first register it with PAS. This is done when the product is loaded, in *borg/\\_\\_init\\_\\_.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3033
# c8eefbbff72f410a937dab9f452f89d4
msgid "This is similar to how CMF content types are initialised with *ContentInit().initialize()* and *context.registerClass().* In other words, copy-and-paste and the less you know the happier you will be. By registering the plug-in, we could now ask our users to instantiate a *Workspace Roles Manager*within *acl\\_users*.... er... somwhere. Like we said - not necessarily obvious. Better to do it once, in the setup code for b-org. Please refer to the section on GenericSetup to learn how b-org is actually installed, but notice that the relevant code is in *setuphandlers.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3047
# c77da5fbae094e429982968b7bae3417
msgid "All we do here is get hold of the factory dispatcher for the user folder (from *manage\\_addProduct*, which has something to do with that *registerClass* call for the *WorkspaceLocalRoleManager* seen in the previous code example, but like we said, it's dont-ask, don't-tell) and if it is not there already, we create an instance of the plugin using the factory. We then need to activate it so that it actually takes effect. *out* is a StringIO output stream used for logging."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3057
# fc024ce78bdf476e9d4f81d3668aa548
msgid "5.12. Placeful workflow"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3059
# 43b8cd50e42d47fbb84c1985896c75ed
msgid "b-org uses CMFPlacefulWorkflow, which ships with Plone 2.5, to manage the workflow of content objects inside a project."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3062
# 536dcd0b284a42e8a0aaf7852b840b2d
msgid "Placeful workflows are based on the concept of policies. You can think of a policy as a mapping of workflows to types, in the same way as you could control from the *portal\\_workflow* tool. Policies are created, normally by copying an existing policy (possibly the default, global policy), and then applied to a context. In Plone, this can be done using the *policy*option in the *state* menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3069
# 104654882e1c4d09a3f3a8b9f42bc3e5
msgid "Placeful workflows are used in b-org Projects. Inside a project, project members should have elevated view and modify permissions over content. This is achieved using the following technique:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3074
# 13c40fa2a0ac4316a713dbbf832e89a0
msgid "A new role *TeamMember* is made available within any Project*.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3075
# 23ee507a21b141d29b4082f637d22db1
msgid "A custom workflow, *borg\\_project\\_default\\_workflow* is a customisation of the default Plone workflow that has a simplified set of states and actions, and is aware of the *TeamMember* role."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3078
# 2bcf477a54154697b6520e58c53dfbda
msgid "A placeful workflow policy sets the default workflow, as well as the workflow for folders, to this one."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3080
# b313702ffa204a4497a89612d79fede3
msgid "When a Project is created, this placeful workflow policy is enabled for the project."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3083
# f25da60c4793415cbbb0fb0ae5602278
msgid "The custom workflow is defined using *GenericSetup*, in *profiles/default/workflows/borg\\_project\\_default\\_workflow/definition.xml*. You can of course install your own workflow if necessary. The workflow policy is set up in the *importVarious* setup step, in *setuphandlers.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3093
# f4b4a450a1e5458f938a2c345fb8dc21
msgid "Again, you could add a different policy if you needed different settings."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3096
# e422830f19e34981b8547777af633118
msgid "Finally, we apply the policy when a project is created. We will see how this is set up when events are covered in the next section, but the relevant code is in *events/project.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3104
# eb7ae9e79d194a02a0e6055922d1de53
msgid "Here, the local role is added to the newly created project instance (it is not made global so as not to pollute the global roles list), and the policy is associated with the contents of the (folderish) project object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3109
# b4d275c6ba92410fa6aa201ba4f43fb6
msgid "Note that we do not hard-code the name of the workflow policy! Instead, we ask a utility called *ILocalWorkflowSelection*. This could be overridden using a local utility, but the global one references the policy created above, as defined in *DefaultLocalWorkflowSelection*. This utility is registered in *events/configure.zcml* as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3121
# 2bb8587ed936451a83ac5f0464940e56
msgid "5.13. Sending and handling events"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3123
# f10fa40efe294aac8c8fa130068e0650
msgid "Events is undoubtedly one of the most useful things that Zope 3 brings to the Zope 2 world. Here's how b-org uses them."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3126
# 0b63865001e849ab9d70b0f118fb4bc9
msgid "In the previous section, you saw how an event handler was used to apply a placeful workflow policy to newly created projects. This pattern is quite powerful - instead of needing to subclass *Project* just to add something to *at\\_post\\_create\\_script()* or *initializeArchetype()*, say, you simply register an appropriate event handler. This pattern can of course apply to other situations, such as when objects are modified, deleted, added to a container, or on any other type of event that may occur in your system. Events are synchronous, so when code emits an event, it will block until all event handlers are finished."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3137
# 49632a7cc9b04d34b0bb0fcccc4cdcd7
msgid "Recall the event handler for adding projects. It can be found in *events/project.py* and has the following signature:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3145
# a3b329e2ad8d457ea997ba8fbacbc24f
msgid "The first argument is the object the event was fired on, the second is an instance of the event itself. In fact, this two-part event dispatcher is a special case of events described with *IObjectEvent* and its sub-interfaces. Internally, Zope 3 catches all *IObjectEvent*s and re-dispatches the event based on the object that is passed along the event instance. The registration for the event handler in *events/configure.zcml* looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3160
# 40801acfd35a4c8e93261a9238192f04
msgid "Note that there are two interfaces the subscriber is registered *for* - the object type and the event type. These must be separated by whitespace, though a newline like above is customary. This is the same syntax that is used to explicitly define multi-adapters (if you are not using the *adapts()* syntax in an adapter class) - in fact, the events machinery uses the adapter registry internally to map subscribers to events when they are fired."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3168
# 018c1aa7807a46328880dfe01759f24e
msgid "A more general-case event can be found in *events/employee.py*, which takes care of assigning ownership of an *Employee* object to the user that is tied to that employee. The code is borrowed and adapted from *PloneTool*, but notice the signature which only includes the event:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3182
# a900b431c23a40da8a1a927893b75e56
msgid "The registration in *events/onfigure.zcml*is similar to the one above, but only uses one *for* interface:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3192
# 84139d04f0474d6eb0f61dd9aef868cd
msgid "Sending custom events"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3194
# 95893cf35e27407c85ca09c3cfe7bf63
msgid "You will notice that the *IEmployeeModifiedEvent* is a custom event. In Plone 3.0 (or rather, Archetypes 1.5) this won't be necessary, because Archetypes will take care of sending an event derived from *IObjectModifiedEvent*, which in turn derives from *IObjectEvent* and thus is subject to the same registration as the *IObjectAddedEvent* that includes the object type and the event type. For now, though, we need to send the event ourselves."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3202
# 8cad73ab39c14af1b6d8cbe963121bb8
msgid "The event is described by an interface in *interfaces/employee.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3214
# ca5b69a11a824a39b49a8f269d797d0d
msgid "The implementation is trivial, and can be found in *content/employee.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3230
# e36c13c6c4fe4df7a7f01da4eae591ce
msgid "It is of course the event *class* that we instantiate and send, whilst we register the event handler for the event *interface*. This means that we could provide alternative implementations for the same event interface, if need be. It also means that event handlers subscribed for a parent interface will be invoked for events that provide a sub-interface. Sending the event is very simple. In the definition of *Employee* in *content/employee.py*, we have:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3258
# 2801e776b5ec47de9e6c2a571648684b
msgid "We construct an event instance and parameterise it with the right object (i.e. self) before sending it with *notify()*, all on one line."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3263
# bf9bdc69510f46e89ad12e5dff6089ae
msgid "5.14. Annotations"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3265
# 2978f6e364034ce8af6f6df1383ce326
msgid "Annotations are an elegant solution to the \"where do I store this?\" problem, and are used in many Zope 3 applications."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3268
# 015ccefc0392438ba74e581e11f807e4
msgid "It is often useful to be able to attach information to an object even if you don't have control over that object's type and schema. For example, a tagging solution may attach a list of tags to an object, or a notification tool may want to add a list of subscribers on a per-object basis. This is known in Zope 3 as \"annotations\"."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3275
# bc0ba255ce714681b4f6d4fca48bc20b
msgid "Annotations work like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3277
# e749d9cac80a407f92618687e373d444
msgid "A marker interface, normally *IAttributeAnnotatable* is applied to the class or object that is to be annotated. This particular marker means that annotations are stored in a persistent dict called *\\_\\_annotations\\_\\_* that is added to the object, though this should be considered an implementation detail."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3282
# 503fcfd498e3412781fd1a762d7f85d0
msgid "An adapter exists from *IAttributeAnnotable*to *IAnnotations*. If you need a different annotation regime (e.g. one that stores the values keyed by object id in some local utility) you could provide a different adapter to *IAnnotations*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3286
# 8681a2db30574c5086dd511129e348fa
msgid "The code that wishes to annotate an object will adapt it to *IAnnotations*. The annotations adapter acts like a dict. Conventionally, each package that uses annotations will store all its (arbitrary) information under a particular key in that dict. The key name is normally the same as the name of the package. This is mainly to avoid conflicts between different packages annotating a particular object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3294
# 56e57c6ac2e24efeac4a9ef53be5c05f
msgid "In b-org, we don't have quite the same need for annotating objects from other parts of Plone, but we use annotations to store users' passwords. This ensures that they cannot be accessed through-the-web (since Zope 2 won't publish the *\\_\\_annotations\\_\\_* dict, as it begins with an underscore) and keeps passwords out of the way. Strictly speaking, this is probably overkill since the password is also hashed using the SHA1 one-way hasing algorithm, but that never stopped anyone before."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3303
# 559e21f634054bcc8f8b772fab6102a1
msgid "First, look at the definition of the *Employee* class in *content/employee.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3320
# 306c2a5c94d4494c82de6680fa3948b6
msgid "Here, we explicitly say that Employee is attribute annotatable. Of course, this requires control over the class. If you are trying to annotate another type that isn't already marked as annotatable, you may be able to add the marker interface using *classProvides()* or *directlyProvides()* from *zope.interface*, or use the ZCML *<implements />* directive. You need to be a bit careful, though, since the thing you are annotating should probably be persistent. You should also be polite - you're stuffing your own information onto someone else's object. Try not to break it."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3330
# 0492ea0067ce4980ad4b513a6e8c306c
msgid "Further down in *content/employee.py*, you will see the annotation being set:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3341
# cc27c524c8b144fba8e78f040a0bb1ba
msgid "PASSWORD\\_KEY comes from *config.py*, and is simply a string. The digest is verified in *membership/employee.py*, in the *IUserAuthentication* adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3369
# c8c29b788f2f4b0baa137ab363a7043e
msgid "That's all there is to it. We get an *IAnnotations* adapter, and then look up the *PASSWORD\\_KEY* to find the digest. The annotations adapter has the same contract as a Python dict, so we can use functions like *get()* and *setdefault()*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3375
# a433a01c3d7146418d0d3eb33d0dd260
msgid "5.15. Zope 3 Views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3377
# bca2d9edb16948559526b10d12ed845d
msgid "One of the nicest things that Zope 3 brought us is a way to manage view logic."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3380
# a319a0b91c9c40f1836bd9575e5e07ab
msgid "In Zope 2, a view (be that a view of a content object, or a more standalone template) typically consists of a Zope Page Template that pulls in data from its context. The problem is that non-trivial templates usually require some kind of \"view logic\" or \"display logic\". People tend to put these in a few places:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3386
# 8008d7ef0c2c421bbf859e50c14aebe0
msgid "Complex *python:* expressions in the ZPT. This is bad because it makes your templates hard to understand, and because there is a limit to what you can do with one-line Python expressions."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3389
# 49818e16bee44061a90d812c7064c722
msgid "External Python Scripts in a skin layer that get acquired in the page template, e.g. *here/calculateDate.* This is bad because it is cumbersome to create a new file for something which may be quite trivial, because all such scripts are part of a global namespace (and thus there may be conflicts between two different scripts with the same name), and also because Python scripts in the skin layers (and *python:* expressions) are slower than filesystem Python code and more restricted."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3397
# a248f1e4464f4d01acd02d452a203ee2
msgid "A custom tool that provides some necessary functionality. This is bad because a tool is a singleton, so you will probably need to explicitly pass around a context. Tools are also part of that same global namespace (by way of acquisition from the portal root), and are a hassle to create and install."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3402
# cab33c08f8554efc82630ee0eadd2adb
msgid "Methods on the context content object (where applicable). This is bad because it mixes presentation logic and the model (the schema) and storage logic. This often leads to an explosion of methods on each content type that are highly specific to a particular template. This pattern also requiers that you have the ability to add new methods to the content type class, even if you are just adding a new view template for it."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3410
# bc495e3c03ef4cb4af5dd4ed0a8bd702
msgid "As usual, these problems indicate a lack of separation of concerns. Zope 3's answer is a view - a class (typically) which may be associated with a template."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3415
# e28a986c81a64b31b441669832cc310c
msgid "Views are multi-adapters"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3417
# d55603b955c74c9b8d4f5bdd911fc6a6
msgid "You will often hear that views are named multi-adapters of a context and a request. In fact, the concept of a multi-adapter originated in the need for views. For most practical purposes, you can forget about this - it is an implementation detail. However, you may sometimes need to look up views yourself, which can be done using:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3429
# 55148e4ffe7d478dafe8380d63f4ce6b
msgid "More importantly, you need to know that to access the context the view is operating on inside that view, you can use *self.context*, and to access the request (including form variables submitted as part of that request, if applicable), using *self.request*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3435
# 53171f2e4276452d95bcf5eb4eb47a31
msgid "Explicitly acquiring views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3437
# 80b68d08d296498bbf04fecaa49f220b
msgid "One of the easiest ways of using views with existing code is to make page templates in a skin layer as you normally would, and then acquire a view object that is used for rendering logic. One of the main reasons for using this approach is that it allows page templates to be customised using the normal skin layer mechanism. This is approach is used extensively in Plone 2.5. Here's an example from the \"recent\" portlet, starting with *portlet\\_recent.pt*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3458
# ef5dbaad2c594e59a91b5a88d0c3f48b
msgid "The important line here is context*/@@recent\\_view*. This will look up a view named *recent\\_view* relative to the current context (*context* in page templates is a now-preferred alias for the *here* variable that was used before - *here* still works in Zope 2 templates, but is gone in Zope 3)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3464
# f2060519a84445aa85d6f553de555732
msgid "This view is defined by a class and a ZCML directive. The ZCML directive looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3477
# 7685179bf4d64d92acf4673d146c5247
msgid "Actually, this is not exactly what's in the file in Plone, since Plone is working around a few Zope 2.8 issues, but basically, this says that the view is available on all types of contexts (*for=\"\\*\"* - this could specify a dotted name to an interface if needed, more on that below), has the name *recent\\_view*, is public (because of the magic permission *zope.Public*) and that when acquired, the attribute (method) *results* is allowed - more attributes could be specified separated by whitespace. The class that is referenced contains the view implementation. Here it is, again slightly modernised:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3513
# d5c71b50ce314793b0388fa0523acfca
msgid "The use of *aq\\_inner()* on self.context is not strictly necessary always, but is a useful rule of thumb to make acquisition do what you expect it to do (this is because the *BrowserView* base class extends *Acquisition.Explicit*, which causes *self.context* to gain an acquistion wrapper that can mess with its acqusition chain)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3522
# f814597317b54573a1234054704be2e7
msgid "Zope 3 does not use views in this way. Instead, you would bind the template to the browser view explicitly. The main drawback of this technique is that the template is not present in the *portal\\_skins* tool, and so cannot be customised through-the-web. This may be possible in future versions of Zope and CMF, but for now the full-blown view technique is best used when it is not necessary to customise views through-the-web. Of course, you can still override view registrations using ZCML on more specific interfaces or an *overrides.zcml*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3532
# 207590e916a647cea6c2ce718f4845fd
msgid "Here is a view for departments in the *charity* example product, under *charity/browser/configure.zcml.* Notice how this entire XML file is in the *browser* namespace, and thus it is unnecessary to prefix each directive with *browser:*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3554
# 1d5bc5a7baae458080d2dc789a43c031
msgid "Here, we explicitly state that this view is only available for *IDepartmentContent* objects. This means that if you try to invoke *@@charity\\_department\\_view* on anything that does not provide this interface, you will get a lookup error. The view is protected by the Zope 2*View* permission. Also note that there is no *allowed\\_attributes* (or *allowed\\_interface*) attribute here. This is because the view is not intended to be used by other templates (if they tried, they would get an *Unauthorized* error when trying to access any attribute of the view) - all the logic is in the *department.pt* template."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3565
# 15dd4b22f3de43fe81d9bfe2e4e6d82e
msgid "The *department.pt* template is found in *charity/browser,*the same directory as the *configure.zcml* file above. You can use relative paths like *./templates/...* if necessary to point to the template file on the filesystem. Here is the class:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3591
# 50db149e42724523ae295d6fd75c6362
msgid "And here is the template that uses these methods:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3631
# 15d4af670c78410f85067c73edafb832
msgid "Now, you can go to a hypothetical URL */mydept/@@charity\\_department\\_view* to see this view rendered. In fact, this is set as the *view* and *(Default)* aliases for the Department content type when *charity* is installed, so the user will never see this URL."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3640
# 20b6eed414664426a5fea60684e26d05
msgid "It is also possible to make views without templates. This is useful if you need a URL to submit that does some processing. That processing would normally be done in the *\\_\\_call\\_\\_()* method, as in the hypothetical example below:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3654
# 10e2375452c94024a90826fd72bd71c5
msgid "Now, we could write a form that has *action=\"@@modify\\_customer\"*, which would result in this being called:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3672
# f53b3798aa8542fba4072c7c63048da2
msgid "This is obviously a simplified example, but the important thing to realise is that the view will tend to use *self.context* and *self.request* to interact with the rest of the portal."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3679
# a874c3b94bd140eaa2484c29146dccde
msgid "5.16. The schema extension mechanism"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3681
# 60ba09720a2340698439a05fbc00f0ce
msgid "How the Archetypes schema extension mechanism in b-org works"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3683
# 84b74da087dc400aaf4ca621bb940b5d
msgid "Text to follow"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:3
# 49a316588e734eed9b2d78c1a69f85b8
msgid "ATContentTypes"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:7
# e231820367cb46ae916f6748c8bcc391
msgid "Since Plone 2.1, Plone has shipped with ATContentTypes for its default content types"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:10
# 563fbaa4103a404bb3d28edf1b9c2c05
msgid "“ATContentTypes”:/products/atcontenttypes is a re-implementation of the standard CMF types as Archetypes content. It adds a numer of features to the standard CMF types and offers more flexibility in extending and re-using content types. The “RichDocument tutorial”:/documentation/tutorial/richdocument explains how ATContentTypes are subclassed and how they make use of the latest conventions in Archetypes and CMF. The ATContentTypes product is installed during the creation of a Plone site. It will migrate the base CMF content types to its own equivalents using its own highly generic migration framework. Please note that ATContentTypes aims to be usable in plain CMF. It has a number of optional Plone dependencies, in the form::"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:28
# a53a2ae65f5f4ee5b0e7f9dee3da66e5
msgid "Plone has no direct dependencies on ATContentTypes, nor on Archetypes. There are a few generic interfaces in ‘CMFPlone.interfaces’ that are used by both Archetypes/ATContentTypes and Plone, but we do not wish to have any direct dependency on Archetypes, since Archetypes is essentially just a development framework to make developing CMF content types easier. By minimising the number of dependencies, we ensure that plain-CMF (and in the future, plain-Zope 3) content types are still usable within Plone. ATContentTypes and Plone both depend on ‘CMFDynamicViewFTI’. This is a wrapper on the standard CMF FTI type that adds support for the ‘display’ menu by recording a few extra properties for the available and currently-selected view methods. It also provides a mixin class, ‘CMFDynamicViewFTI.browserdefault.BrowserDefaultMixin’, which enables support for the ‘display’ menu (or rather, the interface ‘CMFDynamicViewFTI.interfaces.ISelectableBrowserDefault’)."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:3
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:10
# 27135915a750437e8e01293bd6f53dc6
# f5548feb2f8e4a48b3475b920b016018
msgid "How to use events to hook the Archetypes creation process"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:8
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:14
# f5d99b613657423c98e5fa30978b019e
# 14ff5d98f98c49c7ac4d02b796f54d0e
msgid "Times have changed since the days of at_post_create_script(). Here is the way to hook into Zope3 (or Five's) event system in order to execute code during the Archetypes content creation and or editing process."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:10
# 5d30456726b0442685dbf7509fde8c1c
msgid "In the old days the only way to execute code during the object creation process for Archetypes was to add a method to your content type called at_post_create_script. In this script you would add any code that should execute after Archetypes was done creating the object."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:12
# c4c4a11a92d24de7bf3cca749a5fc3df
msgid "The new method for hooking the Archetypes object creation and editing process is to use Zope3 style events, like Products.Archetypes.interfaces.IObjectInitializedEvent."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:17
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:30
# 57e29d4eb2aa4e6c97b1619c6b1864ba
# 132a1baa30ed449e901d401a498f0486
msgid "Have a content type handy so we can add a post creation hook to it. To learn how to create a content type, check previous sections of this manual."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:19
# f84ae2da2aba44129787d4c3f6747076
msgid "We're going to use a content type called ExampleContent with the interface IExampleContent for this how to. The code structure will look like this::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:26
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:45
#: ../../reference_manuals/old/buildout/subversion.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:95
# 75956765582a4585896a0df43149a6c7
# d7d19cd3d6364ae68ba1cf0ddfe0319b
# abcb0062f4fb4c0f8d61a2d38fcfc3d0
# e483f0566665406cb84b2590fdc8b2be
msgid "Step by step"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:27
# 1d8f99cf996d4bc78d0b9b8d5bac9603
msgid "First let's create the interface for our ExampleContent type. In interfaces.py, add::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:35
# d63e05b1e4344f0bbdc3747abc652cd3
msgid "You can store the implementation for your event handlers anywhere but for the purpose of this example we're going to put it in the same module as the ExampleContent type::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:47
# f4dc7d71391e495b85d51005a5f7cf00
msgid "All we need to do now is register the addSubFolder method as a handler for Products.Archetypes.interfaces.IObjectInitializedEvent and for anything implementing the IExampleContent interface. We do this in a configure.zcml file::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:53
# 1488fe8c92a546cb912d23211770329d
msgid "Notice that there are two interfaces in the \"for\" attribute. This is because we are registering a multi-adapter. Now when you add an ExampleContent type the addSubFolder method will be executed after Archetypes has created the object. The object itself will be passed to the handler and we can use the object reference to make additional modifications, in this case adding a sub folder."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:55
# c022fde4b28e447e8ee13c4dd9ca2a0d
msgid "You can register as many handlers as you need."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:58
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:94
# ca8d9e8d536449f99c3c60a34f112852
# 3ca25810fd6943d38be91ad7fe400e13
msgid "Warnings from your future"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:60
# 6c3f1760e8124eb6a13ad26dcc006e71
msgid "Having implemented all of your content type's event hooks you might then run off and try using invokeFactory somewhere in your code only to realize that your IObjectInitializedEvent handlers are not being executed. This is because invokeFactory does not notify Zope's event system that new objects are being created. You have to provide these notifications yourself. So here is an example::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:68
# 7f9a453489af45b7b691e962fc8b78c7
msgid "This will both create your object and invoke any IObjectInitializedEvent handlers you have registered. Notice that we are importing ObjectInitializedEvent, not the interface IObjectInitializedEvent. We want to actually instantiate an event passing it our newly created object as the single parameter and then pass the event to zope.event.notify. From there, Zope takes care of figuring out which handlers need to execute."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:70
# a67514796fb74ffe8b145bb21783e1c9
msgid "So for example, in our addSubFolder method above, any events registered for the folder we created would not fire. To complete our hook in this case we should provide a notification for our newly created folder. Archetypes or other products may be expecting notifications so when using invokeFactory, always send an IObjectInitializedEvent for the object. The complete method looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:75
# 039621540eb742f19a5ddfbbe72afefc
msgid "def addSubFolder(obj, event):"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:73
# 557c6114dc1347a18990b3e491d3d76b
msgid "obj.invokeFactory(type_name='Folder', id='subfolder') folder = getattr(obj, 'subfolder') zope.event.notify(ObjectInitializedEvent(folder))"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:78
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:134
#: ../../reference_manuals/old/buildout/subversion.rst:79
# 88b9307823fa4e2bbcd99928a9db2646
# 53fded60e3b440c0b3932123464f8c6a
# 993e1f7365864f1ba3ab1a72e7003aca
msgid "Further information"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:80
# d50182fa17ed44058483b71339d5080b
msgid "The IObjectInitializedEvent is fired once during the objects creation process. To hook the editing process for an object use IObjectEditedEvent."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:82
# 939157a01c8744f4ba24b71bc0451c10
msgid "The Sending and handling events tutorial is a little out of date but provides a broader explanation of the underlying mechanics. Walking through Five to Zope 3 - Events is another great introduction to events handling."
msgstr ""

#: ../../reference_manuals/old/archetypes/display_menu.rst:3
# 1e742b92dd3d4687af138c0fe2dd5560
msgid "The 'display' menu"
msgstr ""

#: ../../reference_manuals/old/archetypes/display_menu.rst:7
# 75462abd10f040e3a14ed25417a485df
msgid "The 'display' menu is the drop-down that lets content authors select which view template to use, or which object to set as a default-page in a folder."
msgstr ""

#: ../../reference_manuals/old/archetypes/display_menu.rst:11
# 0f710ea166d44ecd9f23ea3afebd5915
msgid "The ``display`` menu is found in ``global\\_contentmenu.pt`` and supports three different functions: - Set the display template (aka “layout”) of the current content object, provided that object supports this. - Set the default-page of a folder, provided the folder supports this - If viewing a folder with a default-page, allow selecting the standard view template/layout for that folder, thus unsetting the default-page. There are two interfaces in ``CMFDynamicViewFTI.interfaces`` that are used to support this functionality: IBrowserDefault – Provides information about the layout current selection of a given content object, including any selected deafult-page ISelectableBrowserDefault – Extends IBrowserDeafult with methods to manipulate the current selection The canonical implementation of both these interfaces is in ``CMFDynamicViewFTI.browserdefault.BrowserDefaultMixin``. This in turn gets the vocabulary of available view methods from the FTI (and hence this can be edited through-the-web in ``portal\\_types``), and stores the current selection in two properties on each content object: ``layout``, for the currently selected view template, and ``default\\_page`` if any default page is selected. If both are set, the default-page will take precedence. ``BrowserDefaultMixin`` actually provides a ``\\_\\_call\\_\\_`` method which means that will render the object with its default layout template. However, ``PloneTool.browserDefault()`` will actually query the interface directly to find out which template to display - please see the next page for the gory details."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:3
# 333e8761fd5f4e1f8a822c7c07d356cf
msgid "Advanced: Understanding Storage"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:7
# fa37b0d3214b4bbdb561e5e48d3ea61f
msgid "This page describes the basic mechanism for the Field storage mechanism, a powerful Archetypes feature that allows you to store field data somewhere besides the ZODB."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:11
# 7624256762854ab1846e088a665d283c
msgid "TBD: write the page"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/fields_reference.rst:3
# d7d287018f1b4afd95d19a4caa010de0
msgid "Fields Reference"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/fields_reference.rst:7
# 3cafd7438d3040719423fb4d2f086f97
msgid "Attributes of standard Archetypes fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:3
# 2ed5a17d2dfd484cac6d2341e7786c7e
msgid "Validator Reference"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:7
# f8eca060d7c44916ac48b8e7f3953ae8
msgid "A quick reference to the built-in Archetypes validators."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:10
# 9d45b15c59db46faa47abc6ef34dd7f4
msgid "Using Validators"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:12
# 75beb7b51a3b4f67a56ecf08189c771d
msgid "Archetypes fields may have validators specified in the Field schema. For example, the schema for the basic page type includes the stanza:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:24
# 752a8f4250fd4852abc327c4e6987854
msgid "This specifies that the *isTidyHtmlWithCleanup* test will be applied to validate form input."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:27
# 134130c9d7af4932a0d05f9905662416
msgid "You may specify a sequence of validators:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:33
# 5a782bef5ecd4114b2561b511e063525
msgid "and the validators will tested in order."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:35
# 824f05193b4944bb84a75606059f3159
msgid "The validators sequence may contain two kinds of entries:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:37
# c4875104ef64481385bf6e2b5a56f67c
msgid "The string names of validators registered with the validation service (see Products.validation);"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:39
# 5b3f4e0472344c759de58a2a73d30efc
msgid "Instances of classes implementing the IValidator interface (Products.validation.interfaces.IValidator.IValidator)."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:42
# 776ef9de7f7b4003bed173a255ff9fe0
msgid "A validation specification using a validator class instance can look like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:52
# 2ae90b9cf4044e549de7b14fe1ffa9bb
msgid "Registered Validators"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:54
# d828342b88bf4c5f9f89a00e28ebac90
msgid "These are validators pre-registered with the validation service. They may be specified by name."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/widgets_reference.rst:3
# e3dd0e05b159438982486f94e5e228ed
msgid "Widgets Reference"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/widgets_reference.rst:7
# 09681e3e8777480d86aae667a9789aae
msgid "This page is a syntax reference and general guide for defining and using Widgets."
msgstr ""

#: ../../reference_manuals/old/archetypes/index.rst:3
# 3278ab6c223f45299a443994edf731cd
msgid "Content-types with Archetypes"
msgstr ""

#: ../../reference_manuals/old/archetypes/index.rst:7
# 5736edac58d148b7ad60ecb8b6254020
msgid "How to create new content-types in Plone using the Archetypes framework."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:6
# a3c60e4376844a10a94c6d4e02fd1c5b
msgid "What is Archetypes?"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:10
# 656caa1b06964611a475c26040a61f90
msgid "Brief presentation of Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:13
# 5f8ca5007f234c3ba4565c174ddb8077
msgid "Archetypes is a framework for developing new content types for a Plone project. Most content management projects involve introducing new types of content, which in the non-trivial case requires an informed understanding of how Zope and the CMF work. Archetypes provides a simple, extensible framework that can ease both the development and maintenance costs of CMF content types while reducing the learning curve for the simpler cases."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:21
# e55ed3b3062345a381056b6d55303429
msgid "Compared to building content types using the stock CMF (through subclassing), Archetypes gives you the following advantages:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:24
# 812664bbf8254c02b24ddb3275c64b9b
msgid "automatically generates forms and views;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:25
# 0c842e23665843758cf5ba845a4e53b2
msgid "provides a library of stock field types, form widgets, and field validators;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:27
# 8180ea1033784648a36f425dc5975d4a
msgid "allows defining custom fields, widgets, and validators;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:28
# 1af02f16a26648bd8ca0cfbba417bf72
msgid "automates transformations of rich content;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:29
# cfa762dd4ed94b63bdba503a9c06ac85
msgid "a built-in reference engine that gives the ability to link two objects together with a relation; such a “link” from a given object to another one is a Python object called a *reference*."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:33
# e73436688c984f6590449310e6e64b78
msgid "Since Plone 2.1, Archetypes has become the de-facto way of developing new content types, and a majority of third party products that are released these days use Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:38
# 5fcb81b50845448e884751571ab61fee
msgid "Archetypes schemas"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:42
# bf66a6bd6a20408486390cbf5e3bed0a
msgid "Introducing Archetypes-based schemas and fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:44
# f137939e50fb42888577d314d4a2e886
msgid "Archetypes provides a robust framework for storing data attributes on content objects.  This framework consist of a number of **Fields** stored in a container called a **Schema**. Fields are simply specialized Python classes that allow you to store and retrieve data associated with an Archetypes object."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:50
# 2aac67ee97754ef9a674837bce6830ff
msgid "Fields provide a few functionalities. First, there are specialized field types for strings, lists of strings, integers, floating-point numbers, etc., that allow special handling of fields based on the type of data stored."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:56
# 2ecebbdfd7994f2084e1b8e5476dbf0c
msgid "Some definitions"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:58
# ca3d53fe2c854a49a732dd000347e712
msgid "Before we go diving in, let’s define some often-used terms:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:60
# 80459c42d2ce4120afe1e14da8d90da8
msgid "Field: An Archetypes Field. This refers to an instance of a Field class defined in a Schema."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:62
# 3ade3f3918154101b99056a33cbcee1c
msgid "Schema: The “container” that Archetypes uses to store fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:63
# 08450993ab0148878168d1cfccaffea9
msgid "Schemata: A named grouping of fields. One Schema can have many schematas."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:65
# 967148aaa0e44364beff768cbf063c71
msgid "AT: Abbreviation for Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:68
# 83799e5635984cb09692e2f81f4c086e
msgid "Fields, Classes, and Objects"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:70
# 4b90053ea46443f7aecb7d0e15be2873
msgid "Archetypes Fields are Python objects contained within the Schema. A Field is defined once for an Archetypes content class. This single Field instance is used for every instance of that class.  Therefore, the relationship between Field instances and content classes is described as such: “A field instance belongs to exactly one class.” A class, however, can have many *different* Field instances. Furthermore, every instance of an AT class uses the *same* set of Fields.  AT objects themselves do not contain unique Fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:79
# 3eb302dd0b304096a1c6706d5b331b4e
msgid "When Zope starts up, during product initialization, Archetypes reads the schema of the registered classes and “automagically” generates methods to read (the *accessor*) and change (the *mutator*) each of the fields defined."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:85
# e3b4a1e4198c46f795d29201a6bf4148
msgid "Stock schemas"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:87
# a8c95e0c58c543c09c496aca8499753d
msgid "Archetypes includes three stock schemas:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:89
# 8bae7995ed8840b28df2f1a64840582c
msgid "BaseSchema: defines a normal content type,"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:90
# 577dffccb42244dfadac888bfe2a78eb
msgid "BaseFolderSchema: defines a folderish content type (object can contain other objects),"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:92
# 3a300db99ec740278853f6fc249c1787
msgid "BaseBTreeFolderSchema: for folders which need to handle hundreds or thousands of objects (even up to millions)."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:95
# 107e170e63dd4dc4802d4f6c047c6d0b
msgid "All three include two fields, ``id`` and ``title``, as well as the standard Dublin Core metadata fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:99
# 9565cbf56b354e0ba2c92bd77493bd0b
msgid "Modifying the fields of an existing schema"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:101
# 76ab9c8fca0b4702babe09d5028572b0
msgid "Modifying an existing schema field is possible using the syntax ``schema['<field_name>'].attribute = value``. For example, to change the label of the *description* field widget (already available in *BaseSchema*), you can write (*in your defined schema definition that reuses BaseSchema*):"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:111
# 71b3c62db17c4139993a90abfcc4f57c
msgid "The fields in the schema are ordered, and normally first fields come first in “add” and “edit” forms. To rearrange a field within the schema use the ``moveField`` method:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:115
# 6d93ae8004ae4eb6bfe6acb477546d60
msgid "Place it before a specific field: ``schema.moveField('<field_to_move>', before='<field_to_place_it_before>')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:117
# 3eb57869b571401ca4a7647efd3aa15e
msgid "Place it after a specific field: `` schema.moveField('<field_to_move>', after='<field_to_place_it_after>')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:119
# 1a9d995e48ff45159e4953ee6be00576
msgid "Place it at the top of the schema: `` schema.moveField('<field_to_move>', pos='top')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:121
# 46efbcd8880845f1a579827354b6c7aa
msgid "Place it at the bottom: `` schema.moveField('<field_to_move>', pos='bottom')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:123
# 6a69ced41bad4f8ea1f79ba3e4d91c45
msgid "Place it in a specific position: `` schema.moveField('<field_to_move>', pos=0)``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:128
# 46a13a5802e24836aa4c5e292788896d
msgid "What is ATContentTypes?"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:132
# 7274a4c2def648b18900dea5b0c71df4
msgid "ATContentTypes is the Plone core product that provides the default content types (since Plone 2.1)."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:135
# 6b61a529e78a408db4c67f9eb89733db
msgid "One of the major changes introduced in Plone 2.1 was that the core content types (Page, Image, etc) were changed from being based on stock CMF types, to using Archetypes. The new core types are housed in the ATContentTypes product."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:140
# f92e49b81b3644a39b45f86b4d102bc6
msgid "ATContentTypes introduces a number of base classes and tools that provide common “Plone-ish” behaviour. This includes things like support for the “display” menu and the “more…” menu and restrictions for the “add item” menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:145
# 3c57f60a4a544819929ed32ff9d86a9f
msgid "You can use ATContentTypes’ base classes and tools in your own products. The `RichDocument tutorial`_ covers the core techniques, and is probably a good place to go when you have finished this reference."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:3
# 0579eff14aed45ada61601dd71f4ce7e
msgid "Other Useful Archetypes Features"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:7
# ad61f848b0f047a0becdbe778b3c61f9
msgid "Complementary features you'd be pleased to know about."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:18
# a38091777dc64cf7ad4dc1ccdab94164
msgid "In the old days the only way to execute code during the object creation process for Archetypes was to add a method to your content type called *at\\_post\\_create\\_script*. In this script you would add any code that should execute after Archetypes was done creating the object."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:23
# 8a2b171f99004b62af6c3157e9c2cab9
msgid "The new method for hooking the Archetypes object creation and editing process is to use Zope3 style events, like \\ *Products.Archetypes.interfaces.IObjectInitializedEvent*."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:34
# 51e69466572442c1be4c40e2da9d8b78
msgid "We’re going to use a content type called *ExampleContent* with the interface *IExampleContent* for this how to. The code structure will look like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:47
# 0d4d8fe71ba449b4832d8c5c704ebbc4
msgid "First let’s create the interface for our *ExampleContent* type. In *interfaces.py*, add:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:58
# dedc1256db5e4109a1e6b4b80c083de3
msgid "You can store the implementation for your event handlers anywhere but for the purpose of this example we’re going to put it in the same module as the *ExampleContent* type:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:74
# f1c7b9dbbe0c46beaf7b009dffb40db6
msgid "All we need to do now is register the *addSubFolder* method as a handler for \\ *Products.Archetypes.interfaces.IObjectInitializedEvent* and for anything implementing the *IExampleContent* interface. We do this in a *configure.zcml* file:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:85
# 5e8867dc595443c394a50bbe3e815aa9
msgid "Notice that there are two interfaces in the “for” attribute. This is because we are registering a multi-adapter. Now when you add an *ExampleContent* type the *addSubFolder* method will be executed after Archetypes has created the object. The object itself will be passed to the handler and we can use the object reference to make additional modifications, in this case adding a sub folder. You can register as many handlers as you need."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:96
# e95e6ea2aeec462886b463821e02f213
msgid "Having implemented all of your content type’s event hooks you might then run off and try using *invokeFactory* somewhere in your code only to realize that your \\ *IObjectInitializedEvent* handlers are not being executed. This is because *invokeFactory* does not notify Zope’s event system that new objects are being created. You have to provide these notifications yourself. So here is an example:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:111
# f15aaf0748724a24829fa41626dee692
msgid "This will both create your object and invoke any \\ *IObjectInitializedEvent* handlers you have registered. Notice that we are importing *ObjectInitializedEvent*, not the interface *IObjectInitializedEvent*. We want to actually instantiate an event passing it our newly created object as the single parameter and then pass the event to *zope.event.notify*. From there, Zope takes care of figuring out which handlers need to execute."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:119
# f17f5fd9435040958a794a7fbe333b9a
msgid "So for example, in our *addSubFolder* method above, any events registered for the folder we created would not fire. To complete our hook in this case we should provide a notification for our newly created folder. Archetypes or other products may be expecting notifications so when using invokeFactory, always send an *IObjectInitializedEvent*\\ for the object\\ *.*\\ The complete method looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:140
# 7b752b4e0cf649a7a25cbe3313443a66
msgid "The \\ *IObjectInitializedEvent* is fired once during the objects creation process. To hook the editing process for an object use \\ *IObjectEditedEvent*."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:144
# 73fdfa84744047e5ab76aed9309e51b4
msgid "The \\ `Sending and handling events`_ tutorial is a little out of date but provides a broader explanation of the underlying mechanics. `Walking through Five to Zope 3 - Events`_ is another great introduction to events handling."
msgstr ""

#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:3
# f5b9017a54dc490e996d497aa5d6045a
msgid "Restricting addable types"
msgstr ""

#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:7
# 381a44bbad0c477fa7f32c5d7d013821
msgid "The constrain-types machinery and how it drives the \"restrict...\" option under the \"add item\" menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:10
# 2c7fa25793704bb7b032a5faf8988fea
msgid "As of Plone 2.1, the “add item” menu supports a “restrict…” page that lets the user decide which items can and cannot be added to that folder. This functionality is defined in a pair of interfaces in ``CMFPlone.interfaces.constrains``, ``IConstrainTypes`` for read-only access and ``ISelectableConstrainTypes`` for the mutators. The canonical implementation of these interfaces is in ``ATContentTypes.lib.constraintypes``. This provides storage for the constraint mode (more below) and the list of locally allowed and “preferred” types. The preferred types are the ones that appear in the list immediately, and the rest of the allowed types appear behind a “more…” item. The constraint type mode can be ``ACQUIRE`` (the default), ``DISABLED`` or ``ENABLED``. When disabled, the settings in ``portal\\_types`` are used. When enabled, the list of types explicitly set are used. When set to acquire, the parent folder`s types will be used \\*if\\* the parent is of the same portal type as the folder in question. If they are of different types the settings in ``portal\\_types`` apply. The rest of the ``ConstrainTypesMixin`` class overrides CMFCore`s ``allowedContentTypes`` and ``invokeFactory`` methods to ensure the constraints are enforced."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:3
# a5d1fc40dff5483dad26ae05b9debc7b
msgid "From Zope to the Browser"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:7
# 9746d18c07e94e48a85091636b634d6d
msgid "How do content types get \"published\" (in the Zope sense, not the workflow sense) to the web browser?"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:10
# 0b5657b633dc41cda7cbd6449e8a2d52
msgid "There is a fairly complex mechanism that determines how a content object ends up being displayed in the browser. The following is an adaptation of an email to the plone-devel list which aims to untangle this complexity. It pertains to Plone 2.1 only. Assumptions:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:16
# 41cd66a250ac4334ade038818a082557
msgid "You want the 'view' action to be the same as what happens when you go to the object directly for most content types..."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:18
# fc8835423ff64ef18f5d53ffa174f297
msgid "...but for some types, like File and Image, you want the \"view\" action to display a template, whereas if you go straight to the object, you get the file's contents"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:20
# 07188f3b71084e2ca53d9efa26f20759
msgid "You want to be able to redefine the 'view' action in your custom content types or TTW in portal\\_types explicitly. This will essentially override the current layout template selection. Probably this won't be done very often for things deriving from ATContentTypes, since here you can register new templates with the FTI and have those be used (via the \"display\" menu) in a more flexible (e.g. per-instance, user-selectable) way, but you still want the \"view\" action to give the same power to change the default view of an object as it always has."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:22
# f1c45e4a9de94f1e9dd2878f42d1dc22
msgid "When you use the \"display\" menu (implemented with IBrowserDefault) to set a default page in a folderish container, you want it to display that item always, unless there is an index\\_html - index\\_html always wins (note - the \"display\" menu is disabled when there is an index\\_html in he folder, precisely because it will have no effect)"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:24
# e5e58e78ad38467488dd298d215915c6
msgid "When you use the \"display\" menu to set a layout template for an object (folderish or not), you want that to be displayed on the \"view\" tab (action), as well as by default when the object is traversed to without a template/action specified..."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:26
# 71ec58735d9f44679144db0d461722cc
msgid "...except for ATFile and ATImage, which use a method index\\_html() to cut in when you don't explicitly specify an item. However, these types will \\*still\\* want their \"view\" action to show the selected layout, but will want a no-template invocation to result in the file content"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:28
# 4d813a96a5df4b04ad2611501d6029a4
msgid "Some implementation detail notes: There are two distinct cases:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:31
# 1747ebff7fcc473999b9be6a28b851f9
msgid "CASE I: \"New-style\" content types using the paradigms of ATContentTypes -- These implement ISelectableBrowserDefault, now found in the generic CMFDynamicViewFTI product. They support the \"display\" menu with per-instance selectable views, including the ability to select a default-page for folders via the GUI. These use CMF 1.5 features explicitly."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:38
# e8990b385ee44e599d86e7febe6b56f0
msgid "CASE II: \"Old-style\" content types, including CMF types and old AT types -- These do not implement this interface. The \"display\" menu is not used. The previous behaviour of Plone still holds. The \"old-style\" behaviour is implemented using the Zope hook \\_\\_browser\\_default\\_\\_(), which exists to define what happens when you traverse to an object without an explicit page template or method. This is used to look up the default-page (e.g. index\\_html) or discover what page template to render. In Plone, \\_\\_browser\\_default\\_\\_() calls PloneTool.browserDefault() to give us a single place to keep track of this logic. The rules are (slightly simplified):"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:49
# 152c1cd0a33143a78cc6f4d46cdb00c3
msgid "1. A method, attribute or contained object 'index\\_html' will always win. Files and Images use this to dump content (via a method index\\_html()); creating a content object index\\_html in a folder as a defualt page is the now-less-encouraged way, but should still be the method that trumps all others."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:55
# 12a26baa00a74d3fb8627c7241cbe351
msgid "2. A propery 'default\\_page' set on a folderish object giving the id of a contained object to be the default-page is checked next."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:58
# 8979aced9aa5464d9880c92384c33e75
msgid "3. A property 'default\\_page' in 'site\\_properties' gives us a list of ids to check and treat similarly to index\\_html. If a folder contains items with any of these magic ids, the first one found will be used as a default-page."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:63
# b7a0ebe8a6eb439db4ecbff1fa149c83
msgid "4. If the object has a 'folderlisting' action, use this. This is a funny fallback which is necessary for old-style folders to work (see below)."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:66
# 3fce9571701f478fb06b87371b6cbf1c
msgid "5. Look up the object's 'view' action and use this if none of the above hold true."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:69
# fc6303cf9c7a4ef7a47db254a36fcde2
msgid "In addition, we test for ITranslatable to allow the correct translation of returned pages to be selected (LinguaPlone), and have some WebDAV overrides. Lastly, it has always been possible to put \"/view\" at the end of a URL and get the view of the object, regardless of any index\\_html() method. This means that you can go to /path/to/file/view and get the view of the file, even if /path/to/file would dump the content (since it has an index\\_html() method that does that). This mechanism uses the method view(), defined in PortalContent in CMF (and also in BaseFolder in Archetypes). view() returns 'self()', which results in a call to \\_\\_call\\_\\_(). In CMF 1.4, this would look up the 'view' action and resolve this. Note that for \\*folders\\* in Plone 2.0, the 'view' action is just 'string:${object\\_url}/', which in turn results in \\_\\_browser\\_default\\_\\_() and the above rules. This means that /path/to/folder/view will render a default-page such as a content object index\\_html. The fallback on the 'folderlisting' action in PloneTool.browserDefault() mentioned above is there to ensure that when there \\*isn't\\* an index\\_html or other default-page, we get 'folder\\_listing' (instead of an infinite loop), essentially making the 'folderlisting' action on Folders the canonical place to specfy the view template. If you think that sounds messy, you're right. (With CMF 1.5 types, things are little different - more on that later.)"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:92
# 18269c21fa8046b7b1aa3fb1399869d0
msgid "Enter CMF 1.5. CMF 1.5 introduces \"Method Aliases\". It is important to separate these from actions:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:95
# ed3c911030404047b10ed5ac567f4d83
msgid "Actions -- These generate the content action tabs (the green ones). You almost always have 'view' and 'edit'. Other standard actions are 'properties' and 'sharing'. Each action has a target, which is typically something like 'string:${object\\_url}/base\\_edit' for the edit tab. 'base\\_edit' here is a page template."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:101
# 3a92d76646154567a2483dd86c3eda74
msgid "Method aliases -- These let you generalise actions. The alias 'edit' can point to 'atct\\_edit' for an ATContentTypes document, for example, and point to 'document\\_edit\\_form' for a CMF document. Aliases can be traversed to, so /path/to/object/edit will send you to 'atct\\_edit' on the object if the object is an ATContentTypes document, and to 'document\\_edit\\_form' if it is a CMF Document. This level of indirection is actually quite useful. First of all, we get a standard set of URLs, so /path/to/object/edit is always edit, /path/to/object/view is always view. The actions (tabs) can point to these, meaning that we can pretty much use the same set of actions for all common types, with the variation happening in the aliases instead. Secondly, a method alias with the name \"(Default)\" specifies what happens when you browse to the object without any template or action specified. That is, /path/to/object will look up the \"(Default)\" alias. This may specify a page template, for example, or a method (such as a file-dumping index\\_html()) to call. Crucially, if \"(Default)\" is not set or is an empty string, CMF falls back on the old behaviour of calling the \\_\\_browser\\_default\\_\\_() method. In PloneFolder.py, this is defined to call PloneTool.browserDefault(), as mentioned above, which implements the Plone-specific rules for the lookup. Hence, if we need the old behaviour, we can just unset \"(Default)\"! This is what happens with old-style content types (that is, it is the default if you're not using ATContentTypes' base classes or setting up the aliases yourself). Now, CMFDynamicViewFTI, which is used by ATContentTypes, extends the standard CMF FTI and a adds a few things:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:128
# 5db64dcb604c44d8b6ebfd2ea506552a
msgid "1. A pair of interfaces, ISelectableBrowserDefault and IBrowserDefault (the former extends the latter) describing various methods for getting dynamic views, as found in Plone in the \"display\" menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:132
# 28892e7e2ec8497b95573f9768a91824
msgid "2. A class BrowserDefaultMixin which gives you a sensible implementation of these. This uses two properties, \"default\\_page\" and \"layout\" to keep track of which default-page and/or view template (aka layout) is currently selected on an object."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:137
# 0afad225c9b34ffc80d22647daebd7ea
msgid "3. Two new properties in the FTI in portal\\_types - the default view, and the list of available views."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:140
# 449380a391eb4aa3ae8a2831667f0169
msgid "4. A special \\*target\\* for a method alias called '(selected layout)', which will return the selected view template (layout)."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:144
# d1c7fc2d24024d0da71183e95b7b2766
msgid "5. Another special alias target called '(dynamic view)', which will return a default-page, if set, or else the selected view template (layout) - you can think of \"(dynamic view)\" as a superset of \"(selected layout)\"."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:149
# 54682571bd214dd69f66f96e0b8c88e7
msgid "ATContentTypes uses BrowserDefaultMixin from CMFDynamicViewFTI, and sets up the standard aliases for \"(Default)\" and \"view\" to point to \"(dynamic view)\". The exceptions are File and Image, which have the \"(Default)\" alias pointing to \"index\\_html\", and the \"view\" alias pointing to \"(selected layout)\". This way, /path/to/file results in the file content (via the index\\_html() method) and /path/to/file/view shows the selected layout inside Plone. (Note that using \"(dynamic view)\" for the \"view\" alias would \\*not\\* work, because the index\\_html attribute would take precedence over the layout when testing for a default-page.) Additionaly, the 'view' action (tab) for each of these types must be 'string:${object\\_url}/view' to ensure it invokes the \"view\" alias, not the \"(Default)\" alias. For Folders, the use of \"(dynamic view)\" takes care of the default-page and the selected view template. The 'folderlisting' fallback is no longer needed - the 'view' action can still be \"string:${object\\_url}\", and the \"(Default)\" alias pointing to \"(dynamic view)\" takes care of the rest. In order for the \"(dynamic view)\" target to work as expected, it needs to delegate to PloneTool so that Plone's rules for lookup order and (especially) ITranslatable/LinguaPlone support are used. However, delegating to PloneTool.browserDefault() is not an option, because this does other checks which are not relevant (this essentially stems from the fact that browserDefault() is implementing \\*both\\* the \"(Default)\" and \"view\" cases above in a single method). Thus, the code for determining which, if any, contained content object should be used as a default-page has been factored out to its own method, PloneTool.getDefaultPage(). Helpfully, this can also be used by PloneTool.isDefaultPage(), radically simplifying that method."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:179
# f185cebf1b5545fa947199a6ccf48cb3
msgid "Calling content objects"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:181
# 887cc457465440728c1fd1610665f815
msgid "The last issue is what happens with view() and \\_\\_call\\_\\_() in this equation. The first thing to note is that view() method is masked by the 'view' method alias. Hence, /path/to/object/view will invoke the method alias 'view' if it exists, not call view(), making that method a lot less relevant. However, we still want \\_\\_call\\_\\_() to have a well-defined behaviour. In CMF 1.4, \\_\\_call\\_\\_()used to look up the 'view' action, and this is still the default fallback, but if the \"(Default)\" alias is set, this is used instead. This may give somewhat unexpected behaviour, however: From the comments in the source code and the behaviour in Zope, where \\_\\_call\\_\\_() is the last fallback if neither \\_\\_browser\\_default\\_\\_() nor index\\_html are found, and to ensure that the \"view() --> \\_\\_call\\_\\_()\" mechanism always returns the object itself, never dumped file content, it seems to be the intention that \\_\\_call\\_\\_() should always return the object, never a default-page or file content dumped via an index\\_html() method. For \\*Folders\\* in Plone 2.0, this was actually not the case: \\_\\_call\\_\\_() would look up the 'view' action, which was \"string:${object\\_url}\", which with the use of \\_\\_browser\\_default\\_\\_() resulted in a lookup of a default-page if one was present. With the CMF 1.5 behaviour, the use of the \"(Default)\" alias in \\_\\_call\\_\\_() will mean that calling a File returns the dumped file content. Calling a Folder will return the default-page (or the Folder in its view if no default page is set) as in Plone 2.0. The behaviour in Plone 2.1 is that \\_\\_call\\_\\_(), as overridden in BrowserDefaultMixin, should always return the object itself as it would be rendered in Plone without any index\\_html or default-page magic. Hence, \\_\\_call\\_\\_() in CMFDynamicViewFTI looks up the \"(selected layout)\" target and resolves this. This behaviour is thus consistent with the old behaviour of Documents and Files, but whereas Folders with a default-page in 2.0 used to return that default page from \\_\\_call\\_\\_(), in 2.1, it returns the Folder itself rendered in its selected layout. Again remember that this method will rarely if ever be called, since /path/to/object is intercepted by CMF's pre-traversal hook and ends up looking up the \"(Default)\" method alias (which \\*does\\* honour default-page for Folders), and /path/to/object/view uses the \"view\" method alias, as described above."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:3
# f35374ce402f4726a58bcdd6f289afa1
msgid "Attributes / Fields / Indexing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:9
# 456d42ca2c4942df8a0077858bff4a9e
msgid "How to control the fields of your schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:11
# 44541634a6724a81bab8737060994766
msgid "Archetypes are using *schemas* (also called *schemata*) with *fields* to define the form-fields on your content. The schema and its fields of your content types is generated from the *attributes* of your classes in your model and their tagged values. Each field has a type and a widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:13
# 9ce3ec28281843108bd2f324222f9857
msgid "The `Archetypes documentation <http://plone.org/documentation/manual/archetypes-developer-manual>`_ and the quick reference at the end of this document describes which fields are available and what parameters they take as configuration."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:16
# f9ac13b401654a01beed332ed3ec94b9
msgid "Usage of tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:17
# 909f712422fc4ca083c5ba54041f0930
msgid "If you set a tagged value on an attribute of your class, in general that tagged value will be passed through as a parameter to the generated Archetypes field. Hence, if you set a tagged value ``enforceVocabulary`` to the value ``1`` on an attribute, you will get ``enforceVocabulary=1`` for that field in the generated schema. Similarly, you can set a field's widget properties by prefixing the tagged value with ``widget:``. ``widget:label`` sets the label of a widget, for instance."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:20
# bb4662ca40484aaf825e1936cf7a38db
msgid "Non-string tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:21
# 3e1d4a21597a4a8aacfd5d7ec66c8872
msgid "As before, when reading tagged values, ArchGenXML will generally treat them as strings, with a few exceptions where only non-string values are permitted, such as the 'required' tagged value. If you do not wish your value to be quoted as a string, prefix it with ``python:``. For example, if you set the tagged value ``default`` to ``python:[\"high\", \"low\"]`` on a ``lines`` attribute, you will get ``default=[\"high\", \"low\"]`` in a LinesField in your schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:24
# 5b2e029502c94951804a4bcc2c85de52
msgid "field recycling - copy from parents schema or another source schema and modify"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:25
# 3c37f74d4fea45fe8f4509c9483fb99f
msgid "This feature alows you to copy a field from another source schema and rename the field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:27
# 01c70803583944f8859feb739e1ac34a
msgid "Rather than subclass an entire class then delete unwanted fields, you can explicitly copy just the fields you need. You can keep the copied field \"as-is\" or modify it by overriding properties with tag values as needed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:29
# ec9df4206083417bb91490d5cff5e72d
msgid "For example you may need a ``Description`` field that is usually defined in your parent classes (BaseContent, BaseFolder) Schema. You would create a new attribute in your class named ``description`` with a type of ``copy.`` If you want it to appear in your base_edit form rather then the default of properties/metadata page you just need to change one property of the field by adding the tag ``schemata = \"default\"``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:31
# f604327a964842359591f061f05a2d36
msgid "You may also copy from any other schema or from within the same schema. You need to specify the source schema using the tag ``copy_from`` and if you need to rename the field use the ``source_name`` tag to indicate the source field Id, otherwise the Id of the field in you schema is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:34
# 13d4405bcfda44bab618daccaef8e4df
msgid "Index and metadata in catalogs and Collection"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:35
# 216990f4865548a096c5ce2b86d652d4
msgid "ArchgenXML can create configuration files to create an index and/or metadata entries in the catalog such as portal_catalog."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:37
# 2f5d5bcca1304874991e2dbac41a390a
msgid "Available are the following tagged values:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:39
# f37f5b9941b44172b4bd344f398ec851
msgid "``catalog:index`` -- add the field to the index. Boolean, 1 or 0. Default is 0. If set, you may need to provide ``index:*`` tagged values too."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:41
# bf98920572b74f1ba0a053bc7a65af1d
msgid "``catalog:metadata`` -- add the field to the metadata record on the query result? Boolean, 1 or 0. If you do not provide ``index:attributes``, the name of the accessor of the field is the default. If ``catalog:metadata_accessor`` is given it will be used instead."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:43
# a11d355446494d139ad5ae47200e80be
msgid "``catalog:metadata_accessor`` -- the accessor used for the metadata (string)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:45
# 09d77b2e85354fb693fca56eafd8b974
msgid "``catalog:name`` -- sometimes you need to add an index to a other catalog than ``portal_catalog`` and its XML-File ``catalog.xml``. Provide a tuple of comma separated strings, id of the catalog and the filename of its configuration file. default is \"portal_catalog, Plone Catalog Tool'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:47
# fca971d064c547debd8af25938295918
msgid "``index:type`` -- the type of index used as (string), for example ``FieldIndex``, ``KeywordIndex``, ``DateIndex`` or any available index in your portal. For known types a default is guessed, such as FieldIndex for StringFields or DateIndex for DateFields. If no guess is possible, we assume a FieldIndex."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:49
# 7a3d4117b1584a98932da8fe3db80f70
msgid "``index:attributes`` -- the attributes to use for index (string or comma separated list of strings). This are the methods called at indexing time. Normally it is enough to provide one index method, but for some specific use cases you might need to provide alternatives. If you do not provide this tagged value, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:51
# a5f877a217e249c696f833ae7a8decf5
msgid "``index:name`` -- the name of the index used (string). Use this name in your queries. If you do not provide a name, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:53
# af1aab2f364b4b3bad3b4bc6c4a20c8a
msgid "``index:extras`` -- some indexes are using so called *extras* on installation as configuration. If the index need extras you'll need to declare them here. provide a comma separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:55
# f13b65747b264806b3f527c7281cfa08
msgid "``index:properties`` -- some indexes are using *properties* on installation as configuration. If the index need properties you'll need to declare them here. Provide a comma separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:57
# c723cc05c735451e9f6d35e2fda32477
msgid "``collection:criteria`` -- add the index to the Collection (aka Smart Folder) Indexes available for defining Criteria. Provide a comma seprated list of criteria that will be available by default. Available criterias are: ATBooleanCriterion, ATDateCriteria, ATDateRangeCriterion, ATListCriterion, ATPortalTypeCriterion, ATReferenceCriterion, ATSelectionCriterion, ATSimpleIntCriterion, ATSimpleStringCriterion, ATSortCriterion, ATCurrentAuthorCriterion, ATPathCriterion, ATRelativePathCriterion. You must provide an ``index:type`` as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:59
# 653a2c2ec60947a3ab340e2db0222bb6
msgid "``collection:criteria_label`` -- the display name of the ``collection:criteria``, called *friendly name* (string). Its added to the ``generated.pot`` as a literal. If not given the ``widget:label`` is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:61
# b5beeb4ebce74fe48586b8ff84ee9edd
msgid "``collection:criteria_description`` -- a help text (string), used for ``collection:criteria``. Its added to the ``generated.pot`` as a literal. if not provided the ``widget:description`` is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:63
# 60de3ea97d5348f3afbcdcd617d0fa2d
msgid "``collection:metadata`` -- register the ``catalog:metadata`` as an available column in a Collection. Can be used as an alternative for ``catalog:metadata``. ``catalog:metadata_accessor`` is used if given."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:65
# 1e55a8e636ef481cbbd7f16d3d2ed286
msgid "``collection:metadata_label`` -- the display name of the ``collection:metadata``, called *friendly name* (string), used for index:criteria. Its added to the ``generated.pot`` as a literal. If not given the ``widget:label`` is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:67
# 1e93c9d56a4e460cb1880faa30cd3ccf
msgid "``collection:metadata_description`` -- a help text (string), used for ``collection:criteria``. Its added to the ``generated.pot`` as a literal. If not provided the ``collection:criteria_help`` or - if not provided - ``widget:description`` is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:69
# 3fad10b859484123ab94fc6e74329f22
msgid "**DEPRECATED** For backward compatibility reasons we support a sub part of the old style in ArchGenxML Version 1.6 and earlier using the tagged value ``index``. This is deprecated and will be removed in one of the next version of ArchGenXML. A tagged value ``index`` with value like ``index:type`` above creates an index with the accessor. To include the index in catalog metadata (and have the attribute ready to use in the brain objects), append ``:brains`` (same as older ``:schema``), (e.g. ``FieldIndex:brains``). ArchGenXML does longer provides the ability to define multiple indexes using the old declaration style."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:3
# 1b81d4efd62842e59e28435b09550fc4
msgid "Classes / Content Types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:9
# 2ba235b27b944aa4840db01ea9f54e48
msgid "Use classes to generate content types and portal tools."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:13
# 8f396f83643f4b29910b1864d8e1dc6a
msgid "By default, when you create a class in your class diagram, it represents an Archetypes content type. You can add operations in your model to generate methods on the class, and attributes to generate fields in the schema. The quick reference at the end of this tutorial will tell you which field types you can use. You should also browse the \"Archetypes quick reference documentation\":/documentation/manual/archetypes-developer-manual/fields to see what properties are available for each field and widget type. You may set these using tagged values (see below)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:22
# 51a4f881244a4faf847477d6a57abf58
msgid "There are three basic ways in which you can alter the way your content types are generated:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:25
# 54d6481b5eab49e1891f5515d28550c2
msgid "You may set one or more stereotypes on your class, which alters the \"type\" of class. A stereotype ``<<portal_tool>>``, for example means you are generating a portal tool rather than just a simple content type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:26
# ef7f01c42a84495bb1c64f6f7379d444
msgid "You can use tagged values in your model to configure many aspects of your classes, their attributes and their methods. A list of recognised tagged values acting on classes, fields and methods are found in the \"quick reference\":archgenxmlquickref at the end of this tutorial."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:28
# f6a18d90b1b44348aa3cfa0ccdb48995
msgid "When reading tagged values, ArchGenXML will generally treat them as strings, with a few exceptions where only non-string values are permitted, such as the ``required`` tagged value. If you do not wish your value to be quoted as a string, prefix it with ``python:``. For example, if you set the tagged value ``default`` to ``python:[\"high\", \"low\"]`` on a ``lines`` attribute, you will get ``default=[\"high\", \"low\"]`` in a LinesField in your schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:30
# 0bad3433442743368323e948efd787fa
msgid "ArchGenXML is clever about aggregation and composition. If your class aggregates other classes, it will be automatically made into a folder with those classes as the allowed content types. If you use composition (signified by a filled diamond in the diagram) rather than aggregation, the contained class will only be addable inside the container, otherwise it will be addable globally in your portal by default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:33
# 8ddaf5ebaa7e46bbb7b89f389e1891a2
msgid "Variants of Content Types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:35
# 5f394b60c81345ef97a6d1cdf6916e94
msgid "Simple Classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:36
# 450579bdb65542c6b961f5e5e723c497
msgid "A simple class is what we had in HelloWorld in the previous chapter. A simple class is based on ``BaseContent`` and ``BrowserDefault``. This is the default if no other options override."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:40
# 030ed2e1be00471cba3b772d3695c301
msgid "Folderish Classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:41
# f8a2447d94d74d1984d9b6b2ad4ba501
msgid "The easiest way to make a content type folderish is to introduce composition or aggregation in your model - the parent class will become folderish and will be permitted to hold objects of the child classes. You can also make a class folderish just by giving it the ``<<folder>>`` stereotype. Both of these approaches will result in an object derived from ``BaseFolder``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:47
# 647f01c747704fcba7dc69fc3123b75c
msgid "You can also give a class the ``<<ordered>>`` stereotype (possibly in addition to ``<<folder>>``) in order to make it derive from ``OrderedBaseFolder`` and thus have ordering support. Alternatively, you can set the ``base_class`` tagged value on the class to ``OrderedBaseFolder``. This is a general technique which you can use to override the base folder should you need to. As an aside, the ``additional_parents`` tagged value permits you to derive from multiple parents."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:54
# 5e5643a0514642c4ad79642bb44094b5
msgid "Another option is to derive from ATFolder (from ATContentTypes) by giving the class the stereotype ``<<atfolder>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:57
# 91e1b0bf8eb249b6b096774dfe654d8e
msgid "Other tagged values which may be useful when generating folders are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:59
# 470438354a4b448f9b87869166f2c010
msgid "filter_content_types -- Set this to ``0`` or ``1`` to turn on/off filtering of content types. If content types are not filtered, the class will act as a general folder for all globally addable content."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:63
# 5c4243674e4f4f959059b6b124de90d3
msgid "allowed_content_types -- To explicitly set the allowable content types, for example to only allow images and documents, set this to: 'Image, Document'. Note that if you use aggregation or composition to create folderish types as described above, setting the allowed content types manually is not necessary."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:69
# 89eec72b42a046e392782f0797e9eb07
msgid "Portal tools"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:70
# 23b5baa37de44336a092ed973356d0e9
msgid "A portal tool is a unique singleton which other objects may find via ``getToolByName`` and utilise. There are many tools which ship with Plone, such as portal_actions or portal_skins. To create a portal tool instead of a regular content type, give your class the ``<<portal_tool>>`` stereotype. Tools can hold attributes and provide methods just like a regular content type. Typically, these hold configuration data and utility methods for the rest of your product to use. Tools may also have configlets - configuration pages in the Plone control panel. See the quick reference at the end of this document for details on the tagged values you must set to generate configlets."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:81
# b62d14a5e9264c778d0e6b6cf8e99469
msgid "Abstract mixin classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:82
# bdb32f53311b444b90f2ccc207191a23
msgid "By marking your class as ``abstract`` in your model (usually a separate tick-box), you are signifying that it will not be added as a content type. Such classes are useful as mixin parents and as abstract base classes for more complex content types, and will not have the standard Archetypes registration machinery, factory type information or derive from BaseClass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:89
# 6fc89425e0654f5cb49776b9652a5bfb
msgid "Stub classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:90
# 9412d60fdb1e4bb084ed77f2b769e377
msgid "By giving your class the ``<<stub>>`` stereotype, you can prevent it from being generated at all. This is useful if you wish to show content types which are logically part of your model, but which do not belong to your product. For instance, you could create a stub for Plone's standard Image type if you wish to include this as an aggregated object inside your content type - that is, your content type will become folderish, with Image as an allowable contained type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:99
# 75ec1ff84cff422eb222fc40c6e7ec62
msgid "Deriving/Subclassing Classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:100
# eafe9e730320404dbf6957c66b0fef13
msgid "Deriving or subclassing a class is used to extend existing classes, or change their behavior. Using generalisation arrows in your model, you can inherit the methods and schema from another content type or mixin class in your class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:105
# f6e9b737c0c241d2ae99392d6612617e
msgid "Simple Derivation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:106
# a245652a6e1b4beea5a79e445c14282f
msgid "All content types in Archetypes are derived from one of the base classes - BaseContent, BaseFolder, OrderedBaseFolder and so on. If you wish to turn this off, for example because the base class is being inherited from a parent class, you can set the ``base_class`` tagged value to ``0``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:112
# fbce190125094aa78e01275d6d2f0792
msgid "Multiple Derivation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:113
# a3063e0706ca4ec59d195607a7784625
msgid "You can of course use multiple inheritance via multiple generalisation arrows in your model. However, if you need to use a base class that is not on your model, you can set the ``additional_parents`` tagged value on your class to a comma-separated list of parent classes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:119
# d999a9804cb741e8ba6a67cda3785755
msgid "Deriving from other Products"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:120
# e157b84e6b1449afa0a0e36469d26628
msgid "If you want to derive from a class of an other product create a stub class with a tagged value ``import_from``: This will generate a import line ``from VALUE import CLASSNAME`` in classes derived from this class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:125
# 1c876ac33b734bdb8f73bb487dfe9003
msgid "Deriving form ATContentTypes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:126
# ce13d8d9272c49e385f554def3b06228
msgid "To derive from ATDocument just use a stereotype ``<<atdocument>>``. Also possible with ``<<atfile>>``, ``<<atevent>>`` and ``<<atfolder>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:130
# 315f215163ba455d8650f3649db8b8be
msgid "Packages - bring order to your code"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:131
# ee8a9af8e2554bacb8dd167ea057d315
msgid "Packages are both a UML concept and a Python concept. In Python, packages are directories under your product containing a set of modules (.py files). In UML, a package is a logical grouping of classes, drawn as a large \"folder\" with classes inside it. To modularise complex products, you should use packages to group classes together."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:9
# 3cb46a30c3534360b2716b8b204fffb1
msgid "Setting up the Widgets for each field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:11
# 6dc328f9b8c844c884d79ac13fd80ee5
msgid "ArchGenXML will pick a default widget for your fields and fill in default labels and descriptions. For example, a ``string`` field gets a ``StringWidget`` by default, but a ``selection`` field type gets ``SelectionWidget`` on a StringField! You can override this in two ways. So ArchGenXML mixes up fields and widgets slightly for convinience reasons. Anyway, you can override all predefined definitions using widget options."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:13
# 7bb74ce566544bc581f78c045995b1f5
msgid "Widget options are specified with the prefix ``widget:``. As with normal field tagged values, unrecognised options will be passed straight through to the widget definition."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:15
# 4de5b33df4424f93a87035be28e13478
msgid "The most common widget options are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:17
# 1fd7f828366d4a389b8f031f3532249b
msgid "widget:type -- sets the widget type used. Its the name of the widget class. You can use all widgets shipped within the Archetypes-Framework by just providing this tagged value. To use 3rd-Party widgets you additionally need to import the class using the *imports* tagged value on class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:19
# a218c6dd27804d3f98494ae7dee9b409
msgid "``widget:label`` -- sets the widget's label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:21
# 6a83fdcb4a9c4dc1bbf84ac7532ad09b
msgid "``widget:description`` -- sets the widget's description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:23
# 70d25c48f2a14e79b8b35808a8355d11
msgid "``widget:label_msgid`` -- overrides the default label message id (i18n)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:25
# 7a669563f57c436eb4a144a254d56ccc
msgid "``widget:description_msgid`` -- overrides the default description message id (i18n)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:27
# bdb3677d900c4fc6ba0a64245065bf6f
msgid "``widget:i18n_domain`` -- sets the i18n domain (defaults to the product name)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:29
# 08d32330dfe2491ab1d55bf7b9bb7a64
msgid "You may also use widget-specific options, such as ``widget:size`` where they apply. Look up possible widget-specific options at the documentation of the widget you want to use."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:33
# 3e21be2279224ecbbdbf3057d11a4142
msgid "Changing the default widgets"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:34
# b67a83d30e024d60b005054095c0adf0
msgid "To change the widget used for one field-type for a whole model, a product, a package or just for all fields in one class you can set on the product, package or class level the tagged value ``default:widget:FIELDNAMEABBREVIATION`` to ``WIDGETNAME``. For example use the tagged value ``default:widget:Reference`` set it to ``ReferenceBrowserWidget`` to use the ReferenceBrowserWidget instead of the ReferenceWidget. You might also want to also use the ``imports`` tagged value and set it to ``from ATReferenceBrowserWidget.ATReferenceBrowserWidget import ReferenceBrowserWidget`` on your class to ensure that you get the widget definition imported into your class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:37
# 4ca04bd33b6d47e8aa4dcad3bd4693e1
msgid "Creating new widgets"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:38
# b48c57322c904ba5ad4de4431fa5e9f8
msgid "To define a new widget add a class to your model with the ``<<widget>>`` stereotype."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/index.rst:3
# f3f4edfdcea9423b94b2375656135098
msgid "Basic Features"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/index.rst:7
# 9dab8134dd884e4482e4a05439101394
msgid "Content Types, Fields, Widgets, References and Workflow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:3
# 36c4534a6f1d41649d224027d7d186e1
msgid "Methods and Actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:9
# 89e61033885c48d89c85fb7af6e6be1c
msgid "Defining Methods and Actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:11
# aa8c5a5dd5214f44870acb214adb91e4
msgid "To create a method in your class, add a method to the UML diagram, with the desired parameters. The types of the parameters and the type of the return value are ignored, since Python does not support this."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:13
# a4ffb02cedf44dbcb92a60a14874dd4e
msgid "Methods can different access specifiers (also called visibilities) These are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:15
# 75fd37a5720740e4bad59ffed5b29c32
msgid "public (shown by a + before the method name) -- The method is part of the class' public interface. It will be declared public (accessible from unsafe/through-the-web code) by default. If you add a tagged value 'permission' (see below), it will be declared as protected by this permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:16
# fe3cb1c52da74ec9bf0b5d0aae98fffe
msgid "protected (#) -- The method is not part of the class' public interface, but is meant for use by sub-classes. It will be declared private to prevent unsafe code from accessing it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:17
# cf02911eaf0a492ba4fbad1899bb7c13
msgid "private (-) -- The method is internal to the class. It will be declared private to prevent unsafe code from accessing it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:18
# 86879d8ef79e401cb3aec2a803400eba
msgid "package (~) -- The method is intended to be accessed by other code in the same module as the class. It will not gain any Zope security assertions, relying instead on the class/module defaults."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:20
# 564a3998cbc54c40ad150362b359ea4f
msgid "There are a few tagged values you can use to alter how the code is generated:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:22
# e9c76db253474d3799be30840a12fe54
msgid "code -- Sets the python code body of the method. Only use this for short one-liners. If you fill in code manually in the generated files, method bodies will be preserved when you re-generate the product from the UML model."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:23
# 4d401b6408c24e018124df96b85a3aac
msgid "documentation -- Content of the python doc-string of the method. You can also use the documentation feature of most UML modellers to set documentation strings."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:24
# 04e0ba247db0404aa0d8ca5c853dbdc3
msgid "permission -- Applies to methods with 'public' visiblity only. If you set the permission tagged value to ``My custom permission`` results in ``security.declareProtected(\"\"\"My custom permission\"\"\",'methodname')`` - that is, access to your method is protected by the permission with the name ``My custom permission``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:26
# 0816ade7deaf47bc84f93720125ff5b0
msgid "If you want to use the CMF core permissions, add an ``imports`` tagged value to the method's class containing ``from Products.CMFCore import permissions``, and then set the permission tagged value of your method to ``python:permissions.View``, ``python:permissions.ModifyPortalContent`` or any other core permission. You can also use the common paradigm of defining permissions in config.py as constants with names like EDIT_PERMISSION. A config.py is automatically generated and its contents imported, so you can just set the permission tagged value to, for example, ``python:EDIT_PERMISSION``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:28
# e43c0336d7bd40a2a4efdf64816d6d9b
msgid "Archetypes uses actions for generating custom tabs to access some view of an Archetype object. ArchGenXML can generate actions for you: Just define a method without any parameters and set its stereotype to ``<<action>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:30
# 6f66d18543844256812578a6b10909be
msgid "Once again tagged values can be set on the sterotyped methods in order to set some properties of the action:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:32
# 85abe4d2677c450a820f5f08028671e7
msgid "action -- The TAL expression representing the action to be executed when the user invokes the action. Defaults to the methodname."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:33
# 100fb644dff24f08b812c0255b877187
msgid "category -- The category of an action, view or form. Defaults to ``object``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:34
# 8f5af2ec51c643ba909d43439e13e8d5
msgid "id -- The id of an action, view or form. Defaults to the methodname."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:35
# 5103743f1b064e3a984299c6c4bdfd6b
msgid "label -- The label of an action, view or form. Defaults to the methodname."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:36
# c8c543c0820248ba9b56fe5a8015612e
msgid "permission -- ``permission=My permission`` results in ``permissions: ('''My Permission''',)``. See the description of the general ``permission`` tagged value above for more."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:37
# a3a56f53823c4e179b3c819cc919afec
msgid "condition -- A TALES expression giving a condition to control when the action is to be made available."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:39
# 64573dfbe38b48c8a9f07fa8a603d3e1
msgid "You can override the default Archetypes actions by using special names for the id. These are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:41
# 824a37393c2f481e80a6160a709b22cb
msgid "view -- for overriding the default view action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:42
# 23f989e41b3e4308a701496b0a16a551
msgid "edit -- for overriding the default edit action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:43
# 80fbb622e6514719b2c17c472ae1f09b
msgid "contents -- for overriding the default contents action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:3
# 51bc33cefcf2416cae73a16f713badf6
msgid "Relationships between classes and objects"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:9
# 7aa5a856ef9844848e1e68b52851e112
msgid "How to use references, associations, aggregations and compositions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:11
# ac0e68a706ca41b99d4ada51dc0dc178
msgid "With aggregations, compositions and associations you define where your new type will show up, what it might contain and to which content it can point to."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:13
# 5c1a94c706a541f8942987b226458ca8
msgid "There is virtually no limit on how many aggregations, compositions and associations you can attach to a class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:16
# e166d5313c304695a15e279fb1ba3e5b
msgid "Aggregations: Global Containment"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:21
# c3f3571b93ff4c528c29b2518b8b6a7e
msgid "Aggregation means: This content can exist global and in this container. The container class that gets the empty rhomb (diamond) attached is derived from BaseFolder and it's ``allowed_content_types`` is set to the class that is attached to it. If more than class is attached to one class by aggregations the ``allowed_content_types`` is extended accordingly. The attached class keeps the default ``global_allow=1``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:24
# c29159563f58449bb8e477a90c7aea36
msgid "Compositions: Strict Containment"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:29
# 43b82a221cf04cde8fcd6fb58ef3899b
msgid "Compositions are used to model parts that exist or live and die with their associated owner. So the code generated is similar to the one generated by aggregations, but with one major difference: The attached classes are only allowed to be generated in the folderish type of the class they're attached to (this is done by setting ``global_allow=0`` in the factory type information of the class)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:32
# a79a470dc00a4e43825f3e2bb1321054
msgid "Directed Associations: References"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:37
# 7415d41798d14095adc9607e374c8626
msgid "References are used to store the relation of an object to other objects."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:39
# d7b0429970494f62a4d5860f08cda20f
msgid "Each content type that derives from ``IReferenceable`` is capable of being referenced. Objects from such a content type have an UID (Unique Identification) that's unique throughout the whole Plone site. Therefore References don't break if you move referenced objects around in the site."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:41
# 41ceeb9ff1f7477c898c537c566bc6a3
msgid "To use ``ReferenceFields`` there are two possible ways. The by models-design clean way is to use directed associations. Another possibility is to define References as class-attributes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:44
# 17c883428825486d918886e7eab570e4
msgid "Directed Associations"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:45
# 24a649d05c8d4a7199962c2bfe20e46b
msgid "An directed association between two classes generates a ``ReferenceField`` in the class where the association starts."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:47
# 6fcd11df7e994da49d6aed58f6b4902d
msgid "The ``relationship`` itself is named after the association's name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:49
# 048bf826556b4571a5d00d12c77c02ec
msgid "The multiplicity defines if the allows a 1:1 or 1:n relation."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:53
# 394ae8eedd7d42fea3dfc1283b5e843e
msgid "This only results in validation on the field. References at all don't know anything about multiplicity, so this is only a check on userinterface-level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:56
# 338fd651036f46eaa977776c09cad469
msgid "All other field settings are taken from the association's end, including information how to generate the widget. By default a ReferenceWidget is used. You can use tagged values on the association's end to define label, description, a different widget-type, schemata, etc. like you do it on a field (on a class attribute)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:58
# a5071710d76245f49035c3187aa36ef5
msgid "The big drawback of using associations to create ReferenceFields is that they always get attached to the end of the schema and there is no way to change that in the UML diagram. So if you need order in your fields read the next section."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:61
# 482203184071452a85f7ece770181b03
msgid "References as class attributes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:62
# 4f7da9e75a3f4b9b898a51c18f8c0bc1
msgid "You can define an attribute with the type reference. Then you can apply any needed tagged values to it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:64
# a498706c500840639f71f9da686af7d2
msgid "keys of interest are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:66
# a17cd86db4bc4ff79cd3576465216cb7
msgid "``allowed_types`` : needs a list of allowed types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:67
# c222c0ce072449e7a039ecd33e742cb4
msgid "``multiValued`` : set to 0 to only be able to select one object to reference to"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:68
# 6ee75bdf2c8c45c4b2c58a786b54a2c7
msgid "``relationship`` : name of the relationship in the reference_catalog"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:70
# 72a085e9c21e49ac8d753f1b2fef7ba9
msgid "The benefit of using an attribute to define the reference is that you can define the place in the schema where the ReferenceField will show up."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:73
# 012323647993410ca7df9cd3b56a938d
msgid "Reference classes (advanced)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:74
# 7f2f39dc93ca43ce8b6005a155d9da05
msgid "Sometimes it's needed to store information not in the origin or destination class, but in the reference itself. UML has a notation to model this: `association classes <http://argouml.tigris.org/documentation/defaulthtml/manual/ch17s11.html#s2.ref.association_multiway>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:78
# 6533ed8456f34eff81ecdc81ef508f74
msgid "ArchGenXML support them automatically. When a model includes an association class, two things occur:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:81
# 6a066c157345480bb2f65118857a2ba7
msgid "A new content type is created, named like the association name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:83
# 176b6fda8c72406d9b33fe7d03945479
msgid "The generated ReferenceField has a new attribute defined like this: ``referenceClass = ContentReferenceCreator('My_Association_Name')``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:85
# 17d3ddc38bf44cb2b717c89c7f6bc111
msgid "This causes that the class of the reference instances is now not ``Archetypes.ReferenceEngine.Reference``, but ``Archetypes.ReferenceEngine.ContentReference``, a subclass of it that has a new method: getContentObject(), that return the content inside the reference."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:88
# 3bb7b887d36b475eb505f8272b3da606
msgid "The same effect can be reached without association classes, by defining a content type and then adding the ``association_class`` tagged value to the association (although I haven't been able to make this work)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:90
# 6a5e0595542c45ea9b03ff1661314172
msgid "To create the reference via code, use a special form of the addReference method::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:102
# c6471057da45429f93202b05807d5adf
msgid "(where attr1, attr2... are the attributes of the association)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:104
# 3e5fe2ba96db4c3ca5ac69059bab6270
msgid "To read the data, we can't use the origin.getRefs(assocName) method, as usual, because it returns only the destination objects. One way to read it is by using the reference_catalog tool::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:3
# a46b933ccaf54eabbeb3a9340b9b40c2
msgid "Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:9
# 2ef1aa83cabc4e49bf03a475835badeb
msgid "Generation of tests from UML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:13
# 252fd0afc5464598b0a05ddac2b0f431
msgid "We hope there is no need for us to emphasize how important testing is for even the most simple products you may be developing. This makes it especially useful to include the creation of both your testing framework and individual tests within your UML model."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:15
# 72ede35af70d464e9a08bf7e85f32456
msgid "Within a new package with a stereotype of ``<<tests>>`` you can create your base test case class with a stereotype of ``<<plone_testcase>>`` and a test setup class with a stereotype of ``<<setup_testcase>>``. You can then add additional test classes as needed with a stereotype of either ``<<testcase>`` or ``<<doc_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:21
# 662087bf71a04a6fb3c4b9f8c5b1123c
msgid "Base Test Case"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:22
# be54cda512f840a5a6ddbfecda6012dd
msgid "Creating a class in your tests package with a stereotype of ``<<plone_testcase>>`` generates the needed base test case for all other test cases."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:25
# d10ca3da196d40109358fbdd6e4fbe6c
msgid "Test Setup"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:26
# a215a691721e4c9689d668f685f440ad
msgid "Creating a class in your tests package with a stereotype of ``<<setup_testcase>>`` generates a testcase for the setup, with pre-defined common checks."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:29
# 43113d4faf024f2dacecec5c7092ebd7
msgid "Test Cases"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:31
# 56f3bd31539742088ae4c1b7483a9aa3
msgid "Test Case"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:32
# 2a6780909dca46a18253a507ea393c2e
msgid "Creating a class in your tests package with a stereotype of ``<<testcase>>`` generates a standard test case class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:35
# db7d1bfb43a84779a171289e0d35c6ff
msgid "Doc Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:36
# e5ec170e40ec49e8ba84eb78cb4f6664
msgid "Creating a class in your tests package with a stereotype of ``<<doc_testcase>>`` generates a doc test file in the ``doc`` folder of your product with a name of ``class + .txt``. You can use the tag of ``doctest_name`` on your class (excluding any extension as ``.txt`` is appended automatically) to indicate a different name for your generated doc test."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:39
# 11fdbe083ed34575afebf8ca2a64487b
msgid "Functional Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:40
# 91f6d23a5d40404eb8960c737abe9e1f
msgid "Generate browser functional tests using the ``<<plonefunctional_testcase>`` stereotype."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:43
# bee78eed794a4744818764dac24bdb74
msgid "Interface Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:44
# e2f832d5b08247419f6733cec0fd1609
msgid "Generate interface tests using the ``<<interface_testcase>>`` stereotype."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:46
# d502e3c80e3d4b9592eefff47bf4e22a
msgid "It is unverified whether these generated test cases will verify Z3 style interfaces but stay tuned!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:3
# 6af8202eb3524edea0991afa40bdf605
msgid "Workflows"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:9
# 84868902c61c4fa0b0b5031ce7c958a5
msgid "Usage of state diagrams to create custom workflows."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:11
# 430bb98b188f41c6b140ef70c44fa43a
msgid "ArchGenXML can use state diagrams to generate workflows for a portal type. Workflows are used to set the various states an object can be in, and the transitions between them."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:13
# bb8c9dff67174c2bab3643635ccc8522
msgid "Importantly, workflows control permissions of objects. By convention, and for convenience and consistency, most content types will use the permissions found in the ``CMFCorePermissions`` class in the CMFCore product to control access to their methods. The methods generated by and inherited from the CMF and Archetypes frameworks adhere to this principle. Although many different content types use the same basic permissions to control access, workflows are the means by which you can control permissions for an object in detail. For instance, you may wish to specify that in the ``testing`` state, Manager and Reviewer has ``Modify portal content`` permissions, and Owner, Manager and Reviewer has ``View`` permissions. For the ``completed`` state, you could have a different set of permissions. See the DCWorkflow documentation for more details about how to use workflows."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:16
# af3b8ed0f6d24ce2aa8fe05703a896dd
msgid "Problems with UML-Software"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:17
# c3721a1c672148cc87a51367262c26c9
msgid "The workflow implementation of ArchGenXML has to date only been tested with ArgoUML and Poseidon (tested Version is 3.1 and 3.2 CE)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:19
# 30d1ea8f0a6c4eba977ea462f02ce83f
msgid "ObjectDomain is known not to work at this time, because it does not appear to correctly export the XMI for state diagrams. If you have different experiences, please add a comment to this document or contact us."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:22
# 9a2d63da53c74d62b7f1999325bf0c57
msgid "Creating a workflow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:23
# 40cd895ec90144d79f7371d93a212a21
msgid "In your UML modeller, add a state diagram for the class you wish to create a custom workflow for. If you don't want to assign the workflow to a class use an class with stereotype ``stub``. In Poseidon, this is done by right-clicking on the object in the tree on the left hand side, and selecting to add a new state diagram. The name of the state diagram becomes the name of the workflow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:26
# 564b237d59e44f8fb836c5c4d795f02d
msgid "States"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:27
# 6ab64082e79e4c53b74b91a9ba27c57f
msgid "On the state diagram, add a state item (a rounded-corner box) for each state. You must have an initial state of your workflow for it to work correctly. Use a \"initial state\" symbol (filled cirlce) for the state your object defaults to after creation. Optional you can use a normal state item and set a tagged value ``initial_state`` with value 1 to it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:29
# fe1e8b7dbcb5443f8802e9564d75224d
msgid "At present, ArchGenXML does not support the \"final state\" UML symbols to represent final states, so you should stick to the standard state symbols."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:31
# c8c17f93420a4333b7574eb971a2004f
msgid "The names of your states in UML become the names of the states in your workflow. The user-visible label can be set with the ``label`` tagged value; it defaults to the state name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:37
# 17e47e7be57b49079c6ac73ca527f8a8
msgid "Transitions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:38
# 324750cbeed94ad2a619fb39d4bf9036
msgid "For each possible transition between states, add a transition arrow to your UML model. The name of the transition becomes the name of the workflow action. You can set the ``label`` tagged value on the transition to set a custom label to display to the user."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:40
# 44e52cb07cca4defb3bd67282a343e8f
msgid "If a transition with the same name/target is used more than one time, you can use the stereotype ``<<primary>>`` to define its settings once and use it by name on all similar transitions."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:43
# 4f92225aea474e85b49e84c85855f3fb
msgid "Transition guards"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:44
# 3ffd2f5e9eed45a6945f6a732a6823da
msgid "You can add a guard to a transition to restrict to whom and when it is made available. Set the ``expression`` field of a transition to a \\|-separated list of the following pairs:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:46
# aced67e1aa4f4ba3a4b20f304c5a5d05
msgid "**guard_roles**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:47
# 6fdb6a1ba67a411fba55b83b43a5f908
msgid "Set ``guard_roles:Owner; Manager`` to restrict the transition to users posessing the Owner or Manager role in the current context."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:48
# 6481d5561f6f40e8939ae4b168449a4e
msgid "**guard_permissions**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:49
# 1d929e346b194144bf60e6c36fdcf023
msgid "Set ``guard_permissions:My custom permission;View`` to ensure that only those users with ``My custom permission`` or ``View`` permissions in the current context are allowed to access the transition."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:51
# 94c6963c86be47ba924c289bcaccc97a
msgid "**guard_expr**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:51
# c6ca8d765ebe4bdebf3b33d539ff9074
msgid "Set ``guard_expr:expression``, where ``expression`` is a TALES expression, to have the expression be evaluated in order to determine whether the transition should be made available."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:53
# 164443998d57430393f388241ac9e629
msgid "Thus, to restrict access to roles Reviewer and Manager, and only those users with permission ``My custom permission`` and ``View`` in the current context, you can set the expression of the transition to ``guard_roles:Reviewer;Manager|guard_permissions:My custom permission, View``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:55
# 3245609199c74c7394183c7ed47d35d4
msgid "If you are using Poseidon, transition guards are located in the property of the transition arrow with the name ``[A] Guard``. You can add an expression like the one outlined above to this field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:58
# 0e6f795c188c4534a18cbfaf71939630
msgid "Permissions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:59
# be2374ba91bb4dcab4cdc9627248b4d9
msgid "ArchGenXML uses tagged values on states in a somewhat unconventional, though convenient, way to control permissions. With the exception of the special-case ``initial_state`` and ``label`` tagged values, you give the name of the permission as the tagged value key, and a comma-separated list of roles the permission should be enabled for as the value."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:61
# a772b0c713de4ffbb499a82e5831b576
msgid "There are three shorthand permission names available:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:63
# 1350e4f5354b4a22891559090f5e0f98
msgid "**access**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:64
# 10d93d0d1a9e4b0f9c9ab5ef8e0f4d49
msgid "referes to the ``Access contents information`` permission,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:65
# bf1ef527529349a9873bb9b14fdce659
msgid "**view**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:66
# 8bd813f43ad54277b3c64da30fa18bba
msgid "refers to the ``View`` permission,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:67
# b0e2e60bff2045f0a41e3923c83a7ac3
msgid "**modify**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:68
# 7e28c3c2e82449539d4a3594eceabcfd
msgid "refers to the ``Modify portal content`` permission,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:69
# 7d5a96c44a0b4e949b5786b61c17e474
msgid "**list**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:70
# 34532d09fa974c57874156d95aee14d5
msgid "refers to the ``List folder contents`` permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:72
# 9597e53f6f204f4087d5ec4a4311019d
msgid "**delete**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:72
# 1e350f0d62bb4e77a1425ce5d8b8aca8
msgid "refers to the ``Delete objects`` permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:74
# 968f5e811d5545969cbd365e1bb290e7
msgid "Hence, if you want your state to permit anonymous users and members to view your content, only permit managers to modify, and permit both the owner and managers to add new objects controlled by the ``Add MySubTypes`` permission, you can add tagged values to the workflow state::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:80
# 6c49475d261b491bb996a051cd3183b4
msgid "If you want to aquire the permissions and add new ones you can use the value 'aquire'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:84
# 4a2683fa01924658ad969aee6f0570e7
msgid "(One special case: if you leave the value empty, no one gets that permission (which is logical), but it also explicitly unsets acquisition of the permission)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:87
# fa59d67a1b2f432b89eafab647020e64
msgid "Workflow actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:88
# 838ecd2536ae435f82d665c7ef164593
msgid "The ``portal_workflow`` tool allows a script to be executed before and/or after a transition is completed. This is no longer supported. Instead subscribers to the Workflow events are used. Event-subsribers are more flexible."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:90
# 23a0c739148a47bba90ad202dd7ae85f
msgid "Actions are set using the ``effect`` field of a transition. The value given here gives the name of the subscriber to execute (and thus must be valid python method name). ArchGenXML will create or modify a subscriber for each workflow-action in a file ``wfsubsribers.py`` in your product. You must fill in the method bodies for the actions in this file. Method bodies will be preserved upon re-generation of your product from the UML model. In Plone 2.5 compatible mode DCWorkflow needs a patch with a backport. This patch is generated, if ``2.5`` is selected as ``plone_target_version`` (tagged value on model)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:92
# 60e072f62de14ae6904ea35fbeb9a688
msgid "By default, actions specified in this way are post-transition actions, meaning that they are executed after the transition has taken place. If you wish to specify a pre-transition action, executed before the transition takes place, separate action names by semicolons: ``preActionName;postActionName``. If you want only a pre-transition action, use ``preActionName;`` to specify that there is an empty post-transition action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:95
# 375cf4922c4f4079b1a303e617d5a3c9
msgid "Attach workflow to more than one class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:96
# 03962676ef594f2794d8ad523ecf78f8
msgid "In UML there is no semantic to use a workflow for more than one class. We introduced the tagged value ``use_workflow`` for classes. Value is the workflow name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:99
# 03ecbbcfc719448c831107639db556a2
msgid "Worklist support"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:100
# 044e53bbbeb04c2f911529bacde7014a
msgid "You can attach objects in a certain state to a worklist. A worklist is something like the \"documents to review\" list you get when you're a reviewer in a Plone site. This is done by adding a tag ``worklist`` to the state with the name of the worklist as value (like ``review_list``)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:102
# ecc25643e2e24d4bbb377365f568dbc9
msgid "You can add more than one state to a ``worklist``, just by specifying the same name for the worklist tagged value. Likewise, you can have more than one worklist (just not on the same state). The tagged value ``worklist:guard_permissions`` allows you to specify the permission you need to have to view the worklist. The default value is ``Review portal content``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:3
# a72a9c82900f404090ec356a5972629c
msgid "Configure ArgoUML to use the archgenxml profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:9
# 1f8984df8c134974ac8081659852ee1e
msgid "ArgoUML can load a \"definition\" file with predefined tagged values and stereotypes. So you have all the custom tagged values and stereotypes used by ArchGenXML available in dropdown menus."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:14
# b93751a5c9294bf3a140bd5d68925763
msgid "Background and Notes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:15
# b8eb387160334c52ad65f6601fa3cbd9
msgid "The screenshot below shows ArgoUML with the custom tags from the definition file. Having many of the possible options available from a menu has the following benefits:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:17
# 62e907f60de54c1299d0aff9de5a708d
msgid "saves time - sometimes clicking is faster than typing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:18
# 04b5f3aac4604f97b441e68d01a2f38d
msgid "reduces errors - no more mispelled tags"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:19
# 43b6187b769b492db24008f082e63880
msgid "presents a learning opportunity - seeing new tags and stereotypes provides a springboard for further investigation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:25
# 8b31478c3d894a27a116b53783b60612
msgid "This walks you through how a setup of ArgoUML on an Ubuntu desktop system. The methodology should be easily adjusted to other platforms."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:29
# 2ace1ef2cedf44b295855a80fd56979e
msgid "These are my assumptions:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:31
# ff3266545b7f4f82a948adecc0e8ff00
msgid "You already have latest sun java JRE installed. You can get it on Ubuntu with::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:35
# 0d53f87875ec4411bd81cbe4516096c4
msgid "If::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:39
# 543b4cb976be43ba9ec0a73271c6a543
msgid "don't give you */usr/lib/jvm/java-6-sun/jre/bin/java*, you can set java sun as the default java implementation like this::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:43
# e986965851914d20a8a021dcfb513592
msgid "You have copied archgenxml_profile.xmi in the *<path to archgenxml>/profiles* directory like described in the previous section."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:46
# d79084b80615484d8ba2e1a16e289acf
msgid "Install ArgoUML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:48
# b286d0f98d4545cc8b021f8a9ecf6ef5
msgid "Go to http://argouml.tigris.org and download the latest stable version of ArgoUML (0.28 when these lines are written). Download the exe for Windows, the tar.gz archive for Linux."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:50
# 4ef6b517e3a84b80843ca7e0d374c045
msgid "On Windows, execute the downloaded exe to install it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:52
# 7ab675ac489a45b2aae21aedd259db56
msgid "On Linux, unpack the archive somewhere, a good location is '/opt'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:58
# cb4717c116cb40e38c35c87de4dcf3da
msgid "It should create a argouml-0.28 directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:60
# 7f3733999b504034993f5a27b2f5c363
msgid "It is handy to symlink 'argouml.sh' to '/usr/local/bin/argouml'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:65
# 556e4b25033c4121b3ff961c7a41fbda
msgid "Configure ArgoUML to use the definition file"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:69
# e654ba5468604abf81187bb4425a6f27
msgid "ArgoUML 0.24 used to use the argo.defaultModel option to specify a profile to use like this::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:73
# cab44c9915cc4ada913bea6761e4e782
msgid "It's not the case anymore with latest ArgoUML version. Please read on."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:75
# 13b760bdbc6c44fd95915e84aacdccec
msgid "Launch ArgoUML and go to Edit -> Settings... -> Profiles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:76
# dcab6eb335bc41cea4e9994950ba7674
msgid "Click on Add and specify your *<path to archgenxml>/profiles* directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:80
# 2e69c6d56246413b8ff38017132e865f
msgid "archgenxml will use the list of profiles directories configured on ArgoUML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:82
# aa3ec8c1d5e643ba8f09903d17f922ee
msgid "Close ArgoUML and launch it again."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:83
# e2ee3ca64c6b49e585d20071f4f0f45c
msgid "Go again in Edit -> Settings... -> Profiles AGXProfile should be visible now in \"Available Profiles\"."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:84
# f8903038ddaa4f7b90ecca50fd628f86
msgid "Click on \">>\" to add it to \"Default profiles\"."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:85
# e2564da33c4e4686bd21b5523512f8b9
msgid "You should remove the Java profile from the \"Default profiles\" list to be sure to not use stereotypes and tag definitions from this one. You should only have AGXProfile and UML 1.4 in this list. You can't remove the UML 1.4 here, but you remove it by project."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:87
# c4f982f42e3b41b1b34d7018d3456aa4
msgid "The global configuration is now done."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:89
# 8f9c54e265d04f3abdfa65370865219e
msgid "Now for every new project you create:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:91
# 9018698a0035428b8236239de32bb205
msgid "Click on the fourth icon in the toolbar to configure Profiles for this project. Delete UML 1.4. You should really only have AGXProfile is this list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:95
# 2a6fd10c59a348eabd8a5431e6029f07
msgid "if you want to generate Plone 2.5 compatible code, set on the model root the plone_target_version tag definition with value 2.5."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:98
# 1cc1f493c74542d4a369fe2f7aeb4641
msgid "Why ArgoUML?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:99
# c101eb3da7684bbfba5a972950ff2bce
msgid "Just a few notes on why using ArgoUML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:101
# 38f5a41d835b489387914f81efbd3e0e
msgid "Mature - it supports the important stuff (at least as far as ArchGenXML goes), state diagrams, tagged-values, stereotypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:102
# c2fc95d1bac741ebbcff94f9ac9b3ce1
msgid "It is pretty lightweight, which is important when your laptop only has 256 MB of RAM and a PIII 700 Mhz processor. Poseidon Community Edition, though nice, is just too memory hungry."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:103
# bc6a7e618cf44d22a1a5eb27b2812c9e
msgid "Price is good (free and open source)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:3
# 98c87a65d8194125b88b5281b50e3a0c
msgid "Hello World"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:9
# c0a4aca49dfd445ea5b9245cede294eb
msgid "Create your first minimal content type with ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:11
# 477ff810a7cf4a6899d6125444cc75ad
msgid "Open the UML tool of your choice. Make a new UML model and give it a name ``HelloWorld``. Then add a class diagram (most UML tools do this automatically)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:14
# e554d72daa7e463d9773c1cad3ce4b8b
msgid "Choose the tool for class creation and add a class to the diagram. Give it a name such as ``HelloType`` and add an attribute ``HelloText`` with type ``string``. The `helloworld3.zargo <helloworld3.zargo>`_ (Plone 3.0) / `helloworld25.zargo <helloworld25.zargo>`_ (Plone 2.5) models were created using ArgoUML, and contain the type as described above."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:25
# 0e41a2c85f0a48ad948abd932061c76e
msgid "Generating the product"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:27
# 983ed38c32a04764a52f053da5afbab1
msgid "Save your model as ``helloworld.zargo`` (ArgoUML) or ``helloworld.zuml`` (Poseidon), or export it as an XMI file with the name ``helloworld.xmi``. Then go to the command line and execute:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:35
# ed509f9fb6f441d6a2a38eefc971d07f
msgid "ArchGenXML will begin code generation. When it completes, you will have a new folder ``HelloWorld`` on your file system. Its contents looks like::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:73
# 22a13eb23603431c97613d3ce51d0c1d
msgid "Installing and using the generated product"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:75
# 458633248ce34f0cb138f0725742a93e
msgid "Move the whole folder ``HelloWorld`` to your Zope/Plone 3 instance's ``Products`` folder. Restart Zope, open Plone in a browser and log in as Manager. Choose *Plone Setup* from the personal bar and choose *Add/Remove Products*. A new product ``HelloWorld`` should now appear in the list of products available for install. Choose it and click *install*. Go to your personal folder. In the list of addable items, you'll find the content type from the new product. Add a test instance to see if it works."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:87
# a45fd693106542998c0ffde58a6c8e85
msgid "That's the trick. By the way: the title is always part of the schema. But don't worry: you can hide or recycle it later."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/index.rst:7
# 2c0d2ac8edc64821810d39867bf7755b
msgid "Introduction, Installation and Hello World."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:3
#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:12
# ae659e34ae0940b7b7164a9d0ddb66d9
# 457e00b9f73c4e40bc4dce65330a0917
msgid "Installation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:9
# 954c033b53ff4db4b4be6cf468506d8f
msgid "How to install ArchGenXML and get up and running."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:14
# 43dca601e3b74663bbfb85e22516852a
msgid "ArchGenXML has a dependency on some Zope 3 eggs. To avoid messing up your global site-packages directory, using buildout or virtualenv is recommended."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:19
# 74fec1e909af41b08d83ded90c5732c7
msgid "In an older version of AGX, a Zope 3 installation could be configured in a ``~/.agx_zope_path`` file. This case is not supported anymore. You can delete this file if you have it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:23
# f6b4178220144b31a4ce933b77e3d27a
msgid "On Windows, I assume that you installed Python 2.4.4 using the `msi installer <http://www.python.org/download/releases/2.4.4/>`_ installer, and that you installed it in the default location. If you have not already done so, configure the ``Path`` environment variable to include your python path and scripts directory. For this, go to *Control Panel*, *Advanced*, *Environment Variables*, edit *Path*, and append ``;C:\\\\Python24;C:\\\\Python24\\Scripts`` to the existing string."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:32
# f90bb01bf1874e5c84d84bcccaca8c04
msgid "Installing stable version"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:36
# e9cf0a3b743a4e34b9413d8b03ed31de
msgid "Adding the ArchGenXML egg to a Plone buildout is not supported! The Plone 3.x buildout is shipped with an old Zope 3.3. ArchGenXML depends on the latest version of Zope 3 eggs. So please create a buildout only for ArchGenXML like described below."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:41
# c1eb6faecd894a939c4949172e62161a
msgid "If you want to install archgenxml via buildout (recommended), read :ref:`agx-installation-using-buildout` and skip the :ref:`agx-installation-using-easy-install` part."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:45
# 5068d5ee7b7e4be6916796d523fd39c1
msgid "It can happen that the ArchGenXML version on http://plone.org is older than PyPI because the release manager forgot to upload it on http://plone.org or for another reason.  ``easy_install`` and ``buildout`` will get the latest ArchGenXML version from PyPI by default, so it's fine."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:53
# ca85a775de45468da723f77ed3412085
msgid "Using buildout"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:55
# 5f424261558d4da9bba949ec26943ee5
msgid "Create a fresh directory and go into it:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:62
# eeeca4831eca43b1be83e46ab3e70a27
msgid "Download the normal `bootstrap.py <http://svn.zope.org/*checkout*/zc.buildout/trunk/bootstrap/bootstrap.py>`_ and put it in this directory. You can copy an existing bootstrap.py file of one of your buildout, it's the same file."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:67
# 955277787f7c4579b53004a13a8e0ac3
msgid "Then create a ``buildout.cfg`` file in this directory with the following snippet:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:0
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:0
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:0
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:0
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:0
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:0
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:0
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:0
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:0
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:0
# 3dfc0cc9164f463f9ac129143ac083ee
# 2fb811c9a58a424ebe2cb0fba138e88d
# ae3906d79f3c4e859f9d28afb43f50ff
# 25e147e535144970ac00ec43542ff024
# c88ab644239e4677b1df522fbcad6e56
# 5acf815bc954483485aac290573f3448
# 887c71ab7bb040bfb0cb8e14d7457fa2
# b02a82e3251e435eb874d8822700e0e2
# b738f53daeae407db52cc41386c03790
# 22649a7f4456407e97a7964beb1f6928
msgid "Todo"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:80
# 1db25b821bab48f2bef68b0cd279f78e
msgid "Is ini the appropriate lexer here?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:82
# c3c59be7ec64480ca4127c5ebbbb6fa4
msgid "Finally bootstrap the buildout and run it:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:89
# 3fa6320ae9a44d05a850523e1cd6d526
msgid "On Windows, it's ``bin\\buildout``; you have to replace '/' by '\\' in all following examples."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:91
# 59f2758b2ea84c3c9ef5f2ceace66b2f
msgid "The ``archgenxml`` command is now available as ``./bin/archgenxml``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:93
# 1584f6dc6c6c4c3b8dee7f1b9690ec68
msgid "To update ArchGenXML later, go in your directory and run buildout again:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:99
# 00b2f4ef4588437cac684c53c4a52fc9
msgid "It will download latest version of ArchGenXML and all its dependencies."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:101
# 59e2cdad7c8e42b7bbc3aafdb4a0f158
msgid "In the following, I refer to the *<path to archgenxml>* as the ``archgenxml_buildout`` directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:107
# 6b0ea7e45eda4e399590ddb1a0c278b9
msgid "Using ``easy_install`` in a virtualenv"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:109
# 5ba94aa62109451681dc4274dde2256a
msgid "If you don't want to use buildout, you can use ``virtualenv`` to create an isolated environment. You have to install the ``setuptools`` egg in order to have the ``easy_install`` command available. On Ubuntu you can do it with ``apt-get install python-setuptools``. On Windows, go to the `setuptools pypi page <http://pypi.python.org/pypi/setuptools>`_, download the ``exe`` which matches the Python version you are using, and execute it to install it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:117
# 12bcb3c4ae9746339d8e5b0f56de9231
msgid "Install virtualenv with easy_install:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:123
# 0328f5f933a9453b8fd562a0d7600e76
msgid "On Windows, ``easy_install.exe`` is in ``C:\\Python24\\Scripts``, so you have to invoke it with the full path if you haven't added this directory to your ``PATH``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:127
# 97e3526c095744b3b0e3bd68fcc68666
msgid "Create the virtualenv with the ``--no-site-packages`` option to ignore globally-installed packages:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:137
# d065c379d28342eabc0274bf3048ec9b
msgid "Every time you want use ArchGenXML, you have to go in the *agx* directory and type ``source bin/activate`` to activate the environment. To deactivate the environment, type ``deactivate``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:141
# 0b11c1830dc84eff97f14abd487fe3c4
msgid "To update ArchGenXML, you have to update each egg. The most important ones are ``archgenxml`` and ``xmiparser``:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:149
# 3a28f3b8bf394dbd9a4489abdacddb6c
msgid "If you have a problem with ArchGenXML, please be sure to recreate the virtualenv completely so you have the latest versions of all eggs before asking on the archetypes-users mailing-list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:153
# acd3f43469d14571acee3924afc7a3d3
msgid "I call below *<path to archgenxml>* the path to the virtualenv agx directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:156
# bbe35d7ec7824fd4ba6983c7f4064f89
msgid "Installing the development version"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:158
# 0286c75bc08141edb3df3f20325b85b2
msgid "ArchGenXML's svn trunk is for the 2.x development version."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:160
# 94645e61b58e49c7a665e3a2af31c65b
msgid "As usual, the goal is to keep trunk workable. Some of the developers work and develop on the edge: trunk."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:162
# b60118f504fa455a8307fdcafc9cd9c1
msgid "If you need stability, use the latest release."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:164
# 3c119f977faa442aa1fba3a151fe0b65
msgid "The only supported way to use the ArchGenXML trunk is with buildout. You install it like this:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:173
# 1a5dc223313d454bb294b050a10f7d8d
msgid "To update your buildout:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:181
# d3b47e4e9b654e39afabd201bdb58307
msgid "If you are interested in AGX 3 development, see http://dev.plone.org/archetypes/browser/AGX"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:183
# 723681b126464f6ebfc827418f3fbe78
msgid "I call below *<path to archgenxml>* the archgenxml_buildout directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:186
# 96379985c03a4d5d90e50c6421172fe1
msgid "Get the ArchGenXML profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:188
# 04d73b0ae2634b73bcb8fac953868e25
msgid "The ``archgenxml_profile.xmi`` file contains information about stereotypes, fields, and other stuff that AGX needs to generate valid Python code from your model. You can `get the profile <http://svn.plone.org/svn/archetypes/ArchGenXML/trunk/umltools/argouml/archgenxml_profile.xmi>`_ from subversion."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:194
# bcdb21bbba114e229692edc52adeb8e3
msgid "Or you can regenerate it with ``<path to archgenxml>/bin/agx_argouml_profile``. An ``archgenxml_profile.xmi`` file is generated in the current directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:197
# c15384a13cb245e68ccc792c1e791278
msgid "Create a ``<path to archgenxml>/profiles`` directory and put the file here."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:199
# 07872f4910a04d76b0d582124871facf
msgid "Note: In an older version of AGX, this file was called ``argouml_profile.xmi``. You should not use it with ArgoUML > 0.24."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:205
# 75ce2d493a24464daa19d8cbf3af593b
msgid "On Windows, you may have to install and configure the `mingw32 compiler <http://plone.org/documentation/kb/using-buildout-on-windows>`_ to compile the ``zope.proxy`` egg, an indirect dependency of ArchGenXML. Now ``zope.proxy`` eggs are built for Windows, so you should not have this problem anymore."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:211
# c6ab4df79f4f4f48bc2ad82f0199f06f
msgid "Support"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:213
# d630c5485bdd4e788612cd180e426c2c
msgid "For any questions or problems, please ask on the `archetypes-users mailing-list <http://plone.org/support/forums/archetypes>`_. Please don't use comments on the manual pages. Not everybody is alerted when a comment is added."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:217
# a0edf75ba2344b7bb8695deb87934dd9
msgid "If you want to contribute to this documentation, please post on the `plone-docs mailing-list <http://plone.org/support/forums/docs>`_."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:9
# de4997d8a1c14bafbe4701a8562fc8f5
msgid "An introduction to ArchGenXML |---| what it is, reasons to use it, who made it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:12
# 271bcc0804a54a2a9b7b4591fb0cc68d
msgid "What is ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:14
# 5d00d5ab343545eabad3c0e5cff9a09e
msgid "With ArchGenXML, you can create working Python code without writing one single line of Python. It is a command-line utility that generates fully functional Zope Products, based on the Archetypes framework, from UML models using XMI (``.xmi``, ``.zargo``, ``.zuml``) files. The most common use-case is to generate a set of custom content types and folders, possibly with a few tools, a member type and some workflows thrown in."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:21
# 4f17992691044e34a7487b3f95f01341
msgid "In practice, you draw your UML diagrams in a tool which has the ability to generate XMI files, like ArgoUML or Poseidon. Once you are ready to test your product, you run ArchGenXML on the XMI file, which will generate the product directory. After generation, you will be able to install your product in Plone and have your new content types, tools and workflows available."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:27
# aa31e8d484c64502939ec60c2957e380
msgid "At present, round-trip support is not implemented: custom code can't be converted back into XMI (and thus diagrams). However, you can re-generate your product over existing code; method bodies and certain \"protected\" code sections will be preserved. This means that you can evolve your product's public interfaces, its methods and its attributes in the UML model, without fear of losing your hand-written code."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:34
# 853fe02c527d4217b70a31d06ef1dc9c
msgid "ArchGenXML is hosted at `svn.plone.org <http://svn.plone.org/svn/archetypes/ArchGenXML/>`_ as a subproject of the Archetypes project. It is released under GNU General Public Licence 2 or later."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:43
# 58b79f0422a5419ba7d66fbd6f601b8c
msgid "Why should I use ArchGenXML?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:45
# 70c593bd9c4a47df94c7f0fa70350154
msgid "Major reasons:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:47
# e6f70faa592b4f4faacd30a9c7d997a3
msgid "You want to save time"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:48
# 18594cf9564e42649fe295af5c24e747
msgid "You are a lazy programmer"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:49
# 5cb831ca5af042a9ad3453c5cf51b93b
msgid "You don't like to reinvent the wheel"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:50
# 9f552104da8e4a0aa4ca9e71d8bfdd37
msgid "You don't like copying and pasting code (and bugs)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:51
# eae5d1e704084bd0ac2583221df8b4c3
msgid "You make heavy use of references and interfaces"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:52
# 272945b929314897adf75d6497884b91
msgid "You have big projects with many different custom types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:53
# 6d3665e0370e4d949624cf5043de6a85
msgid "You want or need a well-documented interface to your product"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:54
# 095751fa8dec41248a41029aacb5917c
msgid "You like structured model- and pattern-driven software development"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:55
# 2b4bb3d4e9b0489c8fc52048a2508d90
msgid "You want to maintain your project in future without getting a headache"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:57
# f942ea4d087f441da88aa0cce644655b
msgid "and many other good and odd reasons."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:60
# ae9d4cbbaa3c43af87e6fc77fac0bd88
msgid "Contributors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:62
# 9a90949a27b041cf8c756cf48c14d85a
msgid "The project was initially started by Phil Auersperg. Thanks to his laziness :-)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:65
# d801fdd0929a4999ad84899157327f13
msgid "Authors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:67
# 5c922cca6bbe438da4a5efed054aad99
msgid "**Phil Auersperg (Project Leader)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:68
# a44deb174bc94570886c54bab7268a25
msgid "BlueDynamics Alliance, Auersperg-Castell KEG, phil@bluedynamics.com,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:69
# 528cd16601e341fda16b95867d1bdb3d
msgid "**Jens Klein (Release Manager, Developer and Doc-Writer)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:70
# d78c9834a8a24963935aa706c7d9858d
msgid "BlueDynamics Alliance, Klein & Partner KEG, jens@bluedynamics.com,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:71
# 3076c9a41efa486eb1f9a0c7f915d66e
msgid "**Reinout van Rees (Co-Release Manager, Developer and Doc-Writer)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:72
# 20d954e2560649b1a3fa37275b3f7e86
msgid "ZestSoftware"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:73
# 2de774982ca346c198df37ba427348b4
msgid "**Fabiano Weimar dos Santos (Ideas, Testing, Bugfixing, Workflow)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:74
# 8ed8102b1b0d45b4bd2bb2b5ae4126a9
msgid "Weimar Desenvolvimento e Consultoria em Informatica Ltda., xiru@xiru.org,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:75
# 46f9fcb251224047a8863e7654962d97
msgid "**Martin Aspeli (Improvements, bug fixes and documentation)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:76
# 8ca3bc83acf14864a30e57ca9394757d
msgid "Martin Aspeli"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:77
# 69f5989fbad24145979131f937047b6e
msgid "**Robert Niederreiter (Lots of base work on AGX 2.0)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:78
# a475d7e266a1406086e8c660490884aa
msgid "Robert Niederreiter"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:80
# 4d328cb90f8f4d839f6bbc085592960e
msgid "**and others**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:80
# 1159ec800bd541558784027774843078
msgid "thanks to everybody who contributed with testing, doc-writing or code-pieces!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:83
# 558a2db852484571ac5cc475c090a4ab
msgid "Sponsors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:85
# 13233154db86425b883a3b9db13eef66
msgid "Xiru.org, Brazil (Fabiano Weimar dos Santos) sponsors a valuable amount of money into workflow support (State diagrams -> DCWorkflow, will go into release 1.2),"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:88
# f69aead0abed4bf0a86a85f74529393c
msgid "PilotSystems, Paris, France (David Sapiro),"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:89
# e05f4747e8614e2e98eabe26946a115c
msgid "OpenSource.ag, Innsbruck, Austria (Georg Pleger)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:91
# 1884704b08b7422188a553131434bae7
msgid "\"will go\"?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:92
# 3f054e78816d4dcab6e7dd1726963415
msgid "hyperlink companies"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:94
# 9fce429982ed419399b313c0f556ac3e
msgid "If you want to contribute ArchGenXML by improving the code, helping with documentation or sponsoring it to make us improve it, please contact one of us."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:3
# 6e6bb1187d0f4f76a2479f3c95e5046d
msgid "UML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:9
# cf65c35a685345ba9bfe348a5e7e5d08
msgid "A brief introduction to UML and pointers to further readings."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:11
# 3e25971367514f1bbb6df372040905ae
msgid "UML |---| the Unified Modeling Language |---| is a graphical language designed to describe software through formalised diagrams. There are several different types of diagrams available, but the ones most relevant to ArchGenXML are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:16
# 55a21efd590945ba981935f5fc2af349
msgid "The **class** diagram"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:17
# 27430358deb545329af04abff63203c9
msgid "The **state** diagram"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:19
# 5fcfadf3e42b4f7f8e8760d2c52b9867
msgid "Class diagrams are used to draw *interfaces*, *content types* (represented as classes) and *tools* (represented as classes with the ``portal_tool`` stereotype), as well as the *attributes* and *public operations* on these. In addition, associations in the diagram show how objects are aggregated within or referenced from one another."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:25
# 99e6b4d86d344fba9e76d56666b0870b
msgid "The goal of model-driven development is to create the \"blueprints\" for your software in a well-defined, easily-communicated format: the UML model and diagram thereof. You can design your model using visual tools until you have a structure which adequately represents your needs, and ArchGenXML will generate the necessary code."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:31
# 931191c708fa4a1792194d01d4ac8921
msgid "For all but the simplest products, you will have to customise that code somewhat, filling in method bodies, creating new page templates, etc., but ArchGenXML takes care of all the boilerplate for you. With tagged values and stereotypes you can customise the generated code with a surprising degree of flexibility and control, and when you need to hand-code something, ArchGenXML won't overwrite your changes (provided you stick to the protected code sections, clearly marked in the source code)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:39
# 2e1adba807f44e808614bcfd8ab522d9
msgid "This manual does not aim to teach you UML and object-oriented, model-driven software development. There are several other fine manuals about that on the web. A very good starting point is the `OMG UML Resource Page <http://www.uml.org/>`_, including its web-links to tutorials."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:44
# 9f9a1ceaca484d31a33b0a8991d1411b
msgid "For a quick-start read `Practical UML <http://bdn.borland.com/article/0,1410,31863,00.html>`_ chapters 'class-diagram' and 'state-chart-diagram'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/index.rst:3
# 12a392b5776d438b93f22ab1a5dd8a99
msgid "ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/index.rst:7
# 160b5b068cc748ba89e45e5c2318b2b9
msgid "ArchGenXML is a code-generator for CMF/Plone applications (\"Products\"). It currently targets the Archetypes framework. It parses UML models in XMI-Format (``.xmi``, ``.zargo``, ``.zuml``), created with applications such as ArgoUML, Poseidon or ObjectDomain. This tutorial will help you get started developing applications with the aid of ArchGenXML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/index.rst:3
# 1fed6039fd6f44249934dff8d8b27803
msgid "Recipes and Tips"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/index.rst:7
# 371667f74cca4320914a81ab0bf48cb6
msgid "A collection of recipes for real world use cases and tips for making life easier."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:3
# 77d157991aee4c8a9c156c75b58206b0
msgid "Using the config file to get shorter tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:9
# 8c3a3bd9ed124aab840515beace08691
msgid "Some tagged values can get quite lengthy. If you use such a lengthy value a few times, you can store it in your project's config file."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:12
# 09c6fcfbbbcd4176b1d6f2570362a0a0
msgid "An example of long tagged values are the permissions you set on workflow states. A key ``view``, with the value ``Manager, Member, Reviewer``, for instance."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:16
# bc4e7f35796c43ffbb22f477f233f9ba
msgid "In tagged values, the text you type in is normally taken as a string. If you prefix your value with ``python:``, it is copy-pasted literally into your code. So ``python:[\"a\", \"b\"]`` is put into your code as ``[\"a\", \"b\"]``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:21
# 36ff19caa6e4409c9ccf38bad64bf695
msgid "The config file"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:23
# fe4bd4a9c0ee45e69c77fbca8e20b07a
msgid "ArchGenXML generates a ``config.py`` file in your Product's root directory, which in turn tries to import ``AppConfig.py``. So stuff you put in there is treated as if it is placed in the main config file."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:27
# 71749c653b9d470ca963a3ed14f09387
msgid "Every ArchGenXML-generated file contains an import like ``from Products.YourProduct.config import *``, so the variables defined in your AppConfig are directly available in all the files. This means that *you can specify shortcuts* for the tagged values."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:33
# 82bcb6f5b5694ce0803716dc38eacb28
msgid "Shorter tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:35
# 8049744fa5314058b4d8d94d40bc6849
msgid "Example line in your 'AppConfig.py'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:39
# 4cc19dc02e51424c838942dc1aae98a5
msgid "Remember that we can use ``python:`` to paste raw python code directly into the generated files. After adding above line, the original tagged value ``view`` with value ``Manager, Member, Reviewer`` can be shortened to the tagged value ``view`` with value ``python:EDITORS``. Now that's handy :-) And if you need to change this definition you have it at a central place. No need to touch 2, 3 or more ``states`` in UML where it's used several times on each."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:46
# 75125e56c9474738af0032f71a228d5e
msgid "You can use this little *feature* almost everywhere, so its not limited to workflow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/index.rst:3
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:2
# ea50bfa382264488b2c44cb21b4482e4
# d11e52620068464796492bce662e5b79
msgid "Reference"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/index.rst:7
# 29a706ec2c794bc5b99ac05a5e6dc321
msgid "Reference of Stereotypes, Tagged Values and more."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:3
# 48a2ee69213542a182dfc28d3055b324
msgid "Quick Reference"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:9
# 2029777c33a346ce9e53bed4e1e6ad7a
msgid "A quick reference sheet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:11
# 6ee014fa7338480ca4ae6f476e093ec3
msgid "UPDATE!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:14
# 580bfc4ff1884f8dadd208c626d67eab
msgid "Complete list of the field types including their default settings"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:16
# 41844686ca284b0baaa189e0f58aaa9e
msgid "string -- StringField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:18
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:23
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:35
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:103
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:107
# 1d758df9c04f4252ba37b318685f4aa3
# 24b25445dc8e4a488f39cc67b5d2648a
# 5e417f0eb2f74b35a7177c938e670d53
# 23175d3f183d47998e29c4386fd7b96d
# 09b3baa061894684bba4744fd6cef10a
msgid "StringField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:19
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:24
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:45
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:50
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:56
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:61
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:66
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:83
# 0961eaed24994b848263f323a0dbb6f9
# d62f14a7f46c4aac90d76bf514f3bdf0
# 17a9136f02b44f45a5f4f0a9163b821a
# fda6bb1d6c0f409296307eefb40d997f
# 51477c37d3604a3c8cc95046ec623f40
# dab952e7207d46828d0ed1f1e14c90ed
# adc658ae0c89445fa1b0fab70b35cd74
# 4ab7d52094bf4aa694086642f3fd3a9d
msgid "searchable=1"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:21
# ca9df188385640a499017fcc6f4a8f63
msgid "text -- TextField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:25
# 188bfcedc99d4d70bb0300787be861e6
msgid "TextAreaWidget()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:27
# d38657cbce01488581ee68106728b724
msgid "richtext -- TextField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:29
# d58540b1a54a4bc996ee1a1488a614ea
msgid "TextField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:30
# 04e4679d512f4ffcb9f485b2d7a69419
msgid "default_output_type=text/html"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:31
# 7e01eb8b1bc74bbe9468a79df4dfb66a
msgid "allowed_content_types=('text/plain','text/structured','text/html','application/msword',)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:33
# 2383b253f6b94d30a1efecf89bd42b14
msgid "selection -- StringField with SelectionWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:37
# d3d23d13e703478dac3cd643c50dc862
msgid "multiselection -- LinesField with SelctionWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:39
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:60
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:82
# a95ef1f2e569459198a0ad6e3d76b092
# 831b3ac71f274fcdbda5da80de8b7c4b
# b12b321a434e4cdebc4005faac5392a6
msgid "LinesField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:40
# 56876b76b98749bfba0606a8d6f2a44f
msgid "multiValued=1"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:42
# 26019f8b01e64ed6b325eee9d8af5482
msgid "integer -- IntegerField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:44
# c44198089e294339b24d9584c9e0ccd8
msgid "IntegerField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:47
# 327b7b1f227740b2b21265736baa1585
msgid "float -- Floatfield"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:49
# 28f830ff6b624f53a10873bea4dcea47
msgid "FloatField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:51
# 742ac4f661d94c20831c42846399de1b
msgid "DecimalWidget()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:53
# 1478b2d5d0b2410e95faca22ccad90f0
msgid "boolean -- BoleanField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:55
# c139d2f240914b849fe066ad8702d889
msgid "BooleanField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:58
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:80
# 01a46cb90f1d43cfb496aadbe56dea59
# 798bfd0b63b5400abfc9abb97a4f3d70
msgid "lines -- LinesField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:63
# 3962bcc7d831413f82a45eb35d4c6d2f
msgid "date -- DateTimeField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:65
# 865bd016d494428889b1d2461298eacd
msgid "DateTimeField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:68
# 06d6bb5a7475493cb435fbdec93c1489
msgid "image -- ImageField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:70
# 91a930247b114a00afae2b4c7d8aa402
msgid "ImageField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:71
# b411f8fe469445c09e93884648dfe460
msgid "sizes ={'small':(100,100),'medium':(200,200),'large':(600,600)}"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:72
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:77
# c5a853ce00c64e9e96eefdbc1a78f25b
# ac57a5ce8a344010804bb49679e64641
msgid "AttributeStorage()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:74
# 6fd5aa3751414dc0a072073a687519d1
msgid "file -- FileField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:76
# 99ba71352e3c4cddb84556eda821b49f
msgid "FileField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:78
# 2eb0855019e74d0881bbf3eea078bc5c
msgid "FileWidget()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:85
# b9a17c2c623a45be90144c4fa96422b4
msgid "fixedpoint -- FixedPointField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:87
# d0ef567192574a319c9016d7f9826bde
msgid "FixedPointField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:89
# fcf13d5e070e4c7ab88534c86f9dee21
msgid "reference -- ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:91
# 06acbbbc144f4be1a7519609c0c326d6
msgid "ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:93
# bd25b256013548619127c23fb662cd46
msgid "backreference -- BackReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:95
# c907a36eb56a4cde911b6d90957e8f2d
msgid "BackReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:97
# 506f84934033404baae7c24ddd6d573f
msgid "computed -- ComputedField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:99
# 769e49d4d2274e46bc5c8da6eadd4e64
msgid "ComputedField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:101
# aef41ad620bc4b8586f97afd90aa8fe9
msgid "color -- StringField w/Color picker"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:105
# 0686d20d754f4e928490e8604332eb2a
msgid "country -- StringField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:108
# f197e7ed70b84adba1cbeeb4440a055a
msgid "CountryWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:110
# 3874594ec04248df867bef76904b01c3
msgid "datagrid -- DataGridField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:112
# ba6cf3edbb4844dab00eb69fa5679798
msgid "DataGridField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:113
# 0255e1297f16477f803998e57369990a
msgid "DataGridWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:115
# e9df215cd7434c78b969d19880706f38
msgid "photo -- PhotoField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:117
# 958c1db879434a07aac586ef8929249a
msgid "PhotoField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:120
# 6c0e4e4109b34eaa8c27b32ba11594e5
msgid "Tagged values for fields"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:122
# 572a1186e1d748be9ade435ef0ea9f31
msgid "searchable -- register and index the field in the catalog,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:124
# 493be8ece4374334a0ad3ffd17ade461
msgid "1 .. register and index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:125
# 8a480636b12c47f8a65e24760d5f868e
msgid "0 .. don't register and index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:127
# 0205a5ffdcf14a9c814c5d9d3b5086d8
msgid "storage -- AttributeStorage(), SQLStorage(), ...."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:129
# 6ef6626f6b134be1994acd0f38c3e833
msgid "sizes -- defines the sizes of the images in a ImageField example: python:{'small':(80,80),'medium':(200,2000),'large':(600,600)}"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:132
# ecb3cf84bdf94f39aa601d2c50cf8152
msgid "default_method -- no idea what that does"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:134
# 9c73c263715b4cb7865a3abb1c9710a9
msgid "required -- defines whether a field should be rendered required, or not."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:136
# c60b67c4eb9848aa85bce44cf3cc1928
msgid "1 .. field is required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:137
# 01e33a2e4c65483b9fa91f825f09c825
msgid "0 .. field is not required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:139
# befaf43e799c4493b502bc83aee20eb9
msgid "accessor -- defines the accessor of a field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:141
# 680af6b3d67a4b3ea7fd267f1da6abd3
msgid "vocabulary -- defines the vocabulary or the method generating a vocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:143
# b75fd9ad3fb04de889636400064e49fe
msgid "allowed_types -- defines the allowed types in a ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:145
# ca583c71135c47b4a6e9e2bd794195fc
msgid "relationship -- defines the relationship, used in a ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:147
# 9c936a66cfd8431b960f140a38ec3fc1
msgid "multiValued -- defines whether a SelectionField accepts one or more values,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:149
# 920e7afd8dd342cdbcc2b97f0bdc9c32
msgid "1 .. multivalued"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:150
# fa7df8c21e1c4738a2897a008516e487
msgid "0 .. singlevalued"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:152
# 8dbea1fb95254eb79071acf5b64c90ee
msgid "These tagged values are just the ones handy for fields, the full lists of tagged values and stereotypes are shown on the next two pages."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:3
# e2caa2b3cdea4bc2b732d2774b059c06
msgid "Stereotypes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:9
# ce9df646050c4b35808a1c20684554f1
msgid "All stereotypes available in its context."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:11
# c0dabbabc0204dbc8c71771a2901bdc9
msgid "*This file was generated 2009-05-12 with bin/agx_stereotypes 2.4.1.*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:14
# d7ec1e7071e84135b37622402ec22ad6
msgid "abstraction"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:16
# 9856709b9f0a40528d6a72cfd061474b
msgid "adapts"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:16
# 9f51bad44c604042b30817520c089ae7
msgid "On a realization, specify a class (``<<adapter>>``, ``<<named_adapter>>``, ``<<extender>>``) adapts another class (``<<stub>>``, ``<<interface>>``)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:19
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:241
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:20
# 04ed2f4b4c4d4babb9ecb9895a7f9a91
# 7d181ed9a2fb49fd8a60547a2eee9e84
# 2f35c59d3b4b42e6879ad72186a39209
# 3cb66afce5b944a5af00922342199436
# e4743e283b63478994211e2e69be9eca
msgid "class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:21
# fb5105a29de3470fb536e3f7064b9fa6
msgid "adapter"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:21
# 10116cd48b7d4ca0895847441a8d881f
msgid "Is a (non-named) adapter."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:24
# abf7b40c9b244f8a825a866a973a3143
msgid "archetype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:24
# 0226367f095e428b98c8de811e41f5c0
msgid "Explicitly specify that a class represents an Archetypes type. This may be necessary if you are including a class as a base class for another class and ArchGenXML is unable to determine whether the parent class is an Archetype or not. Without knowing that the parent class in an Archetype, ArchGenXML cannot ensure that the parent's schema is available in the derived class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:27
# 3d92b77979dc432cb38620cb5275202e
msgid "atblob"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:27
# a0b45b6fa1d14b0c869b96335b428c26
msgid "Turns the class into an plone.app.blob.content.ATBlob subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:30
# 131a9c3545df4c53b38c3f8d166a0d56
msgid "atdocument"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:30
# 75a66d2a3ee24ad486c30b9c28fc8a2a
msgid "Turns the class into an Atdocument subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:33
# cdb4f00cbdc641bdb7539f146dd13c0f
msgid "atevent"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:33
# ea3dcd451d1b42d98b46e931c58bce72
msgid "Turns the class into an ATEvent subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:36
# 746a322e25b340cc8b487f7ec2e36c8b
msgid "atfile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:36
# a389da8ded9a43fd83f19cf9a7cf587c
msgid "Turns the class into an ATFile subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:39
# f838616e7c104e80a4d9b4ae488d561e
msgid "atfolder"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:39
# 7315d1745c09480aa777b5a0e62b7ddb
msgid "Turns the class into an ATFolder subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:42
# 033714c54c3242d990ca7cee071c092e
msgid "atimage"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:42
# 2f289c56c2a44d42bec45976b2bb27f5
msgid "Turns the class into an ATImage subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:45
# fe3cc0b310a446c8ac942e44f07b08f7
msgid "atlink"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:45
# 55874778578c421ba36ffa2b35d1a563
msgid "Turns the class into an ATLink subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:48
# 3171ceca77624d5a8f8c032d2f24d1d1
msgid "atnewsitem"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:48
# 8d69350923ee4b098ba3d0ecdc9ba87b
msgid "Turns the class into an ATNewsItem subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:51
# 7ffc90b97d8044258860c691bc0f6430
msgid "btree"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:51
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:87
# cf70d3cb2ea1421bb295c533de4d4fe6
# c11ac69206194c9ea926c3b92f7a60ee
msgid "Like ``<<folder>>``, it generates a folderish object. But it uses a BTree folder for support of large amounts of content. The same as ``<<large>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:54
# 5fd46170549543a18dfb96b38a0db982
msgid "content_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:54
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:138
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:141
# b9c1b49f95304e8381c7c542b8faa357
# ffa1c367cb84407c840cea3377fa5903
# 5bd960134dd949e1947ef0aac129a455
msgid "Complete"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:57
# 1c4aef3f737e46e7855a24280b9ba361
msgid "doc_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:57
# 9f7dad8e44964082bb4ad83c867ef79d
msgid "Turns a class into a doctest class. It must subclass a ``<<plone_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:60
# 0094af38f23b438086040187d87305ee
msgid "extender"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:60
# d6103efe2bf04e0faedcbb8dc3fd85d1
msgid "Is a schema extender supported by archetypes.schemaextender."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:63
# 7b2deb2791ac4a89818b921e671b4d6b
msgid "Class will target in a ObjectField or CompoundField (latter if Attributes are provided)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:66
# 9b71cbc31dae439a8bb4cc180d58df0c
msgid "flavor"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:66
# c015b94ac2ab4559a0a787332f83b24c
msgid "Generates a ContentFlavors flavor from this class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:69
# 1083f128f81c4736ab700c98b0ca62ba
msgid "Turns the class into a folderish object. When a UML class contains or aggregates other classes, it is automatically turned into a folder; this stereotype can be used to turn normal classes into folders, too."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:72
# c882b3fa0bc64279b9a318a3e3d17ed2
msgid "functional_doc_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:72
# c069a8739b744127a17f3b2f2daefb2b
msgid "Turns a class into a functional doctest class. It must subclass a ``<<plone_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:75
# 79e39d3aad7c4001ac9f39273d796f4c
msgid "functional_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:75
# 753a6014b337485083f562da3abf9c4b
msgid "Turns a class into a functional testcase. It must subclass a ``<<functional_testcase>>``. Adding an interface arrow to another class automatically adds that class's methods to the testfile for testing."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:78
# b08d781a7db64468982878bfe0fbfa68
msgid "hidden"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:78
# 0776f33c32ec4bcdb46fbe531f8451d3
msgid "Generate the class, but turn off \"global_allow\", thereby making it unavailable in the portal by default. Note that if you use composition to specify that a type should be addable only inside another (folderish) type, then \"global_allow\" will be turned off automatically, and the type be made addable only inside the designated parent. (You can use aggregation instead of composition to make a type both globally addable and explicitly addable inside another folderish type)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:81
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:155
# a30b74e95a554acda872b38d8a905733
# aa3b7c0eb857403bb54c5e6c2ef4463b
msgid "interface"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:81
# f9aaa7d59019494089cf9ee332f6f6de
msgid "Is an interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:84
# 87bedf49b1b8458493aa0b9e92bdfa1e
msgid "interface_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:84
# a6393e84b9e1482ebb3021ca01180930
msgid "Turns a class into a testcase for the interfaces."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:87
# 97dd036f607c498492432a0bf0d9fd31
msgid "large"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:90
# 65b1b905a6fa46b3872e0f78bd3f2bf8
msgid "mixin"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:90
# 08458aa22d15405597de390c97ba76cc
msgid "Don't inherit automatically from \"BaseContent\" and so. This makes the class suitable as a mixin class. See also ``<<archetype>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:93
# 6c82cdaf8a7646f5bee4ac8d2c5a948d
msgid "named_adapter"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:93
# 118755c5bc974d308e04afd2362c7894
msgid "Is a named adapter."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:96
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:179
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:201
# a6f0914c953744cca3b8f205503ec161
# a1bc52a0718b4b5caad47670442e260a
# 0d24adb471c745da84899dd3eff621d4
msgid "odStub"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:96
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:179
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:201
# 233e497bd8d74f02823bdc395b067a7f
# f4a761e89f334324824223c3459b3168
# 30e8837926ed4916bf9b4c1f65b55e03
msgid "Prevents a class/package/model from being generated. Same as ``<<stub>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:99
# f7e127f0830b47358abdee0c44b0738b
msgid "ordered"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:99
# 1dd1e119c1994837acb08f963b37bfa0
msgid "For folderish types, include folder ordering support. This will allow the user to re-order items in the folder manually."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:102
# bb4584d3fe7f4a8cb306aab619f5c1b2
msgid "plone_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:102
# df1647c8e5ae4414b58bfaaa1b2c6676
msgid "Turns a class into the (needed) base class for all other ``<<testcase>>`` and ``<<doc_testcase>>`` classes inside a ``<<test>>`` package."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:105
# 617d8fb58cc04033b2fd83b271e9cae8
msgid "plonefunctional_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:105
# ff19638bae99428ba65b019d50d677c6
msgid "Turns a class into the base class for all other ``<<functionaltestcase>>`` classes inside a ``<<test>>`` package."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:108
# 6130ad15f6e24f2d97e55eff643a47ec
msgid "portal_tool"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:108
# 927fd13352604a08b5cb6f57c28fd687
msgid "Turns the class into a portal tool."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:111
# d59fa30d52b44e9abff61f2dfd217ad6
msgid "portlet_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:111
# c8205539c0a84d6d9ef92fa5535a633c
msgid "Generate this class as a zope3 portlet class instead of as an Archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:114
# fee762fc9f1b4e1c926210fdff7cf4a9
msgid "python_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:114
# 2d7ce227d10d4eafa091f937a742f2df
msgid "Generate this class as a plain python class instead of as an Archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:117
# 3152ae296d80422a887da9a96278d4ef
msgid "remember"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:117
# 380a84d9e866417783469f9094db754c
msgid "The class will be treated as a remember member type. It will derive from remember's Member class and be installed as a member data type. Note that you need to install the separate remember product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:120
# 292944a3aa5f4624a79365d6d47cde57
msgid "setup_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:120
# 88756b715a484bb283a9020929a38b90
msgid "Turns a class into a testcase for the setup, with pre-defined common checks."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:123
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:157
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:182
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:204
# 424002fe98bb4d6a96fb98c956fb51e0
# f75eb7bb391c4d22bae6834c6b9897e5
# 8d27f9025e44424ebc08ef8dbe2c05c0
# 8a7958c46fda43aa8b2cb49b58a8406c
msgid "stub"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:123
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:157
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:182
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:204
# a08363d8860e43a4928aa7ca911515e4
# fb2c10ec79ca47efa97b4683d4135455
# 7956ed27e1b3499e92d203ed49c15f69
# a28fdc8287e7411e9da50138e809b3d5
msgid "Prevents a class/package/model from being generated."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:126
# cbbf26dc275c4405a83d0f604f747bfb
msgid "testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:126
# 08b34e7028ba4cdebc8dbfa04e097ea4
msgid "Turns a class into a testcase. It must subclass a ``<<plone_testcase>>``. Adding an interface arrow to another class automatically adds that class's methods to the testfile for testing."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:129
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:808
# 9717f722095d44fc8b7f783daa80ce22
# 1853b72abfe74f6cbf5c6eee4949c65c
msgid "tool"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:129
# 86ea7c3f07db48ffaa57fdd3a3e8dd28
msgid "Turns the class into a portal tool. Similar to ``<<portal_tool>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:132
# 192ae2a4c8d24719a11b7488b558543f
msgid "variable_schema"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:132
# 81999edde4f84610bf8e83ef6d8d91c1
msgid "Include variable schema support in a content type by deriving from the VariableSchema mixin class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:135
# bcf9e846324e4b089baff68b56536705
msgid "view_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:135
# cb6ddd08167f49f89741273a7894d812
msgid "Generate this class as a zope3 view class instead of as an Archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:138
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:205
# 80919a0de34843ec887c379c8eb6ad86
# 1f2422c4e9c4427ebb1fe5ad238cf159
msgid "vocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:141
# 01821a7511c74e3496c94c31a7b6fe13
msgid "vocabulary_term"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:144
# b9a2711a03d04946a577d2046e8ef7d6
msgid "A simple stub archetypes-widget class will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:147
# 59468f2868284babbd9643f92ce52680
msgid "zope_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:147
# a22ccf942c224094ade5e3ef3b4cbdb9
msgid "Generate this class as a plain Zope class instead of as an Archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:150
# 5333c8f8544f4e81b109862727988bfe
msgid "dependency"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:152
# f68ac436540b4d2d9f9d16b9b0931308
msgid "value_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:152
# 72827965efcf485381550396499448f2
msgid "Declares a class to be used as value class for a certain field class (see ``<<field>>`` stereotype)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:160
# 01dcee9d95094874af79c71ef1fa7cdc
msgid "z3"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:160
# 85c517d781104e7cbe635e365ca5319b
msgid "Generate this interface class as zope 3 interface. This will inherit from zope.interface.Interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:163
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:445
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:311
# 1c3c6e84a4b3418299e7062f18dea8ce
# bff7634ce5704ce587f48c137ade5cb2
# 4682b26e0fe94bb982aa96abc1da4c95
msgid "method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:165
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:187
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:16
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:19
# a266d62d497f4a0da31270f933742816
# 0a152c7ef6e74dc5bf5d06a72ef6b0b6
# 6b8da0e2a6ab46829978ce1c0cc078e1
# fd730e21e0bb42eb8c59b73ba6e83f66
msgid "action"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:165
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:187
# 5eaa885bf219411ba1a2dce41ad48ba7
# 38b94620cdb940b8b5a9b958924a5f03
msgid "Generate a CMF action which will be available on the object. The tagged values \"action\" (defaults to method name), \"id\" (defaults to method name), \"category\" (defaults to \"object\"), \"label\" (defaults to method name), \"condition\" (defaults to empty), and \"permission\" (defaults to empty) set on the method and mapped to the equivalent fields of any CMF action can be used to control the behaviour of the action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:168
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:190
# dba0ee5ee5c543b8949e6e4df972e0eb
# f9d7b364ac6e41c885d4d05d7a4afeb9
msgid "Generate an action like with the ``<<action>>`` stereotype, but also copy an empty controller page template to the skins directory with the same name as the method and set this up as the target of the action. If the template already exists, it is not overwritten."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:171
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:193
# 1acc9d25b59e452c8527a18cbc81e534
# 4a0e641f29c74ab280edf4f10745f9aa
msgid "noaction"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:171
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:193
# 241a4d208bbd462dafb10d7ecebc10e8
# 4be7c8c796224bdbadecf996c7000ed3
msgid "Disables standard actions, applied to a method out of 'view', 'edit', 'metadata', 'references."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:174
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:196
# 8ef8d9fe27ad4397be71dec9c1f9053b
# 637232d396cc48c9891a4fb5d6543aa5
msgid "Generate an action like with the ``<<action>>`` stereotype, but also copy an empty page template to the skins directory with the same name as the method and set this up as the target of the action. If the template exists, it is not overwritten."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:177
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:460
# 48ecfdf1d6de41dbb657c6b8eb8b016b
# 15ffba791dea4d8883c406dc78be2798
msgid "model"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:185
# 81ff1b2c05f243c4ad150936872f7591
msgid "operation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:199
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:598
# a055bb116924459999a54ce6c70792a5
# a15e17b93fb74205bc608c2b16cf5b41
msgid "package"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:206
# 096864b3c8a048b59fb4268cbfe5febe
msgid "tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:207
# 70eaf6918b29469c8d290005f6997c0b
msgid "Treats a package as test package. Inside such a test package, you need at a ``<<plone_testcase>>`` and a ``<<setup_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:5
# 9eb4a9de6e4a4cf7af27268841bdd577
msgid "Tagged Values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:11
# 248aefb414804fe7a6c6b9ddf767fe60
msgid "All tagged values available in its context."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:13
# a7b38f44024b4f5c9141eaa260a88692
msgid "*This file was generated 2009-05-12 with bin/agx_taggedvalues 2.4.1.*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:19
# 6a35fac0df6b4d828f90c4b76c9770c1
msgid "For a stereotype 'action', this tagged value can be used to overwrite the default URL ('..../name_of_method') into '..../tagged_value'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:77
# 002d0a82bab440e6be00f885995e9912
# 5ea2968911004f51b2df6e2b96b4a086
msgid "category"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:22
# c69dfd71dd1d482f9aabd5959668444d
msgid "The category for the action. Defaults to 'object'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:25
# b752e4988706471fa656046fbd34e600
msgid "condition"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:25
# 79a61833d8d94b63a86828a8ea7509f1
msgid "A TALES expression defining a condition which will be evaluated to determine whether the action should be displayed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:28
# d4ed8657c81240f3921d787731528197
msgid "id"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:28
# d6aed59dff2b4126a9a125107325e99f
msgid "The id of the action. Use 'id',"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:31
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:58
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:151
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:364
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:436
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:454
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:541
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:667
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:718
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:745
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:781
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:793
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:799
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:862
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1075
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1087
# f202b559b71b4b15a4a64e856ad4bfbc
# 6aee151ff8b840a98a61061b09d25a0e
# ed229a3f3a014eeebac5c10621e63794
# fe5debcb4e7149adad702792356967a3
# dbb3de576ad94562ac0038252a90d737
# 669f2aa90f804491b425c35139e9f29c
# 59ff596e965347198c2b503a0210a851
# 7d9b7858de954cbb954d9ba547998d16
# cb2786cc05a24cc3a70cd9ce8a7e286f
# 0cddb2ee6ec7495cbf2c40ce31fa287f
# 25270f8a948a45ad82c94cafb16c5575
# 072dc2698f5748d6a587dbbf8ff9e8b6
# e7aa2db9c1e541aea880d64299598f52
# 649f436d0e384849aa50190b315b6c82
# cd56d044a8c64310b99bc7c18743aace
# 63abe939060e4fb9ac5aef57d8249b2e
msgid "label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:31
# 2a33a99c833b476882ca82c79d7b9a53
msgid "The label of the action - displayed to the user."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:34
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:457
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:22
# e1c29a6928cf4d1c863db46fe404c602
# 13f4bf91cb49466db6c37e11d983725a
# 94c38c40b8144270afc9340685cc43a5
# 7bca1cf2cd964f3c861ec9cdfb213b04
msgid "permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:34
# 49fb5a83b9ce4f4c969583e472be5eba
msgid "The permission used for the action, a string or comma separated list of strings, default to 'View'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:37
# 09ff7c786ea44348af7ac9694a3a1d05
msgid "visible"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:37
# c67d4e41f7a640738889dd205a35570f
msgid "Sets the visible property, default to 'True'"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:40
# 4be05a67ba2c478ca278d458e7fcee3d
msgid "association"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:43
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:466
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:604
# 41f1691c6a7642d7b112df7d44d8c48e
# f1597a6025984457b58537b242a4c3d7
# 9bc5ba6bc01b442dabd05d14148d8bfc
msgid "association_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:43
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:466
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:604
# f2e8e2a3717743a88a06224e866641d8
# c42f84b3941b42f39e47704cda8162f0
# 5ef6d9c667364eb882e3023d1490cb33
msgid "You can use associations classes to store content on the association itself. The class used is specified by this setting. Don't forget to import the used class properly."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:46
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:469
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:607
# 2e15dcd170de4d9686439062f2fab8d1
# 01b2ce1caeb84657b1385d5ba5892f84
# 9146ab4c86ee42ca90ac8b5ebd9a3cda
msgid "association_vocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:46
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:469
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:607
# 832e157690664c38a44575c518952289
# 9e5570186bf7494aaf88dde5a5599b1d
# 664b7f22fd27484f84cc37682a7c74b7
msgid "Switch, defaults to False. Needs Product 'ATVocabularyManager'. Generates an empty vocabulary with the name of the relation."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:49
# 146f02f604544802aeda0b483dea1539
msgid "back_reference_field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:49
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:61
# 888bf5f69ebe4c6c9f2e8fca23dc8eaf
# 000ed68b457c4788a0c05c5804ee3686
msgid "Use a custom field instead of ReferenceField."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:52
# f85d91b7b50a4211a0a1f639f5af16c6
msgid "Synonymous with either reference_field or relation_field, depending on whether you use it on the *from* end or the *to* end of a relation. Works only together with 'Relations' Product and relation_implementation set to 'relations'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:55
# 852bafa8a35646dda5f79aa8c03dde22
msgid "inverse_relation_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:55
# 8ca1ebf6af1142a1962a16ae070da483
msgid "Together with 'Relations' Product you have inverse relations. the name default to 'name_of_your_relation_inverse', but you can overrrule it using this tagged value."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:58
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:151
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:364
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:436
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:454
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:541
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:667
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:718
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:745
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:781
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:793
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:799
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:862
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1075
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1087
# c5d9afbb056842748bc2c098ae72e992
# ce4fc277506e4fbcbd83c11f284cfa16
# a06d4a5aa3c1460c8621b589a40fdb2f
# 7f55cba8441f438a832fd1bf787e1504
# 3aa162f2e9fb4e17b8ca988c288592d6
# 64f96d0445524d9c90e6aee3d548bc16
# e06b36cded924911b52c98f52c4abf14
# 4918a95033eb47f59609f04e6e03edd3
# 8fd8e12a49254c429c7cac9701f45571
# 835e806311274220857fae4223957135
# df4e7e9155de4b0d80fd01f9e7721bca
# c8c5d5c26e8d479895bb67e3ffdc2648
# c668736b1d56421db68b49ad128e3094
# a820ed3b825b4d8c934021ce82565b83
# c39d91ee10c24bfe91f74b3b25c52520
msgid "Sets the readable name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:61
# 785a08682fdd4348a3225d6a53598343
msgid "reference_field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:64
# b45933c5c131452a8a73a153a5cbcabd
msgid "relation_field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:64
# 7fb4554092f44d1fafad00cc6ccb6612
msgid "Use a custom field instead of RelationField. Works only together with 'Relations' Product and relation_implementation set to 'relations'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:67
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:562
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:682
# 8e2f1558e8e64246b0c577c528d146db
# 77b18c9dee244698804c7abc501209d4
# 885e9e13fc934865900c73cb88be5b5b
msgid "relation_implementation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:67
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:562
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:682
# f27f98be49e94cba849bfadc441e89ed
# b2f01d33b2274bc5bc35dbe1cf9c5cae
# d0bfd2d6aaf34cb79edac761ef0442ab
msgid "Sets the type of implementation is used for an association: 'basic' (used as default) for classic style archetypes references or 'relations' for use of the 'Relations' Product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:70
# 7c82db018aac47bba3e578909247963f
msgid "relationship"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:70
# 3f1d4826963c44208033a800bce7b462
msgid "Standard relationship for ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:73
# 878a2849a01a4bf39be81bcc28318713
msgid "attribute"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:76
# c95f7ebebb944164bc5114a426a9c92a
msgid "accessor"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:76
# ad78aae3350e49f7966c99bf58c45669
msgid "Set the name of the accessor (getter) method. If you are overriding one of the DC metadata fields such as 'title' or 'description' be sure to set the correct accessor names such as 'Title' and 'Description'; by default these accessors would be generated as getTitle() or getDescription()."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:79
# c05f4ea1c6764fc397e67e48a6154649
msgid "allowed_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:79
# f32da787590045cc8b998d174efda507
msgid "Sets the types allowed for a ReferenceField. Default is []"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:82
# d81d6d4097444d8e9b9e610e5a71f329
msgid "array:widget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:82
# f44f1adf35674bd89409f6597a20573c
msgid "specify which custom ArrayWidget should be used for a field (only applies if the field has cardinality >1."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:85
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:277
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:475
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:613
# 2bdd530ee84246af902e143669f76015
# 8dc947fc0ac44093b9e57f8c28bd33cd
# 94b1701afe8a48a194e71cc19d870d46
# 2ff0775a1c4e411c8d9068b2fe228764
msgid "catalog:index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:85
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:277
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:475
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:613
# f1f4f99671fb41e689519d01894ce7c0
# e7057c9c7797405b89c9da486cae5de3
# 847c87d421f744c4b1decce3fa1d2c8d
# 3afdc647f71149179f4ecea296004f5d
msgid "Add the field (or all fields of a class, package, model) to the index. Boolean, 1 or 0. Default is 0. If set, you may need to provide ``index:*`` tagged values too."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:88
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:280
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:478
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:616
# 8310d699ea7f4cf0b0adf31c782c7902
# 10321f73e2c74b37bae849f5d5899b20
# 8953ec8b38f04843b851ef035fca988d
# eb966a67c1524d219ce230dee3094b56
msgid "catalog:metadata"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:88
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:280
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:478
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:616
# fe7d4a57cb13408490a0a9bfdbbff83a
# d07290438f274d6099e4f2416b5535e9
# bd05800be7884acbba3ef77caf05a3bf
# fe1cfb9f5a404d5ab9cd69eaa0167ec8
msgid "Adds the field to the metadata record on the query result. Boolean, 1 or 0. If you do not provide 'index:attributes', the name of the accessor of the field is the default. If 'catalog:attributes' is given for each attribute one field at the record will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:91
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:283
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:481
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:619
# 64ca0b25daa044bebe23319db0ec48fd
# 60fe436c82a949d4b0c8bb141c72a710
# 1634caf7d74c4a11879f37fb272b643e
# bb5cc745b0e347d6bd11a4091a37acd2
msgid "catalog:name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:91
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:283
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:481
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:619
# 5c36790a20324308a6fc0638abf8f7c2
# 5ea03c6b752d47f5ad9284b6b2825dce
# ee8e5bde968e49d283ec4c67b9e71700
# 274d8137387847c0b25211a2840b698a
msgid "Sometimes you need to add an index to a other catalog than 'portal_catalog' and its XML-File 'catalog.xml'. Provide a tuple of comma separated strings, id of the catalog and the filename of its configuration file. default is \"portal_catalog, Plone Catalog Tool'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:94
# 315f8b2ce79244a5895e3d9bd8760429
msgid "collection:criteria"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:94
# 815c319c71604b0a833408678686bb6b
msgid "Add the index to the Collection (aka Smart Folder) Indexes available for defining Criteria. Provide a comma separated list of criteria that will be available by default. Available criterias are: ATBooleanCriterion, ATDateCriteria, ATDateRangeCriterion, ATListCriterion, ATPortalTypeCriterion, ATReferenceCriterion, ATSelectionCriterion, ATSimpleIntCriterion, ATSimpleStringCriterion, ATSortCriterion, ATCurrentAuthorCriterion, ATPathCriterion, ATRelativePathCriterion. You must provide an index:type as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:97
# eba1523983c24ea890dd94eac3dbd22d
msgid "collection:criteria_description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:97
# faf89c6e95f646619c87e3e4c2c4ee18
msgid "A help text (string), used for collection:criteria. Its added to the generated.pot as a literal. If not provided the widget:description is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:100
# 32676e139afb4e62a3082fd82bdf8fb0
msgid "collection:criteria_label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:100
# 995eb8aeb28848a8bb18db04b8c2800e
msgid "The display name of the collection:criteria, called friendly name (string). Its added to the generated.pot as a literal. If not given the widget:label is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:103
# ebfd611abb6142d09ef384a80db58c4a
msgid "collection:metadata"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:103
# 3ef34fd772744e6c912816508bfe087c
msgid "register the catalog:metadata as an available column in a Collection. Can be used as an alternative for catalog:metadata. catalog:metadata_accessor is used if given."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:106
# 00ac289b3a6a4a4ab47d0a983177afde
msgid "collection:metadata_description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:106
# b937d721201e4b24a90de808c25da87a
msgid "A help text (string), used for collection:criteria. Its added to the generated.pot as a literal. If not provided the collection:criteria_help or - if not provided - widget:description is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:109
# 111acc0bf3a443f887e089aef2f1ce1b
msgid "collection:metadata_label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:109
# 728380e5eb044b1980d7de050beae3a2
msgid "the display name of the collection:metadata, called friendly name (string), used for index:criteria. Its added to the generated.pot as a literal. If not given the widget:label is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:112
# efb287288884489099e9dadb282423ee
msgid "copy_from"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:112
# 1ef7434f16eb41e29467bb6b7cb926f2
msgid "To copy an attribute from another schema, give it the type 'copy'. The tagged value 'copy_from' is then used to specify which schema to copy it from (for instance, 'BaseSchema' when copying Description from the base schema). For copying your own schemas, add an 'imports' tagged value to import your class (say 'MyClass') and then put 'MyClass.schema' in your 'copy_from' value."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:115
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:790
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:143
# 5a30137438ee4aaa85c184c853105e35
# 8cf0161ab0294e849f02fff7c708fd61
# 5d7abaf7b0784035b8eeb100b44ab2c5
msgid "default"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:115
# de763b3508c64d2a8af89b54514d45ac
msgid "Set a value to use as the default value of the field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:118
# f2f11b0fe51c45cf8c428c5e675912c1
msgid "default_method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:118
# 823900ead55f48ba805c3dbb5665c09c
msgid "Set the name of a method on the object which will be called to determine the default value of the field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:121
# f040766c459f447a996b96fb1db2e3f8
msgid "enforceVocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:121
# 5201aefbfddc416d81601d87d9c64b35
msgid "Set to true (1) to ensure that only items from the vocabulary are permitted."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:124
# 5aa752e1516c40da90f321926f710944
msgid "expression"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:124
# 8b06262a7db64b0ba921efe7fdfd4e72
msgid "evaluation expression for computed fields."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:127
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:346
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:529
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:655
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:909
# 99e087134055456f942796746e3a05b7
# 44d3d366977e4c799a227ba639bfd2c0
# ddd0b823b41041a59d55884c3b1052e5
# 101bb2e05964467c883c3a3b06a3f44c
# eabcc0f75c5b4865b01179056bb66618
msgid "i18ncontent"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:127
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:346
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:529
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:655
# 11ce5135b37c47448f9e50a175192132
# 38a244adcfad4120b0d5f77e47c3707e
# 4ca75d26203447468e054bdf54be7c35
# 8a50a8d05de54e4f8865a73b21100294
msgid "Enables the content type(s) for LinguaPlone. Only allowed value is 'linguaplone'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:130
# 173b6abc34e14dd9900c06a91661b26f
msgid "index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:130
# f65c7343ee234f188fc3b83695b34ae0
msgid "DEPRECATED: Add an index to the attribute. Use catalog:index and the index:* tagged value instead."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:133
# f960e1286b6c4fae9d6bf8fbe905b511
msgid "index:attributes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:133
# 177e5b1f91f148eca4536b1e5f4b30fc
msgid "The attributes to use for index or metadata (string or comma separated list of strings). This are the methods called at indexing time. Normally it is enough to provide one index method, but for some specific use cases you might need to provide alternatives. If you don not provide this tagged value, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:136
# 7055b1e1475b4fa89fca5e59fcfa249a
msgid "index:extras"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:136
# 9de1fc9bb19a4764be87454697fa4f5e
msgid "Some indexes are using so called 'extras' on installation as configuration. If the index need extras you'll need to declare them here. Provide a comma separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:139
# 33f941b4449040b5a24bfebdad1b5012
msgid "index:name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:139
# b94d313cb6bd458086c19f7d33bf1fc7
msgid "the name of the index used (string). Use this name in your queries. If you do not provide a name, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:142
# bc3f3a1d55484ed18afc062ad8efd1d8
msgid "index:properties"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:142
# 440e4b2f67f24309a2bfa827062d17b7
msgid "Some indexes are using 'properties' on installation as configuration. If the index need properties you'll need to declare them here. Provide a comma separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:145
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:358
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:538
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:664
# 9e8b28c571084599963cb869161b79eb
# 843f47d764b14447beca104c3db550ed
# ed380e84a19342ff8e45411fd5df9a28
# a6682b5b96634e48804527afec865b4d
msgid "index:type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:145
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:358
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:538
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:664
# 98e524792de242f1bf8b918e18f5a291
# 680161826c4248ab8ec9b616c8492adb
# d238734582974c91bae66af35418a7f1
# aaac83b294464307bcc8e93d63111539
msgid "the type of index used as (string), for example 'FieldIndex', 'KeywordIndex', 'DateIndex' or any available index in your portal. For known types a default is guessed, such as FieldIndex for StringFields or DateIndex for DateFields. If no guess is possible, we assume a FieldIndex."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:148
# e581adbe04164200b7100e941468d717
msgid "indexMethod"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:148
# 8937d99c351d4db8bf452d3940a35ef8
msgid "DEPRECATED: Declares method used for indexing."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:154
# 6fb997d9821547bc937ebe1c6dba749e
msgid "move:after"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:154
# 2fdcea20e51c47ef89bd5da49f009b89
msgid "Move the current field after the given field (put the field name between quote)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:157
# 9bd9f41acc2d440e8b5c75888ec5abb8
msgid "move:before"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:157
# d748fb8f77104ca7b7b4f4c6833c33ca
msgid "Move the current field before the given field (put the field name between quote)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:160
# 97de43f3be2741239ee689e6dc97195b
msgid "move:bottom"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:160
# 0bf01b0f07414fa4827d9493112c6ade
msgid "Move the current field to the bottom (put 1 for the value)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:163
# 6711b7b2fb6a4309bf9985dd0e94b14b
msgid "move:pos"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:163
# f2563d07278f419dadf4a6abd85dcbbf
msgid "Move the current field at the given position (an int)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:166
# 5de3338944834aa19100fecd9a446465
msgid "move:top"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:166
# c5a727f561484117a8c4a485850e8776
msgid "Move the current field to the top (put 1 for the value)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:169
# 43377f6f46fe4cd59cec89cb439a173c
msgid "multiValued"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:169
# 7c30b0cab79a4ce1b2e732943065869d
msgid "Certain fields, such as reference fields, can optionally accept more than one value if multiValued is set to true (1)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:172
# 1998dd69c4754153b9f9c7005e72ff37
msgid "mutator"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:172
# 1bffdb272d19480984e270add278b948
msgid "Similarly, set the name of the mutator (setter) method."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:175
# e4ff3c3a60ff4085b790103582e25bba
msgid "original_size"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:175
# 507cf514b5544c1e9ba5aa4f8f262275
msgid "Sets the maximum size for the original for an ImageField widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:178
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:388
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:559
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:679
# b45b4f1c637a4acb8da1c0bb39136b0f
# 117de75b7e9545bb91f909929b406d71
# ccfa4750db454623868e71da997e1467
# ef94dc301ef24411b7df09e81c2134e4
msgid "read_permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:178
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:388
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:559
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:679
# e308ea464527430581bdd4ac73f23957
# bf4c88a510f643d3a921ba89e73f9ea5
# 0d5beba20ee14ec880cb27597c5e29d7
# cd08a8cde49a42b4921029894f399fae
msgid "Defines archetypes fields read-permission. Use it together with workflow to control ability to view fields based on roles/permissions."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:181
# e7a97f2b74c74d24aaeba33ec4add6f1
msgid "required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:181
# 3f1b8a546d7e4530bc189c79c0144248
msgid "Set to true (1) to make the field required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:184
# 9c2cdb5cf752427e97317b0863d7e94c
msgid "schemata"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:184
# b2182a1bb0cc47adb10d1ca35891526d
msgid "If you want to split your form with many, many attibutes in multiple schemata (\"sub-forms\"), add a tagged value 'schemata' to the attributes you want in a different schemata with the name of that schemata (for instance \"personal data\"). The default schemata is called \"default\", btw."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:187
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:394
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:565
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:685
# d1abf8310a3b475485fc3126b0da24ee
# ec5faee5efe14dfe86a08f3d4fce2e1f
# c0899c8f907b4d18a88a73c1053c9ef7
# e36b5b5076cf4ababd83c8d3b634dc8b
msgid "searchable"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:187
# 1962ed48d498405996f48e8a4de322ad
msgid "Whether or not the field should be searchable when performing a search in the portal."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:190
# 19bfb3287e154cd089f71f2471ff6185
msgid "sizes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:190
# c98a1e3ce76d4b78b46b8062a79730f6
msgid "Sets the allowed sizes for an ImageField widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:193
# ca8ed6ee6e1847a6882ae4e2ee591360
msgid "source_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:193
# 986e9ddbba604a5f8fff23e33b290120
msgid "With attribute type 'copy' sometimes schema-recycling is fun, together with copy_from you can specify the source name of the field in the schema given by copy_from."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:196
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:439
# 9e179a8b3b0a4f59b183b079b0e56df9
# cb099bc66e42488eb67163f89a65eab7
msgid "validation_expression"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:196
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:439
# 91fa5a2b654243638a1b4e350c3ddf42
# 5272cf4a32c2466cb839ac5c2c5ef0fe
msgid "Use an ExpressionValidator and sets the by value given expression."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:199
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:442
# e567613cf90e4e658f0e1252daf7f534
# 287611c1c60547188947d3574ebd75dc
msgid "validation_expression_errormsg"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:199
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:442
# e5bf988e302d49a4ba9aec796c37f558
# fa7375f2f6344b38ada7dd117a316f8e
msgid "Sets the error message to the ExpressionValidator (use with validation_expression to define the validation expression to which this error message applies)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:202
# 6745885b449140e68ad1577387afa22e
msgid "validators"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:202
# 7a601f48a0c94a409aa102916afb1b9b
msgid "Not supported for now."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:205
# 955926f99c64464ea1f64cd5840a2b67
msgid "Set to a python list, a DisplayList or a method name (quoted) which provides the vocabulary for a selection widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:208
# 9a8c5c6df5ae4230957ddee6e9a2f4ea
msgid "vocabulary:name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:208
# 72dbc8389e5446dc865d64869115158a
msgid "Together with Products 'ATVocabularyManager' this sets the name of the vocabulary."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:211
# ed060a95c7a54a0ab4e3807cc9b14565
msgid "vocabulary:term_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:211
# c575e2db91964339b52051eef6d07318
msgid "For use with 'ATVocabularyManager'. Defaults to 'SimplevocabularyTerm'. Let you define the portal_type of the vocabularyterm used for the default term that is created in Install.py."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:214
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:421
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:589
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:706
# 885f50a025a247df95a82860fe35f51b
# 72852f0602a641fd8357bc0bf655b3ed
# 129d751c6e534f10b8355b368511a23d
# c0d8a422cfd34a4eb66aed63efe49caf
msgid "vocabulary:type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:214
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:421
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:589
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:706
# e1b12dc665654fdb90136e618218a65c
# 0a3d0e2c8c264eae8ad8eabcc20b50ae
# f93496b7d9394dd3b2c9aabeb6301e65
# 5015b525a16a4f4287749319cd9a4124
msgid "Enables support for Products 'ATVocabularyManager' by setting value to 'ATVocabularyManager'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:217
# 8aaad8521d9849788c3c1a8a84f92289
msgid "Allows you to set the widget to be used for this attribute."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:220
# 33dd83ddf0364841a08d00241026a882
msgid "widget:description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:220
# d0d8766ef483421e8956314707aec5c7
msgid "Set the widget's description."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:223
# acaff94bba234834bf47e7933f673ac8
msgid "widget:description_msgid"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:223
# 2a0aa5172dbb488f8c39ccc7f77f0b58
msgid "Set the description i18n message id. Defaults to a name generated from the field name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:226
# e2b2e45d50e248b0a7f2480a4e0df706
msgid "widget:i18n_domain"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:226
# 816ec3f4a76c4c6b9d5942813c47ef9d
msgid "Set the i18n domain. Defaults to the product name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:229
# 07e28b15ae634a9a943175518889b721
msgid "widget:label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:229
# 9c679d31fcf04986aff38ef45cddfaa8
msgid "Set the widget's label."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:232
# 1a232bdb85894eb28be7ee7ffb50dbb3
msgid "widget:label_msgid"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:232
# 4847bafcbc614bc89cba3e1f0fd9582b
msgid "Set the label i18n message id. Defaults to a name generated from the field name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:235
# d7295fef100b420e97c474556548c191
msgid "widget:type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:235
# 8bedd95724b04cc2b1c382fb26e2aad1
msgid "Set the name of the widget to use. Each field has an associated default widget, but if you need a different one (e.g. a SelectionWidget for a string field), use this value to override."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:238
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:427
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:595
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:712
# 09918f3e524b4de08f5b2a3f95761d97
# e054197b2e1f42019cbd7e49d5da9c63
# f34187831853439e8b76e1a8705f6b00
# d30954b3fe4847e5a6e388427ea072a7
msgid "write_permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:238
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:427
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:595
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:712
# 29c23d27d782411d9bfce0034fea603a
# fde079244b7644449db42835dc6dd06c
# 98fffc4d81854c319bbc34166bbb9026
# fa5555e219ef4bc0bfd6dc74f4a3d7b3
msgid "Defines archetypes fields write-permission. Use it together with workflow to control ability to write data to a field based on roles/permissions."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:244
# df170bb79cf540cfbd0c023b1307696f
msgid "active_workflow_states"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:244
# bda8742667ce4d82b5ded134376b150f
msgid "The active workflow states for a remember type. MUST be set on ``<<remember>>`` types. Format is ['state', 'anotherstate']."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:247
# fc28ba33f62144fe9836d0028b409a40
msgid "additional_parents"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:247
# ca78172c48044c9e9d79aa45a7303732
msgid "A comma-separated list of the names of classes which should be used as additional parents to this class, in addition to the Archetypes BaseContent, BaseFolder or OrderedBaseFolder. Usually used in conjunction with 'imports' to import the class before it is referenced."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:250
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:463
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:601
# 806dfc164cc54c2b890e3708249e00b3
# 19e874dfbb2e4619a250fae9e5c86d62
# c6ac12b83119452fb3d658111ed7c81e
msgid "alias"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:250
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:463
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:601
# 6ee56c1e7649426d94a05678494f4fed
# 1ad359a83e924d1caef55657c753baed
# 59361450c5bc4b7c9718d91d02f2dcd7
msgid "FTI Alias definition in the form alias=fromvalue,tovalue"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:253
# 4e07cfb7de2e40039d18b56b86d566a7
msgid "allow_discussion"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:253
# 6b6bd8d46ff4432ab165dea6107630f2
msgid "Whether or not the content type should be discussable in the portal by default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:256
# 563b149efaae43a098b34ba492e4422e
msgid "allowable_content_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:256
# fd0412dbf26b45368eb1a555a1b6fb2f
msgid "A comma-separated list of allowed test format for a textarea widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:259
# 90625d8345f5472aa8ee2bc34bca141a
msgid "allowed_content_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:259
# 3d483559de74491b8bfdf2e9702aaa60
msgid "A comma-separated list of allowed sub-types for a (folderish) content type. Note that allowed content types are automatically set when using aggregation and composition between classes to specify containment."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:262
# 6ada622d82aa4ba8a959975492c5dda8
msgid "archetype_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:262
# 4ac7f8abb9a345be925c81d6eed6c3b9
msgid "The name which will be shown in the \"add new item\" drop-down and other user-interface elements. Defaults to the class name, but whilst the class name must be valid and unique python identifier, the archetype_name can be any string."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:265
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:472
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:610
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:811
# 35d98f2a987041308956789d6165cfd5
# deac73c34d2548d0b0af4dfd89cc7316
# 246e1806ca8d46c69fa21cd3b699e5c9
# 0e742f01fd9340a4ae751a9fd66aa406
msgid "author"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:265
# 9219baf05d524aa0ae2a1b1da44f113f
msgid "You can set the author project-wide with the '--author' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:268
# 5124b25934e64c4a9a98493183ea1301
msgid "base_actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:268
# bcc12b0d08d045918325f31d8b241389
msgid "Sets the base actions in the class's factory type information (FTI)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:271
# 96a1c5f17c8b4db882f6f03cc6fbcc9f
msgid "base_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:271
# bb5932cefe87400cb6d80bc411693e94
msgid "Explicitly set the base class of a content type, overriding the automatic selection of BaseContent, BaseFolder or OrderedBaseFolder as well as any parent classes in the model. What you specify here ends up as the first item (or items: comma-separate them) in the classes it inherits from. So this is also a handy way to place one class explicitly in front of the other. See also additional_parents."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:274
# 49f72547e91340ac9392cf8cc687cfe6
msgid "base_schema"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:274
# f5ba405dec0d4f7e9adfa2b6089a4012
msgid "Explicitly set the base schema for a content type, overriding the automatic selection of the parent's schema or BaseSchema, BaseFolderSchema or OrderedBaseFolderSchema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:286
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:484
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:622
# 790451e2a0ea4b9cbf3b8582a174ee2c
# 226910ac4c704d18866b4377f23c7ab6
# d238544e48174eb0be19d1ebbe7d13ad
msgid "catalogmultiplex:black"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:286
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:484
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:622
# 1677e20c0a014b62bd67f159ed38be0a
# 22202638c4914c0e90c3e54e26e3be33
# d000e796fd984f018f06c4636322f37a
msgid "Remove an archetypes class (identified by meta_type) from one or more catalogs to be cataloged in. Comma-separated list of catalogs. Example-value: 'portal_catalog, another_catalog'. Explaination: Instances of the class wont be catalogged in portal_catalog anymore."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:289
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:487
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:625
# 03d47117b92e47a19a6b1e2cb8fcf88a
# 5ad1fb64a22b4185b257c9b5799cfee8
# e40e70cde4914bceb1c2b7db4aa6a49b
msgid "catalogmultiplex:white"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:289
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:487
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:625
# 79eb394c35e9418ca0692938e0e0c80a
# f6874295e4944c59851af22d469e4259
# 3e5c38d3a13e4224832193a3e255cbad
msgid "Add an archetypes class (identified by meta_type) to one or more catalogs to be cataloged in. Comma-separated list of catalogs. Example-value: 'myfancy_catalog, another_catalog'. Explaination: Additionally to the default 'portal_catalog' the instances of this class will be catalogged in the two given catalogs."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:292
# 66906a84d05a4826b53679cf835480ce
msgid "content_icon"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:292
# 69b102c492a741dda01a465f4d6340f8
msgid "The name of an image file, which must be found in the skins directory of the product. This will be used to represent the content type in the user interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:295
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:490
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:628
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:841
# f22e9f2988f44907a03f632a4c0038ea
# 2568f03092b6497680d56ce4a692fc85
# b5ce177321a14be58656df79e5d680d0
# c748fdb8acc645e799ec44227d430ae3
msgid "copyright"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:295
# baf4c1805c944a97b6ce211eb53c4f58
msgid "You can set the copyright project-wide with the '--copyright' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:298
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:493
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:631
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:844
# aa2c680261e64613b3a92a293bfb5a85
# 49ae1af881ce471db0a8b260341cdc5c
# 16bf1b85d9f8444292995d8a659a5d30
# 81a7d50658164ac192fd60b120695798
msgid "creation_permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:298
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:493
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:631
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:844
# 5d3516fa546545828759e3bb82feca38
# c5c39b6a15b94373a501937f39df21eb
# d6f258719fb7405a8a0210676f8c696f
# 2fb51f32125d4eea878075ed195961c0
msgid "Sets the creation permission for the class. Example: 'Add portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:301
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:496
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:634
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:847
# 2f7cabedad414428b391b049c3facaa7
# 9319db41313442699767cf262cbffe57
# cedced5057ef40fcb6a86698aa7f4ad5
# 334d2aa0671247bfbecc5e6efd69992f
msgid "creation_roles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:301
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:496
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:634
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:847
# 8857b8e4c4fb404a8447da2b1252d588
# 50c67798ee82493fbb7193b02376d9ed
# 902e653e9a3e479ca7898d137f8823ca
# 28e290af229941b3ae63b20e9aa14ef0
msgid "You can set an own role who should be able to add a type. Use an Tuple of Strings. Default and example for this value: '(\"Manager\", \"Owner\", \"Member\")'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:304
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:499
# 2f7ce7a8c8fa4758a6a45ebe7c9cf027
# 106a6a64b52f416ba822102303380cb9
msgid "default_interface_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:304
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:499
# d13bb546ffb44765976b2e2f3607a2bb
# 429867687b0c42408571cb3865bb6bf3
msgid "default type of interfaces (z2 or z3)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:307
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:502
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:637
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:850
# 38435c560d6242b580fd83b8cf24455b
# 827d768cf4974395a7d2e584c8bc5c93
# 973e54f1420e4033a308eac5ad328da5
# a9559582d21648a49a35330eac20f56b
msgid "default_view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:307
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:502
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:637
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:850
# 9ea638b2617f417e81ea93883e600762
# a1a91d331f4840b282df167b874129a1
# 2ddbab7b69b04f939072f49a0c59a972
# 612169fde5d4437cb0fed048a8d7dbc1
msgid "The TemplateMixin class in Archetypes allows your class to present several alternative view templates for a content type. The default_view value sets the default one. Defaults to 'base_view'. Only relevant if you use TemplateMixin."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:310
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:433
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:736
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1084
#: ../../reference_manuals/old/testing/brief_example.rst:4
#: ../../reference_manuals/old/testing/code_coverage.rst:4
#: ../../reference_manuals/old/testing/doctest_zope3.rst:4
#: ../../reference_manuals/old/testing/doctests.rst:4
#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:4
#: ../../reference_manuals/old/testing/introduction.rst:4
#: ../../reference_manuals/old/testing/running_tests.rst:4
#: ../../reference_manuals/old/testing/testing_examples.rst:4
#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:4
#: ../../reference_manuals/old/testing/types_of_tests.rst:4
#: ../../reference_manuals/old/testing/unit_tests.rst:4
#: ../../reference_manuals/old/testing/writing_ptc_test.rst:4
#: ../../reference_manuals/old/testing/zope_testrecorder.rst:4
# 9d192d0bceb04d3f8d6469657f13dcb4
# e033fce1cfb04ce1b7ae45d13429719c
# 6ca151f157a648cba08f5c8192362c36
# 31ed9575dc054988aa654708534f2073
# 60abedda18a741d4a0c6d95de82b898a
# 14996ee753f643a9928c21ffff222cb9
# e3c71e8836b549c6af997efb941074e0
# 2ede6d2b53ad4b74b3198bb9d0e84fbb
# 2dd5eabd16f7416d929149d2508fd825
# 807851e38a344b23a7ff94d6bd5082ef
# 180048a3c49445779e1c8e511551193d
# 671016d59a2c4ee288f5c6c3cca44d77
# 70198a28a9464ca78c1e350ae2d1caee
# 51074f5aa1c3489188628da5499dc8d0
# 2464be46c9794191b1e2fda7750168e1
# 8f08142fe920480f8f103b63cff3d6d2
# f5e760be01484acabb93a33ad7d2fe08
msgid "description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:310
# 2dfd6777449745bc9f43fa15ba5f6b0a
msgid "A description of the type, a sentence or two in length. Used to describe the type to the user."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:313
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:511
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:640
# b474d8ae1eb4400eb816991005cc19a7
# 60eec63e9b79435ab78702a3f9dacb5e
# 13ab8a4cab9e4396b7f7f447b469e8e5
msgid "detailed_creation_permissions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:313
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:511
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:640
# b2ecead505064324922c2d08ac153ae1
# b4ec927b854647bb8c51e2100a43a7ce
# 7678d1a5006f4a069c23ea1afeea8e13
msgid "Give the content-type (types in the package, model) own creation permissions, named automagically 'ProductName: Add ClassName'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:316
# 60eeaaa9d0eb41eca23a4ee329850f73
msgid "disable_polymorphing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:316
# 3d07f2915f56473e80ff320e85d76ea0
msgid "Normally, archgenxml looks at the parents of the current class for content types that are allowed as items in a folderish class. So: parent's allowed content is also allowed in the child. Likewise, subclasses of classes allowed as content are also allowed on this class. Classic polymorphing. In case this isn't desired, set the tagged value 'disable_polymorphing' to 1."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:319
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:514
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:643
# f7d55041ca814c998c659d9f172d5c17
# 17a5ee1293144f318f3f1222e3c5948d
# 1883ca17ff3741bdad4c44086b87472a
msgid "display_in_navigation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:319
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:514
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:643
# e5d73aa32f4d4f028c721a6bda19fb8f
# 9eb3d786cf454ce5b56019031fdec8ab
# a68ea0922a284889b85ad2851a6c793f
msgid "Setting this boolean value adds the type to 'Displayed content types' in the portals navigation settings. Default is True"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:322
# a65030dde7ac49f5acbc76a691f70382
msgid "doctest_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:322
# d89bc4edb5614a968fd7fb52a951d001
msgid "In a tests package, setting the stereotype ``<<doc_testcase>>`` on a class turns it into a doctest. The doctest itself is placed in the doc/ subdirectory. The 'doctest_name' tagged value overwrites the default name for the file (which is the name of the doctestcase class + '.txt'). ArchGenXML appends the '.txt' extension automatically, so you don't need to specify it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:325
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:517
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:646
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:853
# 907d5ab137b446b2bf07da89d9f0e6ef
# 74c4ca311d45458b891af2dc785ed2eb
# 57c17f80b1cd4ea6af5b351f1e87e280
# 9c299d45bc94444ea49b19d1ee041541
msgid "email"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:325
# ca71cb9e4f3c45919fb0c71926a3a844
msgid "You can set the email project-wide with the '--email' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:328
# 9ed1e41ae71f4199b9edc45b8be8d8e8
msgid "filter_content_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:328
# 1053e410e51a424d883c15890fea61ce
msgid "If set to true (1), explicitly turn on the filter_content_types factory type information value. If this is off, all globally addable content types will be addable inside a (folderish) type; if it is on, only those values in the allowed_content_types list will be enabled. Note that when aggregation or composition is used to define containment, filtered_content_types will be automatically turned on."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:331
# d95e0d28c4fd4a8e890d524928178929
msgid "folder_base_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:331
# 950b5467b65746c99749754469358d3d
msgid "Useful when using the '<<folder>>' stereotype in order to set the folderish base class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:334
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:523
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:649
# f832d4a3b35e4f979ec49e27d8fa7268
# aa642b6c929346d7911bf65b58c1e2c3
# eb3ae0c85e7948bdaac5b5900a16b71c
msgid "generate_reference_fields"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:334
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:523
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:649
# f0b08941cec1488f91f3e24fbfba9ffa
# b7824032357a48dda0a11612d6216fd3
# bad8b3e255194d3c8256dc5d191b8ebe
msgid "Per default (True) navigable reference (or relation) ends are resulting in a ReferenceField (or RelationField). Setting this value to False results in not generating ReferenceFields automagically."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:337
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:526
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:652
# a907514458df45dca19f7fea67a3e7ac
# 4719d77e2a9b4f6f8eb0b75b778f323e
# 5335a3de19724e5e84febe57aa880d8f
msgid "global_allow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:337
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:526
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:652
# 9f0d477185b04baea8a7c70a986c48bd
# bc52849fb3b84dac8f937233ab83d0e6
# ac89dd533eb442dcb42d2ba6d237eae2
msgid "Overwrite the AGX-calculated 'global_allow' setting of class. Setting it to '1' makes your content type addable everywhere (in principle), setting it to '0' limits it to places where it's explicitly allowed as content."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:340
# 771e0f7d07194783aadd45eb96e51141
msgid "hide_actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:340
# 3696e5a305464c6996ffb86876b2f6ad
msgid "A comma- or newline-separated list of action ids to hide on the class. For example, set to 'metadata, sharing' to turn off the metadata (properties) and sharing tabs."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:343
# 9f3e68d407db4638b8b7cb5ca01f6a70
msgid "hide_folder_tabs"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:343
# aab71963f7ff47fea2d9e6715306d0c3
msgid "When you want to hide the folder tabs (mostly the \"contents\" tab, just set this tagged value to 1."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:349
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:532
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:658
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:856
# 0afcd033dab2485880589e314fdc3c24
# e36aad841fb248eb85b1092b038dce41
# 40894623db3444849df1c5aac21165b2
# 53d01ccfe99f4ce18d1c553a6cd043eb
msgid "immediate_view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:349
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:532
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:658
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:856
# 6535e403ef8444cab27f6cf3cc0e0e32
# e6252ae563294a88959c4025d887bd72
# a701e7666fb94d928e13e31b5543b022
# 2874f8fb7e7a487bbecfeff3f42725a4
msgid "Set the immediate_view factory type information value. This should be the name of a page template, and defaults to 'base_view'. Note that Plone at this time does not make use of immediate_view, which in CMF core allows you to specify a different template to be used when an object is first created from when it is subsequently accessed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:352
# f43a9f0f98ab475e868638c9cf85be6b
msgid "import_from"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:352
# f9f6210c2e3e4747b03b0275ce2b458b
msgid "If you wish to include a class in your model (as a base class or aggregated class, for example) which is actually defined in another product, add the class to your model and set the import_from tagged value to the class that should be imported in its place. You probably don't want the class to be generated, so add a stereotype '<<stub>>' as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:355
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:535
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:661
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:859
# 8a3a8c0bd59f4cb2ad544a0ff1ffad6f
# 7a5cb95c3c0941f6b0a4fc275e03035c
# 400e5dff01f54752a5b8b4d58f99ab2d
# e240cafd9ba74f658c57ec9f252c4942
msgid "imports"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:355
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:535
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:661
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:859
# 7611a4cbc71e4c4687bb134356960e68
# bffdf365efd9473097864724211015f7
# 157508ea234846d48d78b974fa042167
# 61fc3e8d25a74b7aa3daddfd0dcd64cf
msgid "A list of python import statements which will be placed at the top of the generated file. Use this to make new field and widget types available, for example. Note that in the generated code you will be able to enter additional import statements in a preserved code section near the top of the file. Prefer using the imports tagged value when it imports something that is directly used by another element in your model. You can have several import statements, one per line, or by adding several tagged values with the name 'imports'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:361
# 6af322e7f324441ca52808c898ecbcd9
msgid "inherit_allowed_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:361
# 3701c6c074364f06a0f2cf2215111996
msgid "By default, a child type will inherit the allowable content types from its parents. Set this property to false (0) to turn this off."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:367
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:544
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:670
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:865
# 06868184ebc547208130a3478c6862c2
# 70b0fef076a6416f9ad7d6494b2060c3
# 3ce78c0141b347e48addd2e3b901f391
# 638d2d40ed144732b38e93fffabc02ef
msgid "license"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:367
# 16e0fe6471894872ae61d02be36b6c5b
msgid "You can set the license project-wide with the '--license' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:370
# b61f9233fedc4bf5a745543f6c8e3254
msgid "marshaller"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:370
# e4bf9d1f57554af2a66db93155e18c12
msgid "Specify a marshaller to use for the class' schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:373
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:547
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:673
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:868
# 6d9b2e736e0946efb5b4322518814391
# 7f5338a4c38e4b8c8b30c0b5d3728ad1
# 7299881f1c764a8fbee702a9707ef930
# a799295044bb4bcc93bc0bb17022d853
msgid "module"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:373
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:547
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:673
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:868
# b429c289d417460db651aebeda320dd8
# 455a7f8ffd2e4d37bbd391acbefd7c6d
# 46597427c72a4414bfe29617883f6e26
# cfec382202074466b4ef6464a2e6869f
msgid "Like 'module_name', it overwrites the name of the directory it'd be normally placed in."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:376
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:550
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:676
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:871
# cd9f59d40c9c4923ac79b8de6147842f
# 9da766d223df4b899206ad2a98d0dbb8
# c7b0caa6ad3641bb8e3a11997fe9b0c8
# 0e7c3e7927374632b41fc32c0efed3a7
msgid "module_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:376
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:550
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:676
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:871
# d127131d7bd144d89ec3dcdc3054d7a8
# 28d3707076f2404ebe35ff6ae94918d5
# 34cdb5203cd746c09eaa3859a90762ce
# 2b381447019143a780d144d6b2d6b290
msgid "Like 'module', it overwrites the name of the directory it'd be normally placed in."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:379
# dd6279e6037a4b088edde70373fd4e45
msgid "parentclass_first"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:379
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:382
# c6d0df6e6ccf4b95b49c007153127135
# d3a2a9b7b973454aa2030f8087b43b7c
msgid "if this tgv is set to true generalization parents are used before the standard base classes (e.g. BaseContent) this option is sometimes necessary when inheriting from some special parents (e.g. 'remember' style classes)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:382
# 4cbfb23357664d64b6c101f827cb9aae
msgid "parentclasses_first"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:385
# b8bb330c348e4dc7940f8034ac3c2632
msgid "portal_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:385
# 71b2f6ce8db843fab8b32a8d03855eb0
msgid "Sets the CMF portal-type this class will be registered with, defaults to the class-name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:391
# d45bea051fd84c9f8e0b54e30cff9771
msgid "register"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:391
# 6c7d08ee4a2f4097872f91cb6913d389
msgid "'Remember' related. Set as default member type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:394
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:565
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:685
# 2589d787ca8b45baa3a14480eb932d41
# 2b2d9353081d487797ee78a40e216f5d
# 9fba3f9634ed40cc8efabbfdbc37c9da
msgid "Per default a fields 'searchable' property is set to False. Sometimes you want it for all fields True. This TGV let you define the default for a class, package or model."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:397
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:568
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:688
# 67d736d30a9a459dac5f3b42ae34515f
# 425482c35e0b487589ffdbdd285f7505
# baa10124583f45209583a2ea2587e40f
msgid "searchable_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:397
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:568
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:688
# 3e87b9cb6e494df196fde7747be2345f
# bfac309f4e084860bb124efaf219a28d
# efab225299b3435685223282772d5d31
msgid "Setting this boolean value adds the type to 'types to be searched' in the portals search settings. Default is True"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:400
# 02df7e0053e04ad3bc3a1d27600b28b0
msgid "strict"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:400
# 2345a1321af142489ae2a0123be8c10e
msgid "On a class with the ``<<interface_doctest>>`` stereotype: check for inherited interfaces as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:403
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:574
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:691
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:874
# f224c7264fc14163bbb1c408e68ed354
# c3ab18cd785d499abfcbb9d554d4244d
# ec8f61c3fbc749399cf022cee96e83df
# d39cada672204f40aa264fe19a7649cb
msgid "suppl_views"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:403
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:574
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:691
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:874
# f9cf629a8d904045860e24f2f4a72172
# 4ca33630c5d045e9a143b94a8f99c2f0
# 9f41f9932f8543c2aa69a8a9b62b6b03
# 04a4c887a808461991e489f4489047cd
msgid "The TemplateMixin class in Archetypes allows your class to present several alternative view templates for a content type. The suppl_views value sets the available views. Example: '(\"my_view\", \"myother_view\")'. Defaults to '()'. Only relevant if you use TemplateMixin."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:406
# e8979f160c3744389f4f729bb25082c1
msgid "typeDescription"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:406
# 2532bc4867cf4abeb9c83f7f528d0758
msgid "DEPRECATED. Use 'description' instead."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:409
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:577
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:694
# 8d5b63f993c848dfae8a3f0a07e48eed
# 2e8530c02d0d4b368b01792fa4857474
# 372572d71ba74e7d9dabafbf58395224
msgid "use_dynamic_view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:409
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:577
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:694
# 40be3362706b4da8930eb61eebb78351
# f52c8b36c69b46c09c8db1225145017d
# 521c154db5d4485bb22247f2ec9c52d8
msgid "Controles wether CMFDynamicViewFTI is used for a type/class. Boolean, default is True."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:412
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:580
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:697
# 83af97be392b484991dfb4f00ac2e691
# c381d7fdbbe84bb1803b2427e08f20da
# f613d3af3476429c8fa0f0e1fecf45ce
msgid "use_portal_factory"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:412
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:580
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:697
# e97b2f1908614504bde60486d06c9728
# 629be5e91820466a8fe7f477c00fc133
# ba81df417405484d9519a27646166a61
msgid "This boolean value controls the registration of the type for use with portal_factory. Default: True."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:415
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:583
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:700
# 8521325f954442748f56ff48ebf2f894
# dee8241c759945dfb2334afe803cca05
# 4fabcbc98fa043a093bf4fe97fd2fa10
msgid "use_workflow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:415
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:583
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:700
# 49f7312384994fbaaac784a178fbc565
# f40e0ea6470e4401afc76e3bd4976ea0
# f227ca29b54344db8ba629d3b821999b
msgid "Tie the class to the named workflow. A state diagram (=workflow) attached to a class in the UML diagram is automatically used as that class's workflow; this tagged value allows you to tie the workflow to other classes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:418
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:586
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:703
# c8d8e95d71654507a7ee978714dd7d63
# eed1baf5d3e34521bc1394f9f205b987
# 7d8bf9322d0f45e98475c5e0374ba9fe
msgid "version_info"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:418
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:586
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:703
# 6d72e4b4a2fa4815b2bd17ebee8fde93
# 01954dffc24e4ab2bcb2cd63db014224
# bea5b9fdcfd549a8b163fe8fe08a11bb
msgid "Add ArchGenXML version information to the generated file (default is 1)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:424
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:592
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:709
# 2f58e2dd55d248569cb6a6f55a985ee4
# 2fba85c2ac884dacb9a478020600aa41
# 8106187975564daf8946e905d5f3168f
msgid "vocabulary:vocabulary_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:424
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:592
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:709
# 9453a355de2a4262a7dd5402a36096a3
# f3232cb014f2492dbeb4569d09bd13e7
# 0f0af7689da54a39821d0556533d8bb9
msgid "For use with 'ATVocabularyManager'. Defaults to 'Simplevocabulary'. Let you define the portal_type of the vocabulary used as initial vocabulary at Product install time. If VdexVocabulary is used, the install-script tries to install a vocabulary from a vdex file names 'Products/PRODUCTNAME/data/VOCABULARYNAME.vdex'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:433
# b5a23f1553ad41e8a9167c9faa40b9a6
msgid "Sets a description for this field. It's used for field documentation while registering inside Archetypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:448
# 118daf2093ec4494a745aaaa39d93575
msgid "code"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:448
# b0da1b967b394e94bec3a5e52f2e0da0
msgid "The actual python code of the method. Only use this for simple one-liners. Code filled into the generated file will be preserved when the model is re-generated."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:451
# 2318510ae46c4e6eaa90a8428a6d46c1
msgid "documentation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:451
# 2ed262f78cf34a18a81999894ea40fee
msgid "You can add documention via this tag; it's better to use your UML tool's documentation field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:457
# 4f6a9dd5b2f145b4a07cd9991e4c0b06
msgid "For method with public visibility only, if a permission is set, declare the method to be protected by this permission. Methods with private or protected visiblity are always declared private since they are not intended for through-the-web unsafe code to access. Methods with package visibility use the class default security and do not get security declarations at all."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:472
# 650b9f9471074f789e6eaa4925ab6270
msgid "You can set the author project-wide with the '--author' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:490
# a8ac394f60bb437ea480615abf5a6b3b
msgid "You can set the copyright project-wide with the '--copyright' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:505
# 37814b61784341199238069374dca982
msgid "dependency_step_qi"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:505
# 3a6b2fbba3554ff5a5783812b5a698f2
msgid "Generate Quickinstaller dependency installation for your product. Boolean (1 or 0), default 0 (off). Dependencies can be declared in AppConfig.py in a variable DEPENDENCIES."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:508
# 2cc859f8e8f04519915007e593761166
msgid "dependend_profiles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:508
# 4f0b8c94061c4e01a03bc8db40795adc
msgid "GenericSetup profiles your product depends on. A list of profile names separated by commas. This list is used for the dependencies tag inside the metadata.xml file of the product's profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:517
# 77f653fc924c40c3b264958a822c3ca7
msgid "You can set the email project-wide with the '--email' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:520
# 555d0702c4074535972fe6cd19578f74
msgid "fixtools"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:520
# de2aab33f72e4cc89cc6d3875179af18
msgid "Generate fixTools function in setuphandlers.py. It calls initializeArchetypes for generated tools, thus reset existing data in the tools. Boolean (1 or 0), default 0 (off)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:544
# 4f1776e3fa4d43c2b63514bde83d2f78
msgid "You can set the license project-wide with the '--license' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:553
# 4f4b3a970a8c462ca2617f84f819536c
msgid "plone_target_version"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:553
# 27ed048687314137b739d3bcd2665e93
msgid "The target version of Plone. Defaults to 3.0 Possible values are 2.5 and 3.0"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:556
# 6dfbafd54dd54292b1c3c58957655b42
msgid "product_description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:556
# 28b1bb6368b94ca88224ac5268b46b7c
msgid "The description of the Product. This is placed as description tag in the metadata.xml file of the product's profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:571
# 639945af85e94d7b97cc990b44711304
msgid "skin_directories"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:571
# f6e2cb1c243c4dc48241672732a45d19
msgid "A comma separated list of subdirectories to be generated inside the product skins directory. Each of this directories is prefixed with productname in lowercase. The default value is \"'templates', 'styles', 'images'\"."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:610
# 902db62730c14cd488ba3482b7597bf0
msgid "You can set the author project-wide with the '--author' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:628
# 5071a80feace42a08dce18e9665541cf
msgid "You can set the copyright project-wide with the '--copyright' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:646
# 3acecc4f981140b7aecfd96a35532345
msgid "You can set the email project-wide with the '--email' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:670
# 9b6240f450fa4300af7830da52a278fb
msgid "You can set the license project-wide with the '--license' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:715
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:21
# bbbd4097481c4689b50018bdca745072
# f23a08a9c351416d9ae6b2f266706caa
msgid "portlet"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:721
# 446c207e1e6f4bd9b60a4fa604f6a9d7
msgid "template_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:721
# 1d1cdfa8becf466284b0366e7dbed23b
msgid "Specify a template for the portlet (without .pt). Default is the class name. (on classes with the stereotype ``<<portlet_class>>``)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:724
# 84de71855c624924b398abf8ccbe868d
msgid "state"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:727
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:888
# b25f7d39b130442bbd8e81590db1b360
# 1e003d05542544628c4b452e2c99c960
msgid "access"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:727
# 84e573afd8124e25a5b25cd9debb7cbd
msgid "Shortcut for 'Access contents information'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:730
# 4914c9aea87a44b4a421357c4bb74923
msgid "add"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:730
# 8812a482ee9d412fa0b8b98a72e10803
msgid "Shortcut for 'Add portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:733
# ee8eb9f60dd44399b6430a2a594785ce
msgid "delete"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:733
# b7328ff1b94b4d248a0dce4a640bf71f
msgid "Shortcut for 'Delete objects'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:736
# d5fe8ffac3544f33a6d7e5b7343062a8
msgid "Sets the state description."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:739
# fbf87c32c9ac47438bdc67d9aa54bcef
msgid "inactive"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:739
# c595851262c547c5b96d77d0a97e897b
msgid "Shortcut for 'Access inactive portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:742
# 4e0c598d4ca24e0b8ed836b36cf53510
msgid "initial_state"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:742
# 4fbc251f01fd48de9fb42b65221e3168
msgid "Sets this state to be the initial state. This allows you to use a normal state in your UML diagram instead of the special round starting-state symbol."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:748
# ec46f8f385414adb9f0a6ff3bc14816c
msgid "list"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:748
# b01b53dfcbfe401392d3def788671c84
msgid "Shortcut for 'List folder contents'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:751
# 346baf80ddf84cbeb3999ed0a177f030
msgid "modify"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:751
# 31d3ea87281b4c63ba4e00df5858fe3c
msgid "Shortcut for 'Modify portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:754
# 88e9f6b7dc1943a58749c84b5a68e702
msgid "review"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:754
# b6c20859f18c4cd491046a631fc32e09
msgid "Shortcut for 'Review portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:757
# 6e015bfef42f4fab83eae85a1cae7d3b
msgid "role"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:757
# 18f2de8cfa9544b38879cf8f9646a438
msgid "Shortcut for 'Change local roles'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:760
# 40739a4fb7d54c2f905117b1649e362a
msgid "Shortcut for 'View'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:763
# d6aaeff7b0df466baac699bb934470ca
msgid "worklist"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:763
# a2dc2c1eafd1477999c65f3d39ddb448
msgid "Attach objects in this state to the named worklist. An example of a worklist is the to-review list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:766
# 2594bed9c8684a58a871db3e8512cd80
msgid "worklist:guard_permissions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:766
# 6d648bf0cf0a44888e0bafcb0f28ad79
msgid "Sets the permissions needed to be allowed to view the worklist. Default value is 'Review portal content'. Set to 'False' for no guard_permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:769
# ecc4983b97674ad69b3867660de7521b
msgid "worklist:guard_roles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:769
# 7ae9a37022704f118ef4ea5a2e823bb8
msgid "Sets the roles needed to be allowed to view the worklist. No default value"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:772
# 7dc331a0e9594f4c8b58fa37ba3840ce
msgid "state action"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:775
# b010ec8cebf445aaa858404c7882f9a3
msgid "after:binding"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:775
# c924e066da394b4b8c16181ff7549eb2
msgid "Interface to bind the after effect to."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:778
# f1866d0569664abfa9626481f75fad0a
msgid "before:binding"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:778
# 4a793082479b41c4ba8b5d4af5054cf2
msgid "Interface to bind the before effect to."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:784
# 7bdddee6a15d4637aa1b02fc846b9d80
msgid "state machine"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:787
# a22c020a659f4831bc7aa9b136256179
msgid "bindings"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:787
# d8512fa667f244b591cd7638eef89803
msgid "List of portal-types this workflow should be bound to. Comma-separated, i.e. 'Document, Image, File'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:790
# 8d035ed66a084c16a0d616d3318e6258
msgid "A workflow id to be set as the default workflow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:796
# 0f8f374ab20b46f0aca5633b6474ca1d
msgid "state transition"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:802
# 60ebbc3bceaf4dc8a3a67c5c6618b627
msgid "trigger_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:802
# f4bbfa4ba7ad455491f6649b8dc1ed4d
msgid "Sets the trigger type, following what is defined by DCWorkflow: automatic user action (default) workflow method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:805
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:353
#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:170
# 8795d2bf514247738147c26282b8473a
# 8855fd1ed4e943269d372cc820a30eca
# 74d354177c724992b562f06a6d5a32be
msgid "url"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:805
# cd0c35a003cc4452b22826e700ad1de5
msgid "Action URL, need 'PloneWorkflowTransitions' to see it in Plone."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:811
# 7bab9317e3ac4b0ca1af1efd57b179e2
msgid "You can set the author project-wide with the '--author' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:814
# 6b95ca5d6ae548d3935b23987235d121
msgid "autoinstall"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:814
# 30d4155c6fdc4a169a4e64a969439353
msgid "Controls, wether the tool is automatically installed when your product is installed. Boolean, default is True."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:817
# afab0ec4f4d84ff9ac2abe64f08bc452
msgid "configlet"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:817
# a63db8f3a16e41c98c0841643577beae
msgid "Set to true (1) to set up a configlet in the Plone control panel for your tool."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:820
# 39ae4c98680741028a14ba8eb602435c
msgid "configlet:condition"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:820
# f03525d071c14d03a13855d03e445b5f
msgid "A TALES expression defining a condition which will be evaluated to determine whether the configlet should be displayed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:823
# d04121c2483b4555bd52107f2548f73c
msgid "configlet:description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:823
# 8affb535e3404dbb92b323d8d2699a22
msgid "A description of the configlet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:826
# ef431e6fb9f14ad79308ae5742976afe
msgid "configlet:icon"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:826
# 213d853cee9e4e76b558bec0da6018b6
msgid "The name of an image file, which must be in your product's skin directory, used as the configlet icon."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:829
# 0cf6114508b947598c6285212ed0f0d4
msgid "configlet:permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:829
# 973d143313a74db9a1f932d83bb8df3c
msgid "A permission which is required for the configlet to be displayed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:832
# dc142da7269b481cb86e6c12a72d68bb
msgid "configlet:section"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:832
# 33f0d885a2344df3942cc6e39e2c167b
msgid "The section of the control panel where the configlet should be displayed. One of 'Plone', 'Products' (default) or 'Member'. **warning**: older documentation versions mentioned 'Members' here."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:835
# 95e8eb1296f1415fbe42bc53d68c8a8b
msgid "configlet:title"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:835
# f60738b15bf44d69a44b494e9b30cfb0
msgid "The name of the configlet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:838
# 0c03c799b7534019860140802dabaf8b
msgid "configlet:view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:838
# a7425a69704746a4beda2f717e226cb5
msgid "The id of the view template to use when first opening the configlet. By default, the 'view' action of the object is used (which is usually base_view)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:841
# d3a0b03e9b6b44168e9951acc9d4edce
msgid "You can set the copyright project-wide with the '--copyright' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:853
# bb505f6663c04a9fbc939e745cc87ff8
msgid "You can set the email project-wide with the '--email' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:865
# a1f95f03f74b4e15a03bf0340f55ac87
msgid "You can set the license project-wide with the '--license' commandline parameter (or in the config file). This TGV allows you to use/ overwrite it on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:877
# 392e08f4feb34fc18e959a99aa5de04c
msgid "tool_instance_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:877
# 163797e5adad4a5692c0bb8580c0406b
msgid "The id to use for the tool. Defaults to 'portal_<name>', where ``<name>`` is the class name in lowercase."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:880
# 0fd69e61e7664a8cbe086f666fb63f27
msgid "toolicon"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:880
# f4e163ac6dc340368937b8bc21819d8d
msgid "The name of an image file, which must be found in the skins directory of the product. This will be used to represent your tool in the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:883
# 4dc0b683824043c9b5b9bbdac4fbf39f
msgid "unknown"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:885
# 41fb527525f64e5faf1842898239b247
msgid "Modify"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:891
# 2dbbe897caa444f6a8de8c95d60c6d2f
msgid "allow_empty_rows"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:894
# c228d72d734c4de6a05c972b2c4058b3
msgid "columns"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:897
# b209ed08f169428da04b7815aeb49037
msgid "default:widget:Reference"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:900
# 99d15d568b0c49889179367cf1ed32ed
msgid "default_content_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:903
# 90de9a06c3004a64a3decc39a91b1602
msgid "default_output_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:906
# e37a27c68409472d9f65c2d3438657a4
msgid "default_page_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:912
# c80fe05b0c24433bbfea7104cfce6674
msgid "index_method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:915
# 289838a4cc5f41a5ad03973213f79d36
msgid "languageIndependent"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:918
# 3a735208d6244e94a920dd6b650b6b78
msgid "max_size"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:921
# 16f6911d83584013b163e81875c7d8e3
msgid "mode"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:924
# 826e431e8d2c41f2afdafa18cf0b23cb
msgid "pil_quality"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:927
# 3037f71761064cc49e74133bd0d8a40f
msgid "pil_resize_algo"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:930
# 4f2c77777ce94937be12b4a9b7a9aadf
msgid "rename_after_creation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:933
# 1a0a2911a4964a398157ad8b1950b39d
msgid "storage"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:936
# 89298c44812b44b1b6a243b577c8fac8
msgid "swallowResizeExceptions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:939
# 1b59a82c08fc4eadb4a56bc7bb6bbec5
msgid "widget:addable"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:942
# 0cfbacd110f848de9b0ce58eade837c7
msgid "widget:allow_brightness"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:945
# fae7ea29f2214e92bb28144fb1f70858
msgid "widget:allow_browse"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:948
# a924a11cf5e04e60b38bb4982683c1c1
msgid "widget:allow_file_upload"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:951
# b62d674e6b15460d9454446a2611842f
msgid "widget:allow_search"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:954
# 4b196bcfbfce4c35a70df18898950560
msgid "widget:allow_sorting"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:957
# d79104da0a9e4a4896f0b3f4c2fe8694
msgid "widget:append_only"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:960
# c515c228addd434688bd247ff3320e57
msgid "widget:auto_insert"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:963
# 891a66024d2a48969cf1c05f739263e9
msgid "widget:available_indexes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:966
# be5a080289ec4f75a4e2ceb43219f751
msgid "widget:base_query"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:969
# 064c6a23108f4f7d85bd6f92cf9f9116
msgid "widget:checkbox_bound"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:972
# 139e2a3d603b4d19ac3e6a9931388a28
msgid "widget:cols"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:975
# a0b95df82baf4e0591130a3a9dda0b8f
msgid "widget:columns"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:978
# 92581c99cb4f44bba8e7facd3e8a6cdd
msgid "widget:default_search_index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:981
# 654fae84a74d4bd1a7e91f2ec311ca06
msgid "widget:destination"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:984
# 1d6e09e0e04a4def81a18a96af0e57ce
msgid "widget:destination_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:987
# 7bbbc08e074840b2beb603bbc4587826
msgid "widget:divider"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:990
# 8be6e723a5184533af8df9e7c1f49afc
msgid "widget:dollars_and_cents"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:993
# 4144a1fc96c0488ab60248ef3125ca43
msgid "widget:ending_year"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:996
# ff43c9df4a0e49fc87111af9ebb2f29a
msgid "widget:force_close_on_insert"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:999
# 6db3c99e763a4bb18cf14ac3ceae88f1
msgid "widget:format"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1002
# 4f881898b401485484725af3ac8d8e1c
msgid "widget:future_years"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1005
# afac4e8c5d9a41e08a762d4b64ed7e76
msgid "widget:history_length"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1008
# 40cae809d7034b63b153f9c414a8e613
msgid "widget:image_method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1011
# d197ed34451e483da7109731d21e7de7
msgid "widget:image_portal_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1014
# ead6816c29d84689b388b4f60c15fdd6
msgid "widget:maxlength"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1017
# 811f499bd5c4450695d172ea2022a99d
msgid "widget:nullValueTitle"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1020
# d905d1a8debb43d2830290f9f1a0bc89
msgid "widget:omitCountries"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1023
# ca1374069e794237b5f5a1c01f432278
msgid "widget:only_for_review_states"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1026
# 3b742821beb74866a3f9f0a6bac1d604
msgid "widget:provideNullValue"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1029
# a59b89586f46449a90eda85fa6a5b1de
msgid "widget:restrict_browsing_to_startup_directory"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1032
# fd57197a467c4c09a13554072f141085
msgid "widget:rows"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1035
# d44e0fc609684f1eb0092755db9f5e2d
msgid "widget:search_catalog"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1038
# 5b76efeff0714486b4eab14cd0c39726
msgid "widget:show_hm"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1041
# 7229d162d3fe4218bdd596620266032e
msgid "widget:show_indexes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1044
# 7a9b2bff0aed417cace3832b145c5ac2
msgid "widget:show_path"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1047
# bd027c51fddd4482acad5dc36bae743f
msgid "widget:show_review_state"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1050
# 2ea9f170ad414bc3b86aa63ff1f8219f
msgid "widget:show_ymd"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1053
# ccc87e297fc74909840b697e22c4b0e3
msgid "widget:size"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1056
# edfddf047c65431cb71c5f37c24fc083
msgid "widget:starting_year"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1059
# 65651fab1e204e8b9a54981f8a593872
msgid "widget:startup_directory"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1062
# 1a3637e2a18e4164bb837f4326f19907
msgid "widget:thousands_commas"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1065
# 7407e8fe00d94a7da8cbd0a27e5a6ded
msgid "widget:visible"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1068
# 59044ee69ff04dedba9931c95d374e1d
msgid "widget:whole_dollars"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1078
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:14
# 5130e72a84ab4fa2b0b574f0ce9382b8
# c2becf26dc02442cbbdbe32d806d504f
# 75edffe291e54870a1bedec1031d3c44
msgid "name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1078
# b5fb115846584928941eea718deec271
msgid "Specify a name for the zope3 view.. Default is the class name. (on classes with the stereotype ``<<view_class>>``)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1084
# 5abc9975db024c5c9f72db35cecc1bd9
msgid "Sets a description for this widget. It's used for widget documentation while registering inside Archetypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1090
# 415300d057f443cb8c0b2a41c9b1a653
msgid "macro"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1090
# 2f66608c00d2418f888a15e1e292b9ed
msgid "Sets the macro used by the widget. This will be used as the name of the auto-created page template for the widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1093
# f779a53a1c374fad96b24503d54e178f
msgid "title"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1093
# 241db1c0f18344fe8fed15e5237545ca
msgid "Sets the widget title. It's used for widget documentation while registering inside Archetypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1095
# f46fc3aa6ff64965895bd796593c2c00
msgid "used_for"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1096
# 09003b3f8a774d82b0695e607b1f1423
msgid "Sets the possible fields which can use this widget. It's used for widget documentation while registering inside Archetypes. The list has the form: '\"Products.Archetypes.Field.Field1Name\", \"Products.Archetypes.Field.FieldName2\"'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/index.rst:3
# 9d4d8b3577bc44ed8c3e12a7d7dc963e
msgid "Step by Step Instructions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/index.rst:7
# 71e09ada94444393a58c296667a98855
msgid "Step by step instructions for common tasks while developing with ArchGenXML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:3
# 323ffacb55ae4f1aa45f5597c7d336aa
msgid "Setup of a Testcase Environment using UML and ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:9
# 51a8549b2f8e4b7f8220aea7bfe6a179
msgid "Environment for test-driven and architecture centric development."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:11
# 26972ae293ba457497298f08d61fe2b3
msgid "Check if it works in 2.0. Add some information how to run the tests."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:14
# 3fb69596b25647caa24c3108a2d7bc1f
msgid "About Testing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:15
# 2e99aa73e5ad4dcd88caaa3d786eb13e
msgid "Since development is going on at many places in the Plone system, it is important to have a way ready to *test* if the software you wrote is affected by the changes. And, more important the other way around, if your work, in case it makes it way into the Plone core or other add-on products, affects the work of *others*."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:21
# 906fbe1e84ae4cfb8d34cbb88c8caef0
msgid "There are several documents available to read on why testing is important, so feel free to have a look:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:24
# 83d89ca461cd471abd4442dfd0b661e0
msgid "`Testing in Plone - Introduction <http://plone.org/documentation/tutorial/testing/introduction>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:25
# 6bbf1bb2419645c5990f339b36376453
msgid "`Best Practices for Plone development - Unit Testing <http://plone.org/documentation/tutorial/best-practices/unit-testing>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:26
# f8ba896a368c423f94061db611cb0699
msgid "`RichDocument Tutorial - Unit testing <http://plone.org/documentation/tutorial/richdocument/unit-testing>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:28
# 51022b85dd15459cb93820a91c2d33e2
msgid "and there are many more: Try the *testing*. Some of these documents are describing in detail how to write the tests itself, which this manual page is not intended for."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:33
# 31e4eb608a02473e86e7408585318e25
msgid "Testing and UML/ ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:34
# a321a6809d9b432e899d87e6bcf1ab6c
msgid "This document describes the few steps necessary to setup your testing environment when using an UML diagram and ArchGenXML. It generates your projects with the test infrastructure and you can focus on writing the test itself"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:39
# 269ece9d7b3241ecbde6fb4074581c3b
msgid "ArchGenXML provides a pre-configured testing environment - no more hand-work to create it !"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:42
# c34e43a157c044f99100ad12dbaa3853
msgid "Steps:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:44
# 5eb7d656d0cf491a858e692bf7ed18f2
msgid "Check if `PloneTestCase <http://plone.org/products/plonetestcase/>`_ product was shipped with your Plone. If not install it in the version for your Plone."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:45
# 9ccbb6ddcb03444ba5042fc03df4a2b6
msgid "Create a package in your model and name it 'tests' and give it the stereotype ``<<tests>>``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:46
# dd77efe0b2a74aa88d24361866d6f49f
msgid "Inside the new tests package create class 'MyFancyTestcase' (in the uml below named 'testPlone') and give it the stereotype ``<<plone_testcase>>``. This is your main testcase class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:47
# a69e08e7550e4be6a1dd80f9102ae030
msgid "Create an additional class inside the test package, call it 'testSetup', and give it the stereotype ``<<setup_testcase>>``. Let it derive from the main testcase class using the generalization arrow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:48
# 3f5c74b110de4a4881fe700361029ef4
msgid "Testing methods/behaviour of archetypes classes: Create a class inside the test package. Give it the stereotype ``<<testcase>>`` or ``<<doc_testcase>>``. Make them derive from main testcase class using the generalization arrow. On a testcase class you can add methods starting with 'test' such as 'testMyFancyFeature'. After code generation you just need to fill in your test code. A doc_testcase class creates an empty doctest text-file in the '/docs' directory of your product. There are some tagged value available to control the testcase in detail. Please look at the chapter :ref:`agx-tagged-values` for more information."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:49
# d1bf4d89ba2145d48e97e9fa31e05d9d
msgid "To generate all imports and some startup code, you can use the dependency arrow from the testcase class to the archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:50
# 713d06ad366345589fef1dede7961fe9
msgid "You can repeat 5 and 6 for every class you want to include in yout test. You can organize your tests also different, like one integration test, as you like."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:51
# 8ea280c617734659aa850ade9d71b16c
msgid "Generate and run the tests."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:53
# 890c9c7ba7ba4246a26618a3eff07040
msgid "steps needed to get the test fly, such as 'zopectl test' or setting SOFTWAREHOME and INSTANCEHOME environment."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:58
# c96cd1152bdd451daf8ccf7e4937f5fb
msgid "These are the basic steps necessary to get it running."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:3
# a813a2134f71469c91639b3b08053f06
msgid "ATVocabularyManager"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:9
# 4bc7be763d80402e8ae3b48cd0d48127
msgid "ATVocabularyManager is a product for letting site managers define vocabularies for fields through-the-web or by import from XML files. ArchGenXML can generate the necessary code to use this product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:13
# 292604f42a3f410bae0ea7888bd87ea0
msgid "ATVM manages dynamic vocabularies. It installs a tool, where a site Manager can add, change and delete vocabularies. These vocabularies can then be used anywhere on the site."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:15
# 2d3692ca4bea43e8bd9012faaa4cca9b
msgid "You can download ATVocabularyManager from the Plone.org products area: `/products/atvocabularymanager <http://plone.org/products/atvocabularymanager>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:18
# 79a6f94750bf41a79a8afb9a7b3a880c
msgid "Using simple flat vocabularies"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:19
# 04d7a78f347e40259919d2b2d020e70b
msgid "Adding ATVM-vocabs to your UML model is quite easy."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:21
# 677f43cba2474d728397647cf832ac36
msgid "Add a selection or multiselection field to your type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:23
# 38706551b6fa4a068d787232e600d944
msgid "Add a tag ``vocabulary:name`` and give it a name, let's say ``countries``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:25
# 062742818f484ae5b746aca6e8920c73
msgid "Add a tag ``vocabulary:type`` with the value ``ATVocabularyManager``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:27
# e208cbc1532f4be186c05a8cfb06af55
msgid "We are now finished with the UML. Save it and let AGX do the work. What still is missing, is to install the countries vocabulary. Therefore:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:29
# 8327b0c9166c488a92712bf389229cc0
msgid "Add a function called ``setupVocabularies`` to the protected code section in ``setuphandlers.py`` in your product and register it as an import step in ``/profiles/default/import_steps.xml`` in a code section (make it dependent from you ``*QI-Dependencies`` step."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:31
# b7133a608ccf4ce0aa5863eae2cdbc6c
msgid "Add the following code to your setuphandler.py (this sets up a vocabulary ``countries`` with the given values, and registers it with ATVocabularyManager)::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:53
# fabb01680e364b2ca6318e9a28d3f963
msgid "Using simple tree vocabularies"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:54
# cb7db417902f4b93b590d58d42e8d6bf
msgid "If you are interested in using and creating hierachical vocab:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:56
# bfcf404b86e94abf9ef21aa1f2f962a0
msgid "use additional tag ``vocabulary:vocabulary_type`` with value ``TreeVocabulary``,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:58
# 5b002b4c8be44a77a9104726d5b37994
msgid "have a look at the doc-string of ``Products.ATVocabularyManager.utils.createHierarchicalVocabs``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:60
# cd12e9585a1e48628479c6f5a270bd35
msgid "Using vocabularies based on the **IMS Vocabulary Definition Exchange** (VDEX) format."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:62
# 6d60dce56a47437885157f094f3d1ad4
msgid "`VDEX <http://www.imsglobal.org/vdex/index.html>`_ is a simple XML based format to define flat or hierachical multilingual vocabularies. ATVocabularyManager supports VDEX in most of its dialects."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:64
# 0f47a23cd66f4415a82a620fce7238f5
msgid "To tell Archetypes to use them in your UML first take Steps 1 to 3 of the first section and skip the import part. Then add a tag ``vocabulary:vocabulary_type`` and give it the value ``VdexVocabulary``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:66
# b216b974d1544bceac648e7a146acb3e
msgid "Now add a folder called ``data`` in your products folder. Inside the ``/data`` folder create a new file called ``countries.vdex`` (\"example\":countries.vdex). It will be imported automatically on install or reinstall, but only if a vocabulary named countries does not exist."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:3
# 85ad5a6459e043d5b50825b23adccc38
msgid "CompoundField and ArrayField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:9
# 10476edf6ff7458d980d2e304d3c66dc
msgid "How to make custom fields: a list of some default field type, a compound of a two or more default fields."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:14
# 353da4f5576c436d970bc73efe6ab8e9
msgid "Install the `CompoundField <http://plone.org/products/compoundfield>`_ extension into you Products folder."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:17
# 915db803d23349afa35973f71429561b
msgid "List of fields - ArrayField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:18
# 7cc44770c4674f46b9e45b172c4ff3cd
msgid "Assume you want to have content type where the user can provide one or more files. Its easy by making the type folderish. But for some use-cases this is to heavy or to difficult, you want the user to use a form for those files."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:22
# da110b374ac041c98c225a637684bb11
msgid "You could say, ok, up to 5 files is enough and model 5 file fields into your class. Not very elegant, huh?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:25
# e0adbeff24fc4468a87524a50033cbc2
msgid "The easiest way is to to use the UML ``multiplicity`` feature on your attribute aka field of the class. If you want to enable unlimited attachments use multiplicity ``*``. Or choose a number like ``5``, as in our above example."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:27
# 6ed69e809f0e4747a1b0a6edbf9fd464
msgid "You can set the initial size of the array by using the tagged value ``array:size`` to ``python:10`` for example. Prefixed with ``array:`` you can access also the label ``array:widget:label`` of it and so on. If you prefer the EnhancedArrayWidget you need to add an tagged value ``imports`` ``from Products.Compoundfield.EnhancedArrayWidget import EnhancedArrayWidget`` to your class and set on the attribute the tagged value ``array:widget:type`` to ``EnhanceArrayWidget``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:30
# eb73b6bfdbef484984eb4250df8a5508
msgid "Custom Fields compounds - CompoundField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:31
# 4d96395bd1f4462681be750a6be75822
msgid "With ArchGenXML you can create compounds of fields from existing fields. Such a set of fields behaves almost like a normal field. To create such a compounded field create a new class and give it the stereotype ``<<field>>``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:33
# d2c04f22ca5d4d6f8746b8c5e95072e4
msgid "Now add attributes to it like you would do on a content type class. You can use almost every field type, just some special fields, mostyl those acting as a proxy without own storage, wont work (such as ReferenceField or AttachementField)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:35
# 049b1b14cacd45d1b08d78076560a8c7
msgid "For example we create a ``PointField`` consisting out of two ``FloatFields`` by just adding a ``x`` and ``y`` attribute of type ``float``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:37
# a2193226392d43449abf3d60ad72820e
msgid "To use the new field create a fresh content class and name it ``Polygon``. Take a dependency arrow pointing from your Polygon class to the field class. This ensures it gets imported!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:39
# 3e522f0c410f4c788dcf22c643473000
msgid "Next add an attribute ``points`` to the class. The type of the new points attribute is ``PointsField``. Now to make it a polygon give it a multiplicity of ``*`` and you are done: You have a list of Points as one field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:3
# 9328683e45254d618f475b45f2ae0fff
msgid "archetypes.schemaextender"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:9
# d48e4ceeb0804355a9aafa78aba83201
msgid "When you want to add a couple of fields to an existing content type (including reference fields), you may decide to create a whole new product that subclasses that type. You then have a whole bunch of code to maintain and you are dependent on changes that may occur in your parent class. Or you let ArchGenXML make your product use archetypes.schemaextender and your day gets brighter."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:18
# 324932447b2445c08b87b0e3cbf34499
msgid "You must install the `archetypes.schemaextender <http://pypi.python.org/pypi/archetypes.schemaextender>`_ product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:21
# 0fb01c7f48304971a20d3070c3bffb85
msgid "Adding a field to an existing content type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:22
# 8eee28113e084f6cbab1f42f0924ff0b
msgid "Let's say you want to add *superPower* (a field) to *HumanBeing*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:24
# e26abca0a2f942baae7176cf40895ee8
msgid "(a class)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:26
# 5d1dffd1d0724a5cb71c9b55c4aa355d
msgid "Let the content type to extend, e.g. *\"HumanBeing\"*, be present in your diagram (as a **class**, possibly with the ``<<stub>>`` stereotype)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:27
# 3d11aebcb1714674a0ac779aec117753
msgid "Create an **interface**, e.g. *\"ISuperHero\"* (the \"I\" helps remembering this is an interface), in your diagram ; it has the ``<<interface>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:28
# 0914f1f361a94e62a4cfb427656a2a21
msgid "Draw a **realization** arrow from *\"HumanBeing\"* to *\"ISuperHero\"*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:29
# f19a4996d3514c049e03360a25f29b15
msgid "Create a **class**, e.g. *\"SuperHero\"*, in your diagram and give it the ``<<extender>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:30
# e53dc13b2a4744f09d720f94cf6ac0c7
msgid "Add any **field** (s), e.g. *\"superPower\"*, to this extender"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:31
# f86aef6bcd794122829103fa3350daf9
msgid "Create a **realization** arrow from the extender class to the interface, e.g. from *\"SuperHero\"* to *\"ISuperHero\"*, remove its ``<<realize>>`` stereotype and replace it with a ``<<adapts>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:32
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:28
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:27
# 76484d046c8249ea90eee3909fd55b0d
# e396b18a458240f7b3c1d041d18a8675
# 925a09b7be18406890c58e0022dc56b9
msgid "Generate & Done"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:34
# f92567f038044151be36753fa72afeb1
msgid "Now every new instance of *HumanBeing* will have the *superPower* field in its schema, default view and default edit form. And even if the developer of the *HumanBeing* content type decides to remove its arms or legs, human beings (all of them) will still have super powers because you declared they are super heros (they implement *ISuperHero*)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:36
# 15e433c615c84a6eae876fca0510f1a0
msgid "Note that, in order to add these stereotypes (``<<extender>>``, ``<<adapts>>``) to your (Argo)UML model, you have to create a stereotype, give it the proper name (extender, adapts) and select its proper \"Super-class\" in the properties tab (you either select class for class stereotypes, or abstraction for the \"adapts\" stereotype)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:39
# 1b6dc0af55df4b8585002574979c7794
msgid "Example model and additional features"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:40
# ae32dd5be6454ad0968760a8c1fa7871
msgid "AGX support of archetypes schemaextender is illustrated by the example model in the screenshot below :"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:46
# 36e37c7f63a34c6996bf1d4468ea9dc3
msgid "You may note from this example model that AGX support of archetypes.schemaextender comes with a bunch of funny features :"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:48
# e77c891b98a346e9889b3fd42667104f
msgid "support for `adapters and named adapters <http://plone.org/documentation/tutorial/borg/a-whirlwind-tour-of-zope-3/>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:49
# 839c313c6f8b4635935d9bc8c284c353
msgid "adapted interfaces (or classes) can be external to your model (using the ``<<stub>>`` stereotype)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:50
# 5884323623b448bab7b78df580bcd9e9
msgid "you can even let a stub class implement a stub interface : in the example above, the *HumanBeing* stub class has a realization arrow to *IAStubInterfaceFromYetAnotherProduct*, which will be turned by AGX into a five:implement ZCML declaration. This is useful when you want to integrate 2 distinct third party products via your own product. Your model is then nothing more than a \"glue\" model, which is a good thing in many cases."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:3
# a3a533d07d2e48deab9c30d4b23ba3a1
msgid "Content Flavors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:9
# 143b09d97b744463a4e6db0c43e7af64
msgid "When you want to add a couple of fields to an existing content type (including reference fields), you may decide to create a whole new product that subclasses that type. You then have a whole bunch of code to maintain and you are dependent on changes that may occur in your parent class. Or you let ArchGenXML use the Content Flavors product and your day gets brighter. Note that the use of the experimental content flavors product is now deprecated in favor of the more reliable and feature-rich archetypes.schemaextender."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:20
# 6ae3756b23ea43ba82cb458c70f3f2c2
msgid "You must install the `Content Flavors <http://plone.org/products/contentflavors>`_ product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:23
# d64ea8addcb04ac5b00af4661df4ca12
msgid "Adding a field to an existing content typ"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:24
# d124e93d51ec4ec790d0823bc1c26ff0
msgid "Let an existing content type, e.g. *\"ExistingType\"*, be present in your diagram (as a **class** with stereotypes ``<<archetype>>`` and ``<<stub>>``)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:25
# a4da9f3e757e4d0e94a06a4dfe9c1cb4
msgid "Create a **class**, e.g. *\"MyCoolFlavor\"*, in your diagram and give it the ``<<flavor>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:26
# 552f92567b144eae9b1fe8501a9f65cc
msgid "Add any field(s), e.g. *\"MyAdditionalField\"*, to this flavor class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:27
# 5b0efc5dc94d45ccb09da5f03bcf5b6b
msgid "Create a **realization** arrow from *\"ExistingType\"* to *\"MyCoolFlavor\"*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:30
# d8b1c67d48bf412f8fd66a964d491026
msgid "Now every new instance of *ExistingType* will have the *MyAdditionalField* field in its schema, default view and default edit form."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:33
# a6af45f9997c4fa784f1442d78ca97b9
msgid "Limits"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:34
# 5371f02d6acb421091cb85248e5cb842
msgid "The use of the experimental content flavors product is now deprecated in favor of the more reliable and feature-rich archetypes.schemaextender."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:36
# 8992bf3955be4648bdb4ca3d5e6ed10a
msgid "Content Flavors also allows **custom views** to be used by existing types but this feature is not supported by ArchGenXML yet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:37
# e45c55d1d07041fb87f5a509f3fb90ba
msgid "You may not be able to see the additional field(s) if the ExistingType uses some non-default view. You then have to manually manage this by **overriding these existing views** with some of your own, with or without the help of the Content Flavors product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:38
# 6c0877763b464a6886efd80e2c4d91e8
msgid "The existing content type may have to be based on ATCT (to be tested)?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:39
# 1dd879c43e6b4ff3af41abb90fdb5e15
msgid "Several flavors can be applied to a given type. The order of precedence can be managed through the web if the existing type follows some requirements detailed in the `Content Flavors documentation <http://plone.org/products/contentflavors/documentation>`_."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:40
# 765907351d894c5997ac8048f03b4263
msgid "There are possible issues with indexing the additional fields, see `CF documentation for details <http://plone.org/products/contentflavors/documentation>`_."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:41
# 4b8790c752214571ac92359371524b03
msgid "Content Flavors was an experiment and is now deprecated in favour of the `archetypes.schemaextender <http://plone.org/products/realestatebroker/documentation/how-to/customize-the-fields-of-the-content-types>`_, which is also supported by AGX."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/index.rst:3
# 1b23254570e742a9b1722b39866394a8
msgid "Third Party Product Integration"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/index.rst:7
# 79ec0f97697448c7be4fa77bf0ba1e3b
msgid "The usage of add on products."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:3
# 4548d971efd14696b906e01494e17d02
msgid "Relations"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:9
# 3bb9ade670154768ac804ab18f1f67f9
msgid "Create relations between portal-types model-driven. Support for Relations Product (complex references). Define sets of rules for validation, creation and lifetime of Archetypes references. ArchGenXML can generate the necessary code and XML-configuration data to use this product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:17
# afc3a6f65e3646e3b7104fd452fba1b4
msgid "To enable Relations install the Product (`code-location <http://plone.org/products/relations/>`_)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:20
# b274278d04734236ae6dc24561d3126f
msgid "Basics"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:21
# 088a7afadef2465bba556472305b73e9
msgid "As an option on command line, up to a tagged-value on model-level or on a single UML-Association you just define the ``relation_implementation`` and set it to ``relations``. A directed Assoziation results in one Relation."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:23
# 63691385225a4e65b68870a8ce8fefaf
msgid "**Give the association and its assoziation ends names.** They'll be used as the names for the RelationField. If you dont want a field turn it off by setting a tagged value ``generate_reference_fields`` on class (or package, model) level to ``0``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:26
# 8b9f069171ce427fb4d9398584a2c56d
msgid "Inverse Relation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:27
# 040374c02238449dba61ed2faa915740
msgid "If the association is not directed (navigable on both association ends) an inverse relation will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:29
# 5efcce69f80c40d5b293d8d975dbd4a7
msgid "The tagged-value ``inverse_relation_name`` will be used for the back-relation on undirected associations. It defaults to a relation named ``toend_fromend``, where these are the lowercased versions of the association ends. If the two ends are named the same, then the relation will be named ``association_inv``, where ``association`` is the name of the association. (Finally, if the option ``old_inverse_relation_name`` is set, then it defaults to the association name postfixed by ``_inverse``.)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:32
# fb1a50b447434793930205a850876371
msgid "Cardinality"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:33
# b6ac94065cdf4808b90abeff53cb192c
msgid "You can use the Multiplicity on in UML to define the cardinality of an Relation. You can use the minimum and maximun value here using the syntax ``1..5`` which means at least one relationrelated objects but not more than five."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:39
# 85de99cbf67a4601b67e6b6bcf9c80cf
msgid "type-constraint"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:39
# ed8c505127264af5a388ac1b7c176ab5
msgid "as described above an association between two portal-types will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:42
# a0fc4e5e542c4d7d9e766d744ff37a96
msgid "interface-constraint"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:42
# e909c2c358894a1d99e3ce47d65843a9
msgid "an association between an archetypes class and an interface will create an interface-constraint. the relation is allowed to all classes implementing this interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:45
# fd56fe8ac129444cb64ed09a70345b6b
msgid "Association classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:46
# 097cf29949d44be8af5e87f698d39400
msgid "Association classes can be used to store data on the relation as an object. You can model it using the UML association class or using a tagged value ``association_class`` on the association."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:3
# 78c859d07c6b49aa999fd1148d20b60a
msgid "Remember"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:9
# 0f611016d6d74223bce651c908363b1d
msgid "Generate 'Remember' based Member-Types. Its the successor of CMFMember."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:13
# e377ed6d53db44cb9648b15516b08965
msgid "You must install to additional Products:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:15
# d2be6fdf7fee4ca1af94c026b6f9c610
msgid "`membrane <http://plone.org/products/membrane>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:17
# e2ac820aa17349628f45733b5afe916a
msgid "`remember <http://plone.org/products/remember>`_ (using `Five 1.4.3+ <http://codespeak.net/z3/five/>`_)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:19
# 45e1dd91b5a34282affb0899e0dce9ab
msgid "You should also read the documentation of both and understand how they work!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:22
# 455b254cada04dd5b93cf8d5db6d2199
msgid "A Content-Type based on remember"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:23
# d305d16a532541068f96e2e4db0fd8cc
msgid "Create a class in your class diagram and give it a a stereotype ``<<remember>>``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:24
# a0b474974cc84e45b5fc57c5b3d31dab
msgid "add the tagged value ``use_workflow`` and set it to one of ``member_approval_workflow`` or ``member_auto_workflow``. You can create also your own workflow if you know what remember needs (look at the workflows shipped with remember)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:25
# 686e51481da1489ab8f656827dfcb89b
msgid "set the ``active_workflow_states`` tagged value to the class and declare which states of the used workflow are the ones, where the user can log in with. It expects a list of values, e.g. ``python:[\"private\", \"public\"]``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:26
# bce733974445494c9e4b14d7bb00fb5f
msgid "Add attributes (fields) as you need. Attention here, only override fields of remembers BaseMember schema if you know what youre doing."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:3
# cf7b2ca6b17a4be9a612009e2a8f3f9f
msgid "Additional information"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:7
# c921c92a22754eecb8a040240079ba76
msgid "Further in-depth information about dealing with buildout in Plone context"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:13
# 7a881b7f349244868e4495a19b53673f
msgid "Recipes"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:15
# 644e0f9bdd95488ea0ccad61d2c08922
msgid "Buildout consists of *recipes*. In use, a recipe consists of:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:17
# c42628c74007426b90467b031882e967
msgid "a Python package published to in ``pypi.python.org``,"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:18
# 48857b4f8275413fb8c1f53eb8ead921
msgid "a declaration in ``[buildout] parts=partname``, and"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:19
# 778a480c3c20433a86a888644e474c1f
msgid "a ``[partname]`` section with a ``recipe=`` assignment specifying the package name at ``pypi.python.org`` name"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:22
# e0e18fc77c444f59a1c6a806ab6633ce
msgid "Recipes are automatically downloaded from pypi as Python eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:25
# ae02d4b875a84e8dbd5df3247ce1d344
msgid "Making buildout faster"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:27
# 9c161f13c4704b02acd71f19e8df5ef8
msgid "``easy_install`` crawls unnecessary web pages when trying to install Python eggs. You can limit this crawl by using ``allow-hosts`` to specify a whitelist:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:40
# 053a4722fc244cdab6f6daf073c4a75a
msgid "Buildout folder structure"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:42
# e7428efd72e04bf8af2924b6b274aa71
msgid "Plone buildouts have folders with predefined purposes:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:47
# c6c77af989274d7fabe0557fb6c3773b
msgid "``bin/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:45
# 8c470b6fee084e43ac4599413ddcb8f5
msgid "Contains Python scripts and shell scripts installed by various eggs, including the ``buildout`` command itself.  The default Plone start script ``bin/instance`` is here."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:54
# fd9f893e57334b6aac6538e41e1ee121
msgid "``parts/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:50
# 2dff348799b44e008a7c046d127a6ca2
msgid "The source tree constructed by buildout. This is wiped between buildout runs, so you should not change anything here (note: some broken recipes store things like pid files here). Generated configuration files are stored here: don't change them directly (changes will be wiped), change the corresponding buildout sections instead."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:57
# e4bebfc43154472db7ea0cbb60888521
msgid "``src/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:57
# 3d01437de046435194d9d432a31b8cf9
msgid "source code you are developing yourself."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:60
# 964cb5d4b70c45bd8906654064aab789
msgid "``eggs/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:60
# 03d9328feffd4d1789dc7481529d3aba
msgid "extracted Python eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:64
# 0f1d3a17f68c41598693a62136afd28c
msgid "``downloads/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:63
# 46b51e7b22e74a0786a8feeb2a3905f9
msgid "Python egg download cache (may be elsewhere depending on the system configuration)."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:69
# 0a3ba50e73f740bf86218275849e1eb0
msgid "``var/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:67
# c003dc98965b42cb9a29394e2128e83b
msgid "Persistent data such as logfiles, pid files, and Zope's database consisting of filestorage files (e.g. ``Data.fs``) and blobstorage directories."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:72
# 9433da7b5ed54dfba7fbdf0c00b9c337
msgid "``bootstrap.py``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:72
# b29a8c443e7d40ff8453aa60aeeb3359
msgid "Installs the ``buildout`` command."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:78
# f4ee7a84c9bb46cdadfabd1d66fefbdf
msgid "``buildout.cfg``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:75
# 973763f1f23746c89a4a22538110a30c
msgid "Basic buildout file. May extend other ``.cfg`` files. Sometimes there are many files and you need to pick one for ``buildout`` to use; e.g.::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:81
# babd79a14cf44efbaac6716dda7a92da
msgid "Running buildout on Windows"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:83
# 8a7046ffaef84b95accfc36939a6b242
msgid "The Windows Plone installer provides ``buildout.exe``. This executable uses the system Python installation. This installation is not necessarily the correct Python version, if multiple Pythons are installed on the computer."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:88
# 64764119d1e14c5394e06d9a607be011
msgid "Many Windows Python software uses wrapper ``.exe`` files which pick the Python interpreter based on registry settings. One notable exe is ``buildout.exe``, which is used to run buildout."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:93
# a83c3b783c3b46728c0aa7f5b1c03063
msgid "If you install multiple Pythons, the latter installations might not become active in the registry automatically, and your Python wrapper still rely on the old version. This leads to version incompatibilities and you are unable to start the Python applications."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:98
# bf2f7f1a93e44aeb9397721a75dde3b3
msgid "Since only one Python interpreter can be active at a time, it is tricky to develop multi-version Python code on Windows, for example if you need to develop Plone 3 sites (Python 2.4) and Plone 4 sites (Python 2.6) simultaneously."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:103
# 3d9ffb2daacb40598615afe10f9071e1
msgid "Below is a script (``regpy.py``) which changes the active Python interpreter. The orignal author is unknown, I picked up this code from some paste board long time ago. Just run this code with your Python and the running interpreter becomes active."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:108
#: ../../reference_manuals/old/portlets/tips.rst:348
# 7c874150efcb42c78a1a927ee1d0306a
# 62e99b29ada24d6a94807161044d5b32
msgid "Example::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:112
# 620f0ebfec96489f99f47aa1119b2552
msgid "Code::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:155
# 646df143524b496ca87d6bd40ce34cc8
msgid "Example error when going from Plone 3 to Plone 4::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:177
# fe81d20473f94499aa224ea2bbe8a834
msgid "http://blog.mfabrik.com/2011/02/22/changing-the-active-python-interpreter-on-windows/"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:180
# c5eac99000bb48fcb80412435bc7a883
msgid "Running buildout behind a proxy"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:182
# 417a154c7d07471785d272311c387d5a
msgid "Buildout uses ``setuptools``, which uses ``urllib``, which allows you to set a proxy using the ``http_proxy`` (lowercase!) environment variable."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:186
# 7f0ad05ab4834a3f901567736d3dbecb
msgid "Example for UNIX shell (bash):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:201
# 58581eb2d8834fe199fd9bc86a26f002
msgid "You can also SSH tunnel the proxy from a remote server:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:211
# e20fd8aea5c246fab1b9394a12d9e4f9
msgid "*!!Attention!!*"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:213
# 5cadc767fcdc49cd82b2fd464b464907
msgid "In Plone 4.3 the System changed , and from now on you get special users with different privileges for buildout and run. Because of the sudo command you proxy environment variables aren't saved in the sudo env list."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:214
# b1328ae1b2e5472b9bf3f72cba09494a
msgid "There are 3 ways to fix this in \\*nix systems:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:217
# eddd20df93b64996a53518da33600724
msgid "Inline: Set the environment variable inline."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:217
# c9da21c1cb6146b9aef4fea7eb9da735
msgid "``sudo -u plone_buildout http_proxy=\"http://myproxy:1234\" ./bin/buildout``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:220
# aeb6ef1f1cf041a99f242694d0122e49
msgid "Copy the environment from the currently logged in user."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:220
# 3ec709a898e3439b87680e1f1c3bcd4e
msgid "``sudo -E -u plone_buildout ./bin/buildout``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:225
# 209a21ba80bb42f6a19a802e19d1e471
msgid "Setup sudoers"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:223
# abb3933b52bf4e2dab741ad75443ac20
msgid "3)Maybe this article is interesting for setting up sudoers: http://ubuntuforums.org/showthread.php?t=1132821"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:228
# 4f28bfb28bb84c7297cd7937c1337a54
msgid "Buildout cache folder"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:230
# f027c5168dda4d7f8521f770735fcc27
msgid "If you are running several buildouts as the same user you should consider setting the cache folder. All downloaded eggs are cached here."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:233
# 6c267e15e849405ca7bc5840395b6533
msgid "There are two ways to set the cache folder"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:235
# 6402ef908cbf40b8a167d3f1478d9320
msgid "Use the ``PYTHON_EGG_CACHE`` environment variable;"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:237
# ad414b9cc79e459081ec1e1544c6c3be
msgid "or set the ``download-cache`` variable in ``[buildout]``. This is only recommended if the ``buildout.cfg`` file is not shared between different configurations."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:241
# 6f1515809ea741d892b6736b87b9e497
msgid "Example:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:252
# 7e2e7b07817647759b821bd78014f93f
msgid "Buildout defaults"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:254
# d4bc5d9d0e044a7ba404042c50bf5d7b
msgid "You can set user-wide buildout settings in the following file::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:258
# 7a10ca0a3a2143f7a88840773e5a9dde
msgid "This is especially useful if you are running many Plone development buildouts on your computer and you want them to share the same buildout egg cache settings."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:261
# 2d8c3c48a80d49b6a80d4b22e744b6f2
msgid "Example settings how to setting shared egg cache across various buildouts on your computer::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:275
# d85ce2095aff4aad83a6210cd0275125
msgid "Manually picking downloaded and active component versions"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:277
# 22ac359f70204bc3abb15830690a3356
msgid "This is also known as *pinning* versions. You can manually choose what Python egg versions of each component are used. This is often needed to resolve version conflict issues."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:281
# 9495909bedd544638a634c23f6511ce0
msgid "http://www.uwosh.edu/ploneprojects/documentation/how-tos/how-to-use-buildout-to-pin-product-versions"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:284
# 01d0e3de737d4b1cbaa4525163b55361
msgid "Migrating buildout to a different Python interpreter"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:286
# daf4eb728c524b55bdd0c93d9f78f893
msgid "You can either:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:288
# 09738bd0a7394dedbc592a5023f50259
msgid "copy the whole buildout folder to a new computer (not recommended); or"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:290
# e6141ebc703f4c72a3deb2ed72b9c01e
msgid "changing the Python interpreter on the same computer."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:292
# 8729963a9d834433ac6192e18bf305c3
msgid "First you need to clear existing eggs as they might contain binary compilations for wrong Python version or CPU architecture:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:299
# 0e4fd7bdfd8241e4829326758cd44dc5
msgid "Also clear the ``src/`` folder if you are developing any binary eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:301
# 6cfcf02af9eb4083bc24e74858098e9e
msgid "Buildout can be made aware of a new Python interpreter by rerunning ``bootstrap.py``:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:309
# 6f59ca4912944abd9ec8e05c83fc008d
msgid "Then run buildout again and it will fetch all Python eggs for the new Python interpreter:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:316
# 9dfe7f5dc1964952a13c8de47751260d
msgid "Setting up a Plone site from ``buildout.cfg`` and ``Data.fs``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:318
# f1c7c9b127cb41a096a6f5e15e6831dd
msgid "This is often needed when you are copying or moving a Plone site. If the repeatable deployment strategy is done correctly, all that is needed to establish a Plone site is:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:322
# 8ab90ab092a440f886bac9806df923a3
msgid "``buildout.cfg`` (which describes the Plone site and its add-on products and how they are downloaded or checked out from version control)"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:325
# 639f585d0a6a452aa31d5825ad7391e2
msgid "``Data.fs`` (and blobstorage directories) which contains the site database."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:328
# 45efd5ac1c5a4842a0b7f3274bbac661
msgid "Below is an example process."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:330
# 79db1752883646bf93ce91e785240b18
msgid "Activate Python 2.6 for Plone (see :doc:`how to use virtualenv controlled non-system wide Python </getstarted/python>`):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:336
# d6bc32b48771481d830c458084965b8a
msgid "Install ZopeSkel templates which contains a buildout and folder structure template for Plone site (``plone3_buildout`` works also for Plone 4 as long as you type in the correct version when paster template engine asks for it):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:363
# 0212a984d35d40d6962dc3db8f21c264
msgid "Then you can copy ``buildout.cfg`` from the existing site to your new project:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:373
# 9c3e5a18075840cc905ee1a8067f2572
msgid "Assuming buildout completes succesfully, test that the site starts (without database):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:380
# bf055f28210f42ef82521ad0f21a5d1d
msgid "Press CTRL+C to stop the instance."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:382
# 546c33a2b74f4e4083e0b23603cd8344
msgid "Now copy the existing database to the buildout directory:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:388
# 50d00598e66c4745b1beb5f3244fd40e
msgid "If you do not know the admin user account for the database, you can create an additional admin user:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:395
# 0881b4c63bce45f189cce71f54750029
msgid "Look for the Zope start-up message, which mentions the port the instance is running on (the default port is 8080)::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:402
# f995e239b4a24714ad9e73f59f9f4d32
msgid "Then log in to the Zope Management Interface using your browser::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:409
# b213a0ae94a8430fb6302d79add90f0c
msgid "Configuring plone products from buildout"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:411
# 5c93e0fb8c2746f885db1a6ab8557785
msgid "In case add-on products require configuration which is not handled by buildout recipes, you can supply this configuration using the ``zope-conf-additional`` specification of the ``plone.recipe.zope2instance`` recipe:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:426
# 67a994a512054cebbc15dbaf98d0b2ee
msgid "These configuration sections are added directly to your ``zope.conf`` file."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:428
# f999193431d442ba89399d72dc756cac
msgid "Any named product-config section is then available as a simple dictionary to any python product that cares to look for it. The above example creates a ``foobar`` entry which is a dict with a ``'spam': 'eggs'`` mapping."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:432
# 7fa90d5381af4cafb3c1b80921bf3326
msgid "Here is how you then access that from your code::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:440
# 94944c4fbe844c70a332f7e48079abd1
msgid "A similar method is used to configure the built-in Zope ClockServer enabling you to trigger scripts:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:456
# aa14c3d163cd4603a643a93a3a7c050f
msgid "Setting ``LD_LIBRARY_PATH``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:458
# f99c73931edb425485b2c789738d9e22
msgid "``LD_LIBRARY_PATH`` is a UNIX environment variable which specifies from which folders to load native dynamic linked libraries (``.so`` files). You might want to override your system-wide libraries, because operating systems may ship with old, incompatible, versions."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:463
# 496bf6157877445c87ea61cd688774d3
msgid "You can use ``environment-vars`` of the `zope2instance <http://pypi.python.org/pypi/plone.recipe.zope2instance>`_ recipe."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:466
# 6ecfba475acc41c19c7ee8906d14b906
msgid "Example in ``buildout.cfg``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:477
# 9ba24b1eebc44fb0862987c35b6620ee
msgid "Extending buildout section"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:479
# 2167240e3bd2498aa953e8ab14818c64
msgid "Buildout extensions can be extended in another buildout file."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:481
# 4f81ba120c6d4e66b11bda615d4566de
msgid "http://pypi.python.org/pypi/zc.buildout#extending-sections-macros"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:485
# 1f271063e35246a2a88ea28a46bdc8d3
msgid "Overriding parts variables from command line"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:487
# ff5adffef49d402584594386cfae0044
msgid "Sometimes, you need a variable from one of your buildout parts to be different, but for just one run."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:489
# 5f0d3491e3e14382af0bee2b76d65de6
msgid "So, instead of modifying your .cfg file for just one run and remember to revert it back before pushing your changes back to the server, you can just do that from the command line."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:491
# 8019597f7a844dc1b7ab3ee7bc0b8cd7
msgid "The format is::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:496
#: ../../reference_manuals/old/testing/introduction.rst:38
# eb15ecae00644c6ab2c3937afbd5c9c9
# b54b9fe0a49a4ff7a704c353f7c28857
msgid "Examples"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:498
# e1426879d4a24beaa9efcb613094b0de
msgid "Need to create your site from scratch using the plonesite recipe::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:502
# e84f734f59fa4d03bcb317505b0b6af7
msgid "Want to re-run buildout, but you don't want to mr.developer to update packages::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:506
# 07866742e1d74d4a8e06f32405b83538
msgid "Want to do both examples at the same time::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:514
# 1c9e28323522405aa144685ba466fd2a
msgid "See :doc:`Buildout troubleshooting </troubleshooting/buildout>` chapter."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:3
# f4c2097f6d8049758f77a892f2d27972
msgid "Understanding buildout.cfg"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:7
# 7b01c5347b54436cb8c3ba11338efc40
msgid "How to manage the main buildout configuration file"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:10
# a216392b646a43b2ab7da37bbba429cf
msgid "**Important note:** This document applies to Plone 3.2 onwards. In Plone versions prior to 3.2 the vanilla buildout.cfg file was significatively different because Plone wasn't fully eggified."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:14
# b3b7ad77d37e4ce499aca415b9091e91
msgid "*buildout.cfg* is the most important file in your new buildout environment. Here is how it looks:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:93
# 4433514069d74d3ebb5c5662ba677c99
msgid "Let us walk through this file step-by-step:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:96
# ff9d6c69d12a4148aae2539451de380e
msgid "The main [buildout] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:98
# 2bf3dc7b8a0e42259a44af2583881f0c
msgid "The *[buildout]* section is the starting point for the file. It lists a number of \"parts\", which are configured in separate sections later in the file. Each *part* has an associated *recipe*, which is the name of an egg that knows how to perform a particular task, e.g. build Zope or create a Zope instance. A recipe typically takes a few configuration options."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:105
# 9cbe007262b7463b8562edcb35f3f096
msgid "Our global settings are as follows:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:124
# 572647a232b24cf2b7c4c9d908944b7c
msgid "This specifies that the parts *zope2*, *productdistros*, *instance* and *zopepy* will be run, in that order. Then, we tell buildout that it can search one of a number of URLs when it is looking for eggs to download. In addition, it will always search the Cheese Shop."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:130
# 5f325bb8c0a74008bc8610ddecf46aaf
msgid "Note that configuration entries are commonly split into multiple lines. For this to work, all lines after the first must begin with **at least 4 spaces**."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:134
# 115b1d1a5f0a4ae2bffb1926e6512e82
msgid "Next, we can list any eggs that buildout should download and install for us. This may include version specifications. For example, if you want sqlalchemy 0.3, but not 0.4, you could list;"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:143
# f28d86e3e5b04c82bbd0ff3bbff759ad
msgid "Please note that you will need the Python Imaging Library (PIL) for Plone to work. This example assumes that you have this library already installed and available from your Python interpreter, but otherwise you can install a slightly modified (to workaround some common problems) version from the \"thirdparty\" Plone repository in your buildout adding its name to the eggs list:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:154
# 47979664924747089f98ab149a5b9bd4
msgid "And the full path to the package in the find-links, e.g.:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:160
# e2e1450533784669aa05c0a1bd31c15d
msgid "Finally, we can list development eggs, by specifying a directory where the egg is extracted in source format. For example:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:171
# e84aa1e30a994daf936c5b7be37e8a42
msgid "This presumes that there is an egg called *my.package* in the *src/* directory. We will learn how to create such eggs a little later in this tutorial. Notice how we must also list my.package as an actual egg dependency: development eggs are not automatically added to the \"working set\" of eggs that are installed for Zope."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:178
# 63d3a4889a684770a038ffbc419cd100
msgid "The *extends* and *versions* lines"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:180
# 1084697e77ea4e32a4dacf4da8588527
msgid "This part was introduced with Plone 3.2. It references a remote file where the version of each needed package is specified. Check that remote file to see yourself how these dependencies are specified."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:192
# 7155382c5eea4ca2b9a20561621c0988
msgid "If you want to use a local file instead of a remote one to be able to work offline, download it to your buildout directory and reference it like this:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:201
# 5e0d39fba18d4a0296d45f9806fa7276
msgid "The [zope2] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:203
# 14afd00ec8844c29a2768e87ff680468
msgid "This part builds Zope 2, using `plone.recipe.zope2install <http://cheeseshop.python.org/pypi/plone.recipe.zope2install>`_. If you specified an existing Zope installation, you will not have this part. Otherwise, it looks like this:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:214
# 47378bea462e4272b29c92cf20078f5e
msgid "Here, we reference the download location for Zope as present in the versions file. This ensures that we always get the recommended version of Zope. You could specify a download URL manually instead, if you wanted to use a different version of Zope."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:219
# a6a815d646eb447db9675d5ce8e6e135
msgid "When the recipe is run, Zope 2 is installed in *parts/zope2*. The Zope software home becomes *parts/zope2/lib/python*."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:223
# 6317f6dd3cc8426fb697c5c68dab4620
msgid "The [productdistros] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:225
# cd2b2259c2d3417bb69d1a0761cb2329
msgid "This uses the `plone.recipe.distros <http://cheeseshop.python.org/pypi/plone.recipe.distros>`_ recipe, which is able to download distributions (archives) of Zope 2 style products and make them available to Zope. It is empty to begin with:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:239
# 0c005812837f4297b9609a20153a649e
msgid "However, you can list any number of downloads. The recipe is also able to deal with archives that contain a single top-level directory that contains a bundle of actual product directories (*nested-packages*), or packages that have a version number in the directory name and thus need to be renamed to get the actual product directory (*version-suffix-packages*)."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:246
# c3dc1081ce7b4f099f60309c9330a726
msgid "Consider the following distributions:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:279
# b2a59e8b92484d53b73f98a94ed6e375
msgid "Here is what the part would look like if we try to install the three distributions above:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:293
# c1c3b8ba29754075b428d1194475bf02
msgid "You can specify multiple downloads on separate lines. When the recipe is run, the product directories for downloaded products are found in *parts/productdistros*."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:298
# 7dc8b7a99a1b4c4baf5bc1d55159f97e
msgid "The [instance] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:300
# 16aca954b0bb4f46a8b1d2341cabde83
msgid "The instance section pulls it all together: It configures a Zope instance using the `plone.recipe.zope2instance <http://cheeseshop.python.org/pypi/plone.recipe.zope2instance>`_ script. Here is how it looks:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:326
# 360331354de343b19213718facb552f9
msgid "Here, we reference the Zope 2 installation from the *[zope2]* part - if you specified a location yourself when creating the buildout, you would see that one here. Then, we specify the initial admin user and password used only when creating the initial database, and the port that Zope will be bound to. We also turn on debug mode and verbose security. They are useful for development, but remember to turn them off in production sites since they can compromise the security of your site. These options are used to generate an appropriate *zope.conf* file for this instance. See the `recipe page in the Cheese Shop <http://cheeseshop.python.org/pypi/plone.recipe.zope2instance>`_ for more details on the options available."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:338
# bcac9b4f9c4c4f3395e7735e4c20af20
msgid "Next, we specify which eggs that will be made available to Zope. This references the \"global\" eggs from the *[buildout]* section, as well as Plone itself. You could add additional eggs here, though it is generally easier to specify these at the top of the file, so that they get included in the *${buildout:eggs}* working set."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:344
# c64f69b43df14ddb9bc71cfbaa605d3d
msgid "Zope 3 *configure.zcml* files are not automatically loaded for eggs or packages that lack *z3c.autoinclude* support and are not in the *Products* namespace. To load ZCML files for a regular package, we can make buildout create a ZCML slug by listing the package under the *zcml* option:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:356
# f71104392dcc4968bddf19feaeadaef6
msgid "This assumes that *my.package* was previously referenced in the buildout. This would load both the main *configure.zcml*and the *overrides.zcml* file from this package. Over time, the need for these entries should diminish, as *z3c.autoinclude* support becomes widespread."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:362
# 7123ce119b404287af1b03f447e425e6
msgid "Finally, we list the various directories that contain Zope 2 style products - akin to the *Products/* directory in a traditional instance. Notice how the *products/* directory in the main buildout directory comes first, followed by the products downloaded with the *[productdistros]* part."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:368
# 85ce8f9df1e04e23aadd092f5b908be8
msgid "When the recipe is run, the Zope instance home will be *parts/instance*, and a control script is created in *./bin/instance*."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:373
# 80686a068d3342598d7dd3e1edb6b559
msgid "The [zopepy] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:375
# a612c14c993647bcbad68abb34963f2a
msgid "This final section creates a Python interpreter that has all the eggs and packages (but not Zope 2 style products) that Zope would have during startup. This can be useful for testing purposes."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:388
# 65207626dbad4f579bff745f0653ed24
msgid "Here, we copy the eggs from the *[instance]* section, and include in the pythonpath the Zope instance home."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:391
# c12ed9e40cb5450fb0378df10ec3322c
msgid "When the recipe is run, the script will be created in *./bin/zopepy*."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:3
# cac0a4208f4f4cd98436c624f647be63
msgid "Creating a buildout for your project"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:7
# e4090e621d64493da5fa62d2aca74ec9
msgid "How to create a new buildout for a project, adding Plone and other third party products as dependencies"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:10
# 19e450cc39ef47e4864e0d596b6dabce
msgid "We are now ready to create a new buildout. The \"buildout\" is a directory containing all the parts that make up a project, including a Zope instance, the Plone sources, custom configuration options, and your our project's source code."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:18
#: ../../reference_manuals/old/buildout/prerequisites.rst:12
# 591cb5bbcc444ed8a97fabc6d683243d
# 5616d4f4089642f78defc7f644fca775
msgid "As of Plone 3.2, all of the Plone installers are buildout based. You can get the latest `installer`_ and run it to have a working buildout without having to follow these steps. However, these steps are still valid if you want to create the buildout manually with ZopeSkel."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:24
# 3ca7c6c2c36b423caf12c84529fd5eee
msgid "Create one like this:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:30
# 0d30b1c9167c46fdbd9a3ffb181064f1
msgid "This will ask a series of questions. If you want to use an existing installation of Zope rather than have buildout download and compile one for you, specify an absolute path as the *zope2\\_install*. Similarly, if you do not want buildout to download the core Plone products, you can point it to an existing directory containing all the products (it will still download Plone 3's eggs, but as we will see later, it is possible to share an eggs directory among multiple buildouts). You will need to enter a Zope administrator username and password, and you may want to turn debug mode and verbose security *on* during development."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:41
# db5273e7530e4f5dac0878cc41836dfc
msgid "Now, enter the newly created myproject directory, and run the buildout bootstrap script.  NOTE: Python 2.4 is currently required to Plone 3.x:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:50
# 3da9dec117e448c0a868012d3f4c1d5c
msgid "This will create a number of directories and scripts and download the latest version of the zc.buildout egg. This step should be needed only once."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:54
# 69ad3fc7e6ae4f0daf53e233fa09065d
msgid "To get started straight away, run:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:60
# c2c92d54f0074aa88aabb662d965b723
msgid "This reads the generated buildout.cfg file and executes its various \"parts\", setting up Zope, creating a Zope instance, downloading and installing Plone. We will explain this file in more detail shortly."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:65
# 0d47b5578a334e37896dd12f56e08423
msgid "You will need to run *./bin/buildout* again each time you change *buildout.cfg*. If you do not want buildout to go online and look for updated versions of eggs or download other archives, you can run it in non-updating, offline mode, with;"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:74
# d1e32098f3f847459f832c5cc0edbfe9
msgid "To start Zope in foreground and debug mode, run:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:80
# b0c879c59d07407c83c1be7394ec45af
msgid "The *instance* script is analogous to *zopectl* as found in a standard Zope instance. You can use *./bin/instance start* to run Zope in daemon mode. It can also be used to run tests:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:88
# f0c5d2a895c446789146a0834673bacb
msgid "Running:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:94
# ead506bce8554fba9508a9954ad8ee1f
msgid "is equivalent to *bin/instance fg*, but does not implicitly turn on debug mode but respects the *debug-mode* setting in *buildout.cfg*. This can be useful to run Zope in non-development mode with daemon-control programs like supervisord."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:99
# 715380c81c3c45a9bae48794d095e5a3
msgid "Once your buildout installation is up and running, you will still need to install a Plone site.  Log in to the Zope Management Interface (ZMI) and from \"select type to add...\" choose Plone Site.  Fill in the required details and submit.  Now you have a Plone site at the ID that you specified."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:106
# 3198b30684504d188c768cbdcc1922ad
msgid "Directories in the buildout"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:108
# 6600fdb047394b79ba32ba92a4eb8030
msgid "Before we dive into buildout.cfg, let us take a quick look at the directories that buildout has created for us:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:112
# a9081842ff784f57b445542c1afa289e
msgid "bin/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:112
# 5fbe365b23b54576abc8138c27d644ed
msgid "Contains various executables, including the *buildout* command, and the *instance* Zope control script."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:116
# 5379d646d8cf47bf9e48e50cca12cdf5
msgid "eggs/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:115
# e223fdceca1d477babb78fea8ae812f0
msgid "Contains eggs that buildout has downloaded. These will be explicitly activated by the control scripts in the *bin/* directory."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:118
# f245e052996648178eca2906c16e2a46
msgid "downloads/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:119
# f5ce916fc5eb4df6874ecbe76ce0f3a1
msgid "Contains non-egg downloads, such as the Zope source code archive."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:128
# 28d18b5f8de646ba9ef427c8f99627e2
msgid "var/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:121
# 46a08fcaeca842229baaa4b3e9e16f4d
msgid "Contains the log files (in *var/log/*) and the file storage ZODB data (in *var/filestorage/Data.fs*). Buildout will never overwrite these. If you want to import a .zexp file, place it in the *var/instance/imports* folder. Previously one had to put that file into *parts/instance/import*, but this folder gets wiped and regenerated when running *bin/buildout*, so the import location was changed."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:131
# 59ad72b0abb74c62a4f6d58f3e73bf77
msgid "src/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:131
# d61edc663a6541819ee2779a6f3ece84
msgid "Initially empty. You can place your own development eggs here and reference them in *buildout.cfg*. More on that later."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:138
# 91b3f704eafa44ab95f17109b273dbd9
msgid "products/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:134
# bb5fcd448b7e4dfdab6d6a613f1b8070
msgid "This is analogous to a Zope instance's *Products/* directory (note the difference in capitalisation). If you are developing any old-style Zope 2 products, place them here. We will see how buildout can automatically download and manage archives of products, but if you want to extract a product dependency manually, or check one out from Subversion, this is the place to do so."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:143
# 713fe8f359a84dc0995f7748a753caf4
msgid "parts/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:141
# 720795194f8043e1869df460d795cf18
msgid "Contains code and data managed by buildout. In our case, it will include the local Zope installa TRUNCATED! Please download pandoc if you want to convert large files."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:147
# 124e3a3d4940495492186f9ec37006b0
msgid "You can check in a buildout directory to a source code repository to share it  among developers. In this case, you should ignore the directories bin/, eggs/, downloads/, var/, and parts/. Each developer can run bootstrap.py to get these back, and will normally need local copies anyway. All your configuration should be in the buildout.cfg file, and all custom code in src/ or products/."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:3
# 055bd44b718a46d8b8d96dc2a520f538
msgid "Creating a new package"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:7
# 5cad591af6454ee0bd49f3bd9602324f
msgid "Adding a new custom package is not much different from installing a third-party one."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:12
# 6451b77b83a24310bde40c7124aa5095
msgid "Creating a traditional Zope 2 product"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:14
# dffe48897f964b158b8b24158c722a89
msgid "To create a traditional Zope 2 product, put it in the top-level *products/* directory and re-start Zope. Nothing more should be required. As explained previously, products placed here will be found automatically at start-up, and their *configure.zcml* files will be executed automatically."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:21
# aecf0c5db68546efa8c369e0203e723d
msgid "Creating an egg"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:23
# 2c9db7d06f5049dbad179dfacde121a9
msgid "Of course, if you are using products, you cannot benefit from the additional features of eggs, including automatic dependency management, distribution via the Cheese Shop and nested namespaces."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:28
# 7bddb44c5a144cd4b8dc09f70ecfc758
msgid "The easiest way to create a new egg is to use the *paster*command, which we already used to create the buildout. To create a new basic package, with a top-level namespace (e.g. your company name) and a specific name, go to the *src/* directory and run:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:38
# 2a9bb9e6ed444bc2a1742279ac8039b9
msgid "You will be asked a series of questions. Make sure that the namespace package and package name correspond to the name of the egg. In this case, the namespace package is *myorg* and the package name is *mypackage*. In general, answer *False* to the question on whether your package if \"zip safe\". Enter other metadata as requested."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:45
# dbed686c2f8b4238905d47915151a75d
msgid "You will now have:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:48
# a0b8db2a085b4a9f913404846ba70d1b
msgid "A *setup.py* which contains the metadata you entered"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:49
# 0b43c56429b041f5ba2c0b022a960ab1
msgid "A package in *myorg.mypackage/myorg/mypackage*. Your source code goes here."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:51
# 34dcb1a861ae47bc993736f3c73e76d8
msgid "A skeleton *configure.zcml*, tests.py and a few other useful starting points."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:53
# 94f62e1af78140dab430322720cf269b
msgid "Some generic documentation in *myorg.mypackage/docs*."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:55
# 1e33673afbd64b77a6a0e2880cce12a3
msgid "Of course, you must also add this package to the buildout. In *buildout.cfg*, you might have:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:69
# c2011b683cd844798778594ad0872865
msgid "Unless you plan to include this package from another one (or use automatic ZCML loading, explained below), you probably also need a ZCML slug:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:80
# 065d60ac8d1d4c24868753f9ee8a1332
msgid "Do not forget to re-run buildout after making the change:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:87
# f9ac0e0af2ec484986494a9ac5f64693
msgid "Automate ZCML loading for your package"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:89
# e6fe9a03c2be431185c28b30388f001d
msgid "If you're not including your package from another one, you can still avoid having to include a ZCML slug in *buildout.cfg* for it. This is particulary useful to avoid unneccessary repetition of package names in *buildout.cfg*, which beginner integrators might easily overlook. From Plone 3.3 on, you can make your packages signal that their ZCML should be included by adding:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:104
# 64a7a9debda04d738b6e5272158bdfc3
msgid "to their *setup.py* file. For further information, see the `setuptools documentation about dynamic discovery of services and plugins <http://peak.telecommunity.com/DevCenter/setuptools#dynamic-discovery-of-services-and-plugins>`_.` <http://peak.telecommunity.com/DevCenter/setuptools#id19>`_"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:108
# 895c6c2c17ec44f588ef5f6a293e849f
msgid "Specifying dependencies"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:110
# 364e6dcd1f974a0fb8bf78ba7518d930
msgid "If your new package has explicit dependencies, you can list them in *setup.py*. That way, buildout will be able to download and install these as well. Dependencies are listed in the *install\\_requires* argument to the *setup()* method, By default, *setuptools*is listed here, since we need this to support namespace packages. To add *sqlalchemy*0.3 (but not 0.4), and the *MySQL-Python* driver, you could amend this to read:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:127
# 0ce35bc14a774e3695800ccbd69ecc6a
msgid "Uploading your egg to the Cheese Shop"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:129
# 58a1850ec2584f808f7b56f9d53e7203
msgid "If you want to share your package with the rest of the Python community and make it easy to install using tools like buildout and *easy\\_install*, you can upload the package to the Cheese Shop."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:133
# 783851bb25594077b64634e4c5ecac59
msgid "Before doing so, you should:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:136
# 2748359a4785416e8e449173a03d436a
msgid "Commit your latest changes and tag the release in Subversion, if applicable."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:138
# ee337a2aaca0451fa30ee60236ec3b46
msgid "Make sure the version number in *setup.py* is correct. This should use common conventions such as \"1.0b2\" for the second beta of version 1.0, or \"2.1.3rc1\" for the first release candidate of version 2.1.3."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:142
# 30bbbdb2851c4a6ea30032bea59100e1
msgid "If you are using Mac OS X, run export COPY\\_EXTENDED\\_ATTRIBUTES\\_DISABLE=true on the shell first - otherwise, the egg will contain Mac OS X resource forks which cause problems if your egg is used on Windows."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:147
# 76e610175f49496dacf38c1f0f571665
msgid "When you are ready, run the following command from your package's directory (e.g. *src/myorg.mypackage*):"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:154
# 5ee2d44762c8464db7a224cf7400a985
msgid "This will ask you to create a Cheese Shop account if you do not have one already. You can run this command as often as you'd like to release a new version (probably with a new version number)."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:160
# 8e8504e464a5468085e4398bfd9317d4
msgid "Creating development releases"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:161
# cf64b5dbb259475abe1c9c5f650a163a
msgid "When working on a project, you might want to generate development releases of a project to push to a staging server. Instead of increasing the version number in the ``setup.py`` file each time, you can use the ``egg_info`` command to name the release appropiately."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:166
# aa4285cb3cb446d48957095bd0915df7
msgid "For a complete list of the available options, run::"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:170
# 3c7c1fcad6b44410a0ebcd7bc6b27a2c
msgid "If you're using subversion for version control, you can use the revision numbers. For example, this will generate a targz package in the ``dist`` folder named ``your.package-rXXXX``, where ``XXXX`` is a revision number::"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:177
# 89e9ed3db16e4630882a1f841b95bd01
msgid "If you do nightly releases, tagging with the date is a good option::"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:181
# 5034a98b188e42f9ab736533d936422f
msgid "If you don't want to enter the full command everytime you make a release, you can use the setup.cfg file to set the defaults. For example:"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:3
# d45b33f8b8994f00a40e86294e713353
msgid "Creating a buildout defaults file"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:8
# e56ee260700f4b3a9f80755d54dbce91
msgid "This makes it possible to share configuration across multiple buildouts, and save some time and disk space."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:11
# e5cb25b66d404e7fa423a365490929c0
msgid "To set \"global\" options affecting all buildouts, create a directory *.buildout* (note leading dot) in your home directory, and add a file there called *default.cfg*. Any option set here will be applied to the corresponding section in any *buildout.cfg that you run, unless it is overridden by a more specific option in the *buildout.cfg* file itself."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:20
# 08d2fd281a714e10811b948095542959
msgid "Windows may error when creating the *.buildout* directory with \"You must type a file name\" due to the leading dot. This directory can be created using the command line. Once created, it can be accessed normally in the Windows gui."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:25
# 607ad8611195427889ee8fed1c727f9d
msgid "The most common options are:"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:29
# ec3efc2312f84b4c9797778fae2f5d1f
msgid "executable"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:28
# 641794358f4941acaaa3e24f62007f49
msgid "Specify a python interpreter other than the system default. This is useful if you have Python 2.5 installed, say, but you want your buildouts to use another installation of Python 2.4."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:36
# fb7216a7ad094b71bd0d40570bfd2a3c
msgid "eggs-directory"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:32
# ae75d088b4774cfda70dcda68871fe83
msgid "Specify a directory where eggs will be downloaded. This allows multiple buildouts to share the same eggs, saving disk space and download time. Note that only those eggs explicitly required by a particular buildout will be activated. The eggs directory may contain many more eggs (or many different versions of the same package) than what is used at any one time."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:40
# 0d95c2634cf442df8af63193b07f3073
msgid "download-cache"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:39
# 981c7e8c5aa44277a0f1d81ce36a3b32
msgid "Specify a shared directory for downloaded archives. Again, this can save disk space and download time. NOTE: before zc.buildout 1.0, this was called download-directory"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:47
# a0999e88cf804499a5ad4aeb4b61c3b3
msgid "extends-cache"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:43
# c2b8addf9a2040988bb31130756ec339
msgid "Specify a shared directory for extended buildout configurations that are downloaded from a URL. As of Plone 3.2 this is how Plone pins the `versions`_ of its eggs. This option was added in `zc.buildout 1.4.1`_, prior to that the offline mode in combination with a extends URL would not work."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:49
# 272c1bb5dee34d7e82fb47c8d4b59822
msgid "Here is an example *~/.buildout/default.cfg* setting all three:"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:59
# f7ea67ab28b24191a98bdf4d5c8da69a
msgid "This assumes Python 2.4 is installed in */opt/python2.4*. For the last two options to work, you would need to create the directories *eggs* and *downloads* inside the *~/.buildout* directory."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:3
# ad9f9b5e8cab4833839137f0a81b4178
msgid "A deployment configuration"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:7
# 388c4186d4c44884ab16b5b108582146
msgid "How to use buildout for deployment configuration"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:9
# 43371314d8604c1391c2c5f32590f507
msgid "Finally, let's take a look at a more advanced configuration, better suited for deployment. Save this file as *deployment.cfg*, at the root of the buildout next to the main *buildout.cfg* file:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:59
# 9f9206920db444238a5ec879b3e060f7
msgid "Here, we are:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:62
# 987d2b14b850488194dea1c7e35e3307
msgid "Referencing the main *buildout.cfg* file, extending and overriding it with configuration more appropriate for deployment."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:64
# 7db3dd8b2e1d47689407ad4843adbccf
msgid "Setting up a ZEO server with two client instances, instance**and *debug-instance* (see `plone.recipe.zope2zeoserver`_ and `plone.recipe.zope2instance`_ for more details)"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:67
# 8e12b22d172c4dd991136cb6534ef430
msgid "Compiling the Varnish cache server (see `plone.recipe.varnish`_ for more details)."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:70
# 8d89e28acc224e0d94131594e74e8d91
msgid "By combining buildout configuration files like this, you can create tailor-made configurations for different deployment scenarios. To learn more about the advanced features of buildout, see `its documentation`_."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:75
# 6423e9a6b9604630aecc78e452c53d2d
msgid "To build this environment, you must explicitly specify a configuration file:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:82
# a081ed4f3613412fad9134b99bda7fa1
msgid "To start Zope and Plone, you will need to start the ZEO server, the instance and the Varnish server:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:91
# 90d77c38242a46d38975b403533817ed
msgid "If you need to bring up an instance for debugging then you can start up the *debug-instance* in foreground mode."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:98
# 2553413de6054c09b4b0268876d092d2
msgid "The recipes will also create scripts to back up the ZODB filestorage (in *./bin/repozo*) and to pack the database (in .*/bin/zeopack*)."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:103
# 44203ff99dbc4eb59103862e68c350d6
msgid "Further options"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:105
# f9f93a9eb4854c27b60e2d1a6cf13ba3
msgid "``zc.buildout`` is a very flexible system. It is relatively easy to create new recipes, and you can combine existing recipes in powerful ways. Search the `Cheese Shop for \"buildout\"`_ to find more recipes, or take a look at the `source code for some of Plone's own recipes`_ to understand how recipes are created."
msgstr ""

#: ../../reference_manuals/old/buildout/index.rst:3
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:17
# 5289a366fa8d42f9868917737f4ec4cc
# bea268405e044b4aa89edadf853c5b6b
msgid "Buildout"
msgstr ""

#: ../../reference_manuals/old/buildout/index.rst:7
# 6c4df8af83414bedad2bb107124533d0
msgid "Buildout is a tool used to make site configuration repeatable and automatic. It will download and configure software for you."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:7
# 27b219e6c3734446a5e467bef8c63c5a
msgid "Or: \"What's wrong with a plain old Zope instance\"?"
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:9
# 400071f93b3643c7b7753fa91ebf58af
msgid "This tutorial shows how to install Plone 3 into a *buildout*, and how to use that buildout when working on a software project that extends Plone. A buildout is a self-contained environment where you can manage the dependencies (including Zope and Plone and any third-party products or libraries you need) and custom code for your project. Even if you are not planning on writing any custom code, the buildout approach is an easy way to install Plone in a robust, well-tested manner.  As of Plone 3.2, all of the installers are now buildout based."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:19
# f40a826fa938475f89d34fcb0092fef8
msgid "Prior to Plone 3.0, most developers and users who did not use a GUI installer, would set up a Zope instance, drop in a few products into the *Products* folder, and be done with it. Unfortunately, this approach has a few problems:"
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:25
# cf3eb72d18f54a199c0df39933783e0e
msgid "Plain old Zope instances are not very well equipped to deal with packages distributed as python *eggs* or using setuptools *namespace packages*. Many new packages in Plone 3 are made in this way, and more and more third party modules will be as well."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:29
# d06d9d13b22c4579b5e61fb97443221b
msgid "Without access to the metadata that is held in eggs, developers may find it too time-consuming or confusing to factor their work into multiple packages that are more re-usable, preferring monolithic products that are impossible to re-use outside Zope."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:33
# 54af0316045f495ab1ab7907e5e3a7bb
msgid "Without any further tools, it is cumbersome to repeat a setup across different environments."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:36
# 5e7bc442396442e28f04f566650e79a6
msgid "As eggs become more important, developers should look to employ more appropriate tools for managing their code. **zc.buildout**, hereafter referred to only as \"buildout\" is one such tool. This tutorial shows how to use buildout for day-to-day development as well as deployment."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:43
# d08c57b082e744a5b7167531f7c9eedb
msgid "More buildout documentation and background"
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:45
# 2693516a962d40908fbdaa27e45dd2e6
msgid "Buildout was created by Jim Fulton of Zope Corporation, and is documented in depth at: `http://buildout.org/`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:3
# d91c8a7b0b924a638477b023fb5ee1d7
msgid "Packages, products and eggs"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:7
# 44e4aee497684faf9bd720ac0eee06de
msgid "Looking at the core concepts in more detail"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:12
# e97e38b653ff461abce02ab0332f3b16
msgid "Before we begin, you should familiarize yourself with these terms:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:15
# 25514d99263246dfa8090b4d59c94acc
msgid "`Software home`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:16
# c551eeab07cb4dbfb1400ccfb8dd4683
msgid "`Zope instance`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:17
# 2763ebd3d535412db525f5c862bf77b4
msgid "`Python path`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:18
# 868a0949184343f4a43a4779be4e788d
msgid "`Python package`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:19
# b2436a120ba042c1a680cbe5110f7a42
msgid "`Zope product`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:20
# c457fb49f7cb4706a6b500332191a13e
msgid "`Python egg`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:21
# 9b3bf6b75b524e96959ba284cc095ec7
msgid "`The Python Package Index`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:22
# 7138e1d2142f461680d5c9bd6aa65c52
msgid "`easy\\_install`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:23
# 15664d1104ca43189770f9d4068fb537
msgid "`Namespace package`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:26
# 59ed3f2672a748e093ed0a8f70ed6c23
msgid "The magic Products namespace"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:28
# dd787142ef724750889fea54a53d98b8
msgid "When Zope finds a \"product\", it will create an entry in *Control\\_Panel/Products* in the root of the ZMI, and run the *initialize()* method, found in the product's root *\\_\\_init\\_\\_.py* file, each time Zope starts up. Not every package used in a Plone context needs to be a product, but \"productness\" is required for:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:36
# 88454cacd05e469e9b8415b2acc735c5
msgid "GenericSetup profiles"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:37
# cefa1189270a47a68b7eae8405528d9e
msgid "Skin directories being installed as layers in the *portal\\_skins* tool (but *not* for Zope 3-style browser views)"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:40
# 09d803416f6e4bb38feb7f8c2ca9ff62
msgid "The easiest way to create a product is to use Paster/ZopeSkel to create an egg-ready package in the *Products.\\** namespace using the *basic\\_namespace* template:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:58
# b3f91b6ef8d444dc962b31095a714afb
msgid "If you're using buildout, create your package in the *src* directory, and add references to it in the develop and instance/eggs sections of buildout.cfg:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:74
# bdd8fbacf7164f92a3834ada3e68a85c
msgid "Run bin/buildout and you'll be set up to develop your egg-ready product in the *src* directory. Turn it into a distribution egg when complete."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:78
# 10f9731d3e854fa6bb9cc400a1d9330c
msgid "It is possible to use packages (including egg-distributed ones) outside the *Products* namespace/directory as Zope 2 products. Many developers prefer this approach, feeling it is unnatural to keep everything in a single, \"flat\" namespace."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:83
# 61ee487cbf934841bf48e7d867f273ae
msgid "Extra steps are required for this. Prior to Zope 2.10.4, this is also required for products in the *Products* namespace"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:86
# 74b5f08ed05f46cc9fc5606a4137f5b4
msgid "We must add a line like the following to the package's *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:101
# 78ad8d12e9f740d3a6206b667d892a8a
msgid "Secondly, it is important to realize that packages outside the *Products* namespace are not automatically detected when Zope starts up. If they contain *configure.zcml* files (as most packages will do), this must be explicitly included from somewhere. This may be:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:107
# 8fed06341c454451a0dc5081ec172ab1
msgid "Another package's configure.zcml file."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:108
# afe8670227db4ff8837b63d781935845
msgid "Zope's site.zcml, the root of all ZCML files, which is found in the *etc* directory in the instance home."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:110
# 5b360f8bfec4408fb21dcad565a6096b
msgid "A ZCML :term:`Slug`, a one-liner created in the zope instance's *etc/package-includes* directory, with a name like *my.package-configure.zcml*."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:114
# cf90accf37be4ec5ba29cfb751e3a2b0
msgid "In all cases, the syntax is the same:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:120
# 0975d6482c304df68ad10db00ac41a6d
msgid "If you have *meta.zcml* or *overrides.zcml* files, you can add *<include />* directives for these as well. If you are using slugs, it must be named accordingly, e.g. *my.package-meta.zcml* or *my.package-overrides.zcml*. A :term:`Slug` can not contain more than one line."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:126
# 301dfcc5bf0848408f0f518f084fd894
msgid "Later in this tutorial, we will show how buildout can manage slugs for us automatically."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:7
# 008109c30400441ba6ef8066d255d363
msgid "A few things you need before we can get started."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:9
# ac33e4dc9855481086b33d478a378e2c
msgid "Before we can create a buildout to manage Zope and Plone, there are a few prerequisites to take care of."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:18
# 447f93c3e1454f4e86e9d7594a25d064
msgid "First, you will need an appropriate Python interpreter, if you do not have one already:"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:22
# eec2b6d846aa40c3993fb8fc7972f5c0
msgid "Install `Python 2.4`_ for your platform, and add it to your system *PATH*. It is easiest if Python 2.4 is what you get when you type *python -V* on a command line. Make sure you're using Python 2.4 and not 2.5, since Plone 3.x doesn't support Python 2.5 or later. You might need to type *python2.4* instead of just *python* when running some of the following commands."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:28
# 172de59d64d642d9b24f2bec49065c4f
msgid "If you installed Python using an operating system package (e.g. an RPM), make sure you get the development package (e.g. python-devel) as well. This includes Python header files that we will use later to compile Zope. If you installed from source, or used the Python Windows installer, you should already have these."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:33
# 8f53026d79124ba4ad9c2b1f6e18feda
msgid "Install `PIL`_, the Python Imaging Library into this Python interpreter."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:35
# 641f37bead7e46c89a00602e68b9c328
msgid "Install `setuptools`_. If you're using Linux and your distribution doesn't provide a package for setuptools, download `ez\\_setup.py`_ and run it with: ::"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:42
# 47fbb3caf0bd4db692e9e7ee09e0a344
msgid "This will download and install setuptools and the *easy\\_install* script. Watch the console output to understand where *easy\\_install* is installed. If this is not in your system *PATH*, you should add this directory to the path as well."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:48
# bdbe69cb943748db86b5af9e624beeaa
msgid "Finally, use *easy\\_install* to get *ZopeSkel*, a collection of skeleton templates for Zope and Plone development:"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:55
# 733755b4151e4cac8f50125bf0343190
msgid "This will get *Paste Script* and various other dependencies."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:57
# 059f142bc0a44c90b725700020caf19a
msgid "Linux note: If you're installing setuptools and ZopeSkel system-wide, you will probably need to become superuser or use sudo, if you're not using virtualenv or similar. But please note that bin/buildout (introduced later) should never be run as root. If you really can't avoid running this script as root, don't forget to change the owner of created files (chown -R) so the unprivileged user that runs the zope instance will be able to read those files."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:65
# 1c104897437a47b0b8e48653abdb221b
msgid "If you added the Python console scripts directory (where *easy\\_install* was placed) to your system path, you should now be able to run the *paster* command. You can test it with:"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:95
# c2ce4ba9802e4d9b97389b9b0ef13da9
msgid "Your output may differ slightly, but make sure you have the *plone3\\_buildout* and *plone* templates at least."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:99
# 3ceb22efa380460f9771a1a43d5effb0
msgid "Additional installation steps for Windows"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:101
# 31aacad9b2024372ab6c0811d8cdabf0
msgid "If you are using Windows, there are a few more things you need to do."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:104
# 52bb69a97b69402484ee0bf669a41e55
msgid "First, get and install the `Python Win32 extensions`_ for Python 2.4."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:107
# 220c2a553dc346d8b4132a211b62b76a
msgid "If you intend to compile Zope yourself, rather than using a binary installer, or if you ever need to compile an egg with C extensions, you will need the `mingw32 compiler`_. Make sure you choose the \"base\" and \"make\" modules at a minimum when the installer asks. By default, this installs into *C:\\\\MingW32*. Inside the installation directory, there will be a bin directory, e.g. *C:\\\\MingW32\\\\bin*. Add this to your system *PATH*."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:115
# 42c8d0af58504134915fb3fad3362e4d
msgid "Finally, you need to configure Python's *distutils* package to use the mingw32 compiler. Create a file called *distutils.cfg* in the directory *C:\\\\Python24\\\\Lib\\\\distutils* (presuming Python was installed in *C:\\\\Python24*, as is the default). Edit this with Notepad, and add the TRUNCATED! Please download pandoc if you want to convert large files."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:3
# 4be9d04329da4f59b0d0aebdb06d2827
msgid "Useful buildout recipes"
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:7
# 6e5d100777464b25bddc33fc536619dd
msgid "A list of the most common and useful buildout recipes used when working with Plone."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:10
# 45c8b71a2066457b88cc8df5ab125837
msgid "The list is more or less sorted by topic. Check all available recipes `at PyPI`_."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:14
# 2c79d1ff0b6749db8477a8174dabf7ef
msgid "`zc.recipe.egg`_ - Installs eggs into a buildout eggs directory. It also generates scripts in a buildout bin directory with egg paths baked into them."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:17
# 496534e208424e259da18ec0d92464de
msgid "`infrae.subversion`_ - This zc.buildout recipe will check out a *number* of URLs into its parts directory. It won't remove its parts directory if there are any changes in the checkout, so it's safe to work with that checkout for development."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:21
# a1dfd8aa55d2455caecdb1cf9edcf099
msgid "`plone.recipe.zope2install`_ - Installs Zope 2, i.e. its Python libraries and scripts, but doesn't create any instance."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:23
# a486f1c591c548cc822f6ea08403fdb5
msgid "`plone.recipe.zope2instance`_ - Creates and configures a Zope 2 instance in parts. It also installs a control script, which is like zopectl, in the bin/ directory."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:26
# 5c8775619f4343399e8c2c7340859cfb
msgid "`plone.recipe.zope2zeoserver`_ - This recipe creates and configures a Zope 2 ZEO server in parts. It also installs a control script, which is like zeoctl, in the bin/ directory."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:29
# 339c05fe992e430b9471c14964f43e51
msgid "`plone.recipe.distros`_ -  Installs distributions, i.e. Zope products not packaged as eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:31
# aa096e3127874cd683bf20f60af24c58
msgid "`plone.recipe.apache`_ - Builds and configures the Apache web server."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:33
# cd8f1b5bd5a24ed882004fb84d386ba9
msgid "`gocept.nginx`_ - zc.buildout recipe for configuring an nginx server"
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:35
# d6a2373788054cb7b4fc55cfc16ee823
msgid "`plone.recipe.varnish`_ - Installs the Varnish reverse-cache proxy. It works for non-Zope sites as well."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:37
# 80f9c375f7784d90af8215d5aa4b3264
msgid "`plone.recipe.squid`_ - Installs the Squid proxy. It works for non-Zope sites as well."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:39
# b1ad004712ff4182b31d7149ba34688f
msgid "`collective.recipe.omelette`_ - Creates a unified directory structure of all namespace packages, symlinking to the actual contents, in order to ease navigation."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:42
# dac3234328674a528a46661b3717186b
msgid "`collective.recipe.i18noverrides`_ - Creates an i18n directory within one or more Zope 2 instances in your buildout. It copies some .po files to those directories. The translations in those .po files will override any other translations."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:46
# 8344a400da784e08b45c9af614e56400
msgid "`zc.recipe.cmmi`_ - The Configure-Make-Make-Install recipe automates installation of configure-based source distribution into buildouts."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:49
# 7aacc5bb29964fc39e0df9acae1616bb
msgid "`plone.recipe.command`_ - Execute arbitrary commands in buildout through os.system."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:3
# 91f0a3892d28480eb9c5dfc9687847c6
msgid "Installing products from Subversion"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:7
# f9c7ef225a134b599609cdcb214dab44
msgid "Sometimes Plone products are not eggified, but available only in Subversion version control repository. This how to tells how such product can be automatically installed in buildout installations."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:12
# 4625fbc540724cd680f740fdfaa7d34c
msgid "A few buildout recipes provide direct version control checkout functionality:"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:16
# b35cc9a029594bd8987de7d1b3d5d4b5
msgid "`plone.recipe.bundlecheckout`_ - recipe provides Subversion (and CVS) downloads. Always does checkout - not suitable if you change files."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:19
# 0be2ceb57a034108b59e2ef58c988e4f
msgid "`mr.developer`_ -  a zc.buildout extension which makes it easier to work with buildouts containing lots of packages of which you only want to develop some."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:23
# c5df3784490a47bbbd470ce78206649a
msgid "`infrae.subversion`_ - can do SVN update"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:25
# 1940d6f37177496ba6fc8645caf4f5d6
msgid "In this example we use the later."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:30
# f5db0964d7844bfbb2d4be56065775c0
msgid "Add the *infrae.buildout* recipe to your *buildout.cfg*. Adding a recipe means adding a new line to [*buildout] parts=...myrecipename* at the beginning of the file and then later a corresponding *[mypartname] recipe = xxx.yyy* section."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:50
# 9f0c9c58f1b04a43babd0adfb684165c
msgid "List all the URLs of the products you want in *svnproducts* section. In the example below we checkout TickingMachine product."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:63
# e56cfe199d8d41c6b6437cad04c3b645
msgid "In the case you're installing an old product (not eggified) you will also need to register it in the *[products]* section so that they get added to your Python path:"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:75
# 1a3eb7dbc97c4b5e83bf3ee3b6cfc306
msgid "After rerunning buildout, TickingMachine will be found under parts/development-products folder."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:82
# 373a4a121cef42cc9030a0f7d736620e
msgid "`infrae.subversion: a recipe against disaster`_"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:83
# a2d5838c0ea9418f94c91bff31e9af5e
msgid "Note that pointing to trunk is only a good practice for active development. Anyone else that needs to use this technique should point to a tag or branch URL."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:88
# 249c15c5996c424295d6efb490b5601b
msgid "Certification errors and passwords"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:90
# d5c3e2a89d864cfeb013ebaf165fe4f7
msgid "Self-signed certificates are often used with Subversion repositories. Since *infrae.subversion* is made for automatization, it cannot accept security decisions for the user. So if you are receiving certification validation errors and password prompts, please access the Subversion repository first manually using svn command. Accept the choice and the svn client will remember this in your user account home folder. It is recommended not to use your commit account for this, since storing passwords is insecure."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:99
# 5b733329ff9b47f7b41ba1fdedf1759f
msgid "Here's an example about how to access a SVN repository using the *svn ls* command and accepting the security decisions for the svn client to remember them permanently:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:3
# 4f61ee4774064de184e1a544a24e5204
msgid "Installing a third party product"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:7
# cfca6184fd72466895124259814d7fce
msgid "How to install a new package using these tools"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:10
# 6f6981b8431e4e47906405428478e53a
msgid "How to install a new third-party products will depend on whether it is packaged as an egg, or a traditional Zope 2 product."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:14
# 9422573fb6aa448db69269401fd5ca5c
msgid "Installing eggs"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:16
# c0178358ca724f1ab1b83df671588893
msgid "So long as an egg has a release in the `PyPi <http://pypi.python.org/pypi>`_ or elsewhere, buildout can download and install it, including any explicitly specified dependencies. Simply list the egg, and optionally a version (otherwise, you get the latest available), in the *eggs* option."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:30
# 4b7ebefc2ba44d439d2844641e3e2f96
msgid "If you want buildout to search an index other than PyPi's, you can add a URL to *find-links* that contains download links for the eggs. In fact, we have already seen an example of this: *elementtree* is found at *http://effbot.org/downloads*, not in PyPi directly. Thus, we have:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:50
# dbe1da359b4442dbba0cd555f3bf02bf
msgid "We have also listed some of the download locations for Zope and Plone eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:53
# 007336489fd840b289e5027b3372eb1a
msgid "Again - re-run buildout for the changes to take effect:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:60
# 775177d44cd04e00960990af4eed9e36
msgid "Development eggs"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:62
# 294988ad4b8f47b2b6303f948f2f1939
msgid "If there is not a release for your egg, or you want to track an egg in Subversion, check it out to the *src/* directory. Make sure you get the full egg, including the top-level *setup.py* file. For example, to get the *plone.portlets* trunk development, egg do:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:72
# c5c31d4997384dd28323c3c56d7dda0a
msgid "Then, add the following to *buildout.cfg*:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:88
# bcbce62e0708440ba053f7f0784ba010
msgid "The *develop*option contains a relative path to where the source egg is installed. Buildout will expect to find a suitable *setup.py* in this directory."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:91
# f475ecd92d9f4c5b908f17fb95d1ec01
msgid "Development eggs always take precedence over regular eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:92
# 96fd89ebc4fc406486734d99784749f1
msgid "You still need to list the egg name in the *eggs* option for it to be installed."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:94
# a11f7a54582644d3a224f66a03d11cf0
msgid "If you are overriding an egg that ships with Plone, you may need to list it in the eggs section of the *[plone]* part instead:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:111
# ac7d6591d99d46909d785f44233c0f35
msgid "This is because *plone.recipe.plone* is very explicit about which versions of its various eggs to use, to ensure Plone keeps running as it was released."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:115
# 3bcda3ea5c61459d9831c533581efee8
msgid "Buildout recipes (such as *plone.recipe.plone*) are distributed as eggs. You can use a development egg of a recipe by listing it under the *develop* option. There is no need to explicitly list it under the *eggs* option, since it is referenced by the *recipe* option of the relevant part."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:122
# f786865903e84f3a97071c9a3ca1c450
msgid "Installing a traditional Zope 2 product"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:124
# fef3abb4c6f846ce9fd7861974e2c93b
msgid "The easiest way to try out a traditional Zope 2 product is to extract it into the *products*/ folder inside the buildout. If you see documentation referring to the *Products/* folder in a Zope instance, this is the same thing."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:129
# ea343e47f412401d96971c2a392e6fa9
msgid "However, this approach makes it harder to redistribute your project and share it with other developers. It is often more predictable to let buildout download and install the package for you. You can do this with the *[productdistros]* section of *buildout.cfg*. For example, here is how you might install a product named *ExampleProduct* and a set of products named *ExampleProductBundle*:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:148
# 2a1e8131e31b472d9099b2147a90c6cb
msgid "Note that our fictional *ExampleProductBundle* is distributed as a single directory containing a number of products in sub-directories, so we list it under *nested-packages*."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:152
# 3e4611f07d07496baaccc7c712cc6ed8
msgid "As always, if you change *buildout.cfg*, you must re-run buildout:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:159
# c5db0b7acd934325a8bf44418162f03d
msgid "Managing ZCML files"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:161
# bc35323a766b42d78430377a902b6e1b
msgid "It is important to realize that Zope will not load *configure.zcml* files automatically for packages that are not in the *Products.\\** namespace and lack support for *z3c.autoinclude* (see next page for more on using *z3c.autoinclude*). Instead, you must explicitly reference the package. Buildout can create such a reference (known as a ZCML **slug**) with the *zcml*option under the *[instance]* part. Here is how to ensure that *borg.project* is available to Zope:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:185
# b942648582be4edeb782ba4f245f0ee1
msgid "Should you need to load an *overrides.zcml* or a *meta.zcml*, you can use a syntax like:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:196
# 6d9200d5e389453a87281acfe1cec323
msgid "Policy products"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:198
# 60b75e331ba44c1786a2c47931d15748
msgid "Many developers prefer to create a single \"policy product\" (also known as a \"deployment product\") that orchestrates various dependencies. If you have such a product, you may want to include various dependencies directly from the policy product's *configure.zcml* file, with lines such as:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:212
# 3d60b26112c14a92b4f51f2613fd2f06
msgid "In this case, you may still need one slug (using the *zcml* option as above) for the policy product."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:3
# 2cd537c71bd54ec98788d988d06102fa
msgid "Converting single process Zope instance to ZEO cluster buildout.cfg"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:10
# 25a6be95c09a480cb2484463256eba93
msgid "See `ZEO <http://plone.org/documentation/manual/installing-plone/installing-on-linux-unix-bsd/to-zeo-or-not-to-zeo>`_."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:12
# 87439b4f86d14020bfe11d0b95b3e794
msgid "See the `plone.app.blob product page <http://plone.org/products/plone.app.blob>`_ for good ZEO configuration examples."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:16
# fc678b68a15f4880a25a24ef81dd7022
msgid "Steps"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:18
# 86f1fa09b8554051a701ab1fb7bfcf2a
msgid "Use link above for a ``buildout.cfg`` example."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:20
# 08a76d38ded34fee89b8c3d985614dea
msgid "Changes needed to a single process ``buildout.cfg``:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:22
# 5d9ce672a3244590b1e605e861b891ed
msgid "Add ``[zeo]`` section:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:34
# 547ee5c4c14a4e61bd3969b5fb2a2dff
msgid "Convert ``[instance]`` to ``[client1]``. Add the following new settings:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:43
# 07e9a586eeb849ed9a1e5982868e00ee
msgid "Add ``[client2]`` ... ``[clientN]`` sections:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:61
# 456ab15fb5a84321b484fd1fc99ce476
msgid "Reconfigure ``[buildout]`` parts to include zeo, client1, client2..."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:74
# a933780bf3db4b81a75755b50973c72e
msgid "Change all ``${instance:...}`` references to ``${client1:...}``. Search and replace ``${instance:`` -> ``${client1:``"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:78
# d593e43a4c264bdb980e486b05f2078d
msgid "Starting ZEO cluster"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:80
# fc44fbf6a4b24b0ab61d9b37ad64a263
msgid "You need to start ZEO and clients independently"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:82
# 48c21a9ae93c4f8189c18818d4c2c08d
msgid "bin/zeo start"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:84
# 9a56ffad52b44a729644309d4e49772b
msgid "bin/client1 start"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:86
# a07a03515b2e459eaa0784df7a06266d
msgid "bin/client2 start"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:88
# 40c98d953d1f47328cbab0e1ec7f9925
msgid "etc."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:91
# 41c0e7793e9e40f68739433e3dfc719f
msgid "Other resources"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:93
# a1392d1b095b4975a24c4fcaa7de4d0a
msgid "http://blog.twinapex.fi/2008/07/07/zope-zeo-setupconversion-and-zeo-vs-standalone-performance-review/"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:3
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:2
# bd5dc9206ded4fd8a38ad1303febeb0f
# 9e3fb3ccb4144e2f8e0f90523f25234f
msgid "Customizing the template and the widgets"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:7
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:6
# f4203420a8e2412cbbb61797178e41dd
# ddd1ea1b0cf84c74963e04701c8dad74
msgid "Hack into the appearance of your form."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:11
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:9
# 3bed0551cb1c41b59ec7b47f4aacadc2
# 78f3ab8918184a9fa12c4cc69f370e5a
msgid "Customizing the template"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:13
# a05f359d17c64a03b5555e8a6805c8d9
msgid "*plone.app.form* provides a handy default template named ``pageform.pt`` which integrates well with the default Plone skin, but you might need to customize it or write your own one."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:17
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:15
# d85bac31194942399fd9e89e246972f7
# 80e0916db0d44ff595b35480af6b5f39
msgid "To do that, override the ``template`` attribute of the form class definition:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:41
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:39
# 4e34db669d684078a72e95c55034b824
# cec090cf8c324af3a8de411fe74e1e02
msgid "As already stated, all the view attributes will be available inside the page template, including:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:45
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:42
# 65ffed8bf03a44cba5c8cdff79a9fa16
# 06e1bbac2d5a4e8198173089bd02108c
msgid "**label -** A label to display at the top of the form."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:46
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:43
# 231d281a57004d58808d20e842c6f39f
# 41e6a894dbd8443c8cd4874131b57e9e
msgid "**prefix -** A string added to all widget and action names."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:47
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:44
# d4e9d49c0d5f4132a700c9841e91ce38
# 91f0da374978474a9875e141ec600665
msgid "**form\\_fields -** The list of form's fields."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:48
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:45
# f3c915a706484d2db6958a21c880e41b
# 90d3b94a544a4cb1b8822df20e9b41aa
msgid "**widgets -** A list of views for the former fields. The widgets are looked up as multiadapters for each schema field and the request providing ``IDisplayWidget`` or ``IInputWidget``."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:51
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:48
# e2eaa7e3784645e8a9c848e4f0e8a38f
# 7e6b6d6e37a7493d948588f367cb2e2a
msgid "**errors -** A list of errors encountered during validation."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:52
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:49
# 604d2fd63a444e3a80ab088ba42026d1
# 26c4b421a3e54fdaa381bb30f0b19b0d
msgid "**error\\_views -** A list of views for the former errors. These views are looked up as multiadapters for each error and the request providing ``zope.app.form.browser.interfaces.IWidgetInputErrorView``."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:56
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:52
# 79c22c9ba022486cb1afa1f2b3c73009
# d77ca12e579b4af4bf4684b853b92bc9
msgid "**status -** An update status message, normally generated by success or failure handlers."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:58
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:54
# c4c4268c5d974beda18d12f9c9c27001
# 05332b57f33440408ad5dcfac1fee58e
msgid "**availableActions -** The list of form's available actions."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:59
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:55
# 84f2b8442157422f8584303ad14408f4
# ee90c5a4bbd54c34a3d5a939e35d736c
msgid "**template -** The template used to display the form."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:61
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:57
# 379ab9fbb2df495c9a5969d2fdf6b1c4
# f3f24875439f4b92b8c94f040c8ba40b
msgid "It's reccommended to start with the default ``pageform.pt`` and customize it cutting, pasting, deleting and entering text and tags."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:65
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:60
# 70721a43bcce43c889c730fa7e2837ab
# 26fd572383b54d6089a77bb72b6095f8
msgid "**Using named templates**"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:67
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:62
# 5ceed0a959f4443db09d017085a8549f
# 496d5dcd380c4ecd82f93bd4e6ce3b4d
msgid "Another really zope3-ish method to choose the form template is using the *zope.formlib* named templates. Using named templates can be (and actually is) an overkill if you've designed your template to work with your form class as a single component. But if you write a form class and the template is just a visual customization of that form, you might want to be able to customize the template without having to reimplement the whole class, or let others do so. This is exactly how Plone overrides the default *zope.formlib* template with a more plone-ish one in the *plone.app.form* package."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:78
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:72
# e4feed3893364d82bc9ce40701e57feb
# c3c31ef9cb03441a9ddb56472a6b06a1
msgid "Please note that this approach was not taken in the example product *example.formlib*."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:81
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:75
# 928e711c1d7c4604985bdaac157b0fbf
# 758a58e85e11429a9965e061856beb82
msgid "Named templates are adapters for the form's view class to ``INamedTemplate``, bound to the form class only by their names. This way, a third party product (e.g. a theme) can register a different template with the same name (usually in a different browser skin layer) to override the default one. Moreover, they're very easy to use. Modify and add the emphasized lines:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:108
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:102
# 877b4d59fa9a4c529f5558756e435c5d
# 672648e1292f4866a610b6db9afd543f
msgid "In configure.zcml, add the following snippet to register the named template as an adapter for your form:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:119
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:113
# 7eb90d6344eb48a5b11dfbed28c62484
# d743bd8e184542e28ce7fd619d3e952b
msgid "Name your page template ``feedback_form.pt`` and you're done."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:122
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:116
# aba1021c1c6b4958abc9cf52c227ded3
# 1159ab3d6e0844dda0a13cf647e25cae
msgid "Customizing the widgets"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:124
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:118
# cbc73832ce6f49a29fef4d57b920eb5e
# 5e2c19bc77b64c329593b2e4574c3779
msgid "As we've already stated earlier, form widgets are views for schema fields, i.e. multiadapters for each schema field and the request providing *IDisplayWidget* or *IInputWidget*, depending on if they display field data or offer editing funcionality to the user."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:129
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:123
# b360e533626f40fe8003916232c17d81
# 9e345e74b29a4489b5745f40f0b9b21a
msgid "To do so, override the ``custom_widget`` attribute of a field (which defaults to None). Remember how we set up the form's fields:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:143
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:136
# be66c731f9e2445cb6da604b6ece00cc
# 79244274c662485f90a997bfa0572adc
msgid "The ``form_fields`` fields are accessible throught a dict-like interface, with the schema field names as keys, so we write:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:164
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:157
# cac91a4b9793430a8f5daf05fe57a278
# 31d3e9c62456487eae2e797aca85415d
msgid "Here, we're specifying a custom widget for the subject field: ``RadioWidget``, which displays a radio box for every item from the field's vocabulary. The *zope.app.form.browser* and plone.app.form.widgets packages provide a reasonable set of widgets to use and customize, including dropdowns and Kupu/WYSIWYG. Unfortunately, creating new widgets is out of the scope of this tutorial for now."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:172
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:164
# 9ddcd2a7f1c543e9bb63bbe73fc9bef1
# cbcb812f6c29433c9b056255408c17e0
msgid "The ``RadioWidget`` function deserves a little explanation. Believe it or not, *zope.formlib* doesn't handle custom widgets with vocabularies (called items widgets) properly, because it calls ``form_field.custom_widget(field, request)`` either the field has an associated vocabulary or not, and item widgets have to be initialized with a vocabulary argument too; so a wrapper function is needed to workaround this issue."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:180
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:172
# 20c61ec733c544d5a3309b31299905eb
# ebd0701784b7489aa40118d265d2da24
msgid "Here's how the improved form looks like:"
msgstr ""

#: ../../reference_manuals/old/formlib/index.rst:3
# bdc7249fac244bd1b6706893aaf34ce3
msgid "Using zope.formlib"
msgstr ""

#: ../../reference_manuals/old/formlib/index.rst:7
# f325eb46d2e04928980f475b1fc82da7
msgid "zope.formlib is a zope 3 library to handle forms creation, validation, display and actions. It provides a series of base classes and methods to allow forms to be defined with just a little bit of meta data."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:3
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:2
# a10647894f4f408d9f6154b30190f4d7
# b93210262cbf42e8ad35a32085b1a9d0
msgid "Creating a simple feedback form"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:7
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:6
# 7c1f2925f22e4ae08b8fab8ad56101bc
# bfc15ad2b87d4521b7d2b86781da35bc
msgid "This section explains how to create a very basic feedback form."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:12
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:8
# 7b39c257dcff41c2961a7d9aa86edcfa
# bd4ea635b62d4b64ae77e6251cbc6183
msgid "The code for this example is available to checkout from the collective as `the *example.formlib* package <http://svn.plone.org/svn/collective/example.formlib/>`_."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:16
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:12
# 23966785b6804cd8a6bd5aad99ead325
# eb4140cfa5224509a0dc03ba3885b860
msgid "For all practical sense formlib based components are really regular Zope view components with some convenient base classes for auto-generating output based on schemas and other configuration info. You will see that in a moment."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:21
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:17
# eef4996ec0e14152b9ebfc0c983170c4
# efa9b589c6354cdab1bb2261930736b0
msgid "First, define an interface class with the schema of the form:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:43
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:39
# 94314f6ab6594a1687ba270ffe60480d
# 32d892ee79c042e7957669ee11e24268
msgid "The purpose of this interface is to define the fields of the form. The type of each schema field determines the type of widget that will be used by default for that field, so choose it carefully. To see all the schema fields available, read the zope.schema package's interfaces."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:49
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:44
# 569439167bc74bd3b542d0d022f22c7f
# b8a090b09b944e1aa330539e769730ba
msgid "Next, create a form instance, which is a class that groups an ordered collection of fields and actions. To do that, simply subclass Five's PageForm class, a wrapper to the formlib Form class to keep Zope 2 happy. Type the following code into a Python file inside your product:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:59
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:53
# a8119d99a544412495dd2ac4990be200
# e230102aef4c4a6b86d0db56d48895ab
msgid "You will also need to make use of Five's strange hybrid between Zope 2 and Zope 3 page templates:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:66
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:60
# dc8873510ec141198f0107cdafd9d37c
# a065b4b919294fc3a156c5e1c9c5cf41
msgid "The simplest way to define a collection of form fields is using the ``Fields`` constructor with the previous schema:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:79
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:73
# 6eb93dec1254403fa68bc5f714fa0a8a
# 761f05607b8a4eeda65cb4c5754dae3e
msgid "By inheriting from the ``PageForm`` class, the ``FeedbackForm`` class inherit functionality from formlib itself. By default, ``PageForm`` knows how to generate all the HTML that will make up of a finished form. But in order to do this, formlib needs to know what fields are wanted. This is done by providing the form\\_fields attribute. The ``Fields`` constructor is a formlib helper class that generates the appropriate field items from any Zope 3 schema (in this case, the schema interface defined above)."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:88
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:82
# e51ae8ec14be4e5bbf82f57ba9dbb5bf
# 8d016d2db0fe48fbb1fe7aa2fa872ff2
msgid "In order to provide a complete form, you need to specify the action to perform when the \"submit\" button of the form (or any other indicated) is activated. To define the action, use the ``form.action`` decorator with a handler function for the submitted data. More on actions later."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:120
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:113
# fd84e42fef814bb6a6367ff0e026bfed
# 232e8490db464d69b3f3d1c576c22d5b
msgid "This is where the real work takes place. In this example, the ``feedback_result.pt`` page template is rendered and returned. All the view's attributes will be available inside this template, which will be introduced later."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:125
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:118
# 87aedf5901c64911abeed29ad8a0eb46
# c8be14642f3d4b77b26c25bc87435740
msgid "An example result form is:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:145
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:138
# 0a764ec00a3a4cc28440a4e24257969a
# 66c8b7005e7340d8942d849bdd471bcd
msgid "zope.formlib already includes a default general page form template, with the fields labels, the widgets structures and the submit buttons, so you only have to register your form page with the appropiate ZCML snippet in order to make it accesible from a browser. Assuming you've placed your code into a file named ``browser.py``:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:161
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:153
# 5285cc54536d4fdaad10329d28e03de8
# c17a0455c1f44ed7ae6b72ea674e5c52
msgid "Let's explain what this ZCML snippet means:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:163
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:155
# 5f5a4bc2b6da4cfbbc36bfe9a99933b8
# 16d655af73e54f1995e8051e48bd0612
msgid "The ``for`` attribute indicates the class or interface this view will be available for; in this case, it will be shown only from the root of a Plone site. To see the interfaces provided by a certain object, fire up the ZMI, navigate up to your object and check the Interfaces tab."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:168
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:160
# a1b1160e68fb445cbedae0d96070aeb0
# d0d2e2127b6e4b96b9d9d017f8524331
msgid "The ``name`` attribute sets the name of the view, so the form will be available from a URL with the form ``http://<plone-site>/feedback``."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:171
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:162
# bdea7f1bb08a464a81d7478a9f714d0c
# ea8d7e35facd4e6aa6038868979edcb9
msgid "The ``class`` attribute indicates the view class responsible for displaying the page form, in this case, the FeedbackForm class inside the ``browser.py`` file."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:174
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:165
# 934555f1347843749355cf5859f609a9
# bb8439229f9e455ca1124c2fc46fde07
msgid "The ``permission`` attribute specify the permission needed to access the page."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:177
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:168
# 30198928ca92471fa46290c33ef0e3e8
# d422066ced0141b8ad17e3acda3deaa2
msgid "Among the most used permissions you can find:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:180
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:170
# 31237e4a2686413ba73b49dc57deec93
# 9020c4508a45402eb1a77318eb5d5950
msgid "``zope.Public`` - no restrictions, available to everyone."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:181
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:171
# 84b5b4066d7c4188a128b20f3c71e1c7
# 1c60824591db44bd93b856255bc56216
msgid "``zope.View`` - permission to view this component."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:182
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:172
# 857a90ab46014b939cb48d0bb295f50f
# 0eb38e55b8fa40e0bea577d281afa173
msgid "``zope.ManageContent`` - add, edit and delete content objects."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:184
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:174
# 3664e3f61a8542efa397b8d97701c1b8
# 80589b8b11cd4826906d0a8050d0f654
msgid "Note: Keen readers will notice the special name for configuring the new view component, browser:page. This XML tag actually employs an XML namespace prefix which needs to be defined. Normally this is added right onto the configure tag like this:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:197
# fe4298453e7242e096879e9fd55e01ee
msgid "And that's all! Here's how the form and result pages will look like:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:200
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:186
# 6086dbb62c8e4715a1b46ba0370384d0
# 7407e04640234cda979d1564565c8e30
msgid "**Contact form:**"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:204
# 54b58579808541428222f8d99e0308fc
msgid "**Result page:**"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:3
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:2
# 7d45af239e834f57a76d944b62e50309
# 8af09489553741649f400cf807befe02
msgid "Adding validation"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:8
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:6
# f67855529f41474ea3fd314bcf4cb132
# bbe0017bae88466da6bbb2624f3a5c61
msgid "Server-side form validation is vital to ensure data sanity and protect our site from malicious users."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:13
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:10
# a0e518ad6ef84c5980c6e8516cf3c71c
# cbbb41706948421bbfc19ecd171f7c4f
msgid "Field validation"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:15
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:12
# a2b98cf43d304aafb1b0447c27604be1
# e578a8ace6824d70bf6181cb6204dcb4
msgid "Once you've understood the \"hello form\", let's move onto a more advanced topic: validation."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:18
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:15
# e8c6c8e7974d41f1bdf058085cdbea4b
# cb8408aecf7942d38370df4c373b0bdc
msgid "The easiest way to manage validation in a formlib-based form is to specify the validation rules in our schema. Actually, you've already implemented some validation: the customer, subject and message fields are required. If you leave the *subject* field empty, for example, and click the *send* button, a pretty red error message will show up asking you to fill that field."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:25
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:22
# 0bc6107e42f5480a8616f9ed9ec2eac4
# 5a80b6137e124349a2a667ac2e5fbfe9
msgid "Let's add email validation to the *customer* field using the constraint keyword argument fot that attribute in our schema. For simplicity, the mail address checker that comes with the CMFDefault utilities toolbox will be used in this example, althought you could also use your own regular expression checking. The constraint argument must be a callable that returns ``True`` if the value submitted is valid, or raise an exception inheriting from ``zope.schema.ValidationError``, whose docstring will be used in the error message."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:68
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:64
# 9cc6736f0595407095b41a87f747a257
# dc22c73108a64f03bf37a6125d44ee79
msgid "Now, if you type an invalid address into the *customer* field and click *send*, a kind and colorful error message will be displayed:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:73
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:71
# fc8107826ab54a8c9d16ecc0444cb39e
# e047c9c4afe249a198b15306b05468e7
msgid "That was too easy, wasn't it?"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:76
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:74
# 73e274beffda48658b518d705d8c2e6f
# df6781815b574b48a88221f815edf04e
msgid "Invariants validation"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:78
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:76
# b1a14a545ab54ba985987ad6f6c15c9d
# 48b54c48ca2647a390ddfa55ba2470f6
msgid "*zope.formlib* also supports the validation of schema invariants, e.g. the min value entered must be smaller than the max value. In this example the form will be extended to provide a set of predefined subjects and a field named *other* which must be filled when selecting the the *Other* option in the subject select dropdown. It's easier to explain it in Python than in English:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:119
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:117
# 4581315552304481aeed45a1c3a5905a
# b8f4cb93cc6f4d1487ff86f1a6dbe9c6
msgid "Here, the *subject* field type has been set to *Choice*, and the list of available values has been indicated to be obtained from the *Available Subjects* vocabulary, a named utility which will be defined shortly."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:124
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:121
# a400d8d36e804acaac8a6b4f6d539941
# 45f1b9cf69d54a718d33b846a7919f94
msgid "The form will call all the *invariant*-decorated functions of the schema upon validation and catch any raised *Invalid* exceptions."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:127
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:124
# fc71b69946b54d99851e18b1ac6aaa39
# d6fa7487bb874556b0aa06f75f161697
msgid "You still need to define the *Available Subjects* vocabulary:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:142
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:139
# f407a0c03f884a9c95bd4088acf9173f
# ddbc2bb19ca649f39567adb63867d8cf
msgid "and register it as a named utility using ZCML in the ``configure.zcml`` file:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:156
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:153
# 21f0bd8e66fa48e4bbdc757e8f0e90be
# 6f1ed481cb8e4510a41e6cbbdfa15bbf
msgid "Restart your Zope instance for the changes to take effect and test your new form. You'll see something similar to this:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:161
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:160
# d5fa5202c84f46fca82c51f08cfd28fc
# 9cc99f9879d649a38f5fc86ba388aa0e
msgid "Unfortunately, invariant errors descriptions are not shown in the default template."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:3
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:2
# bd84bfa4b20d4ad5be61692c8100e14d
# 3e95e7bb3f454b468e52db0fc3708eee
msgid "Why learn how to use a new framework?"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:7
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:6
# a21bdbbdf0c84a7d9e68fd26df6d480a
# 2e92799de1fe443aaafe75488c4b4ab2
msgid "You may be wondering why should you learn how to use a new forms framework if you already know how to use the CMF Form Controller Tool (Form Controller)."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:12
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:9
# e6b27caf6e174768b0831989090ed6a7
# 92288e0adb3e43319e03351a9633eff3
msgid "Why should you use a forms framework at all? You could always write your own HTML form snippets and use the request dictionary to retrieve and handle data."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:16
# 3e2f6592cde6482da12e0bd4dd4698b2
msgid "The reason is simple: you'll end up writing a lot of boilerplate code to collect, validate and build the response. It would be better if you could just define the fields and metadata of the form and re-use a set of base classes to do the repetitive work behind the scenes, i.e., a forms framework."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:22
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:19
# 270d289ca80f488abb841e8f24adaa8a
# e06a1fa0d7c748599be403e01a629b9f
msgid "One of these frameworks is the Form Controller Tool, which is not bad, but has some disadvantages over formlib:"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:26
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:22
# 5e6a6248991e43a8b9fc366aedc88471
# d2a3db070f884c47b94053938c7452a5
msgid "First, the Form Controller spreads the form logic across several files so it can be hard to follow it."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:28
# b0ef6b8bdb114906b32dadf0f98310ac
msgid "Second, the From Controller doesn't handle the creation and display of the widgets, so you have to create them manually, what could become *especially* unmantainable when using choice-type fields."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:32
# 1c4047d12c4c414e8bef3a60630468b0
msgid "Last, the Form Controller doesn't work with Zope 3 schema interfaces nor views. Using a Zope 3 schema can help you creating add and edit forms."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:36
# 6c3cef69022843a584ca4b9bb4ab8b81
msgid "However, the Form Controller can be useful and even preferable when you need to implement a complex page flow, or if you want to customize Plone forms that use it; e.g. the ''Send this page to someone'' form."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:41
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:35
# 293ef69fdf5d4afb9cf665e5e0689e18
# ee363c9875ea46bca3c82a1906efba9f
msgid "Beginning with Zope 2.9.3 (Plone 2.5) zope.formlib is being distributed with Zope 2. Five >= 1.4 is required to make use of this Zope 3 package."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:46
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:39
# 281ecbb7b8014b86ad694b274998db16
# 9075cbbe5f0b425cb9bc2bb27c79925f
msgid "Note: Where do I place the code?"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:48
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:41
# df1f0edf88af453a8b9e7e7b3ca58ba9
# 2b79b8df6618440588e2a9ded53093ef
msgid "You can place the code wherever you want: all in the same file, each class in a file, in several directories, utilities in a ``utilities.py`` file, etc. Just keep in mind two things:"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:53
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:45
# db112b841a834e99a48c78398c86a21e
# 5c349ebc74fe4bfa859bc946be3c4b56
msgid "If you write several pieces of code (functions, classes) in separate files, remember to import them whenever you use them, as you would do in any other Python program."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:56
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:48
# 38f4930dd90740329fd92b8c795f7190
# 3ab8b97570334ea785860fee747066f4
msgid "The ZCML statements have to be placed into a file called ``configure.zcml`` in the root of your package, or in any other file included from it."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:60
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:52
# 141447a769ce49bf8744a36aaa1c22dd
# b12ff6fcd2564e47a91c84277cb73b5e
msgid "Said that, the author reccommends putting all the Python code in a file named ``browser.py`` in this tutorial to avoid confusion."
msgstr ""

#: ../../reference_manuals/old/forms/index.rst:3
# 9506d9bd536344e086c119b76e5d6d8a
msgid "zope.formlib"
msgstr ""

#: ../../reference_manuals/old/forms/index.rst:7
# fdb27651251542f0bd5de54ae9caf521
msgid "How to use zope.formlib library to create forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:2
# 12e4482497114fdbb90d8ba271e11636
msgid "Using CMFFormController"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:6
# 0222ca6357554f90a4e299318f1ee008
msgid "How to create and validate forms in Plone using its CMFFormController. Be sure to also read the CMFFormController tutorial in the Products/CMFFormController/documentation directory, included with your copy of Plone. This how-to is also available in Products/CMFFormController/www/ as the file docs.stx, included with Plone."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:12
# 7e3026f7d1004ae182a0ce83ad609469
msgid "The CMFFormController package helps developers by simplifying the process of validating forms. It also makes it easier for site administrators to override some of the behavior of packages without modifying code, making it easier to upgrade packages without disturbing the modifications."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:18
# 3585e153330144859e584e184edb4726
msgid "How it works:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:20
# 94b9ab581b6c4e678d2fa389558e1d39
msgid "Developers associate a set of default variables for their Page Templates. These variables control the validation that takes place after the form is submitted and the actions that occur after validation. The variables are stored on the filesystem in the .metadata properties file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:25
# 0ca7121bacc943bd9d84375e469c0965
msgid "Site administrators can override the default validations and actions using the ZMI. Once a set of validations or actions has been specified in the ZMI, the default validations and actions will be ignored."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:31
# 0a6267f78cf341e6b065d88291b0234d
msgid "Forms"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:33
# 4f366504c8a1424996cfa9a5b94a3087
msgid "To take advantage of CMFFormController, you need to use Controller Page Templates rather than ordinary Page Templates. Controller Page Templates act just like ordinary Page Templates, but they do some extra work when they are viewed."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:38
# ef578c1f3330470a9685924732e1c3e8
msgid "Here is a basic form that uses CMFFormController:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:54
# c5cf1d7311d049cebfa439b92e3eabcf
msgid "Let's take a look."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:56
# 45cbef8521714dc3a38366ee68fbbbf2
msgid "First, we note that the form is set up to submit to itself. *Forms must submit to themselves.*"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:58
# 47bb4bd5ffec40f8b0234a1c34662839
msgid "Second, we see the special hidden variable ``form.submitted``. The controlled page template checks the REQUEST for form.submitted to see if the form has been submitted or if, instead, it has just been accessed, e.g. via a link. *Forms must contain the hidden variable ``form.submitted``*"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:63
# 05d2d3c05720482ab25d8fb7cd3b21f2
msgid "At the beginning of the form we set the variable errors. The errors dictionary comes from the state object which is passed in the template options. The state object lets validators and scripts pass information to each other and to forms. For our purposes, the most important information is the errors dictionary, which has entries of the form ``{field_name:error_message}``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:70
# 0c8fcbac8bc24aa384bb191e3e78dcf6
msgid "Before we can use this form we need to specify the validators that will be used to check the form values, and we need to specify the action that will occur after validation."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:75
# 4d3695357619425390130a967fa024d5
msgid "Specifying Validators"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:78
# cf43ad470bdc423d9271b3dfec52e590
msgid "There are two basic ways to specify a form's validators."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:80
# 0b656e160d3f42ef9b26140aad79c5ac
msgid "You can specify the validators in the .metadata properties for filesystem-based Controller Page Templates."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:82
# 8747474b8c4a40d8852e46568f7437d5
msgid "You can specify the validators via the ZMI (or programmatically). These values will be stored in the ZODB as attributes of the ``portal_form_controller`` object."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:86
# 8eb5f45a310b436bb188c12a694ae867
msgid "If you specify validators in both places, the validators specified in the ZMI will take precedence over those specified in the .metadata file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:90
# efc614db133f47329a236daa77ae514b
msgid "Specifying Validators on the Filesystem"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:92
# c0b484e162b54992909b47f6ec34a48a
msgid "You can specify validators on the filesystem using an objects .metadata properties file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:95
# e4197689cecf46bda5071acf1cede260
msgid "To create a .metadata file, simply create a file with the same name as your page template, and then append .metadata to the end of the name of the file. For instance, you might have a Controller Page Template called ``document_edit_form.cpt``. The properties for that file would be stored in a file called ``document_edit_form.cpt.metadata``"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:101
# a0ee3ab61892464e8c4a75398cc1ffdc
msgid "The .metadata file uses the standard python ConfigParser syntax. The validator section of the .metadata file would look like:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:109
# ba0a7607731a46a1abe4223208e7aca2
msgid "The validation scripts ``validate_script1`` and ``validate_script2`` will be called in order."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:113
# 0a68c7fb70ac479187a05839e4fa4ea6
msgid "Type-Specific Validators"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:115
# ba2ec33265d34c8281928e8b90f9bc77
msgid "Suppose you want different validators to be called, depending on the type of context the form has."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:118
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:277
# b361b0051daf4a1b9a3c63f42d680552
# 4a8fed51e7f54c239b160fc5daa0f5d7
msgid "You can do so as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:126
# 90d2a1e0bb5149d897002f8a62b13453
msgid "In the above example, if the context is a Document object, ``validate_script2`` will be called for validation; for everything else, only ``validate_script1`` will be called."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:130
# 7e034a708ad743208787c501d1d691eb
msgid "Note that the order in which the variables are specified does not matter; the type-specific validators override non-specific validators if both are applicable."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:135
# 80b9faaa15df443cac82b828a5a9eed1
msgid "Button-Specific Validators"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:137
# ba3b7f4e48da4b07a0b62cffd7be3b3e
msgid "Suppose instead that you have two different buttons on your form, and you want different validation sequences to occur depending on which button is pressed. You can accomplish this as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:141
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:298
# 7282e9c0920243a0bf9fd8a36d850553
# 4fd9f34f82d04265b26fde4182b64521
msgid "First, name your buttons button1 and button2:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:152
# 1ec7803e3b9e463e98a12304aab11b61
msgid "Next, specify validators in the .metadata file for button1 and for button2:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:161
# d4e2108bc50e46dd9a8ef2ee39a37736
msgid "Note the presence of the ``..``. This is a placeholder for a type specifier. You could further specify that ``validate_script5`` is called if ``button2`` is pressed and the context is a Document by adding:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:170
# 605626fe0fed493a9c87c22d5b2dbe97
msgid "Remember that button specific validators take precedence over non-specific validators."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:174
# 4788168fdbdc4c96b582e912c3d9b923
msgid "Specifying Validators in the ZMI"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:176
# 03363b4e3658455ca885671403f08046
msgid "If you look at a Controller Page Template in the ZMI, you will see that it looks just like an ordinary Page Template with two extra tabs, Validation and Actions. Click on the Validation tab."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:180
# f0676ec545f24b5ca4cffd2b9d5fff51
msgid "The Validation tab shows all the validators for the page template in question. You can specify validators with the same kind of specialization options as above via a web form."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:184
# fd8a9647e9a8403582a3210fdfb8e393
msgid "The validator information for all forms is stored in the ``portal_form_controller`` tool in your portal. This means that you can specify validators for filesystem objects with no problems, since the information is persisted in the ZODB. Note that the validator information is bound to the form's Id, so all forms with the same Id use the same validators. This keeps things simple when you have multiple skins:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:192
# 0da5784e1e67454fa7fbaeb590ffa1b1
msgid "*Forms with the same Id use the same validators, no matter what skin they are in.*"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:195
# d00d6bde1ac646d59e1c117d44029711
msgid "When a form is submitted, it first checks to see if there are any applicable validators that have been specified via the ZMI. If it finds one, it uses it. If it does not find a validator via the ZMI, it then checks the REQUEST object to see if validators have been specified in hidden variables. As a result, validators specified in the ZMI take precedence over those specified in forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:203
# deef52074ef945549f3b477bb7fa01eb
msgid "Specifying Validators Programmatically"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:205
# 5f0a0641a79343d1ad968655057147a1
msgid "The portal's ``portal_form_controller`` tool has methods you can use to specify the validators for a given ControllerPageTemplate. The API is as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:216
# b87c68d1af0a4cd99e3b060ba346a7bb
msgid "Here ``id`` is the Id of the ControllerPageTemplate, ``context_type`` is the class name for the class of the context object, ``button`` is the name of the button pressed, and validators is a comma-delimited string or a list of strings. If you want a validator to act for any class, set context\\_type to None. Similarly, you want a validator to act for any button, set button to None."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:224
# 6c9d555eb7334bcab8b430799bb31f55
msgid "Specifying Actions"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:226
# 847d6255fa4d4271a4f9e7d556846cd4
msgid "The sequence of validators that is executed returns a status in the state object. The default status is ``success``, i.e. if no validators are executed, the status will be ``success``. If a validator encounters an error, it will typically set the status to ``failure``. The next thing we need to do in your form is to specify what happens when a given status is returned."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:233
# 0c9bf6f8e9814f59816acd71ed78b8a3
msgid "As with validators, there are two basic ways to specify a form's actions."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:236
# bb6e6a702f4949b0af9ddc78a91c95a6
msgid "You can specify the actions in the .metadata properties for filesystem-based Controller Page Templates and Controller Python Scripts."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:239
# c2cffec8bddd48a785b5813c410e045f
msgid "You can specify the actions via the ZMI (or programmatically). These values will be stored in the ZODB as attributes of the ``portal_form_controller`` object."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:243
# d1dd48b3859d45f09bdd34ae98f5155d
msgid "If you specify actions in both places, the actions specified in the ZMI will take precedence over those specified in the form."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:247
# b123edfee1e54ac6970e91ffa3b1dd19
msgid "Specifying Actions on the Filesystem"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:249
# 192e9dc2f2e54525ac1420667400d59a
msgid "You can specify actions on the filesystem using an objects .metadata properties file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:252
# 96b047edb4b646b2ab8b90049a436568
msgid "Actions are stored in the same .metadata file as the validators. The syntax for the actions section of your file would look like:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:260
# 6bbccaaab3f84a62b042cf8dbfa94069
msgid "In the above example, when the form is submitted and the validation scripts return a status of ``success``, the ``traverse_to`` action is called with the argument ``string:script1``, i.e. if the form data is valid, we run the script ``script1``. Alternatively, we could specify ``action.success = redirect_to:string:http://my_url_here``, which would cause the browser to be redirected to ``http://my_url_here``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:267
# 3378b678189b4587b100f1291b6d4e67
msgid "The default action for the ``failure`` status is to reload the current form. The form will have access to all the error messages, via the state object in its options."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:272
# 6b937f35a371444da2c28a47dff51cc1
msgid "Type-Specific Actions"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:274
# d241e14b25774fee9a50b9905f1542f4
msgid "Suppose you want different actions to occur depending on the type of context the form has."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:285
# 5464a0ecd9c44e088faf191a3dbe5d0b
msgid "In the above example, if the context is a Document object, document\\_script will be executed upon successful validation; for everything else, script1 will be executed. Note that the order in which the variables are specified does not matter; the type-specific actions will override non-specific actions if both are applicable."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:292
# 8920a04ae8b244078d27696d975c66d1
msgid "Button-Specific Actions"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:294
# fc4894608eb64bd98352f08b10704a49
msgid "Suppose instead that you have two different buttons on your form, and you want different actions to occur depending on which button is pressed. You can accomplish this as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:309
# cbc30aaca6da482bbac6d06afe1e481f
msgid "Next, specify actionss for button1 and for button2:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:317
# 32932bcc6ccd4ddd97e6f3bac6be1dbe
msgid "Note the presence of the ``..``. This is a placeholder for a type specifier. You could further specify that ``document_script2`` is called if button2 is pressed and the context is a Document by adding:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:327
# 1f356f67945a4c03a9572439d9be6d84
msgid "Specifying Actions in the ZMI"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:329
# 511d4e84e2a24c1fa8abedb09a06f00a
msgid "If you look at a Controller Page Template in the ZMI, you will see that it looks just like an ordinary Page Template with two extra tabs, Validation and Actions. Click on the Actions tab."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:333
# ffa77acfe74541b987388eb0978c9d3a
msgid "The Actions tab shows all the actions for the page template in question. You can specify actions with the same kind of specialization options as above via a web form."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:337
# c3071d322b8f4cdd937ee8a62198bce0
msgid "The action information for all forms is stored in the ``portal_form_controller`` tool in your portal. This means that you can specify actions for filesystem objects with no problems, since the information is persisted in the ZODB. Note that the action information is bound to the form's Id, so all forms with the same Id use the same actions. This keeps things simple when you have multiple skins: forms with the same Id use the same actions, no matter what skin they are in."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:345
# 6322e0a36eb14f02855664ed9326fda2
msgid "When a form is submitted, it first checks to see if there are any applicable actions that have been specified via the ZMI. If it finds one, it uses it. If it does not find an action via the ZMI, it then checks the REQUEST object to see if actions have been specified in hidden variables. As a result, actions specified in the ZMI take precedence over those specified in forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:353
# eb8512b5d62b4fccb80f847dca41fc5b
msgid "Specifying Actions Programmatically"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:355
# 6d3fc7fd037d4be8ac05249c35374ad8
msgid "The portal's ``portal_form_controller`` tool has methods you can use to specify the actions for a given ControllerPageTemplate. The API is as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:368
# 3077a8e73d8d4462b2eb4a4941c880d7
msgid "Here ``id`` is the Id of the ControllerPageTemplate, ``status`` is the status for which the action will be executed, ``context_type`` is the class name for the class of the context object, ``button`` is the name of the button pressed, ``action_type`` is the type of action that will occur, and ``args`` is a string (typically a TALES expression) that will be passed to the action. If you want an action to be executed for any class, set context\\_type to None. Similarly, you want an action to be executed for any button, set button to None."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:378
# fe2fa83830e3407fa3dfda485649b1ea
msgid "Validation Scripts"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:380
# 0520d5ab361e4cb5a29e218786023ee0
msgid "When writing validation scripts, use Controller Validators instead of Python Scripts. Controller Validators are just like ordinary Scripts with the addition of a ZMI Actions tab. On the file system, Controller Validators use the extension .vpy rather than .py."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:385
# 72f0ce8363e04aef927bc87a7f36860e
msgid "Let's take a look at a basic validation script that tests the REQUEST value ``n`` to see if it is an integer:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:404
# 1e4d20fb2955445aa6238c4b730f0a81
msgid "The first thing to note is that Controller Validators have a built-in state object called ``state``. This state object (of class ControllerState) contains basic information about what has happened during the validation chain."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:409
# 8063589d7358426daa9372bd54fb0f44
msgid "The state object has a ``status`` attribute which contains the current validation status. The initial status is ``success``. If errors are detected by validators, they set the status to something else, typically ``failure``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:414
# 31821491ccde4b569b6b29b8f53a754d
msgid "The state object also stores errors that have been detected. The ``setError`` method is used to set an error message for a particular variable. The setError method has the optional ``new_status`` argument that can be used to both set an error message as well as to update the status. You can see if an error message has already been stored for a particular variable by calling ``state.getError(variable_name)``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:421
# 19a7b6f461324d66b00dfda0aa1ff950
msgid "The set method lets you set multiple attributes of the state object all at once, e.g.:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:428
# ab23155f6c3f4dd0adb010b2dad36f00
msgid "You can also pass keyword arguments to the state object via the set method. These arguments will get passed along by the action. The ``traverse_to`` action places these keyword arguments in the REQUEST. The ``redirect_to`` action adds them to the query string of the URL to which it is redirecting."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:434
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:505
# 64a4cdbb3dc14bbf98bbea9184e7cbef
# 0e2c9f34b60a46feaa29bbddb08cd9ae
msgid "Finally, we return the state object."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:436
# 1ed08291ff754cf7bf163dde836d18fe
msgid "Another interesting example is email validation:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:458
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:81
# bf036780549a415d98fa8ff4b71fd35c
# f3b0423c5bec41b0b8a09c95c32cfd96
msgid "Scripts"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:460
# f6aa4f7ce7434d618ba28fe079283189
msgid "When writing scripts that do some processing after a validated form, you can use Controller Python Scripts instead of ordinary Python Scripts to let site managers override their actions via the ZMI. On the file system, Controller Python Scripts use the extension .cpy rather than .py. Note that Controller Validators and Controller Python Scripts differ in signficant ways. Be sure to use the appropriate script type (Controller Validator or Controller Python Script) and/or the appropriate file extension (.cpy or .vpy)."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:469
# 364c2f3ab55e4a3b8bee4c26b97ab085
msgid "Let's take a look at a basic script that sets a context attribute to the value ``n`` that is passed in via the 'REQUEST':"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:485
# 7187f30430b54dc1b960bec698f5bd9e
msgid "Note that you will usually want to use the ``traverse_to`` action to call your script. This will ensure that form variables set in the REQUEST object are available to your script."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:489
# 0671ce0cf33b419cb1e354a38f235ec2
msgid "This script sets its action to redirect to the relative url ``view`` for the current context object. The status has not been set, so it is the default status, ``success``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:493
# 19a12d00cd554251b366e160dacda56c
msgid "The ``state.setNextAction`` directive above is analogous to having the following line in your .metadata file:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:501
# 4a66e9bf53634062a79707a4a3507427
msgid "As with the .metadata file, the default action specified in the script can be overridden via the ZMI. This allows site managers to override post-script actions without having to customize your code."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:508
# cb31f740e0544e148d29229624fe35e2
msgid "Validation for Scripts"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:510
# 1004c2cf4c2f4548a88721f386420033
msgid "Having separate validation scripts typically means that validation is moved out of scripts. This simplifies scripts, but means that it is possible to call them directly with invalid data. We can prevent this problem by adding validators to scripts. Controller Python Scripts use the same ZMI and/or .metadata file mechanisms for adding validators as do Controller Page Templates."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:517
# 13bd46d5518a4ba98af33bae43f09f42
msgid "Each time a validator is called, it logs the call in the state object. Validation is smart enough that if a validator is called by a form, it will not be called again by the script."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:521
# 5461eae7e77a4e98b0e0066050392d19
msgid "Note that if you associate validators with a script, you will need to set a sensible ``failure`` status action, since scripts do not set such an action by default. You may wish to define a different failure status for failures that occur within your script, e.g. ``script_failure``. Then you can specify a behavior for failures that occur as a result of invalid parameters coming in and for failures that occur within the script."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:183
# 8dfb2dba55454da78da2cf3573d72993
msgid "And that's all! Here's how the form and result pages will look like:\\ ** **"
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:192
# edccbf40375e4b29b824a03951eec5d6
msgid "**Result page**:"
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:11
# b1484f37a2634b9d9a43be98595bebaa
msgid "*plone.app.form*\\ provides a handy default template named ``pageform.pt`` which integrates well with the default Plone skin, but you might need to customize it or write your own one."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:178
# 98120a837b6242338f74b689e1a9b79f
msgid "Form radio buttons"
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:13
# 9b948072b483460c94594e46c6406f67
msgid "The reason is simple: you’ll end up writing a lot of boilerplate code to collect, validate and build the response. It would be better if you could just define the fields and metadata of the form and re-use a set of base classes to do the repetitive work behind the scenes, i.e., a forms framework."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:24
# 4622a750f4a9418ba12633763d9463dc
msgid "Second, the From Controller doesn’t handle the creation and display of the widgets, so you have to create them manually, what could become *especially* unmantainable when using choice-type fields."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:27
# 2c4091bc71194530bb30f3a5317e1a1f
msgid "Last, the Form Controller doesn’t work with Zope 3 schema interfaces nor views. Using a Zope 3 schema can help you creating add and edit forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:31
# 0d5531b717634469b89fa1fa2335833e
msgid "However, the Form Controller can be useful and even preferable when you need to implement a complex page flow, or if you want to customize Plone forms that use it; e.g. the ‘’Send this page to someone’’ form."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:3
# d508f582394649e5b2bb6c378a1dac75
msgid "Content types"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:5
# eb9a205a0d184b21830ebbe12ba40fc2
msgid "Plone is a content management system (CMS) built on top of the Zope Content Management Framework (CMF)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:8
# a4f0f43051d24e85b4d0fa16a209320a
msgid "As such, one of the core features is the ability to add various types of content objects, such as:"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:11
# 01faceac07144f569c424da43a9899d2
msgid "Folder"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:12
#: ../../reference_manuals/old/plone_3_theming/index.rst:141
# 79405cee8ccb4d36809fb9ab83777efe
# 30a83e4333854459ae38bd2c57687fb7
msgid "Page"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:13
# 273cac0d2b7d4368b71a9f2ca894f705
msgid "Image"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:14
# 30a921eacb6e4b168d58f9111243d0ab
msgid "File"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:16
# 930a786cfcf0410ca8d5a0fe4262c6e7
msgid "Early implementations of content types in Plone were built exclusively with the Zope CMF. Since then, two other significant frameworks have come along to advance the state of the art: **Archetypes** and **Dexterity**."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:21
# f62db1972ce743c99612d7ac8fcbfd62
msgid "This document aims to provide \"top level\" perspective for those not familiar with Plone technology. And what follows is a description of each technology along with information about the version of Plone it works with."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:26
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:18
# fb970df15e134e4bb99e15e91004969a
# 928b10169fda4505b9440f43f091d1e9
msgid "CMF"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:28
# 33602dd69a9345439e043aa6b0486d66
msgid "Used to build the orginal content types from Plone 0.1 to 2.0."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:33
# f4799de05fe143f381c977130f3c7d64
msgid "Used to build the content types from versions 2.1 to present (4.1 at the time of this writing)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:37
# ba525a248a5440b39ad61055bc1c5459
msgid "Dexterity"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:39
# 4cb243d1d22f4ef9a6096c74c3674f11
msgid "Came along around the time of Plone 3 as an alternative to Archetypes. Will likely replace AT as the default content type technology in a future release of Plone (hard to say when, but if \"Plone 6\" means anything to you, then that is when it *might* happen.)"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:2
# 7506b62a3e7f4a6081e38e19609548af
msgid "Zope 2 vs. Zope 3 practices"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:4
# 091206b8e77342cebe616a4fb8c5cbd2
msgid "Over the years Plone has used many, many different technologies to deliver its award-winning CMS to the masses."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:7
# 1a0881056b3c44478cb2e520d0fbafe3
msgid "You may often hear of a particular technology being referred to as \"old style\" or \"new style\"."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:10
# ffb2252c833d4e74b694d4595319694f
msgid "This section aims to give a cursory overview of all of Plone technologies, particularly with regard to their categorization as \"old style\" or \"new style\"."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:15
# 22d793c0618d480592911853ec6b8ad3
msgid "This section does not aim to tell you which technology to choose over another; and it is certainly not a definitive resource for what is \"old\" or \"new\" in Plone. It only aims to clear up confusion with regard to the common use of such terminology."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:22
# cd029401bbdf453dbe367aefcaf68edf
msgid "Also please note that while \"old\" generally refers to Zope 2 before the ZTK existed and \"new\" generally refers to the mixture of Zope 2 and ZTK technologies, there are no absolutes. You can apply the terms \"old\" and \"new\" to just about anything in Plone, and the terminology is always changing as Plone development advances."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:2
# 0e24a28ef12e44bd8b1319d37bbffe41
msgid "Packaging"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:4
# c2854ab99a284a7c8216c5ab16f82601
msgid "To understand Plone's packaging story you must first understand **both** the historic Zope2 add-on packaging story **and** the present day Python packaging story. It also doesn't hurt to understand the future of Python packaging."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:9
# c95f6103c7144bed8d38b0db1518b537
msgid "Zope2 products"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:11
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:11
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:20
# a841e58851ab4a42a93304b0211e96c7
# 1f76426d10254ef0bd16fe112953c757
# 25bfb206ce234c9485a01a68bd81bef0
msgid "*Old style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:13
# eda672014e0743bdaca56f34ee9056b3
msgid "Zope2 introduces the concept of \"products\" which are bundles of Python source code that live in a special \"products\" directory; Zope2 looks for these on startup and then registers them if they meet a certain set of criteria."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:17
# eb6bd1a15e4c48b5980932e6e29f5c54
msgid "The *specialized* creation and use of products in Zope2 has generally fallen out of favor, and given way to the use of *generic* Python packages, which are widely used by the rest of the Python community."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:22
# 93b0cf6a55ec4135b49b3539b6ed6bea
msgid "Python packages"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:24
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:30
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:40
# 6ce27fd3bcb94638a37d539a9fe0b544
# c7ae0b2bced1431aa699be963a0fb1db
# b54c3b93b219426ba17b84e8e1c9067d
msgid "*New style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:26
# 49c1c5f6eac9476a8d8de7783c2c8f1e
msgid "The Setuptools add-on module for Python introduces the concept of Python packages, called \"eggs\" (although recently, they are more and more being referred to as just packages to avoid any \"cuteness\" getting in the way of the concept.)"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:33
# 53ca6c8e30c143a5a46e720a8c158189
msgid "If the packaging story were over now, things would be simple; but life is never simple. What follows is an explanation of Setuptools vs. Distribute. Or if you will, old style (Setuptools) vs. new style (Distribute) within the new style of packaging (eggs)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:39
# 69ef253a70c84aeeb2f6274c3e6bc9cd
msgid "Setuptools"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:41
# 6fa0da25105a42bfae00f006403ef787
msgid "*Old style within new style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:43
# e508a8b42ee24396a1d2f84c9f1978eb
msgid "There are several important things you should know about Setuptools:"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:45
# 46f6dd742f464da98c2818f2675790cb
msgid "It's built on top of a core module called Distutils, but it itself is not part of the Python core."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:48
# f5833b227a6146ee94f3ad09e1fc6991
msgid "It was forked in 2009 into the Distribute project (based on a disagreement over frequency of releases, among other things)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:51
# 8d445b46771040af910f11a9f8ccf890
msgid "It continues to exist."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:53
# 9c0ae2898796469eb1b7d047c913a22a
msgid "Based on the above criteria, and what follows below about Distribute, you may sometimes (perhaps less frequently then in the case of products vs. packages) hear Setuptools referred to as \"old style\" and Distribute referred to as \"new style\". And even if you don't, being aware of the distinction will certainly help you understand \"new style\" packaging better."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:60
# 54a4150e58054067aeec7a4f2a683ab0
msgid "Distribute"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:62
# 0e3c5f51c8d6451dae130fd6492bd176
msgid "*New style within new style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:64
# 26fce0c0cfe9464e828c0f6da35d143e
msgid "Distribute is a fork of Setuptools. It is intended to \"get us through\" to the point where a better solution can be implemented within the Python core in the Distutils2 module which is currently in development (as of early 2011)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:68
# 6d525df649f640dfa29a685b9e577e46
msgid "Distribute is actively maintained, has frequent bug fixes and releases, and is the self-proclaimed \"new hotness\"."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:71
# 3ae02321a70e426f80109a87b8bb0ac3
msgid "And the \"new hotness\" part is no false promise. Using Distribute means you are using the newest Python packaging technology short of Distutils2. One of the promises of Distribute is using it will prepare you as gently as possible for the arrival of Distutils2."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:3
# 62befc89da1644c3a1f37c0a0caf3d91
msgid "Theming"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:5
# 7dd4e6c68d9d499f9c378414cd97569e
msgid "To understand Plone's theming story you must first understand the technology stack on which it is built (or not built)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:9
# 5098db6018d9417499c15ccdc6886f5a
msgid "Zope2"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:13
# 3a0fcab60ec14a7aa4f28a49a0b5cd57
msgid "Zope2 is the oldest portion of the stack. It offers technologies like ``Acquisition`` (among others) which facilitate the reuse of objects such as page templates amongst a website full of \"content\" objects."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:22
# 049ead8bc9f6496ca0cb46fd9bb897c6
msgid "Next came The Zope ``Content Management Framework`` (CMF); it offers technologies like file system directory views (FSDV) and skin layers (among others). The CMF allows people to manage their website's CSS, JavaScript and image resources on the filesystem, typically inside a \"skins\" directory."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:28
# eaed68120a534a33b2db5ed94f1ec264
msgid "ZTK"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:32
# 0edeab045eaa4a4a87b796ee13c436f4
msgid "Initially called Zope 3 (more or less), the ``Zope Toolkit`` (ZTK) is a set of reusable packages (including ``zope.component`` and ``zope.interface`` which provide the Zope Component Architecture) that bring a modern, scalable development environment to Plone."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:38
# f476299914c24f34a005b42e6b1c8ea6
msgid "Diazo"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:42
# e51fc3fc341b429387bf9b661ea03796
msgid "Born out of a desire to separate Python package code from website resources like CSS, JavaScript and images; Diazo (orginally called XDV) is a technology that maps Plone content to an XHTML template, based on an XML ruleset."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:2
# 2856b5bcaf9247998c994cb0c1de6789
msgid "Future Directions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:4
# b88fa71909cb46fa9c7795aa46f4f3c1
msgid "This reference manual outlines the current approach to Plone themes. But you may as well know now that there are other, perhaps simpler, approaches on the horizon."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:8
# b26178538e7042b1a74ce2f14b17677d
msgid "Plone theming is getting a bit complicated. So the Plone community, in its inimitable and energetic way, is already exploring different solutions to the “theme problem”."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:12
# f7bd376505564f64b31aeaa3febf2ff5
msgid "Things move fast. At the time of writing, some of the solutions listed below are probably not mature enough to use in earnest, particularly if you are just starting out. However, you might want to investigate them to see how they’re progressing:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:18
# 68c2fcd4ba384825ad2e61941245dfb0
msgid "Out of the Box Themes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:20
# d619c880fac946aa953ab032e113361a
msgid "A sprint and ongoing project to generate themes that will ship with out-of-the box Plone, and to brainstorm on other ways to improve the Plone theming story"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:24
# 8f552d2b282b4ca387cbd5531d3bd9ea
msgid "`http://www.openplans.org/projects/ootb-plone-themes/summary <http://www.openplans.org/projects/ootb-plone-themes/summary>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:2
# 06e155c0604843c09c55fa37d251280b
msgid "Through the Web or on the File System?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:4
# 13409322ed274c2f87bcf55e9f886cfd
msgid "How to decide whether to build your theme through the web or on the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:7
# ad26486b390c40c98105c66c6ef40737
msgid "Sooner or later with Plone you'll be faced with a decision. Plone is sufficiently flexible that there is often more that one way of doing things, and the conundrum is, usually, not *how* to do it, but *which way*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:12
# c3d0264d2c9540299b06a9274f2f9b4d
msgid "You can customize Plone Default through the web very easily - particularly the skin and the configuration building blocks; further sections of this manual will point you in the direction of the relevant places in the Zope Management Interface to do this. However, if you want to move these customizations to a new site, undertake quite extensive customizations, or build a completely new theme, then it is advisable to move your work to the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:20
# 3e8ebd312d274d3a8290f6efcb4671fd
msgid "In this case you will need to create an installable module (also known as a theme product or  egg). This can be a daunting prospect, but there are tools available to simplify this process, providing you with a ready-made package into which to drop all the elements of your theme building blocks. We explain these tools on the next few pages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:26
# a842277b9a404c7e89c8216e0d44f883
msgid "If you are just starting out, then it is a good idea to get familiar with the building blocks and techniques by working through the web. It isn't difficult to move what you've done to the file system later. Once you start rewiring or moving components around you'll find the file system a more convenient way to work."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:33
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:7
# 94c60ea4d2dd4ad098909ee01b525ff1
# e9b5706337f74c7fbeedc4a1624f9da4
# d87a570feb624a1bba4cb718567a827f
# f8f2af24495e41ecb2b90f7d62ff733b
# 06642079612f4701a3e48d01231988f7
# 2232edbbc5f24e3595d8e2e143811f45
# 15ce2ecc44af4056a5a0bbc2601fb1a8
# 1bbd77c5dbb744a5bea974fca9d5b9f1
# dbffc9022ad841efaa639efcb772e378
# f01ede25a6de491c97d6086407539022
# d781311ffdd14aea8257f795c07cf911
# cb1aea9482db40c2aa7e3d000c9f6409
msgid "Through the Web"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:36
#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:49
# 8b21a514c6d346978268d6d83ef3bea7
# 4298a36613c44e638e905c170d994546
msgid "Pros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:36
#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:49
# 0c9c1f3e4f6545f09c6f2480eff0a395
# bc29e3e67456428c977d370a0881a474
msgid "Cons"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:38
# 2a3f410a606f4e0a90778677c55244a1
msgid "Quick and easy"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:38
# ddd3d7f04dd9418db713f31f7dcb3ecb
msgid "Difficult to replicate or move from one site to another"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:40
# b7639f1cbbd54afcb2b373fd35cb567b
msgid "Results immediately visible"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:40
# 3228e4686d634524a7bd7da0c7084a93
msgid "Large customizations can get complicated"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:42
# acfaeec38fb84c5e9d6de74f1dfb7b36
msgid "Some customizations of components aren't possible (e.g. can't move viewlets between viewlet managers)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:46
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:22
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:17
# 310b38759f874c14ad4b3de9fda8ff7e
# 13410b808f014ebc80f2013b8b238903
# 9af57988864e43d5a6d8f2d7fa952766
msgid "On the File System"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:51
# 78f2eeb13c5f443db1030222cbbb7914
msgid "Portable and reusable"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:51
# 3d57c39d9483423fb5ef33cee9eee3fd
msgid "Steeper learning curve when you first start out"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:53
# cdbf6192a28f479d9b9b763bee5777dc
msgid "Complete flexibility, can write your own viewlets and portlets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:53
# 9d7d99e18f0c497c81bcc8d9cf168b52
msgid "Need access to the file system"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:55
# 29ef8927653b4a20a803b749a6bfda98
msgid "Bundles your changes up into your own theme / skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:55
# d87a2947d93e43568adf321b63d3d895
msgid "Will sometimes need to restart to see changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:2
# 39b60f3c26da4458b1289e9c5cc318cb
msgid "From Scratch or Based on Plone Default?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:4
# 4e564a0d523d4b029d326bcf7a7ccdb3
msgid "It is perfectly possible to build your own Plone theme completely from scratch, but you probably won't want to do this."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:8
# 7329d68fdc63477b92f82beba902b86e
msgid "Based on Plone Default?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:10
# fef157c695fc4c6da855d2d5e0f98769
msgid "In particular, the bells and whistles of the Plone editing interface are wrapped up as part of the out-of-the box Plone Default, and you'll probably want to keep these."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:14
# 077bde7bcc1b45bda4988ae5d3b4f697
msgid "The good news is that you can **base** your own theme on Plone Default and interweave your bits of templates, styles, scripts and components with what's already there. There are three ways of doing this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:18
# 3a44dfa64efa4fa693ec5d8d1b93ecd1
msgid "with the Skin building block you **customize**\\ the Plone Default bits (there's a neat way of doing this which ensures you leave the Plone Default theme completely intact)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:21
# 36ee1163eb344d11b2f3930130d2313b
msgid "with the Components building block you **build your own**, but you can **reuse** bits of the Plone Default components in the process"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:23
# 1867a9eb85104a278577ba2a2a167ccb
msgid "with the Configuration you simply **add new**\\ directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:25
# 5c1c1cef3bc34bb69587a15b27754826
msgid "There's more good news - the elements of a Plone theme are broken up into very small parts. Each one can be dealt with independently of the others, so you can home in on just the bits you want to change.The price of all this flexibility is that it is sometimes difficult to track down exactly which bit you want, and things can start to seem complicated. This manual should help with that."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:32
# 6d64ae238b5a498b900fd0ad930ed30c
msgid "You can change a great deal of the look and feel just by overwriting existing CSS styles, or by rewriting some of the existing style sheets. However, if you want to start moving page elements around or rewriting some of the XHTML, then you'll need to delve into the templates, components, and configuration in more detail."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:38
# a8fffc20f129483297525edbe224c5d8
msgid "In the end, you're likely to come up with a theme based on Plone Default (that is, based structurally, not necessarily visually). This will probably contain"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:42
# 7cb3d700491c4e7b9dce38b1ec0605b6
msgid "your own style sheet; or rewrites of some of the Plone CSS"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:43
# e0805b9ce2504eedb2e15fe17d96afcd
msgid "some rearrangement of page elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:44
# 97787a3980a049aab664507873e77aad
msgid "a few rewrites of some page elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:45
# 23513a756645443f807de6ae71d585ec
msgid "a few 'new' page elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:2
# 850992c0572944f3a59b268609265a07
msgid "Interfaces and why they matter"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:4
# 2e268b8ffd7247908a6febf1235eb363
msgid "Interfaces are a bit techie and something a non-developer would probably rather not think about. However, they are an important part of component wiring, so it is as well to know a bit about what they are and do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:9
# dd640b8bdf734061a146a382c291a024
msgid "Interfaces as Markers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:11
# c79191296e1e4c3a8db5d457f6a31b86
msgid "ZCML attributes often refer to interfaces rather than actual classes - for instance the example below wires up the presentation viewlet for content types that have the IATDocument interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:25
# 13f67f98fb524d978e473876c9aaaaec
msgid "In effect this is saying that the presentation viewlet is available for any content type which is ATDocument-like or behaves like an ATDocument. So, in this case, the interface is a marker."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:29
# 3476bc5809d348a1ba4858c4ced86065
msgid "The convenience of this is that a content type can have one (or more) interfaces, and several content types can share the same one. If you develop a new content type and mark it with the IATDocument interface, you can use this presentation viewlet with it - no extra wiring required."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:36
# 58ecb13f6f814747931175b72c4b6235
msgid "Components and Interfaces"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:38
# 16a3279f1e3f47ddafef799902a40ea6
msgid "Components themselves can be marked with an interface - the technical term is \"provides\". Note that in the presentation viewlet example, the viewlet manager is referred to by its interface, not its name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:46
# 25c2db04c89947a3b014641aec26206e
msgid "To track down the actual component, look in the configure.zcml file in the same directory as the interfaces. For instance, in plone/app/layout/viewlets/configure.zcml you'll see the interface has been wired up with a Python class to create a viewlet manager component:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:61
# 63db5518666d47ca86330d6ae82ab027
msgid "How to spot an interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:63
# f9412a8d06454186b05b10adabd10fa2
msgid "It is usually fairly easy to spot a reference to an interface. By convention, their names will be prefixed with an \"I\", and they will live in an interface or interfaces namespace. If you investigate interfaces.py or interface.py in any egg or product, you won't find very much code, but you'll often find useful information – effectively it is documentation about what a component providing (i.e. marked by) that interface should do. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:76
# 317e1b245ac642a4934c80f73260bdc7
msgid "If you've used the plone3\\_theme paster template, you'll find you have a ready-made interfaces.py file to which you can add your own interfaces if you need to create them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:2
# c4aae77227ce49fda5c8b9b052789cf4
msgid "Permission"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:4
# 7dda7bd072f4437b8f1afb66d974f184
msgid "The permission attribute can be used to restrict visibility of a component."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:7
# 29341d46088b4e91a495e93a2e271d42
msgid "When a user logs in to a site, they will be given a role ('manager' or 'editor' for instance). This role is, effectively, a set of permissions, giving them particular rights over particular aspects of the site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:11
# c9ff100de1894a00baa7e4f78fa07b45
msgid "To find out more about permissions consult the Understanding Permissions and Security Tutorial:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:14
# 8877dd34c9c546e7b62a2ae5d3c715d3
msgid "`http://plone.org/documentation/tutorial/understanding-permissions/ <http://plone.org/documentation/tutorial/understanding-permissions/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:16
# 85c92eadf0134dcaa9c57e5d30a96718
msgid "In the case of components, the permission attribute allows the site to decide whether a user has a right to see, or interact with a component. Most viewlets have the permission Zope2.View or Zope2.Public, which are permissions assigned to everyone, even anonymous visitors. However, look at the Lock Info viewlet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:32
# 6470d568576d43ba80fcd1aaef850f8a
msgid "By using cmf.ModifyPortalContent, this viewlet is restricted only to those who have the right to edit content (those who don't wouldn't be interested in whether an item was locked or not)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:36
# 0aefb9da50f946a1998266e592432cfb
msgid "The list of available permissions is buried rather deeply in the Five product which comes with your installation of Zope - look in permissions.zcml for the most up-to-date list."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:42
# 5b6fff9e7baa4cad9109522c47f92064
msgid "zope2.Public"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:44
# 437f7e52def348908f120be8b64c2680
msgid "Public, everyone can access"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:46
# 6211e108422247a09739389689099690
msgid "zope2.Private"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:48
# 3ba7b5f1d0204315afbcd0378f14246e
msgid "Private, only accessible from trusted code"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:50
# a650ad4052f9462188a421525da73be3
msgid "zope2.AccessContentsInformation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:52
# 8e28d5a78fd94ec7bad17f1624d849ac
msgid "Access contents information"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:54
# 7b33843fa0ea41f1bbfc9e8c48a35591
msgid "zope2.ChangeImagesFiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:56
# 7afb3bfe85bc4464a6daad132ea872f0
msgid "Change Images and Files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:58
# 40df1893ade846a4b47245055071b08c
msgid "zope2.ChangeConfig"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:60
# 418d37edcbbd40ac84daa6dae804597c
msgid "Change configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:62
# 8fafdaf19fd74eea9d1c61aa9619d5e1
msgid "zope2.ChangePermissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:64
# 30d74e2bcdf44d6cb5fc3e0c794abe58
msgid "Change permissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:66
# 4b145c42d7f54eab8bece7ca554c784f
msgid "zope2.CopyOrMove"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:68
# f6d83f41b4dc4cea8dd9087e142233d1
msgid "Copy or Move"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:70
# 8a4836a264a04ae3b9bb82586308478a
msgid "zope2.DefinePermissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:72
# 5028f55db413406b8c7bb01963320cfa
msgid "Define permissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:74
# 85323eb786c74a56bf8ab3d23c635dbd
msgid "zope2.DeleteObjects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:76
# 94d79683211641f9b82cc157382e6c73
msgid "Delete objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:78
# afe6a9ab3ce9408fac676ae1bc88ff5a
msgid "zope2.FTPAccess"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:80
# 5d9222eb07164252899d5a7b0a1cb828
msgid "FTP access"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:82
# fe178f66dbe3434383f65e70dc63ffd0
msgid "zope2.ImportExport"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:84
# b042ea0ead5e4dd98228bc3c75bd1534
msgid "Import/Export objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:86
# d34d8047d1bb4a0db87cf7d0fc9e358a
msgid "zope2.ManageProperties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:88
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:144
# bc5e0c3b537c4ef082de099acabf3600
# 87094dc5e641405096d471f568d5d4ff
msgid "Manage properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:90
# 49b08f4dc1ed4cdc8ce296e98f0058fc
msgid "zope2.ManageUsers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:92
# 0b74d65787f9413384e26bd1cd2a4fc2
msgid "Manage users"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:94
# 1787c6bf46654643a96541209444ac55
msgid "zope2.Undo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:96
# 56ac6d1077634327bca18d42b9aa2198
msgid "Undo changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:98
# 7bf56d5052fa4832b71419a0fe985e7d
msgid "zope2.View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:100
# e9ef0dae969a4225afef42df4c2b35fe
msgid "View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:102
# 91a62dfa7e8e4576bb7af281733fcfe2
msgid "zope2.ViewHistory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:104
# 5de6fc8d73ae4fb085a9263c8b522148
msgid "View History"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:106
# 7d368344e226492294a6fad8699c070a
msgid "zope2.ViewManagementScreens"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:108
# eb4de9db061b4ef49f2989775e2f3f8b
msgid "View management screens"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:110
# 1d73c7ace8c341908d57846c558b3312
msgid "zope2.WebDAVLock"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:112
# f88cef6156814549bb5f0ba763fe0de2
msgid "WebDAV Lock items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:114
# 0d4f37beb6aa4fe8afeaf987cfb577dc
msgid "zope2.WebDAVUnlock"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:116
# f011519f40c64aca8d9c9ed2348a0c08
msgid "WebDAV Unlock items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:118
# 1bcb155cad744e91bdc5beb3398873a7
msgid "zope2.WebDAVAccess"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:120
# 1737164513644a4b8ff4d6b398f527bd
msgid "WebDAV access"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:122
# 6d4a546d45994a088b42d52c1fe6f668
msgid "cmf.ListFolderContents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:124
# 9e5f6a0725e548ddbe04340197b8d838
msgid "List folder contents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:126
# 338fc0de41204ae0ab316a8ad380041a
msgid "cmf.ListUndoableChanges"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:128
# a21f014d8ebc4be982ce801d5e321627
msgid "List undoable changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:130
# 9035c7a4bb6d47cda17f56b6420f95a8
msgid "cmf.AccessInactivePortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:132
# 1b622f7d108e44a3bde1c26d026bc26b
msgid "Access inactive portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:134
# fa7dd82ac72c4cecae973eec41ba1ad0
msgid "cmf.ManagePortal"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:136
# a2f46a8fd92449a19ddb2640d04548e4
msgid "Manage portal"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:138
# 842a341de91d4e14a163c0e79c598153
msgid "cmf.ModifyPortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:140
# 2b948511b3b045248a9e757f3c20c84c
msgid "Modify portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:142
# 46121c360c12438ea7a13ab7b6365378
msgid "cmf.ManageProperties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:146
# 017b40b23d6e4a31b6d79616da7d4b92
msgid "cmf.ListPortalMembers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:148
# e3d7cbb721b74667bca2af6a6b19aa57
msgid "List portal members"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:150
# 1eb9a76747c943038095f3136aadd5db
msgid "cmf.AddPortalFolders"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:152
# 3a28539dbc7a49c7a72d9c7da626dff5
msgid "Add portal folders"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:154
# cc91e02b96e44e28bcb9bf1481658c89
msgid "cmf.AddPortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:156
# cc15b78325734b91a8cf802da67442c6
msgid "Add portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:158
# 9294efa53cb24a2fae48d5957e2dfd6b
msgid "cmf.AddPortalMember"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:160
# 3b739a8a62ae4dbcb75120714fa0a18d
msgid "Add portal member"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:162
# a18963be931340ceb79b0d45d2ca093d
msgid "cmf.SetOwnPassword"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:164
# b83a55a119b54f62842ca12819f746d4
msgid "Set own password"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:166
# 09c16e53b41b4fc9906a7e1cfad7298f
msgid "cmf.SetOwnProperties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:168
# 81da9d3c4cdd4227a3efd045718c4a5e
msgid "Set own properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:170
# 0c6297c2ff314968b4837590b5d95d8c
msgid "cmf.MailForgottonPassword"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:172
# d86cab9ba6f6458d8a2dc3f7bfe3a8be
msgid "Mail forgotten password"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:174
# b9635e8aa7d34831903c363c5eddf984
msgid "cmf.RequestReview"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:176
# de6e5de75abf4a8487e16d052b7c6302
msgid "Request review"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:178
# 357241c6d1894c7ca6f043ee2258b205
msgid "cmf.ReviewPortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:180
# c3c7d3b881814c89b6ed70db37e73228
msgid "Review portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:182
# faac5d29cc434672953b135f0cd74d25
msgid "cmf.AccessFuturePortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:184
# dd75a2db1b6740c2b868ab6492531110
msgid "Access future portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:2
# ad97e8019d0741e79b29873fec56a1cd
msgid "Python Classes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:4
# 37552530e5984f65b588607cb739e5a3
msgid "You'll have noticed that Python classes are often part of the wiring of Components, and you will find that you can't really avoid understanding a little bit about them, particularly if you want to make your own viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:9
# 30124db964544ae8acdcad3517056c13
msgid "Having to deal with something as advanced as Python classes can be daunting for the non-developer. The good news is that using Python classes will be more a case of copying and changing little bits of code than writing anything from scratch."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:15
# b5898cf4c26a488d83034f3f31b73a0d
msgid "What's a Class?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:17
# 22d70907a8584b10a31290cb6048b5ce
msgid "It's best to think of a class as a discrete piece of code containing a collection of methods ('actions' of some sort) and attributes ('variables' which can hold a value)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:21
# f9e399e2a24542ddb4c49dcd0030020c
msgid "In the case of components, the main purpose of a class is to compute the pieces of information a component needs to display. The class for the logo viewlet is a good example. You can find it in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:25
# 48fdb76fd91b4e22aee5e1b6b4193c6a
msgid "[your egg location]/plone/app/layout/viewlets/common.py - look for LogoViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:28
# 8d3137daca2643489baeea730b958bb1
msgid "After a bit of preparatory work, the LogoViewlet class first finds out the name of the image that is to be used for the logo (and is defined in the base\\_properties property sheet):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:36
# bb4f521bf6314ca0ae4c72e0ef12dd88
msgid "Then it works out the logo's vital statistics, size, alt text etc and turns this into an HTML anchor tag:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:43
# 04ff558e50324e0e9d6501ab6e7e75fc
msgid "Finally, just in case you might need it, it looks up the title of the site:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:50
# bd529310a6a84f7db2f9ec3dbf0decd6
msgid "In the page template associated with this viewlet you can get hold of this information (self.logo\\_tag, self.portal\\_title) using the variable \"view\":"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:60
# c35c5e08561c430ebeadfe05ac25700c
msgid "Do I have to use Classes?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:62
# ce7957d46cf049e3aa940b3907bd3016
msgid "Viewlets tend to be wired up with a Python class which points to a template. So, even though you might only want to create a new template, you'll find that you have to write a class to point to your new template. The `Elements <http://plone.org/documentation/manual/theme-reference/elements>`_ section of this manual should help you by giving you a snippet of code for each element to copy and paste into your own product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:70
# d76b0da29f6d47c3a97cc9aaab0083a7
msgid "Here's an example. The standard logo template doesn't actually make use of view/portal\\_title. So if you wanted to incorporate this into your logo in some way, then you would need to write your own template and then also your own class:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:83
# db66576482484de185a9993a2b2e8309
msgid "First, pull in (\"import\") all the bits and pieces with which to build your class using from ….. import …… ."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:86
# e16a196601b54635938ebdde62edfd1a
msgid "Next, define your class. The important thing here is to base it on a pre-existing class so that you don't have to start from scratch. Put the name of the pre-existing class in brackets after your class name (make sure that you've imported it first). Don't forget the colon!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:90
# b9ec889e338845e7bcb8fb6f6f420fa4
msgid "Finally, rewrite any of the methods or attributes you need. Here, we've just rewritten the *render* method to display our own template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:93
# 2a2153c7254440388d6f6a569943bd26
msgid "Note: indenting is very important in Python code, the convention is to use four spaces (rather than a tab). If you are having problems, double check the indentation first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:97
# 0bba76d106474d02975889a006b4949a
msgid "`http://wiki.python.org/moin/HowToEditPythonCode <http://wiki.python.org/moin/HowToEditPythonCode>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:99
# 7236bc3df8b04d99839709493a541c35
msgid "If you're feeling brave or want to know more, a straightforward introduction is here: `<http://www.diveintopython.org/object_oriented_framework/defining_classes.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:103
# e286e27dad1c409fa824bf79475ca49f
msgid "`Dive Into Python - Defining Classes <http://www.diveintopython.org/object_oriented_framework/defining_classes.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:2
# 4f3902e8d09549b4a8dcf4182a13453e
msgid "Customizing or Creating New"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:4
# ca3ba396d66743d09f41687bedda8ab8
msgid "You can customize through the web, but on the file system, the way to customize or create components for your theme is to wire up new ones."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:10
# 659b80777e68423dbe6c2831f07de340
msgid "Just as for Skins and Layers, it is possible to customize the templates used by components through the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:13
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:18
# 86fceda7057d44e4ad4fba2e21c72e86
# ddc4585b254c4c0ea4be7d990e65a5fa
# 6cc8bf1189b2432d902a165324f2f215
# 6bb1c2fdc0a54a4caeb9052f45e53bc7
# 963a1bfae0104d94b4dc034a30501c81
# 72aac9615b2644df9c0569b8c7711e2e
# 4d1598701e7849ffaf919e2a7e4aafa1
# 7a316d9364e6401aa1ff2c0414429d0a
# bbcdaff147d54e319c0eb0bcabc5b145
# 54674080cf534cb087a1a7b989ab45cd
# 08cf0dd3423c4f4ca92b86feb87ced26
# 27fb5aea1fe94fde8bda6ffbd5d50b6a
# c8ce7b00d4df458b810ea4031bbd0625
# 557e2c3a19594b3393f4a6573f8c761f
# 29aedffb6206465dbaed55cc30f1331a
# af823b8b99924b409fb17c0a53c33620
# 6481254eae7748f885d337a764630a6c
# 0639d171185441a190cdde7e76c50215
# f52f67b0c8e44ee6ba07924cce276e41
# 9e10d95fab0344409bd829173818dad2
# 5578461ad6ee4db3befe7bde0692b87c
# 5c82d080a12d475f84b90babde4090b5
# b33d484cb0fe4fa7b7ab2204887910c6
# d782ad8ab58d4634a46337a48ffed1f1
# 060e1f1089c445f4993bd47dbd23501a
# 8c9b057f3e01488ea8af8cbc79af86b6
# 9c8493ada58349779dbb50ee6ce70a1a
# e8771e5a6b5e4cceb6641eebb30d8c2d
# 674e01de9b784fef9f092b0373918aa7
# 65e67ae83ec94839b7f247a1fa361246
# 45ed5673e47e46bc9a5828440053a66b
# 9f5a9f83a12a4121aed2fa10db762b06
# 41d11a77616a4d85856943f7aabed106
# b64b76503c944202a78e29ce6295937c
# a2a60938678847c78dc853ad49ff6911
# c4dee6b5a4b94f5fa42e0c5640dfee76
msgid "Site Setup > Zope Management Interface > portal\\_view\\_customizations"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:15
# 90150f25183c416c81155ddf1ba1d771
msgid "You will need to know the name of your component (plone.presentation for instance). The `Elements <http://plone.org/documentation/manual/theme-reference/elements/elementsindex>`_ section of this manual will help if the name isn't obvious. You can only rewrite the template, which might be limiting."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:24
# 21f3aed4c029471e9b36150aaed41468
msgid "You can achieve much more if you are building your own theme product on the file system, and in this case the approach is slightly different."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:27
# ae862e79be764b4383214baf689198d3
msgid "Rather than overwrite a component (as you could for skins), it is far easier to create your own version. This involves some rewiring or new wiring in your own .zcml file, but is actually simpler than it sounds."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:31
# 2a6032d4cabc4255947316a868d60386
msgid "Here's an example of the presentation viewlet - as it is used by Plone:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:43
# 5de0b9ab43f648b9b6c775914375c846
msgid "Imagine, for your purposes, you need to use a new class to get this viewlet as you want. In your own configure.zcml file, give it a new name and wire in your own class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:57
# 180bebf2adf043cf87b2b15e93ef3430
msgid "Remember that the dot in front of your class namespace indicates that it can be found in the same directory as this configure.zcml file."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:59
# c453b124460e44cf84878bedf9477548
msgid "If you're not sure where your configure.zcml file lives, consult the `Where to Find What you Need <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/locations>`_ page of this section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:2
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:2
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:2
# dc0f3121b6d5485ead7144612c946bb8
# c8744092237d4b0095d06333c7d735b3
# 6010e348cc9c4e219ada0a59dcdc2933
msgid "Where to find what you need"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:4
# 79ff2c9d0f5a4b048a4b3775f6b46544
msgid "Where to put components in your own product and how to track them down in the Zope Management Interface and on the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:10
# a6492ed780c8436eaea59e07339efc81
msgid "The templates for most components can be customized through the web:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:14
# 42bead4611294b5e83d8ab9b7a66258b
msgid "The `Elements <http://plone.org/documentation/manual/theme-reference/elements/elementsindex>`_ section can help you identify the component you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:19
# 12f41114ffdf42b9a8b74f7a8b58fa10
msgid "Plone Default Components on the File system"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:21
# 62960fc614f442e18880c33323fa8cf4
msgid "If you're planning to wire up your own components, you may need to track down the relevant files of existing components to copy. This can be tricky. They are packaged up into a number of different eggs, so you need first to locate where your eggs are stored, and then work out which of these contains the component elements you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:27
# 875a56f8fd4e4bc292a3811007371cb5
msgid "To work out where your eggs are stored, look at the `Where is What <http://plone.org/documentation/manual/theme-reference/whereiswhat/egglocation>`_ section of this manual?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:30
# b413b1bfad6e43d58aa11c348ceea7ea
msgid "The `Elements <http://plone.org/documentation/manual/theme-reference/elements/elementsindex>`_ section of this manual will help you track down the egg containing the component you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:36
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:38
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:40
# 61471b02857845b684443ec42e93ef6e
# cdc4ab3c81b1463dae05bc49a63ce60a
# 272dc80f3fa8416d8b5d3f9cfae3ab0f
msgid "In your own Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:38
# 2c4dc5b1b17842829151b192cafead0d
msgid "|The browser folder in your theme product|/browser/viewlet.py \\|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:39
# 43b4d5c9fdbf4878b751e19872409242
msgid "viewlet.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:40
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:9
# f34fa08da7b94e1799df6e743349c582
# 8aadda0e6f8f41eabe9e72796f977273
msgid "An example viewlet component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:41
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:11
# 20f8b6583da74d2ab51f5cb7457cae1f
# 06ea5cab6cc343beb7f47c6b82d0deac
msgid "/browser/interfaces.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:42
# 69f574704aa84a13b2348b0dce41ceba
msgid "This is used to create your theme interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:43
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:62
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:16
# ebe4f462b0e74ece9b8dcfafe703c686
# 82afc1b9109a40ebb940f8fa39dcb877
# a2818bd34f55493ebdb1eea9d0eee5ce
msgid "/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:44
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:18
# c6f2ed52f77d4270b824b0160ddf2b5f
# 289f9e0422f148089c127e8b58018b3f
msgid "Use this file to order your viewlets within viewlet managers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:45
# 76fee1f3195446cc9e4826004913e2a4
msgid "/browser/configure..zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:46
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:22
# dcd624765bf6479bb321765cb92a0505
# 3c3a6bb79c90452f9be8989fd238dd9d
msgid "Use this file to wire up your components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:50
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:24
# b8676f5bfb634ae29b08f49a3ae9f106
# c99982aa556e4b04a337c34c7509240f
msgid "/browser/templates \\| styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:48
# a71384e343e4488cb08490bcea4bdc76
msgid "These directories can be used for templates, styles, and images. You will need to register these as directories as resources in configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:53
# fedce66ec14949089fc5be2262b79a7f
msgid "product| image:: http://plone.org/documentation/manual/theme-reference/images/your_theme_egg_components_cutdown.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:2
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:2
# db363a1623764dab963f1ba66eb4c901
# 67e10e6fceb441c9b9dc6156af8291a8
msgid "Skin or Components?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:4
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:4
# f3aa0fa1a0a745a8b3a0f5040ca1f277
# 72f56665321b456295e970895e7f12e4
msgid "You’ll have noticed that you can turn any template or css file, or any directory containing these into a component. So why bother with the Skin building block?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:8
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:8
# b222ab826cd04e06b3ad7364eb69e1c7
# d7439296e1ad49288ea70c752f9a8994
msgid "The product created by the plone3\\_theme paster template does the following:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:11
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:11
# 5c5f5a8eba0c4952a6fa759d10ec359f
# 21e0fc1713e2462cbc54335424a305e2
msgid "**overrides and rewrites** of the standard Plone Default templates and CSS files go in the **Skin** section – the skins directory."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:13
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:13
# 6c79d55b7b044386a0db204e49f2d760
# 36e23616d3b244b0ab91ca79c7ff6ca3
msgid "**new** style sheets and images go in the **Components** section – the browser directory."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:16
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:16
# 73a574e04b334eaa81e466d66105a1d2
# 776263928dba4bdc99f863e94bf86da0
msgid "This manual suggests putting all your templates, style sheets and images in the Skin section - leaving just the viewlet and portlet templates in the components. There are a few reasons for this"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:20
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:20
# e26b1f5590194e719e53ea20c7a95942
# 231ece7a63354b22b43f72d0ea19b676
msgid "it is simpler to do this when you're just starting out"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:21
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:21
# b66c8de192ad476b87f62afdbc366aab
# f3e691f5580a449cae3cfbd92a0a3750
msgid "it follows the way in which Plone Default is constructed"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:22
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:22
# 2df81aaa1af646b28309a313d188c57c
# 892c59791cd14e2eae536883446b9be1
msgid "it makes it quick and easy to adjust your theme on-the-fly after it's installed. At that point, you can make further customizations of the Skin through the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:26
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:26
# ac1c3356125b4e5d85da37606c65d713
# 2cb698d375fc4549a4f526201ecc98a1
msgid "At the time of writing there's a `big discussion <http://www.openplans.org/projects/ootb-plone-themes/lists/ootb-plone-themes-discussion/archive/2008/05/1209686168874/forum_view>`_ going on about this very question."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:32
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:32
# 30f5e93761624f569eb8b825904f0312
# 934383feed7e4444a59d45862d906619
msgid "If you want to strip the browser resources out of the product created by the plone3\\_theme paster template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:35
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:35
# ad7ce007401441dba3d791af2dd03ae7
# a1c163df00e14cb0a56229e2bafd9f78
msgid "remove the images and stylesheets directories in the [your theme package]/browser"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:37
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:37
# 6c0502f974574b818c9b6c32dff966a8
# 06fdea8439f24a04962ea1e2e4943089
msgid "remove the <browser:resourceDirectory /> entries in [your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:39
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:39
# 799149b6286b4d82be722756bb65e977
# 765f4da3269d417a835ee7c6100456e4
msgid "remove the register stylesheet entry for main.css in [your theme package]/profiles/default/cssregistry.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:41
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:41
# 34a00a5fd47a40a482ff5e7ec1750494
# 2c7616613fd742fcac560c377d0c1a97
msgid "if you have already installed your product you may need to check the CSS registry in the Zope Management Interface (portal\\_css) and delete the main.css entry there too"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:2
# 2df0e405329e4fadb3b9fb32a3315af3
msgid "Making Components Theme Specific"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:4
# e7f100faedea416c925408eab8e94dae
msgid "You may want to make components only available for your particular theme. To do this you will need an interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:7
# 48b1ebcbfb9245a9995756b5fbcacfeb
msgid "As components come into being as soon as Zope starts up and reads the .zcml files, they are available for every Plone site you have in a Zope instance. You might not want this to happen."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:12
# d3870ff5877741958faec66e19281d15
msgid "A Theme Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:14
# 7fad08d28ee842cb89215cb31d6b9b50
msgid "You can specify that your components are available only for your theme with a marker interface and a layer attribute in ZCML. Here's a rewired version of the presentation viewlet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:29
# f5bc07fc0e67416d8ff9f4bc3668bc0c
msgid "Note: Don't confuse the layer attribute with a skin layer. Here, layer refers to the whole theme rather than just one slice of it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:32
# 734865b2a8024eceb0aa9315ecaf7cfc
msgid "There are two methods for creating a theme interface:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:35
# 31735b6899e940628873ec5fccba90f2
msgid "Using plone.theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:37
# ed7e9fe07f134e85afdb00b5550770e1
msgid "In Plone 3.0, plone.theme is used:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:39
# ac4bc8ec956a48af9af37583f6863db3
msgid "A marker interface is defined in [your theme package]/browser/interfaces.py:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:49
# 2582b64f61694c31a73598537afb0b8d
msgid "and this is registered in ZCML in [your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:60
# 6a6c38f38c9f4037bc1e469496768eaf
msgid "Note: [your skin name] crops up here; refer back to the skins section if you are wondering what this is."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:64
# a48945d6796041059919ecd1df7ad18b
msgid "Using plone.browserlayer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:66
# 50f1c5f9ad4e4e1a93ff44a67382eb7a
msgid "In Plone 3.1, plone.browserlayer is available to you."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:68
# 56c6f42ab2ea41698f00da0e5f9babfd
msgid "Create your interface (e.g. in [your theme package]/browser/interfaces.py)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:77
# 6c3a5c6955e94352a416a5df4b87e6e8
msgid "Register this in the configuration (in [your theme package]/profiles/default/browserlayer.xml):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:88
# fa47d5fc34f145dd8f19fd7595f30ba3
msgid "If you generate your file system product or egg using the plone3\\_theme paster template, then the basics will be done for you (using the plone.theme method), you will simply need to track down the interface to find its name. Look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:93
# f80e73ceff1e421e8c5b33e4ec22ea5a
msgid "[your theme package]/browser/interfaces.py or configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:95
# 626df974f8d4455ab511f673839d8fed
msgid "and you should find it with the name IThemeSpecific. When you refer to it, use its path"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:2
# 8f0e16e2eb434a7284824f6687f3189d
msgid "Viewlets, Portlets and Other Components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:4
# 1fc5db4a07894f2493049430a99c201c
msgid "Types of component."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:7
# 0e07350620164840a01d00fff1ee72af
msgid "Viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:9
# cad25340baf542c89cd76a966248b999
msgid "This is a new feature in Plone 3 and is used to provide aspects of the page furniture - those elements of the page which generally don't change throughout the site. These are organized by another type of component - a Viewlet Manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:14
# 415dfd6759ff409ba7f2f8dd617d08ba
msgid "For more information you can look at"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:16
# 6de3afb88cc249eb8cb9e7979cb2eee1
msgid "`Anatomy of a Viewlet <http://plone.org/documentation/manual/theme-reference/elements/viewlet/anatomy>`_ section in this reference manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:19
# 656259bbb75a49deb5be1f65e2092d88
msgid "`http://plone.org/documentation/tutorial/customizing-main-template-viewlets <http://plone.org/documentation/tutorial/customizing-main-template-viewlets>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:20
# 25857d1ca9384e8dae27a696c6eeabd9
msgid "`http://plone.org/documentation/tutorial/customization-for-developers/viewlets/ <http://plone.org/documentation/tutorial/customization-for-developers/viewlets/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:23
# 382824aa4fc34ee0a88eb635949dea3c
msgid "Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:25
# e6a30d4cbbeb448ebec8a18cdb246922
msgid "Portlets in Plone are boxes of information, usually in the right or left column of a page, containing aggregated content or additional information, which may or may not be directly relevant to the content item being displayed. Behind the scenes these used to be constructed from ordinary page templates, but now, in Plone 3, they are wired together as components and are managed by another component - a Portlet Manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:33
# 123f75c144f4467384698b948570769d
msgid "For more information take a look at:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:35
# fde4476df80e4c06bb39ca7ae75087df
msgid "The `Anatomy of a Portlet <http://plone.org/documentation/manual/theme-reference/elements/portlet/anatomy>`_ section of this manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:18
# 9a354921251e4968932bcfb44d566852
# 0efd925337184438896be07632e8f554
msgid "`http://plone.org/documentation/how-to/override-the-portlets-in-plone-3.0/ <http://plone.org/documentation/how-to/override-the-portlets-in-plone-3.0/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:39
# 2b7cf0f56d9347c888573bcdfd81cf04
msgid "`http://plone.org/documentation/tutorial/customization-for-developers/portlet-renderers/ <http://plone.org/documentation/tutorial/customization-for-developers/portlet-renderers/>`_ (for a much more technical explanation)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:8
# eee610b61c424e1fae0b1f802a704b7a
# da580efcf72846a2a8d7d4a1f857e1b1
msgid "`http://plone.org/documentation/how-to/adding-portlet-managers <http://plone.org/documentation/how-to/adding-portlet-managers>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:44
# 368757b3f0a6462e903c642fcf895dd4
msgid "View (Browser View)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:46
# c4685180be4242c9964644d5f487ae05
msgid "We gave one definition of the term \"view\" above in the `skin section <http://plone.org/documentation/manual/theme-reference/buildingblocks/skin>`_. However, behind the scenes, in the context of components, View has a more technical meaning. It refers to a component which is usually made up of a Python class or a template or both and, put simply, processes the data from a content item before it reaches the page. There's a `technical explanation <http://plone.org/plone-developer-reference/patterns/views/>`_ in the Plone Developer Manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:56
# 835923ceb4f64f04aa5abfe5d7083420
msgid "You'll sometimes see it referred to as BrowserView or <browser:page> and in templates you'll see a browser view's name prefaced by @@. We look at browser views again in the section on `putting a page together <http://plone.org/documentation/manual/theme-reference/page>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:61
# 197187bad8ad4127a9fdde2c927fb6bb
msgid "Note that the term browser and the browser namespace are used to demarcate presentational components – that is, those bits of code which go to make up elements which will find their way to a web browser at some point."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:67
# f11a84d18d6b44dc9d9a3bd677511de2
msgid "Resource (Browser Resource) & ResourceDirectory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:69
# 6089c52b6cef470fbdfac08b0aff751f
msgid "Although we've indicated that the skin and layers are the usual home of page templates, images and style sheets, it is also possible to turn them into components by registering them in ZCML. In this case you'll see them referred to like this ++resource++[resource name]. The same can be done for a directory containing templates and style sheets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:75
# d334cb25965d4343865cd4fe886cbdfd
msgid "“Oh great”, I can hear you saying, “so which should I use, components or skins?” Go to the section `Skin or Components? <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/skinorcomponents>`_ for a discussion of the pros and cons. At the time of writing we suggest the simpler option is to keep your templates, images and style sheets in your skin. We're just mentioning browser resources so that you know what they are if you encounter them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:2
# 231a4cf619914ad4b00ec71cb079c43d
msgid "Component Wiring and ZCML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:4
# b12375db355749838a858f8528c6cafe
msgid "About components and how they are wired together"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:6
# 5f53e18ae3184e26920ed24f33a95b1c
msgid "|diagram of a component|\\ Components are powerful and flexible tools in Plone 3, but a little more abstract than page templates or Python scripts. As the diagram on the right attempts to show, they are normally combinations of Python classes and page templates wired together in Zope Configuration Language (ZCML) and given a name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:12
# 7791d8bdd0cc4cc28a7771efc5721b0c
msgid "There are two important things to remember about components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:14
# d9352296416545b19be368ffeb318968
msgid "Components are compounds of classes, templates, interfaces, permissions etc."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:16
# 5d98d3aa312f4ed5aaea6f0901aba03e
msgid "To track components down you need to look in .zcml files first, locate their names, and that will lead you to the classes and templates that contribute to them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:22
# 32cd242252d64942b4883c0db08052a7
msgid "Components come into existence when your Zope Instance is started up"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:20
# 64052474c08148f99ea46bb1c23806c3
msgid "Provided Zope has read the .zcml file, a component will be available to use. You can't overwrite existing components, better to create your own, reusing some of the parts."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:25
# d20f01dad23b49039f46d4b2b072a4f8
msgid "Parts of a Component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:27
# 2940738bb8f8476c9a6a8acebd79a8d7
msgid "A component comes into being via a ZCML \"directive\" (there's an example of one of these below). The directive will have a series of \"attributes\" which will point to the various parts that go into its creation. These parts have four main functions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:32
# 4738b82ec5f24c95b2a49f8475e69053
msgid "To **identify** the component (in the case of a viewlet this will usually be done with a \"name\" attribute)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:34
# 5a9a9667d3fa46f5abbc70cec561385a
msgid "To **compute**\\ the information the component is supposed to display (this is usually done with a Python class, and pointed to with a \"class\" attribute). For example, in the case of the navigation tree, this would be working out which part of the tree should be displayed for each page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:39
# f57d3a0b4c1e4f99b1cce7395335b717
msgid "To **display** the information the component's class has computed (this is usually done with a page template)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:41
# 97bf01daa2fd4365943f7d0cad02e6d8
msgid "To **restrict** the display of the component. In the case of a viewlet, this could be restricting it to display only to certain logged-in users (by using the \"permission\" attribute) or restricting it to display only with specific content types (by using the \"for\" attribute)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:47
# 5005e2ce6c3c41cabb73d47c7d61e7cb
msgid "There's more about this in the `component parts <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/componentparts>`_ section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:52
# 0de6e5587e56424f84ade4731bbd6d0e
msgid "Zope Configuration Language (ZCML)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:54
# 0f9989bf290b4240b469619c07c16a61
msgid "The `Five Tutorial on WorldCookery.com <http://worldcookery.com/files/ploneconf05-five/step2.html>`_ will walk you through ZCML, and there are plenty of examples in tutorials on the plone documentation site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:59
# 6b4f0d82f50d477eb0e875bc4f78d118
msgid "Here's a sample ZCML directive conjuring up the presentation viewlet (which simply provides a link to a presentation version of a page):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:75
# e6381f6a9add4abd9a350efa466c50e4
msgid "There are three things to note:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:77
# 67639abaf071419285117552392983a5
msgid "Like any kind of XML, ZCML uses namespaces - watch out for these if you're writing your own ZCML file. For theme components, you'll mostly use the browser namespace."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:80
# c6088d41d6dd4407bfed13d2324c0bf1
msgid "ZCML attributes often refer to interfaces rather than actual content types, classes or components (see the *for* and *manager* attributes in the example above). You'll find more about interfaces in a `later section <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/componentparts/interfaces>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:84
# 563ada823a524d23a33daf43f4501151
msgid "Look at the class attribute and you'll see it begins with a leading dot. This means you can find it in the same directory as the ZCML file itself. If it isn't within the same directory you'll need to give the full name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:89
# 1cf7a9353d5447c29c431e6a5604b637
msgid "You can get detailed information about ZCML directives in the ZCML Reference section of the Zope 3 API - `http://apidoc.zope.org/++apidoc++/ <http://apidoc.zope.org/++apidoc++/>`_. If you want to be very disciplined and tidy, consult the ZCMLStyleGuide `http://wiki.zope.org/zope3/ZCMLStyleGuide <http://wiki.zope.org/zope3/ZCMLStyleGuide>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:98
# 28deb0068be84b88b8a2b25c6efe3554
msgid "component| image:: http://plone.org/documentation/manual/theme-reference/images/component.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:2
# 6cd544be57a4418c94b00cf4ef0e78b6
msgid "Generic Setup XML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:4
# d992378515024357b7f7aa5b1e01719d
msgid "The language used to define profiles."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:6
# 1256dd2b7fd144c39834c91ee4bf4724
msgid "The XML used for profile files is straightforward. There's no DTD available, but there are plenty of examples to reuse or adapt for your purposes. If all of this seems too much, the good news is that you can get Generic Setup to write the files for you by exporting the configuration from an existing site. There's more information on how to do this on the Generic Setup Tool page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:13
# 1be1483d098749c083f1fd404dbb9b06
msgid "The root node of an XML profile is usually an object:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:21
# 76d9845cb5fd448cae5dee791fe2c00e
msgid "which corresponds to a particular site tool (in this case the JavaScripts registry). Sub-nodes represent sub-objects and XML attributes correspond to the attributes of those classes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:30
# 71c2590150e343b3aba6efb94bc90095
msgid "So, in this case, the sub-node represents an entry in the JavaScripts registry and its tick boxes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:37
# 18d9a927bff84a6bbb6b42c0886d12c1
msgid "screenshot of the javascripts registry in the ZMI"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:38
# 4d836f1fb12a4e5991e2e7a3e8e4342c
msgid "In the very unlikely event that you need to work out for yourself what attributes to use, you'll need to investigate the API (or the interfaces and classes) of the tool in question. Use `http://api.plone.org <http://api.plone.org>`_ or dig into the source code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:4
# 58219c5d01ba4e30846470c213f66fc0
msgid "How configuration works through the web and how to track down files on the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:10
# 160dfded3dba4e24a7201d88c1a9b8d1
msgid "There are a number of different routes to configure your site through the web. The `Elements <http://plone.org/documentation/manual/theme-reference/elements/elementsindex>`_ section of this manual should give you pointers on where to look to configure particular page elements. In general"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:16
# 086540cab2ad448ea69d479639fef381
msgid "Site Setup leads you to configlets for the site settings"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:17
# f8aa190d57f341148b6bf18bd832c355
msgid "Site Setup > Zope Management Interface will lead you to the style sheet and JavaScript registry (portal\\_css and portal\\_javascripts)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:19
# 4d5d7a2fb7674423adb47a28301a7e70
msgid "Adding /@@viewlet\\_manager to a URL will enable you to order viewlets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:22
# 7eeb57b2855b4d14b32d6cc61d4b1736
msgid "Plone Default Configuration on the File System"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:24
# 2e86e9d226f04ec7b5ae6dcb813a0bf9
msgid "You will find most of the configuration files you need in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:26
# 656596b426ac4fc29ee9df8cae833d4a
msgid "[your products location]/CMFPlone/profiles/default"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:28
# 9685022bda5f4a4dbda025b2d5463cba
msgid "However, be aware that some configuration files may be located in third-party products. For instance, if you want to add some styles to the visual editor, Kupu, as part of your theme, then you will need kupu.xml which you'll find in [your products location]/kupu/plone/profiles/default."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:34
# 85c4e037e8d542f7ae88dcd5c3ca45e6
msgid "There's an alternative to hunting around the file system, and that's to use the Generic Setup Tool to export the profile."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:43
# 11fa5f60dac74a00840195dd41694116
msgid "|The configuration directory in your theme product|/profiles/default/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:41
# babe4704602d4bd0900f9de85b7cb6de
msgid "This directory holds the XML for Generic Setup. The plone3\\_theme paster template will have provided you with some ready-made files - for setting up your skin layers, registering your style sheets and JavaScript, and ordering your viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:46
# 602453fb16e84dec83ceaed674970691
msgid "/profiles/default/import\\_steps.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:46
# de41aa149cf345f3aee6cc8a512c47d5
msgid "Is an essential file for installation, you shouldn't need to change this."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:50
# 7a75611af9cd43fdae218a3b2399eb2c
msgid "/profiles/default/cssregistry.xml \\| jssregistry.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:49
# 341bf0c1bede4198a0b600a33f6b9470
msgid "will register any style sheets and JavaScript in your skin. You will have to edit these yourself if you have any css or Javascript files to add."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:54
# 4e6e0ce6b9a64c69b306965ac30ebb92
msgid "/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:53
# c65b5293bab14d869c6de5bac9bbcf0b
msgid "Will drop your skin layers into the right order of precedence. You won't need to change this unless you've renamed, removed, or added directories in the skins directory of your theme egg."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:57
# e56708ef7d9b4e8bbb11b79cf52623d7
msgid "will determine in what order viewlets appear in viewlet managers. You will need to edit this yourself if you want to add your own viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:62
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:14
# 1c6ba61f2c8e4037a3c39ad16c03083c
# 4e59f6395b814e58b176df049c77cf46
msgid "/profiles.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:61
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:16
# 053ba3c3f9564436a260e83e5b917fac
# 383985f1803a4229a794c811e6c38ef9
msgid "When your Zope instance starts up, this file makes the profile available for Generic Setup to use."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:65
# 0b8f6b4d6c03465583c834fabeed28e7
msgid "product| image:: http://plone.org/documentation/manual/theme-reference/images/your_theme_egg_config_cutdown.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:2
# f9d16d6f857c460a8933e0819917cc7b
msgid "Profiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:4
# 25b33ccef30e48b596de2de69e938c28
msgid "Configuration and profiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:6
# e53a9715f69a462d8a9a48289f19c5d7
msgid "Configuration refers to the default behaviour of a site (for instance, whether you allow people to sign up to your site, or how dates are displayed). You're likely to want some of this behaviour to be embedded in your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:11
# 5d8e76b041bc4f948fe3efb0a87a2612
msgid "There is also some overlap between Components, Skins, and Configuration. For instance, the order of skin layers and the order in which viewlets appear within a viewlet manager are considered aspects of configuration."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:16
# 0e8987d2a39d49068da15c6545a93edc
msgid "Profile"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:18
# 3d1b86e455514a05aad5df0d0cd7e316
msgid "A profile is a set of configuration files. Each file is written in fairly simple XML and refers to a particular group of components or page elements. There are two different types of profile, base profiles and extension profiles. For theme purposes you will only ever need to use an extension profile (i.e., a profile that extends the configuration of an existing site)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:25
# 9ea3e12f0c1c40f89983aff4008517a0
msgid "A profile comes into being when it is wired up by ZCML. Here's the version created by the plone3\\_theme paster template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:38
# 04ab53efbf8d45fe85a7967961383550
msgid "You'll see that it points at a directory for the location of the XML files and indicates that it is an extension profile by using an interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:2
# a0c105721f674f1ab099735bbbad7b75
msgid "The Generic Setup Tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:4
# 498a97e7f6664d9ba0472c0481138eba
msgid "The Generic Setup tool is used to apply your profiles to your site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:6
# 678f9541a6314ad19b4c5ce332c00b8a
msgid "You can find the Generic Setup tool here"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:43
# f98e8bb0c6bc425fbe659f3ff874dd91
# 5404a82fe1cf434faeb1f7b1c4eac83e
msgid "Site Setup > Zope Management Interface > portal\\_setup"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:10
# 2a8fc6abd63f41799d2111b84c46a7e1
msgid "You can run the tool manually, but for theme purposes, if you have created a product using the plone3\\_theme paster template, Generic Setup will be triggered automatically when you install your theme in your site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:15
# b74cbc030d5a472c90b25a1d0e86afe9
msgid "You'll find more extensive information about the Generic Setup Tool in this tutorial:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:18
# 3e9200c84d0d4dce8594f7684bfed8f6
msgid "`Understanding and Using Generic Setup on plone.org <http://plone.org/tutorial/genericsetup/exports-snapshots-and-comparisons>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:21
# 69d7d7666bc546df8222c5ba5b6eed3d
msgid "However, there are two useful facts to know about it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:24
# 2715d1b738d54f5abe012074322b096b
msgid "No Undo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:26
# 152f224e28964985868b31fbe8fa57b5
msgid "Although you can uninstall your theme using portal\\_quickinstaller, at present, you can't undo the profiles Generic Setup applied during installation. For the most part, this isn't a problem, but it can get confusing - if, for instance, you are experimenting with the order of your viewlets and have tried several versions of viewlets.xml in successive installations. In this case, exporting a profile (explained below) can help you make sense of what you've done."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:35
# 1ce57e536e264e9fbb79747bf7f421dd
msgid "Exporting Profiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:37
# 0bf8d593cf7048fa825adf4bc9c957ae
msgid "You can export the current configuration of your site as a set of XML files. This can be helpful if you're not quite sure what you've done, if you're searching for a profile to base your own configuration on, or if you just want the Generic Setup Tool to write out a configuration for you."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:44
# aaf3a3d22b6d4ab49215410cf49b0560
msgid "Click the Export tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:45
# eeb806d3ed2b426ca57edadb816c46ea
msgid "Select the steps you wish to export"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:46
# 7694f6e49c2641d49ce10c6127d3aaf1
msgid "Click the Export Selected Steps button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:47
# e2ca4138b26243df9615d56adf374e72
msgid "You'll be given a zip file with the relevant XML files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:49
# 5513d5e5c23d4ced8cdb8e3e6c50cfe1
msgid "It isn't always obvious which export step you need to get the exact configuration you want, you may need to experiment."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:4
# 5b58305037884b89bee47c0099b35f37
msgid "An overview of the building blocks and how they fit together to create a theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:7
# ecffa28659ff4b6594ad097e9ead4133
msgid "There are really three main building blocks in a theme. The diagram below shows you how these slot together:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:13
# 3bdd66ac4dff4419bb8d7165ec83ece6
msgid "Skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:15
# 0cb2cb2563f541108536bf5cbb0df321
msgid "deals with the overall construction of a page and the delivery of content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:17
# afd5ac597c80452d95b95b6a420e85c0
msgid "comprises page templates, macros, and Python scripts, and is also the place to put style sheets and JavaScript"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:19
# 5f76f11521d54684ab3abf3dfa012f89
msgid "to help you understand these we'll point you in the direction of tutorials on the templating language TAL and introduce you to skin layers and order of precedence"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:22
# 9d11946e44554f2cbaebd85970458ea3
msgid "to find skin elements, look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:24
# 5a734b71cac24469941c8e5831fd3339
msgid "portal\\_skins in the Zope Management Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:25
# d64ea45c117843a9a8caf026781b88a4
msgid "the skins directory in a file system product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:28
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:2
# 91ae1c2ccddc4aac95bc96e140dee45b
# 0933c210671448609339cae37d85687c
msgid "Components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:30
# e916733b4abd43e9bbc107628ca4a262
msgid "the Components part deals (mostly) with page furniture - the page elements which have some level of consistency from page to page along with page elements involving a level of processing - such as the navigation tree, RSS feeds"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:34
# baa80d4bd0f749058c1e3f5a9942bb83
msgid "deploys a mixture of Python classes and page templates to create viewlets, portlets and browser views"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:36
# 3d8832ef3257464fad5e68b16f69bee2
msgid "to help you understand these, we'll give you an overview of how they are wired together with ZCML, and we'll give you the briefest of introductions to the bits you really need to know about Python classes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:40
# 66c238fecdff4303ac025d9995ee107b
msgid "to find the pieces that go together to make a component, look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:42
# d60567bd693a423a90b9039b726601ab
msgid "portal\\_view\\_customizations in the Zope Management Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:43
# f4c84aa2a7d543b4be3aaa33a950acf2
msgid "the browser directory in a file system product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:46
# 85573bc5f4f44c1790eb6d44eb983bd6
msgid "Configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:48
# 9d5ed4a44bcb45659da634c3c0aea022
msgid "the Configuration part deals with setting the order of some page elements (or individual items) on the page and with automatically setting some of the configuration you would otherwise make manually through the Site Setup interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:52
# 6515a1ba92534d8c95d62409b9b842b8
msgid "to help you understand the configuration, we'll point you in the direction of the main tools for manual configuration, give you a quick overview of the Generic Setup Tool and the XML used for automatic configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:56
# bae323f43aa948bb8bf9c82b7de3919b
msgid "configuration tools are found in several places in the site, but the files required to run a configuration automatically are found in the profiles directory of a file system product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:4
# 22e7abee7f9a48d5ba9247f3ac700d6c
msgid "The page furniture, viewlets, portlets, and their managers. How to make your own and where to find the bits you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:7
# 47805623a9854f95bd0f39aeeba993c8
msgid "`Component Wiring and ZCML <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/wiring>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:9
# 2e615ab2268745df82d5644d18d732d1
msgid "`Viewlets, Portlets and Other Components <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/viewletsandportlets>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:11
# 58ade894e23b407b9e5f3717e753048b
msgid "`Customizing or Creating New <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/customizing>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:13
# 78e1643984914c51810eef66159e1fdc
msgid "`Component Parts <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/componentparts>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:16
# 675d8add4959404588dbbe7a8d02a950
msgid "`Interfaces and why they matter <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/componentparts/interfaces>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:18
# 4330c830b03140b886b98804e5f6ddca
msgid "`Python Classes <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/componentparts/pythonclasses>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:20
# 170a4a108c0543ca90d467b50255ed96
msgid "`Permission <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/componentparts/permissions>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:22
# 0c0e412500074233b6d22f8d5394cdcc
msgid "`Making Components Theme Specific <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/themespecific>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:24
# d2a487a53ac94668affcf92f101abdf0
msgid "`Skin or Components? <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/skinorcomponents>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:26
# 60e5587c950841b1960db62015f7db63
msgid "`Where to find what you need <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/locations>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:29
# e9e00bf1e09f4a689edc44170a8589bc
msgid "`All content on one page (useful for printing, presentation mode etc.) <http://plone.org/documentation/manual/theme-reference/buildingblocks/components/referencemanual-all-pages>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:2
# 97677b2797bd4b8b887f05cd36c6aa27
msgid "Making and Naming your own Skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:4
# b50ec60092a7404ca95bd32ed840ace9
msgid "How do you actually create a Skin?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:7
# 44c565221cfb4ee5b4c0edc8d67a849b
msgid "Through the ZMI"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:9
# c80cfb504f534e31b30fa3a0e736e3b7
msgid "Go to Site Setup > Zope Management Interface > portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:10
# b6f3be1e0a5d492c944572c28e8859cb
msgid "Click the Properties tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:11
# 9d06f6499e6d419ab85fe4c4045ff034
msgid "Choose Add New and give your skin a name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:12
# a8631755e23342a3b6f7f8bc3be0f981
msgid "You can now type in a list of the layers you want to use, in the order you want to use them"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:14
# c0edea73f1334d15b57963d3b82d7870
msgid "Finally, at the bottom of the page, set your new skin as the default"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:19
# 85dc7d72f54e4e82b31fd10df378b6d2
msgid "If you use the plone3\\_theme paster template, code will be provided which, when your theme product is installed, will register your skin directories as skin layers and put these together into a new skin."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:23
# 95751745eb42447595a9ff142368c8e1
msgid "The paster template gives you the option of basing your skin on Plone Default. That is, when you install the theme in your site, the Plone skin layers will be added to yours - but below yours in the order of precedence. This is a good idea, you can then re-use bits of Plone Default without duplicating it, and overwrite the bits you don't want."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:29
# 56750412923e42c28e2136cbf8d73546
msgid "The key steps are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:31
# 5324c6fe09de4daf86a21f38e60866e2
msgid "Register your skin directories as Filesystem Directory Views, so that they can become skin layers. This happens in two places:[your theme package]/skins.zcml and [your theme package]/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:47
# ba058683e4174dcbbaff4d13afc2c3ff
msgid "Add and organize your skin layers into a skin in [your theme package]/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:57
# db4fe5991de041cdb695f99f8749de16
msgid "Set your skin as the default skin in [your theme package]/profiles/default/skins.xml by wrapping this node around the nodes in the previous two examples."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:69
# efa6a9ad46a9402582f5216ce1a2b79d
msgid "About the Skin Name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:71
# 42ac45e66bcb4c1ca77918043647ddb6
msgid "The name of your skin is required in a few places in your theme product. It is worth knowing where and why, so, for reference, the occurrences are listed here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:75
# 5210e39a35a64b6fbf6160fae5dfe22b
msgid "Where"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:77
# 58930789144a4fefad202752de8fa03f
msgid "Attributes/Directives used"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:79
# ae8e9883ffad4c699efc0cfa6c1f90aa
msgid "Use"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:81
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:87
# d5ae8288148540049f776aa22bfacc39
# 4371ad0ad76746e9be63b176d4092930
msgid "profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:83
# ea36b75b9de54db7bb04d86be7852a26
msgid "<skin\\_path name=\"[your skin name]\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:85
# 74c6f94963cb45b4b74c240e84f81f9a
msgid "Used to name your set of skin layers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:89
# 9234776956954c1991dfe777db0776cd
msgid "<object name=\"portal\\_skins\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:91
# b726c47614c845f08009b5cd431248ac
msgid "default\\_skin=\"[your skin name]\">"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:93
# 7f410db0ec8a4c38b398fdec52f8defc
msgid "Used to set your set of skin layers as the default skin."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:95
# db6168b6b0a34d399d7365c17b531c82
msgid "browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:97
# c304186a9f674979a77b6c26e656a1ae
msgid "<interface …"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:99
# 748086789ea64d4abc47dff1d64dbf47
msgid "name=\"[your skin name]\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:101
# 820f6f7ac22a4471afe6c7fd487697ce
msgid "/>"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:103
# d5781f6c10244661b5cf058dbc562c8d
msgid "Used to name the theme specific interface (see `Components <http://plone.org/documentation/manual/theme-reference/buildingblocks/skin/components>`_ section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:107
# e1e694288fc3406d989ec39b58bfdc59
msgid "profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:109
# 6a998ade6a8c40c4873a1d9db117f665
msgid "<order manager=\"plone.portalfooter\" skinname=\"[your skin name]\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:111
# bac7ba9e41594735ae64ee9dd2593e51
msgid ">"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:113
# d0a1442d8f93462589ffd5e96b840468
msgid "Used to specify the theme when reordering viewlets in viewlet managers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:115
# 8815c0b64eb849c8b9375d8129c3920b
msgid "(see `Components <http://plone.org/documentation/manual/theme-reference/buildingblocks/skin/components>`_ section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:2
# a97b2efde9af4fbfafc75ef40ec00800
msgid "Skin Layers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:4
# cbef814bbb40465a9b2c0c53752cd3f3
msgid "Templates, scripts, images, CSS and JavaScript files are organized with skin layers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:7
# cb46acfd586044cdb17a8787d91c3921
msgid "Note: in the context of components, \"layer\" has a slightly different meaning."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:10
# 5c6f5a141b364ba38299e08faefe2666
msgid "A skin is comprised of a series of skin layers. On the file system, each layer is a directory. In the Zope Management Interface (ZMI), each layer appears in portal\\_skins as a separate folder (containing page templates, style sheets or Python scripts)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:19
# 03df173fb5384fb79573bcbe0f08d451
msgid "These have two uses."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:21
# 46b77df579014aeeb2ee7e4e894e1b02
msgid "Firstly they keep things organized. If you take a look at the Plone Default Skin (part of which is shown in portal\\_skins in the screenshot above) you'll see that they've separated out templates, scripts, styles and images into separate skin layers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:25
# 17ee068a331c40a1800c6b8ef04be59a
msgid "More importantly they have an order of precedence. This means that an item named main\\_template in the top layer will be found and used before an item named main\\_template in the bottom layer. We will go into this in more detail on the next page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:30
# bf30fc7794c84f09b9fce46495012551
msgid "To create a skin layer through the web, simply add a new folder. On the file system, add a directory to your skins directory. You will also need to add a small amount of configuration to ensure that your directory is found and registered as a skin layer on installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:35
# 7f8072bf3a3748bba8bbf12a7c3772f8
msgid "Firstly, in [your theme package]/skins.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:42
# 09d0356cba9645d19b751a1ebc4f1c3e
msgid "Next, in [your theme package]/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:50
#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:62
# 98a45e4f043249cf8f990fe571721337
# 7e7f8453316c4cd8bb74d7ec895eb458
msgid "and"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:2
# 3e9b12ac0dd84e85a6efaee621ff80b1
msgid "Customizing through Order of Precedence"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:4
# 46c41b98e9074dcd86173e8b93e35a2f
msgid "How skin layers work and how they can be used in customization."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:6
# b7e1f532c7d24d4793171a95c58853a4
msgid "If you've worked with Plone 2, you'll be familiar with this type of customization. As we mentioned earlier, the order of layers in a skin determines which page templates, CSS files and Python scripts are processed first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:11
# cb7c69cefab44528b24dc5baa601305e
msgid "To inspect the order of precedence:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:13
# 2f63c9a1984047f6b90e17c045761823
msgid "Site > Zope Management Interface > portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:14
# 09928b0204054ac399c251fd9c9a35e5
msgid "click the Properties tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:16
# bf51e8de6ba2436fa8450115c9afc3be
msgid "You should see the layers of the Plone Default skin listed there. Layers such as 'plone\\_templates' come from the main Plone theme but there will also be layers providing templates from specific add-on products (the visual editor kupu for instance)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:21
# f3cc849260b54c0493d830f1697f8af1
msgid "|screenshot of Skin layers in the ZMI|\\ When asked to process a specific template, Plone will work from the top of this list downwards, looking in each layer in turn to retrieve the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:25
# ce007f8ada12402ebfc099a21a54ca02
msgid "At the top is a custom layer; any template placed in here will be found and used first. So, to create your own version of a Plone template or CSS file, give it the same name as the Plone version but put it in the custom layer."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:30
# 804caeef031c4c93adf37fe23ea4a95a
msgid "This is the simplest approach, but just ensuring that your version lives in a layer higher in the order of precedence in a skin than the main Plone theme layers will be enough to ensure that Plone finds it first and ignores the original version."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:35
# 3734c522d72748a99bcfb5ce0e543205
msgid "This technique can be used in two ways"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:40
# d3f49b81f1db444789cb5a30512399af
msgid "using the custom folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:38
# 07d1e805d09b4096a69cd02cc6483205
msgid "through the Zope Management Interface, you can add your own versions of templates, style sheets etc to the custom folder. This always comes at the top, so you can be sure your versions will be found first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:46
# 24118966bfe343f5bd9663c9ed609a15
msgid "adding your own skin layers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:43
# 5a2628f29d984d30978ee2a43f20a7d2
msgid "in your own theme product on the file system, create one or two skin layers, and ensure that on installation these layers are put just below the custom folder in the order or precedence. There's more information on how to do this in the next section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:48
# aa75dc640d3c41c8aaad78633daf8c26
msgid "Probably the most comprehensive description of skins, layers and order or precedence can be found in the first two sections of `Chapter 7 of The Definitive Guide to Plone <http://docs.neuroinf.de/PloneBook/ch7.rst>`_ (note that most of this book refers to Plone 2, but these sections are still relevant for Plone 3)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:56
# 0bfdd843f70b4a6ebacc5c6a2726cea9
msgid "ZMI| image:: http://plone.org/documentation/manual/theme-reference/buildingblocks/images/order_of_precedence.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:4
# 222bd07f64c346d1a5db1138a80dfa69
msgid "Where the skin lives in Plone and in your own theme product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:9
# 0e68d6dc8d9e450abdc72b2a5529897b
msgid "You can customize all page templates, skins and CSS very easily through the web."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:12
# 15a676cefa584e279fcaec66faa62c52
msgid "Site Setup > Zope Management Interface > portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:14
# 38562373e709452b9a053a88f70d3598
msgid "Locate the item you want to change, click the customize button and a copy will be dropped into the custom layer for you."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:17
# ab572b5ded0d47e8a2c315bd157e721e
msgid "You can also add new page templates, Python scripts and files (for CSS and JavaScript) to the custom layer by using the drop-down list in the ZMI. In most cases, though, you will find it easier to locate a template you want to base your new template on, customize it and then rename it through the ZMI."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:23
# 26a70cab06fc457eb4bdd12789ffed6c
msgid "Don't forget that, if you're hunting for something, the Find tab in the ZMI can be very useful."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:27
# c1bcf31d9da54771b98eecf342619802
msgid "Plone Default Skin on the File System"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:29
# f6654512c5e34a5b8fd3b4ddf8421713
msgid "All the page templates, style sheets, scripts and JavaScript for the Plone Default skin can be found in the CMFPlone product:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:37
# e722a56bf4db4be9b423687da5b8e32c
msgid "[your products directory]/CMFPlone/skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:33
# c7605065210c4c20ad54c268921cf142
msgid "You'll see there are a number of directories corresponding to specific skin layers. Most of this should be self-explanatory, but its worth remembering that only the generic templates live in plone\\_templates. If you want to track down a specific content view (e.g., document\\_view) then you'll need to look in plone\\_content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:42
# e36a36ee054f4c768d19950d57c3ec22
msgid "|The skins folder in your theme product|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:50
# 3fefbfd3d9824b378cfd5cceebed366b
msgid "/skins/[your theme namespace].[your theme name]\\_custom\\_templates \\|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:45
# da741ec4aab14c63bada77a599e9e078
msgid "custom\\_images \\| styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:47
# e4e731cf0d7a4573a4302372f4cb3329
msgid "These directories will form your skin layers. Your templates, images, and style sheets can go here. If you asked it to, the plone3\\_theme paster template will have provided blank style sheets to override the Plone Default ones."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:54
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:15
# 64de2feb3eb644fca50109f1bf98c7ca
# d0f770f0f6a94843953f9aae65d8b040
msgid "/skins.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:53
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:17
# 5edbc619a8cc448ca0fd978c147f30e3
# 853b53d5f937454996f38c5e0b2c84c8
msgid "When your Zope instance starts up, this turns your directories into skin layers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:56
# a0f6472fa5ec44c483783445b5ff9be8
msgid "|Subsidiary files used for installing and setting up the Skin|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:58
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:20
# 40a765ad88054200819ab5c5bb2c428a
# f84e31c254804f5bb2229f567e4f2e98
msgid "/profiles/default/skins.xml \\| cssregistry.xml \\| jsregistry.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:60
# e5f178a4c13e4645800df9ed8d4eb12b
msgid "When your theme is installed in your Plone site, these set up the hierarchy of skin layers, and register your style sheets and JavaScript with the registries"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:2
# b2d38c10c98c44658c4f911f739532e7
msgid "The Custom Style Sheet and Base Properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:4
# db1d65c1af9f4cacb1fffd1e12d4291e
msgid "You can do a great deal by simply overriding Plone's existing styles. There's a stylesheet available for just this purpose."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:7
# 17a4a0d52a6c472b86d92457b6d24977
msgid "You'll find an empty stylesheet called ploneCustom.css in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:9
# 705068b6daa0404caa692654302db519
msgid "[your products directory]/CMFPlone/skins/plone\\_styles or"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:10
# 9e68c4470bb340f38468df9c3d957b34
msgid "Site Setup > Zope Management Interface > portal\\_skins > plone\\_styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:13
# 281ed04dfe1f4b6691938bdd385a1f9b
msgid "This stylesheet is always loaded last on a page, and can be used, therefore, to override any other styles. There's an excellent and comprehensive tutorial on this here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:17
# 3ee045b14bda4f01be4542cee45b06f9
msgid "`http://plone.org/documentation/tutorial/working-with-css <http://plone.org/documentation/manual/tutorial/working-with-css>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:22
# b03854847ae34a2e8acf592d1fa19847
msgid "DTML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:24
# 83a49ecc2f054868928588405b58ec93
msgid "You'll see that ploneCustom.css has a .dtml extension, and the CSS inside is wrapped in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:33
# 74dfc12cee5a43afae2f83481ec854a8
msgid "DTML is another Zope templating language, which in this case is deployed so that particular variables can be picked up from a properties sheet (base\\_properties.props) - for example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:46
# 8fce11e056b641188ff2f803ae120433
msgid "We wouldn't recommend using this technique as it is likely to be phased out, but it is as well to know that it is there. You can sometimes get caught out if you're customizing ploneCustom.css and accidentally delete the top or bottom \"dtml-with\" statement, or forget to add the .dtml extension."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:2
# a69a63048c644cae950dc85e83b93a1e
msgid "Advanced Usage"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:4
# 821d4a946fd24024ac0aeeea8039e0e6
msgid "In this part we'll look at some more advanced features of the Template Attribute Language, including a more in-depth look at the TAL Expression Syntax (TALES)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:9
# a38d9a48f2fa4b7bb702c8c68dd09655
msgid "Mixing and Matching Statements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:11
# 5bebac1c21dc4320aea042a7d677d026
msgid "As you have seen in the example template, you can put more than one TAL statement on the same tag. There are three limits you should be aware of, however:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:15
# 042e028307ab451bbdf4aa81bc051227
msgid "Only one of each kind of statement can be used on a single tag. Since HTML does not allow multiple attributes with the same name, you can't have two ``tal:define`` on the same tag."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:19
# d6d478b902a547639a5f042a2ccbb445
msgid "Both of ``tal:content`` and ``tal:replace`` cannot be used on the same tag, since their functions conflict."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:22
# 5105b15b22394898a2cd7499525f1e46
msgid "The order in which you write TAL attributes on a tag does not affect the order in which they execute. No matter how you arrange them, the TAL statements on a tag always execute in the following order: ``define``, ``condition``, ``repeat``, ``content`` / ``replace``, ``attributes``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:28
# ec01b403a99b43529f5f42585a364d62
msgid "To get around these limits, you can add another tag and split up the statements between the tags. If there is no obvious tag type that would fit, use ``span`` or ``div``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:32
# a5d062471132416e881121d46693b184
msgid "For example, if you want to define a variable for each repetition of a paragraph, you can't place the ``tal:define`` on the same tag as the ``tal:repeat``, since the definition would happen before all of the repetitions. Instead, you would write either of the following:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:51
# 9f0cf04896934df2a48da13c2478453f
msgid "Note: the definition of \"n\" is actually not much useful in this example because we could have directly used \"repeat/ph/number\" in the replace attribute which only occurs once, but it serves our purpose."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:56
# 8f23e6fe063743a28136d9e0aae2eda7
msgid "Statements with Multiple Parts"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:58
# 40ac6e00ea544f379b3ed33663f58655
msgid "If you need to set multiple attributes on a tag, you can't do it by placing multiple ``tal:attributes`` statements on the tag, and splitting them across tags is useless."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:62
# 2f33459553e04a349bc92eb1ffff54c9
msgid "Both the ``tal:attributes`` and ``tal:define`` statements can have multiple parts in a single statement. You separate the parts with semicolons (``;``), so any semicolon appearing in an expression in one of these statements must be escaped by doubling it (``;;``). Here is an example of setting both the ``src`` and ``alt`` attributes of an image:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:73
# f81a980529d44c7fb8e47339402017ab
msgid "Here is a mixture of variable definitions:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:79
# c7224b68e657433e878effd0cdab8a83
msgid "**Note:** in Plone 4 or newer you can use *context/items* instead of *context/objectIds*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:83
# 7503568b272c48b68816bc222153c538
msgid "String Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:85
# da432e68b46e45a7bf7bb2392b1ef888
msgid "String expressions allow you to easily mix path expressions with text. All of the text after the leading ``string:`` is taken and searched for path expressions. Each path expression must be preceded by a dollar sign (``$``). If it has more than one part, or needs to be separated from the text that follows it, it must be surrounded by braces (``{}``). Since the text is inside of an attribute value, you can only include a double quote by using the entity syntax ``&quot;``. Since dollar signs are used to signal path expressions, a literal dollar sign must be written as two dollar signs (``$$``). For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:105
# df7f4edb2dba41dcae554ef2d2ba07f7
msgid "Nocall Path Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:107
# 43d9f6666d9e436b8500cf83caa0e93f
msgid "An ordinary path expression tries to render the object that it fetches. This means that if the object is a function, Script, Method, or some other kind of executable thing, then the expression will evaluate to the result of calling the object. This is usually what you want, but not always. For example, if you want to put a DTML Document into a variable so that you can refer to its properties, you can't use a normal path expression because it will render the Document into a string."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:115
# 02990190f69446eb81a0a5e5c550569e
msgid "If you put the ``nocall:`` expression type prefix in front of a path, it prevents the rendering and simply gives you the object. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:124
# 1775a8367bbb47dca5c0eb7619caf3d6
msgid "This expression type is also valuable when you want to define a variable to hold a function or class from a module, for use in a Python expression."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:129
# 75cb25dd16514ce78662ad68bf4d2833
msgid "Other Builtin Variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:131
# 069131faaf9e4d93a57006c49d25b7a6
msgid "You have already seen some examples of the builtin variables ``template``, ``user``, ``repeat``, and ``request``. Here is a more complete list of the other builtin variables and their uses:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:136
# 47e4daf4a4014ecc8faf7569e8ea8316
msgid "A false value, similar to a blank string, that you can use in ``tal:replace`` or ``tal:content`` to erase a tag or its contents. If you set an attribute to ``nothing``, the attribute is removed from the tag (or not inserted), unlike a blank string. Equivalent to ``None`` in Python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:142
# 59026b34d1914c6bb75eb892df28021e
msgid "A special value that doesn't change anything when used in ``tal:replace``, ``tal:content``, or ``tal:attributes``. It leaves the template text in place."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:145
# 98157dc1be7d4663b4603d43d3874020
msgid "options"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:146
# 2a690e371bd94c3ea8bcead11208365b
msgid "The *keyword* arguments, if any, that were passed to the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:149
# 23e655934f2745d48df17fdf143928dc
msgid "attrs"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:148
# d03afab9bf3349cfa74b221339723f6a
msgid "A dictionary of attributes of the current tag in the template. The keys are the attributes names, and the values are the original values of the attributes in the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:152
# 3d559d6569324232962c0592fd932027
msgid "root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:152
# 65cd6b9b2c834a9ebc95c321ec3ac042
msgid "The root Zope object. Use this to get Zope objects from fixed locations, no matter where your template is placed or called."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:155
# e03b66fa7f75428489fbc28a9a82da83
msgid "The object on which the template is being called. This is often the same as the *container*, but can be different if you are using acquisition. Use this to get Zope objects that you expect to find in different places depending on how the template is called."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:160
# abe7b05dec8547338126e4e9465825a7
msgid "An (older) alias for *context*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:163
# 8752023579314f66b1f4548e1f9e68b2
msgid "container"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:162
# d78fb102cf424c59a40e1ae28f7d3786
msgid "The container (usually a Folder) in which the template is kept. Use this to get Zope objects from locations relative to the template's permanent home."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:166
# 4d5f4f33d98240e7b08261ebff22623e
msgid "Contains the complete information about the current HTTP request that Zope is processing. See `this page in the zope.org wiki <http://wiki.zope.org/zope2/REQUESTX>`_ for further info about the request object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:171
# 9b1c8d4d814848d2ab5a72428795b75e
msgid "The collection of Python modules available to templates. See the section on writing Python expressions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:174
# e14c64615e7e42e09afd912ba2a5d9a2
msgid "For templates called from a Zope 3-style view *only*, this variable refers to the associated view class. This may then contain functions and variables prepared explicitly for the template to output"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:179
# 302e7e51cce046a3a8dbb72fbcc95f32
msgid "Alternate Paths"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:181
# 74ae646fa9404380ba5ed337a054488b
msgid "The path ``template/title`` is guaranteed to exist every time the template is used, although it may be a blank string. Some paths, such as ``request/form/x``, may not exist during some renderings of the template. This normally causes an error when the path is evaluated."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:186
# 6ead07306ce144feaf51cb7d9ca7e424
msgid "When a path doesn't exist, you often have a fallback path or value that you would like to use instead. For instance, if ``request/form/x`` doesn't exist, you might want to use ``context/x`` instead. You can do this by listing the paths in order of preference, separated by vertical bar characters (``|``):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:196
# 11944f9aaa5d438493b677ac3a1645fd
msgid "Two variables that are very useful as the last path in a list of alternates are ``nothing`` and ``default``. Use ``nothing`` to blank the target if none of the paths is found, or ``default`` to leave the example text in place."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:201
# e51d2c009ef24de6be6d426aab0ae717
msgid "You can also test the existence of a path directly with the ``exists:`` expression type prefix. A path expression with ``exists:`` in front of it is true if the path exists, false otherwise. These examples both display an error message only if it is passed in the request:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:215
# 49dc991752a84c77b04fe7197b57138b
msgid "Dummy Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:217
# fc282b57423442d784f17bcd8dfb727f
msgid "You can include page elements that are visible in the template but not in generated text by using the builtin variable ``nothing``, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:226
# fa59bce985cf4521af084aae64bc23c2
msgid "This can be useful for filling out parts of the page that will take up more of the generated page than of the template. For instance, a table that usually has ten rows will only have one row in the template. By adding nine dummy rows, the template's layout will look more like the final result."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:233
# 57c608fefec547b39c31feedf0d9ba56
msgid "Inserting Structure"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:235
# 2b6285ae38ac4dad81196bbd9383efe1
msgid "Normally, the ``tal:replace`` and ``tal:content`` statements quote the text that they insert, converting ``<`` to ``&lt;``, for instance. If you actually want to insert the unquoted text, you need to precede the expression with the ``structure`` keyword. Given a variable ``copyright`` with a string value of \"© 2008 By <b>Me</b>\", the following two lines:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:247
# 1e8fe4b1708b4167858013e4c9a7a6ad
msgid "...will generate \"© 2001 By <b>Me</b>\" and \"© 2001 By **Me**\", respectively."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:250
# 42a35397c0b74c04b799750c819bf22f
msgid "This feature is especially useful when you are inserting a fragment of HTML that is stored in a property or generated by another Zope object. For instance, you may have news items that contain simple HTML markup such as bold and italic text when they are rendered, and you want to preserve this when inserting them into a \"Top News\" page. In this case, you might write:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:263
# 5dcfd83d06ab4222ace28d2845903b43
msgid "Basic Python Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:265
# 083f750c7a2a44d9a0a2469e179a74c8
msgid "A Python expression starts with ``python:``, followed by an expression written in the Python language. Python is a simple and expressive programming language. If you have never encountered it before, you should read one of the excellent tutorials or introductions available at the official website `http://www.python.org <http://www.python.org/>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:271
# f7a40f0799934a54809654e3f87b8e6b
msgid "A Page Template Python expression can contain anything that the Python language considers an expression. You can't use statements such as ``if`` and ``while``, and Zope's security restrictions are applied."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:276
# 307b2d87bd654b64862e3a2661f731d3
msgid "Comparisons"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:278
# ba0eabb314fa43f1b48f34ada5af51d6
msgid "One place where Python expressions are practically necessary is in ``tal:condition`` statements. You usually want to compare two strings or numbers, and there isn't any other way to do that. You can use the comparison operators ``<`` (less than), ``>`` (greater than), ``==`` (equal to), and ``!=`` (not equal to). You can also use the boolean operators ``and``, ``not``, and ``or``. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:294
# 7e5aa833f71142c8914079da6b488b1d
msgid "Sometimes you want to choose different values inside a single statement based on one or more conditions. You can do this with the ``test`` function, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:310
# 1b98886e8bd14e508c778b3de542d13b
msgid "Using other Expression Types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:312
# de9a17e2a9a14490b53ff8892ad9465f
msgid "You can use other expression types inside of a Python expression. Each type has a corresponding function with the same name, including ``path()``, ``string()``, ``exists()``, and ``nocall()``. This allows you to write expressions such as:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:323
# c61d6a84003f4777ac86f4af488b32df
msgid "The final example has a slightly different meaning than the path expression \"request/form/x \\| default\", since it will use the default text if \"request/form/x\" doesn't exists *or* if it is false."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:328
# 6c68b9a87b284d8992e9e4b806d98c76
msgid "Getting at Zope Objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:330
# 8f02a272bb04400caf36a4ab57ff9407
msgid "Much of the power of Zope involves tying together specialized objects. Your Page Templates can use Scripts, SQL Methods, Catalogs, and custom content objects. In order to use them, you have to know how to get access to them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:335
# bafd62a022a646a8b702d136702c1a0b
msgid "Object properties are usually attributes, so you can get a template's title with the expression \"template.title\". Most Zope objects support acquisition, which allows you to get attributes from \"parent\" objects. This means that the Python expression \"context.Control\\_Panel\" will acquire the Control Panel object from the root folder. Object methods are attributes, as in \"context.objectIds\" and \"request.set\". Objects contained in a folder can be accessed as attributes of the folder, but since they often have Ids that are not valid Python identifiers, you can't use the normal notation. For example, instead of writing \"context.penguin.gif\", you must write \"getattr(context, 'penguin.gif')\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:346
# 84b96eb2deaa49388ef16e832b4f6b3f
msgid "Some objects, such as ``request``, ``modules``, and Zope Folders support item access. Some examples of this are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:353
# 5d8533d229084b4c830f0a00b3b46fef
msgid "When you use item access on a Folder, it doesn't try to acquire the name, so it will only succeed if there is actually an object with that Id contained in the folder."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:357
# 32a999a8bf524406bbd55488dcc21f66
msgid "Path expressions allow you to ignore details of how you get from one object to the next. Zope tries attribute access, then item access. You can write \"context/images/penguin.gif\" instead of \"python:getattr(context.images, 'penguin.gif')\", and \"request/form/x\" instead of \"python:request.form['x']\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:363
# cb39138c4a8845b08b68bd691efdbf55
msgid "The tradeoff is that path expressions don't allow you to specify those details. For instance, if you have a form variable named \"get\", you must write \"python:request.form['get']\", since \"request/form/get\" will evaluate to the \"get\" *method* of the form dictionary."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:369
# fc11d6c53fb74e10854906ce092138f8
msgid "Using Scripts"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:371
# 4f3a993c33b64939bd0d4dce79d7d921
msgid "Script objects are often used to encapsulate business logic and complex data manipulation. Any time that you find yourself writing lots of TAL statements with complicated expressions in them, you should consider whether you could do the work better in a script."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:376
# 9325f08dba6e404ba4bfccc2bf75f6c2
msgid "Each script has a list of parameters that it expects to be given when it is called. If this list is empty, then you can use the script by writing a path expression. Otherwise, you will need to use a Python expression, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:386
# 8dec4b6ee1b3478abfcebd2a70707e4c
msgid "If you want to return more than a single bit of data from a script to a page template, it is a good idea to return it in a dictionary. That way, you can define a variable to hold all the data, and use path expressions to refer to each bit. For example, supposing we have a ``getPerson`` script which returns a dictionary like ``{'name':'Fred', 'age':25}``:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:399
# 908c735d80bf48b7b9a9b9bfd7d1bb13
msgid "Calling DTML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:401
# 30bc0732731b4508bcf57836e254460c
msgid "DTML is another templating language made available by Zope, mostly replaced by ZPT nowadays, but still in use. You can read more about it in `the relevant chapter of the Zope Book <http://www.zope.org/Documentation/Books/ZopeBook/current/DTML.stx>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:406
# 29079f43293d42469911f2d5ac2a8e6f
msgid "Unlike Scripts, DTML Methods don't have an explicit parameter list. Instead, they expect to be passed a client, a mapping, and keyword arguments. They use these to construct a namespace."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:410
# b0126460f7b747308cde97d3d4997977
msgid "When Zope's ZPublisher publishes a DTML object, it passes the context of the object as the client, and the REQUEST as the mapping. When one DTML object calls another, it passes its own namespace as the mapping, and no client."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:415
# 7e94851333ff4037a79899404c11f2e4
msgid "If you use a path expression to render a DTML object, it will pass a namespace with ``request``, ``context``, and the template's variables already on it. This means that the DTML object will be able to use the same names as if it were being published in the same context as the template, plus the variable names defined in the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:422
# 7d95d4653f4840f2b8e95dbd3d0e1476
msgid "Python Modules"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:424
# d0b0321237b94185a2cbe41a13efca04
msgid "The Python language comes with a large number of modules, which provide a wide variety of capabilities to Python programs. Each module is a collection of Python functions, data, and classes related to a single purpose, such as mathematical calculations or regular expressions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:429
# 629f94dda7644beaa25c27cb51128146
msgid "Several modules, including \"math\" and \"string\", are available in Python Expressions by default. For example, you can get the value of *pi* from the math module by writing \"python:math.pi\". To access it from a path expression, however, you need to use the ``modules`` variable. In this case, you would use \"modules/math/pi\". Please refer to the Zope Book or a DTML reference guide for more information about these modules."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:436
# 28d49b6ea4024bdfb7e7afc2fedbeeef
msgid "The \"string\" module is hidden in Python expressions by the \"string\" expression type function, so you need to access it through the ``modules`` variable. You can do this directly in an expression in which you use it, or define a global variable for it, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:446
# b2e059c7beb2494f9e842030bfaf1102
msgid "Modules can be grouped into packages, which are simply a way of organizing and naming related modules. For instance, Zope's Python-based Scripts are provided by a collection of modules in the \"PythonScripts\" subpackage of the Zope \"Products\" package. In particular, the \"standard\" module in this package provides a number of useful formatting functions that are standard in the DTML \"Var\" tag. The full name of this module is \"Products.PythonScripts.standard\", so you could get access to it using either of the following statements:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:460
# 811c5acd41e645ada73c4b39e5a88c5e
msgid "Most Python modules cannot be accessed from Page Templates, DTML, or Scripts unless you add Zope security assertions to them. That's outside the scope of this document, and is covered by the `Zope Security Guide <http://www.zope.org/Documentation/Books/ZDG/current/Security.stx>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:466
# bc648125a8a347e9b4566567e42fde29
msgid "Special HTML attributes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:468
# 5e745af45bb0482f95e0a6cc772d8e6c
msgid "The HTML boolean attributes checked\\ *,* selected, *nowrap*, *compact*, *ismap*, *declare*, *noshade*, *disabled*, *readonly*, *multiple*, *selected* and *noresize* are treated differently by tal:attributes. The value is treated as true or false (as defined by tal:condition). The attribute is set to attr=”attr” in the true case and omitted otherwise. If the value is default, then it is treated as true if the attribute already exists, and false if it does not. For example, each of the following lines:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:483
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:497
# b10757d653664c90ad2cdee3f8e71ff5
# a6f995f684d345ed9b5c9f1c3c71d915
msgid "will render as:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:489
# 5a33248ddef249079529e9d65f0d92fa
msgid "while each of these:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:503
# 6372a82b1fe14d76b46af2ed7f0b114e
msgid "This article contains information and examples from the `Zope Book <http://docs.zope.org/zope2/zope2book/source/index.html>`_, © `Zope Developers Community."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:506
# bb05ccae91834594bf6b45f83381d45e
msgid "<http://docs.zope.org/zope2/zope2book/source/Contributions.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:2
# 90276fda59774e09a386551b963dc79a
msgid "Create an Alternative Edit Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:4
# f7aeb38828e444ba953cd0927db83145
msgid "Suppose you've a content type and you want to keep the default \"edit\" template, but you want also to create another edit template suited for editing only some particular metadata."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:8
# eeff53ad1b184b52a4e2a77de773f412
msgid "Think of the standard edit as a \"full\" edit, while your new edit is a custom version. They co-exist together. This method also works if you've already a mycustomtype\\_edit edit template, and you want to have another one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:14
# 09f48e07813f4a63ae2a50b304ce9af6
msgid "Limiting the Fields Available to Edit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:16
# 8c1db46132f74b74b7cb42f5525052b1
msgid "Step 1: Copy the base\\_edit and the edit\\_macros (you can do it by simply customizing them) and change their id (rename) to mynewedit and mynewmacros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:20
# 4b6c921c21f449f382b2128002932ecf
msgid "Step 2: Modify mwynewedit to point to mynewmacros:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:22
# 7be3e618bafd4d0e8a9c4aa638181884
msgid "edit\\_template python:'newemacros';"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:23
# c579c321bf634a27bef79e1c671752b0
msgid "edit\\_macros python:path('here/newemacros/macros \\| nothing');"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:25
# 38017d0d62ca425680b94b6c17bb2126
msgid "so this edit template will pick up the macros from your custom version."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:27
# 82347b360bae4393927b1ee84fb141bb
msgid "Step 3: Modify mynewmacros as you need. For example, if you want to display only some fields, you can (in<metal:block define-slot=\"widgets\"> which manages widgets display) change the template as below:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:47
# d51b433452dd4c748335029482db911a
msgid "So only 'title','myfield1','myfield2','myfield3','myfield4' will be displayed and you will avoid people editing unwanted fields (even if they can)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:51
# 9c7656bbbf274c1cb52b0b97507e3677
msgid "Step 4: If there's a failure, the user should go back to your form, so in mynewedit -> actions, change failure from string:edit to string:mynewedit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:56
# 6463d27880184c69a01d661b16981e17
msgid "Dealing with Validation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:58
# 39e83c5f23564de5aa8c7c2ea3acf405
msgid "Suppose you've some validated fields, or you want to run custom code when the user saves the form. The validation will kick in when you'll press \"save\". If you've some required fields, but they're not in the fields listed above, you'll get the red warning and your data will not be saved. So you have to bypass it, and we need to do it in two places:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:64
# 42dc51827e5d40a2be59c53795d88ae1
msgid "Step 1:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:66
# ef0e2b1180cf4579a16b556d4838d2b4
msgid "edit mwynewedit -> validation -> delete the validation step."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:67
# 4965cd02247e471fab104fda7ab37765
msgid "edit mwynewedit -> actions -> change string:content\\_edit to string:mycontent\\_edit (a custom content edit)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:70
# 4d1155d83986403cb3e8b16ef582a8e7
msgid "Step 2:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:72
# 3e154ced2e064d9fab46043d1dd09ee6
msgid "Find content\\_edit in portal\\_skins/archetypes and customize it. Then rename it to mycontent\\_edit. Here you can add custom code, sending mail and so on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:75
# 81421a6b3998493abb346914308b034c
msgid "Edit it -> actions -> delete the validate\\_integrity step"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:76
# 85d285e646f549ec824715d51e3d04fe
msgid "Edit it -> actions -> change any string:edit to string:mynewedit , so after saving you'll go to your edit form if there are any failures (should not if you remove the validation)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:80
# 875b9850600240ffb187a166d83ea45e
msgid "Now your form can edit your content type without any restrictions. If you need some restrictions, just don't delete the validation steps above and customize the validation scripts validate\\_base and validate\\_integrity (renaming them and pointing to them in the validation steps above)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:86
# 934d49d061d042cda341cf014fd371be
msgid "This is enough to perform your \"very\" own custom edit, with custom saving and custom validation, leaving the default one untouched."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:4
# d5989706dd084d19848803074504a918
msgid "Some final notes about customizing Archetypes view templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:6
# e812410ed5ca4958999f2b10e9fade55
msgid "So, now you should know all of the following information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:8
# c67f5151c5ae4e8590e5c49e4be0be1d
msgid "How to identify which parts of an Archetypes view template are generated by the ``header``,\\ ``body``,\\ ``folderlisting``, and ``footer`` macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:11
# ef581b5181b747fd9622a5b73e634c36
msgid "How to create a custom view template that overrides one or more of the ``header``,\\ ``body``,\\ ``folderlisting``, and ``footer`` macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:13
# 114e15e787d24ea9bf05eb5529e4f9c3
msgid "How to create a custom widget template that works in the Archetypes framework"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:15
# c96ad1f08ca34e3396382f5ee1320bdc
msgid "How to create a custom ``body`` template that uses Archetypes' widget rendering templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:17
# 94d9b8defa494a2bb8472253804fc206
msgid "How to inject custom CSS code and links to custom CSS files into your view template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:21
# b02601384b4f45f4b5de50c8aa664796
msgid "Some Final Notes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:23
# f3131fb189e14cd28fc84382290ace99
msgid "I want to cover a few details about how to apply all of these tools. Some wise guy somewhere said something like, \"To a man whose only tool is a hammer, every problem tends to look like a nail.\" Your success with Archetypes is very contingent upon selecting the appropriate tool for your specific problem. So, use the following outline of the basic AT page layout as a guideline to determine what should be customized:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:30
# eec65b0093874ceea911f79f78278f49
msgid "``header`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:32
# 61fce12c0e3c417a855a7a487af1a8f3
msgid "Title (or id if no title is present)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:33
# c09817778c974e1c89d43cad1ba956f4
msgid "Document actions (e.g. print, send to)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:35
# 78f28df3f9f3447bb983c214d0c8065b
msgid "``body`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:37
# 65d8b76e0bfb4542b211b150164f4942
msgid "List of fields"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:39
# be4b3dfe662e458bb075f84bab0310bd
msgid "Field label (from the ``label`` macro in the view template, if one exists)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:41
# d0d3972488ca4d8ead3d3b984bad45f1
msgid "Field value (from the widget template's ``view`` macro)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:43
# 9eec64ecc79745799d21fbd7e28edcc3
msgid "``folderlisting`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:45
# 114c72b318f94d39a12835061b37a120
msgid "List of links to each sub-object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:47
# 8454ad934612451ab10baf01f135d1a2
msgid "``footer`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:49
# d1b464c091ec43c18846d9c9e53f11f0
msgid "byline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:51
# f6e2d29622f94b528315fa5230127bd8
msgid "So, based on which parts of this standard layout you need to customize, use the appropriate macro. Keep the infamous \"Foo\" template around to help you with debugging. See the next page for a reference on customizing Archetypes view templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:2
# ccb84c52b0c542a5b98a0a883ca2538b
msgid "Customizing Widgets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:4
# 8eb1e8eb9e424f029e44d2d98657ead5
msgid "This page shows you how to customize widgets, and gives some examples of what kinds of neat tricks can be done with widget customization."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:7
# 10863a2739ea4f13b582515d75e383a4
msgid "As we've already said, widgets are what Archetypes uses to display individual fields. Archetypes' built-in templates, ``base_view``,\\ ``base``, and ``widgets/field`` use each field and the field's associated widget (specified in the schema) to determine which widget template to use. However, you can override a widget's template, as we will show below. Furthermore, you can create a whole new widget class, which will have data and operations specific to the display of your custom data type. Read the next section to determine how much widget hacking you need to do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:18
# 921f8b53d1c649869d41287cc6e3d6ca
msgid "How to Determine If You Need to Create A Custom Widget Class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:20
# e58f0c867cf747e2bb17f2dfd08ded67
msgid "If you cannot find a widget in Archetypes or in a readily-available third-party product that does what you need, use the following set of questions to determine if you can just customize the **template** versus creating a new **widget class**. If you answer \"no\" to the following questions, a custom template is all you need:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:26
# 76db670959e247a0a68b7b8c23f14fe0
msgid "Does the display of your field require helper functions to do conversions or formatting that would be difficult or cumbersome in TALES?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:29
# 47b2de9615a849759214c41faa43c6c7
msgid "Do you have multiple AT-based classes where some fields in those classes share all of the the following characteristics?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:32
# 71ac09269e0047029bbb21e3368f4fde
msgid "The same data type"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:33
# 76e21108e9eb4188a594935fc0da520c
msgid "Similar, needs for display"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:34
# a2512d3c1eb646bbb8bfa4abe114c0f0
msgid "One or more attributes that are class-specific that apply to the display (i.e. the most appropriate place to set these attributes is in the schema definition)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:38
# 88e13bbc6be54153be58f3e6bc46c904
msgid "Does your custom data type need some super-specific marshalling when edited or searched that you can't get from any standard AT widget class?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:41
# a01ad337e1fd4af0b5e137b1c108a965
msgid "Do you need to override or change the way that Archetypes handles the processing of the ``edit`` form for a particular field?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:44
# d2a86768871445da8160108a75c1ea9b
msgid "If you answered yes to most of the questions, then you might need to create a Widget class. If the questions aren't clear, take a look at the `RichDocument tutorial <http://plone.org/tutorial/richdocument>`_ . If you've got a specific enough use-case (like RichDocument) that you *need* custom widget classes, you're probably able to make it happen just by the sheer fact that you *know* you need them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:52
# 11890bd9a2b144a086a1f5c0e18e1508
msgid "Customizing Widget Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:54
# a03dfb62302d42db95579420aa18d3cf
msgid "Creating custom widget templates is not hard, so don't be afraid. I assume if you're reading this far, you've already determined that you don't need a custom widget class, and just need to tinker a little bit with how things are done by default."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:59
# 118456c38da24ddcbdac57d556e312f4
msgid "First, you should understand what you have control over by customizing a widget template itself. You're controlling the display of the widget's *data*, but not its *label*. For a StringField called ``myfield``, the default display is something like:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:64
# b2686b05a1c24b339bf89d6b22eeb89a
msgid "**myfield:** some value"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:66
# 2e99be93ce764d8bb6e92734a4c47897
msgid "The only thing we can control is the display of what comes after \"**myfield:**\\ \", which is just the data contained within the field itself (we'll talk about how to customize the display of labels later). However, if we customize the template, we can insert *all kinds* of nifty HTML into there! Take a look at the default template for StringWidget, 'widget/string'. It's pretty straight-forward. As you can see, there are three important macros in a widget template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:74
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:57
# 7f450a52e68941dfab18e984e514f4d0
# 0fed2c5220ec47e8b4e827880e55e04e
msgid "``view``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:75
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:58
# 67745bae4ab842a8af4ff081be69b95b
# 4fa373812d464219807f956ad3bf8434
msgid "``edit``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:76
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:59
# 113651442eee4e668728bc60ca7f4343
# df50e23bd5ce488c84f8febdfdbddf00
msgid "``search``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:78
# 7addcd24951c40c281c55c2201ae9807
msgid "Widget templates must define all three macros, however we can pass-through to the default when we aren't customising."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:81
# 0d200c27634e4db7870dcdb3eaac7281
msgid "Don't concern yourself with the ``edit`` and ``search`` macros; remember, we're customizing the *view*. Let's start by creating a new skin template called ``my_string_widget``. Start with this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:118
# f3810ad634234458bf2fbf3d853b0aac
msgid "(NB: I'm breaking AT's naming convention here. You don't have to do that, but I find it more convenient and understandable to add a ``_widget`` to the names of my widget templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:122
# 8011f773b6b749f9aad9a64db95dbb69
msgid "Notice we didn't copy the definitions for ``edit`` or ``search``, we also get the default template to generate the markup surrounding the view widget, and just populate the ``inside`` macro."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:126
# c2e9546a514e4513a899c71443191feb
msgid "Also, notice how there is no display code for the label; that's handled elsewhere. If you're wondering where the ``accessor`` variable comes from, that's part of the widget display code. The widget class defines the following local variables that are accessible inside widget templates:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:133
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:66
# 2cf12e8cf95246e08c53dd42ec1bcaa4
# eac9e52698d44e8391aa9f6a15717044
msgid "``accessor``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:133
# a81190b378be47eca20e66bf8ac9f125
msgid "The accessor method for the field. Call it to retrieve the value of the field."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:135
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:68
# e1009f8af6a749f08b929385fa96d581
# e05086aa547f4747b5c1593778b628cf
msgid "``fieldName``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:136
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:69
# c2c7f54f51294d2e91e6f2ab81c38ba9
# 8a2ee4e7d9e74f6b91d482429962e435
msgid "The name of the field."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:137
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:70
# 98b1977f06f448d79e1c7d73f586ec85
# 47635c54a6e34f7bb1152457361a83a7
msgid "``widget``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:138
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:71
# c9d7cc820f6d4e279cf6522c535c22e9
# 6732320be2444172aaa11cc1965a3068
msgid "The widget object for the field."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:139
# 7f84ed3f86624877a9874dcb9668c92f
msgid "``field``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:140
# a29826f5215d4bfb86b8738308aac9c8
msgid "The instance of the field class itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:143
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:74
# e6530e3359c64ff895649a825c3405eb
# 53a1b030cede40c984c35bb59341c189
msgid "``mode``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:142
# 7ff84a7fd03247ef9925c7b1c22b9bf7
msgid "Will be ``view`` or ``edit``, based on the action being taken. For our purposes, it should always be ``view``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:145
# 9157152661cb4089a1a324fba25a255d
msgid "Now, let's modify the way that our StringField displays. For brevity, I'll just show the ``view`` macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:148
# 8f4ba78ab43845559b566bcf83fb7dc7
msgid "Then, we should tell our type's schema to point at the new template, by setting ``macro``:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:163
# 64adbac614244f5b882a17c7e4ddd1da
msgid "Be sure to restart Zope and reinstall using ``portal_quickinstaller``. Now, our StringField, when rendered, looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:170
# a119ce0dad9b43488d703bf0a2fdcf40
msgid "Custom Widget"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:172
# 708e94f46d8349ef91487668c7383275
msgid "Yes, folks, it's *just that easy*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:4
# fd7ae28847004641a32eb7664de146cb
msgid "Goals, Pre-Requisites, and Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:6
# 555ced52453a406a8515f90b53169bd9
msgid "So you think Archetypes' way of automagically generating HTML to view your object isn't pretty enough? Well, you've come to the right place! I'm going to teach you how to dress up those boring, drab views and make them *shine*!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:12
# 4d7abeff5e894ddf8e87d661b2211428
msgid "Goals: What will I learn?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:14
# e1a218b8c3b64a69b0665ef80ef3c6ab
msgid "How Archetypes generates views for content objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:15
# f3664e8ccaf6468c8bccfae0928fcf77
msgid "How much control Archetypes gives you"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:16
# c39f02073cb7479c87b0feac63232270
msgid "How to change the HTML output for a particular field by creating a custom widget template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:18
# 0dbfc713b8474757b5be30129016f909
msgid "How to use the Archetypes template framework to make minor changes to the default AT-generated view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:20
# 90b309d8442e4108b72ffc2ef6da7ee6
msgid "How to customize the HTML output for the entire view of an Archetypes object by using the ``title``,\\ ``body``,\\ ``folderlisting``, and ``footer`` macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:25
# bb26e90ea66142b6a552723311b4dee5
msgid "Pre-Requisites: What do I need to know?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:27
# 79810eb2dddc46c3b5af5425c5eb63ba
msgid "How to read and write Python code"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:28
# 7a79eed877024e3da54bbefd3c50734a
msgid "How to read and write Zope Page Templates (ZPT)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:29
# 0f43109a509741119d9c453907aa89e9
msgid "How to create Archetypes-based products (ArchGenXML is acceptable)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:32
# 6237b224badf47d5b583c76d6ce097eb
msgid "Tools: What do I need to have installed?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:34
# 74d51649abcf44c4ac7afd052c7f3f31
msgid "Plone 2.0 or 2.1"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:35
# bea21c4eeeda4c02bd2c18177e48fbf4
msgid "Archetypes (included by default in Plone 2.1)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:36
# 4bea38fc86c0477b9f043a2f7d977536
msgid "`The ATViewTutorial product <http://plone.org/documentation/manual/theme-reference/buildingblocks/skin/templates/customizing-at-templates/atviewtutorial.tgz>`_ - this product has examples of the concepts in this tutorial"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:4
# ae3910f3e5f44d28b1c800c69f9615a0
msgid "A reference for customizing Archetypes view templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:7
# 3a98fc68dc9b4feba008587304a1a8ce
msgid "View Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:9
# 1a8c163f9c01404b97074a4a6a89c3ed
msgid "View templates are named according to the ``portal_type`` of the class. To create the name for a view template, follow these steps to create the name of the template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:13
# 049d7a43f01847b5ace55b492a6413e3
msgid "Change the ``portal_type`` to lowercase."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:14
# 89e2895d60554537acbe567e40ef0836
msgid "Replace all spaces with underscores (``_``)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:15
# 4e54cfc777b343c3ba017f9e2c094316
msgid "Append ``_view`` to the end of the name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:17
# 240f96f6f7b94b2e92350f6f77ecdcc4
msgid "Archetypes will automatically locate templates with names created according to the above steps, and will make use of the macros defined within the template. View templates can define one or more of the following macros:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:25
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:66
# fcf21aadd3c1403486b71f538aabbd7f
# afb0afd125c04b5a9921391bb627a710
msgid "``css``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:23
# 0fe2e9f693fc44a4be4fcd80ea295b30
msgid "A macro for inserting type-specific CSS code, including ``<link>`` tags pointing to custom CSS files. There is no default macro for this within Archetypes; Archetypes uses the existing CSS styles in Plone to render AT-based objects."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:28
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:42
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:70
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:106
# 64549b264f3b479f9866fa2653a695a4
# 9fde897130c645d18abc5616e9ff8755
# 3ffe0387337b4c438642a3d4892050d4
# 89b1b8bb56dc4d7581fb5f738e3cebfd
msgid "``header``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:28
# 044cbdcd9886459aafc3b4f5f91a92c9
msgid "This macro, by default, generates the ``<h1>`` tag containing the object's title and the document actions (print, rss, e.g.)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:33
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:43
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:73
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:107
# 070e538bd6ec4e02a6b959e1da1288ad
# fd69c68631f04c22b2411f9866979336
# fae551cde1a54ef5a59098291fb5ebe5
# 4bc84bb680f04f07a80f4745664c4e33
msgid "``body``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:31
# 3b4d537f23d24e0f9cd39957c15ef1c3
msgid "The location where the fields and values are displayed by default. When rendering fields using the existing widget mechanism, be sure to ``tal:define`` the variable ``field`` as the current field; the widget templates depend on this variable being set."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:37
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:44
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:78
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:108
# bc6153eb984746d19cdaa1b73357de50
# 28e1fec6696d45368d73884a70ebe433
# 469b600d3c3c41c5a1cf5d129a3237da
# b27625e1af374d44a9af84a1e2696d90
msgid "``folderlisting``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:36
# fca8d9d4d0a64c848695b215fd26d5e5
msgid "This is the folder listing display when viewing the ``view`` tab of a folderish object. This is **not** the same as the ``contents`` view."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:39
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:45
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:81
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:109
# 8d1e0953368b435f9caf66bd355c3944
# 9d722d8f52b94b3d863ad5f6be51ba28
# 8456951808f94e6a90b3232a301e347c
# 8f21299971a4420b84463000f943e031
msgid "``footer``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:40
# 48ea79e3e3054747a8fb8ea3a109b816
msgid "By default, this is where Archetypes puts the byline."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:42
# 7081f46d529b4757b7f48fe862cc829c
msgid "``label``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:42
# c6eb945fcedd4071a10329be114373ed
msgid "This template generates field labels."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:44
# 7640e4b2359b43e09b157cdb3bf757dc
msgid "For any of these macros that is not defined in the custom view template, Archetypes will use the default behavior in its place, taken from ``base`` or ``widgets/field``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:49
# 14e24d3a3c5c42c6832603af2624a07b
msgid "Widget Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:51
# 4865f06453794764a7576a9d7651ba6c
msgid "Use custom widget templates by naming them in the schema - insert a ``macro`` parameter into the widget's constructor in the schema, and set the value to the name of the template. For example, ``macro=\"my_widget_template\"``. Widget templates must have the following three macros:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:61
# 6e2bb126d0584f5494d8ce7e5593c683
msgid "Widget templates have the following local variables available within TALES expressions:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:65
# ee3a66f610364ebf826e58fb6b9b455a
msgid "The accessor method for the current field. The code ``<p tal:content=\"accessor\" />`` will cause the field's value to be written within the ``<p>`` tag."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:73
# 35cdf4a2ddf345d48d0ba6ee6034aee4
msgid "Will always be ``view`` for view templates, but is useful for, say, error checking."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:2
# 8bf4b8ae2d8446ba9e094823e9e53d0c
msgid "Total Control: The View Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:4
# 563263c25943458190346524dfef0c92
msgid "This page describes how you can control every portion of the HTML output in the content area by creating a custom view template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:7
# 6f5f094385414a1ab2f298de47f6ecaa
msgid "Okay, so you've hacked up some custom widget templates, and they're basking in the glory of your newfound power, yet you're still not satisfied. You want to control it **all**! Well, *I've* got the information for *you*!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:13
# e351097a4778417b868125e27c4e13c8
msgid "Archetypes and Type-Specific View Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:15
# 016cb9102fe74fe2b2578f2e0312453e
msgid "Archetypes automatically recognizes templates with specific names, and uses the code within those templates to display your AT-based object. All of this magic happens within the ``base_view`` template. To create a custom view template, convert your type name to lowercase (the name that's listed in ``portal_types``, or what's returned from ``myObject.portal_type``). Now, replace spaces with underscores ( \\_ ). Finally, add ``_view`` to the end of the name, and you've *almost* got a custom view template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:24
# d6f6d160129b473f81a3b4821583ed9d
msgid "See below for examples of type names and their corresponding view templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:27
# 30be16df06b34e519ef3c076e8b67509
msgid "Type Name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:29
# 2880fe4335e8464ba45c6171baaaefa9
msgid "View Template Name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:31
# 58758e6cc52a4836a7247a5afd206523
msgid "My Type"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:33
# ec88a9462267450b9335406944579cb6
msgid "``my_type_view``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:35
# 87826ed7fcf941df8683a97a64be964c
msgid "SomeTypeV2"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:37
# 24740cc6c51f42f6b022409f7f3603cb
msgid "``sometypev2_view``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:39
# 1918c4d0da6842bab423feb22e4bff2c
msgid "Now, to remedy that \"almost\" part of the above paragraph, define one or more of the following macros in your template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:47
# 67d7100990094925b8883e5d88de16d9
msgid "Voila! You've got a custom view template. To see how this works, create a simple template (named appropriately, of course) that contains the following code:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:61
# 80e87cb3a1fb423fbb9efb279661f67e
msgid "And, just like magic, you should see, rendered in your content area:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:67
# 21f7757f83e94be09dda799f62d52f23
msgid "The Infamous \"Foo\" View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:69
# 4b00f16caa334b3db5485cbdb4a3f1f5
msgid "But Wait! Where Are All My Fields?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:71
# 7f2b59dd841249d0ad60fe38e80ca016
msgid "So now you want your data back. You said you wanted total control, and now you don't want total control. But the point of this tutorial isn't control, it's *shine*. So, let's explore how to mix and match existing AT templates with your custom code to make a shiny template that renders exactly how *you* want it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:77
# f9f7c84b8aaa4d0d88f45e96d3ae396f
msgid "First, keep the above \"Foo\" template around. It's very useful when you aren't quite sure which of the four macros is generating a portion of the content area. Simply comment out one or more of the macros, and you'll see which macro generates what portion."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:82
# 4f31830c30f04e4d921beb7d3762b32b
msgid "Now, do you remember when I talked about using the ``base`` template as a starting point for creating custom templates? Well, that's what we'll do. Let's start by customizing the footer. The ``footer`` macro in the following template is copied directly from 'base':"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:91
# ad9e8437e0e0469091119ce80797fbdf
msgid "Now, let's add something below the byline, say, some important information that applies to every instance of your custom type::"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:96
# e57b2916c1194a2c8d4c8109055f1051
msgid "Get the byline - contains details about author and modification date. Important information that applies to every instance of my custom type."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:99
# f782e80dac4247cd92ac0b6c500b7070
msgid "Notice that all we had to do was copy the macro from ``base`` , and add the `` <p>`` tag with some text in it. Notice that, for example, we could have used ``tal:content=\"here/getCustomFooterData\"`` in the ``</p> <p>`` tag if we had defined a ``getCustomFooterData()`` method in our class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:105
# 2d34c7c04ae24b5cb0129f77586c7b14
msgid "Now, let's apply this concept to the ``body`` macro, and play around with displaying fields. First, we'll start by coping the ``body`` from ``base`` into our template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:109
# 14ce7102575648e3972a9bde51e4e884
msgid "Now, we'll change up some things by adding a little bit of code into the macro. First, notice that the ``tal:repeat`` is repeating over all the fields that are not metadata. Therefore, if you want to do something for every field, put it inside this macro. You could (conceivably) rearrange the macro so that the ``tal:repeat`` loop is inside another containing block, and put TAL code before and after the display of the fields, or make use of the ``first`` and ``last`` ``repeat`` variables to achieve the same thing. So, let's do two things to customize our ``body`` macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:118
# e5b2e93685904712901dae3cf2147d7d
msgid "Surround all the fields with a ``</p> <div>`` that has a custom CSS class, ``my-custom-at-body``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:120
# 9f0808322c71480fa6388e5c26367d58
msgid "Surround each field with a `` <div>`` that has a different custom CSS class, ``my-custom-at-field``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:123
# 9cf5af02b06d432abea5039ec24570e3
msgid "These changes, as I'm sure you've figured out, aren't going to make much of a difference (if any) in the look of the rendered page without actually writing some custom CSS code. We now introduce the ``css`` macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:135
# 1d9dc61e3eab45679e3cd7c999caccf6
msgid "Now, we can define a CSS stylesheet called ``my_custom_css.css`` that contains our custom CSS code:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:150
# de26b9ba9e054f2f80b5aa5fbf13ec8a
msgid "Archetypes inserts the ``css`` macro into the '' tag of the rendered page, making our custom CSS code, linked files, and includes available within the page. Our end-result would look something like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:158
# af75112c5fb242ad91bbe82f67fea63f
msgid "Custom Body Macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:159
# c623d35f35d84c098d7f5cfba73da49f
msgid "If we had created custom widget templates, those would be applied to the rendered page as well."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:163
# cb446b88c6a648a1a893b7bf2fddfc9f
msgid "Customizing Labels"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:165
# 0dbd1026c0644cf683aaed0b3fd38849
msgid "There's still one element of control that we're missing: we still can't override the display of a field label. By customizing the display of the label, we can insert images, links, etc. into the page instead of the default label."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:170
# a3fe02d4fc374ea99a6eebcf9710b85a
msgid "The macro included in our custom view template below will do that magic for us:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:181
# 66441bc0bc294ae09d964de4109c1a17
msgid "Notice that I've only overridden the default label for fields labeled \"myfield\". The ``label`` macro in ``widgets/field`` is where the default behavior can be found. The final result looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:189
# 22e9e63432b54ce3abb1d20af2831231
msgid "Customized Label"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:190
# 5bcd89221c58433d8dcb8f518bd62d86
msgid "Also, don't forget that you have the power to omit ``head``,\\ ``body``,\\ ``folderlisting``, and ``footer`` by simply writing in do-nothing macros into your view template. Furthermore, you can reach into your object and retrieve field values without using the widget framework."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:2
# 38afc331bc3040278a021162c74b5aef
msgid "What Makes It Tick?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:4
# 11c739de68314c77ba416a3f561bf353
msgid "This page describes how Archetypes uses different templates to generate HTML, and how AT-based template customization can be applied."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:7
# 02cf7c9cdfb643f5bc0e390b7381ccec
msgid "Archetypes has a very clever system for generating HTML pages for AT-based objects. The same set of templates generates **all** of the content areas for **all** AT-based objects. This buys you the following benefit, useful for site consistency:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:12
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:16
# 67fb492800794a77adef97ca460c9cb5
# 1f4a6d5fee8248fbbb283ca9bc97da1d
msgid "All the pages look the same."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:14
# f121a6125fa4443eb238f171a61e504c
msgid "However, it also has the following drawback:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:18
# 4f19752121b6464298e4ca678c3230ad
msgid "Different types of content need to be displayed differently. Let's dig into how Archetypes does things, so we can figure out how to make your content types *shine*!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:23
# e3c9ec7633ab47b6aae85ea6f5231e29
msgid "The ``base_view`` Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:25
# 3f8a50ba92a9436bb6a465b0f6776bb9
msgid "The ``base_view`` template (found in the archetypes skin) handles selecting the appropriate macros from the appropriate templates, and using those macros to display content objects. If you look at this piece of code from 'base\\_view':"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:38
# 66c084f87c5e47628265b5f7ef0bcbe4
msgid "You can see that it defines the variable ``view_template`` as the object's Portal Type Name converted to lowercase, with spaces replaced with underscores (\\_), followed by ``_view``. So, MyType's view template, for instance, would be called ``mytype_view``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:43
# 81f0115dbb8440f998f90a28cf22bb93
msgid "Now, before we move on, I must warn you: don't edit ``base_view``. Seriously. Don't.\\ `[1] <http://plone.org/documentation/manual/theme-reference/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick#ref1>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:47
# d6f41592e16c4129afeb98e85ae77e10
msgid "No, really. Don't customize ``base_view``. If you think you need to customize ``base_view``, first, well... don't. Keep reading the tutorial. If you're certain, after reading the tutorial, that you need to customize ``base_view``, again, **don't!** Write a clear, concise example indicating why, after reading this tutorial, you believe you should customize ``base_view``, and send it to the ``archetypes-users`` mailing list. If you *really do* need to customize ``base_view``, you've found a shortcoming in Archetypes, and the people on the list will inform you if that's the case. So, repeat after me: \"Don't customize ``base_view``.\" Good!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:58
# 5d1d045c86e6469c8f0ff7c0cc2eeeb4
msgid "Now, there are six important macros to be aware of. These six macros give you the power to insert template code that is customized for your class. These macros are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:63
# 8cfb541859b84396828b6d9f4aa6d8fb
msgid "``js``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:63
# 43669835afd144fd94116c1503cf41d6
msgid "A macro to insert javascript into the ``<head>`` tag of the generated HTML page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:66
# 580419466bf44840963fc6f21fdf3e00
msgid "A macro to insert CSS includes and style code into the ``<head>`` tag of the page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:69
# 76db5796be724006bc0dff82e1801c17
msgid "The macro that defines the topmost portion of the content area. By default, this macro has an ``<h1>`` tag that contains the title, and links for printing, emailing, etc. on the right."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:73
# 79436063fa4e4dc38a7faadde81faf1e
msgid "The macro that defines the \"body\" area of the content. This is where the fields and their values are displayed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:76
# faa1264eb0bb4353bef41dd894e8bcae
msgid "This macro shows a list of the child content for the object. Don't confuse this with ``folder_contents``, this is what the ``view`` tab shows for folderish objects. Folderish objects use both the ``body`` macro and the ``folderlisting`` macro."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:81
# cd9fab9e8d91431a8dc26d1f708ec1df
msgid "This is where AT puts the byline."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:88
# 47e4efb478f6481d85350bf9cb9028e9
msgid "This image shows the areas generated by the header, body, and folderlisting macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:90
# 52d7385dcaec4854afe1323ad22a4804
msgid "As you can see, the ``header`` macro generates what's outlined in the area marked ''header'' in red, the ``body`` macro generates the content just beneath it, and the ``folderlisting`` macro generates the listing of the objects within the folderish object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:95
# be9c5a4059d54ff7a8a2f28eba31c519
msgid "The ``base_view`` template automatically pulls the appropriate macro from the custom view template (``mytype_view``, from our earlier ad-hoc example), or from the next template that we are going to explore: ``base``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:101
# 8eb749b8d99a408283584706f84ce7bd
msgid "The ``base`` Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:103
# 815fb7988b1c404eb9c00e2148398e49
msgid "The ``base`` template contains four of the six macros that ``base_view`` looks for:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:111
# 8783857f6d374076966026ac092397f3
msgid "The only reason why I mention ``base`` is so that you know where AT's default behavior comes from. This is important if you only want to change a little bit of a type's view. It's often helpful to copy the macro from ``base`` into your custom view template, and then start tweaking and customizing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:120
# f4ac3ec5aa964baf8a33ea8e99cda7ed
msgid "Widgets are what Archetypes uses to display fields. Widgets have two parts:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:125
# 19e646d481a74d5faecefe67e472f537
msgid "The widget class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:124
# c2839abb13eb40eaa4df7100f7b314be
msgid "This class defines data and behavior for the widget. In most cases, you'll never need to create a custom 'Widget'-derived class. See Archetypes/Widget.py for examples."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:132
# 2db07704f825477d832a563676e2df31
msgid "The widget template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:128
# b24dc249c21a48cc805f07515613b696
msgid "This is a ZPT that provides three macros: ``view``, ``edit``, and ``search``. These macros display the field. Some of the macros depend on certain variables being defined in the calling template, so pay close attention. Most often, you'll only need to provide a custom widget template, and not a custom widget class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:134
# c3294e359dc3460c8135490c8047a320
msgid "There are all kinds of widgets out there to do all kinds of things. The `Archetypes Quick Reference Manual <http://plone.org/products/archetypes/documentation/manual/quickref>`_ covers the details for the various widgets in Archetypes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:139
# 2327beb5412347719a5c3803ea9d4dec
msgid "[1] Unless you're wiggy."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:2
# e73ff09fb0244718988b4db52ea0ad57
msgid "Getting started"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:4
# 3b854ed244854fa4aa5a17d46c02a45c
msgid "Page Templates are a web page generation tool. In this part, we'll go through their basics and show how to use them in your web site to create dynamic web pages easily."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:8
# b00e23a92660408ea8b77369058c9649
msgid "The goal of Page Templates is natural workflow. A designer will use a WYSIWYG HTML editor to create a template, then a programmer will edit it to make it part of an application. If required, the designer can load the template *back* into his editor and make further changes to its structure and appearance. By taking reasonable steps to preserve the changes made by the programmer, he will not disrupt the application."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:15
# bf17799f5ead4732b2647b8033509553
msgid "Page Templates aim at this goal by adopting three principles:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:17
# ef92ac212c1b43a7a1bb475e46159c9f
msgid "Play nicely with editing tools."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:19
# dfc7591fd6584fb7871f0eca237ee38f
msgid "What you see is very similar to what you get."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:21
# b9f92479d9b04be78546fdfcecae656e
msgid "Keep code out of templates, except for structural logic."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:23
# cb4bad1089fa4aeb97f99edd0c2645af
msgid "A Page Template is like a model of the pages that it will generate. In particular, it is a valid HTML/XHTML page. Since HTML is highly structured, and WYSIWYG editors carefully preserve this structure, there are strict limits on the ways in which the programmer can change a page and still respect the first principle."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:29
# 94e78369c4384f4b9472221f30cfe85c
msgid "Although Page Templates are suited for programmers and designers who need to work together to create dynamic web pages, they form the basis for most of Plone's pages, so you should learn them a bit at least, if you need to customize the Plone look or layout. Moreover, they can be simpler to use and understand than the alternative, DTML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:36
# 8905436f11a64723bbbf657d02372bf3
msgid "Why Yet Another Template Language?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:38
# a36c817b9dd147079152f8101ade1289
msgid "There are plenty of template systems out there, some of them quite popular, such as ASP, JSP, and PHP. Since the beginning, Zope has come with a template language called DTML. Why invent another?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:42
# f08d8cbba72f469885d997b15bba33ee
msgid "First, none of these template systems are aimed at HTML designers. Once a page has been converted into a template, it is invalid HTML, making it difficult to work with outside of the application. Each of them violates the first or second principle of Zope Page Templates to one degree or another. Programmers should not \"hijack\" the work of the designers and turn HTML into software. XMLC, part of the Enhydra project, shares our goal, but requires the programmer to write substantial amounts of Java support code for each template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:51
# 8220946cee1d47f79f8d8bd8e4e118b7
msgid "Second, all of these systems suffer from failure to separate presentation, logic, and content (data). Their violations of the third principle decrease the scalability of content management and website development efforts that use these systems."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:57
# 706a1f59368348b0b80550d3698a2c10
msgid "Applying The Principles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:59
# 12873a82acdf407cb6db372188167d62
msgid "Page Templates use the **Template Attribute Language (TAL)**. TAL consists of special tag attributes. For example, a dynamic page title might look like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:67
# da5b6135852f44e787f9c89bd199f380
msgid "The ``tal:content`` attribute is a TAL statement. Since it has an XML namespace (the ``tal:`` part) most editing tools will not complain that they don't understand it, and will not remove it. It will not change the structure or appearance of the template when loaded into a WYSIWYG editor or a web browser. The name ``content`` indicates that it will set the content of the ``title`` tag, and the value \"context/title\" is an expression providing the text to insert into the tag."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:75
# c688450e3b204748884a366face946f3
msgid "To the HTML designer using a WYSIWYG tool, this is perfectly valid HTML, and shows up in the editor looking the way a title should look. The designer, not caring about the application details of TAL, only sees a *mockup* of the dynamic template, complete with dummy values like \"Page Title\" for the title of the document."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:81
# 15298db63b0f46a9bc8d6f0dace9693b
msgid "When this template is saved in Zope and viewed by a user, Zope turns this static content into dynamic content and replaces \"Page Title\" with whatever \"context/title\" resolves to. In this case, \"context/title\" resolves to the title of the object to which to the template is applied. This substitution is done dynamically, when the template is viewed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:87
# 3cd9a521c2db4be8bc5b6932fd2846ee
msgid "This example also demonstrates the second principle. When you view the template in an editor, the title text will act as a placeholder for the dynamic title text. The template provides an example of how generated documents will look."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:92
# ad28e31d19194cb697e6b84fdc3b7a7c
msgid "There are template commands for replacing entire tags, their contents, or just some of their attributes. You can repeat a tag several times or omit it entirely. You can join parts of several templates together, and specify simple error handling. All of these capabilities are used to generate document structures. You **can't** create subroutines or classes, write loops or multi-way tests, or easily express complex algorithms. For these tasks, you should use Python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:100
# 43e549553dfd49b1b615ca4b2aaf010c
msgid "The template language is deliberately not as powerful and general-purpose as it could be. It is meant to be used inside of a framework (such as Zope) in which other objects handle business logic and tasks unrelated to page layout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:105
# 29cbb813366b4b9c911f4b1cf8396db7
msgid "For instance, template language would be useful for rendering an invoice page, generating one row for each line item, and inserting the description, quantity, price, and so on into the text for each row. It would not be used to create the invoice record in a database or to interact with a credit card processing facility."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:112
# c143bec4c70348afaee27c923feef61a
msgid "Creating a Page Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:114
# d76c1a200404479f9008ebc8ea2ae49e
msgid "If you design pages, you will probably use FTP or WebDAV instead of the Zope Management Interface (ZMI) to create and edit Page Templates, or you will be developing templates on the filesystem for later installation. If you're not the Zope site owner, ask your Zope administrator for instructions. For the very small examples in this article, it is much easier to use the ZMI. For more information on using FTP or WebDAV with Zope, see `The Zope Book <http://www.zope.org/Documentation/Books/ZopeBook/current/ExternalTools.stx>`_ or Jeffrey Shell's `WebDAV article <http://www.zope.org/Documentation/Articles/WebDAV>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:125
# 9b41aa4ba8aa403ab5fdfedd96721aab
msgid "You may also use `Emacs <http://www.gnu.org/software/emacs/>`_, `cadaver <http://www.webdav.org/cadaver/>`_, or some other client, but if you are a Zope administrator or a programmer, you will probably use the ZMI anyway at least occasionally. See the Zope Book for instructions on setting up Zope to to work with various clients."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:131
# 69abb9ae6e6e45d18b2581f13961b84a
msgid "Use your web browser to log into the Zope management interface as you normally would with Zope. Choose a Folder (the root is fine) and pick \"Page Template\" from the drop-down add list. Type \"simple\\_page\" in the add form's ``Id`` field, then push the \"Add and Edit\" button."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:136
# 0ec3bf901c3b4aa1a58bffeea1ea9032
msgid "You should now see the main editing page for the new Page Template. The title is blank, the content-type is ``text/html``, and the default template text is in the editing area."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:140
# e660d58222944f9ca3d4cf058f154698
msgid "Now you will create a very simple dynamic page. Type the words \"a Simple Page\" in the ``Title`` field. Then, edit the template's body text to look like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:148
# add253b7d237469fad8a041966244a21
msgid "Now push the \"Save Changes\" button. The edit page should show a message confirming that your changes have been saved. If  an error message appears above the code area, or some text starting with ``<-- Page Template Diagnostics`` is added to the template, then check to make sure you typed the example correctly and save it again. You don't need to erase the error comment: once the error is corrected it will go away."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:156
# 9deb4a9dfbf24aaa9191efad50854e0c
msgid "Click on the ``Test`` tab. You should see a mostly blank page with \"This is a Simple Page.\" at the top."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:159
# 8dda455607994c83ba4466043de59c9e
msgid "Back up, then click on the \"Browse HTML source\" link under the content-type field. This will show you the *unrendered* source of the template. You should see \"This is **the Title**.\" Back up again, so that you are ready to edit the example further."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:165
# b16f947843834d80948bc2fadbab4165
msgid "Simple Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:167
# 898d98fe9d81453aa3c453f7a93c4eb8
msgid "The text \"template/title\" in your simple Page Template is a *path expression*. This the most commonly used of the expression types defined by the TAL Expression Syntax (TALES). It fetches the ``title`` property of the template. Here are some other common path expressions:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:172
# 7903193bdc2143bcbb1d66e4cbcfe7c8
msgid "request/URL: The URL of the current web request."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:174
# 038230afd0774871ab06215a20a00932
msgid "user/getUserName: The authenticated user's login name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:176
# 7ac821506c924d398e739acbea8b9022
msgid "container/objectIds: A list of Ids of the objects in the same Folder as the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:179
# 78666dd74bc3466b982ce49e314f77db
msgid "Every path starts with a variable name. If the variable contains the value you want, you stop there. Otherwise, you add a slash (``/``) and the name of a sub-object or property. You may need to work your way through several sub-objects to get to the value you're looking for."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:184
# 0c53daad5b9c44ec893ee3316be5ea43
msgid "There is a small built in set of variables, such as ``request`` and ``user``, that will be listed and described later. You will also learn how to define your own variables."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:189
# 3e4ef8c075e64aba829e48ae9ad1726f
msgid "Inserting Text"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:191
# 69f5448343c64097b37b72e848dccd25
msgid "In your \"simple\\_page\" template, you used the ``tal:replace`` statement on a bold tag. When you tested it, it replaced the entire tag with the title of the template. When you browsed the source, instead, you saw the template text in bold. We used a bold tag in order to highlight the difference."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:197
# a07c892005d54dd5a2ca394592b86180
msgid "In order to place dynamic text inside of other text, you typically use ``tal:replace`` on a ``span`` tag. Add the following lines to your example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:206
# 8457e6fe707b46e59dacebfffef2c168
msgid "The ``span`` tag is structural, not visual, so this looks like \"The URL is URL.\" when you view the source in an editor or browser. When you view the rendered version, it may look something like:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:215
# 2ab5d078650940299dcde06ae0106fca
msgid "Remember to take care when editing not to destroy the ``span`` or place formatting tags such as ``b`` or ``font`` inside of it, since they would also be replaced."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:219
# fe7bfd833113409aa4d3da2b61e6af63
msgid "If you want to insert text into a tag but leave the tag itself alone, you use ``tal:content``. To set the title of your example page to the template's title property, add the following lines above the other text:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:229
# 6b50a56e035243c595bb8980c51785e2
msgid "If you open the \"Test\" tab in a new window, the window's title will be \"a Simple Page\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:233
# 99257c82f8ab4602bf1e1ea85b0fd2aa
msgid "Repeating Structures"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:235
# ebb78d1556974d13a6fd7a56b9566bca
msgid "Now you will add some context to your page, in the form of a list of the objects that are in the same Folder. You will make a table that has a numbered row for each object, and columns for the id, meta-type, and title. Add these lines to the bottom of your example template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:254
# 5382d1cca0c54c7e9774b420675a877d
msgid "The ``tal:repeat`` statement on the table row means \"repeat this row for each item in my container's list of object values\". The repeat statement puts the objects from the list into the ``item`` variable one at a time, and makes a copy of the row using that variable. The value of \"item/id\" in each row is the Id of the object for that row."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:260
# 2da2fea8bcde48cbacbc28f53e88e7de
msgid "You can use any name you like for the \"item\" variable, as long as it starts with a letter and contains only letters, numbers, and underscores (``_``). It only exists in the <tr> tag; If you tried to use it above or below that tag you would get an error."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:265
# bf52bc9b191d47bc98841817ecc58ca7
msgid "You also use the ``tal:repeat`` variable name to get information about the current repetition. By placing it after the builtin variable ``repeat`` in a path, you can access the repetition count starting from zero (``index``), from one (``number``), from \"A\" (``Letter``), and in several other ways. So, the expression ``repeat/item/number`` is ``1`` in the first row, ``2`` in the second row, and so on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:272
# dc9f63dc2ea24ef7b8aad5a2afb2521b
msgid "Since one ``tal:repeat`` loop can be placed inside of another, more than one can be active at the same time. This is why you must write ``repeat/item/number`` instead of just ``repeat/number``. You must specify which loop you are interested in by including the loop name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:278
# 065d22f9743d4530a856bafe5263b337
msgid "Conditional Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:280
# b0be25a92f3940c19ceec6124b363991
msgid "View the template, and you'll notice that the table is very dull looking. Let's improve it by shading alternate rows. Copy the second row of the table, then edit the code so that it looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:306
# 37c8fea6acce453487ecc765f5a786f1
msgid "The ``tal:repeat`` has not changed, you have just moved it onto the new ``tbody`` tag. This is a standard HTML tag meant to group together the body rows of a table, which is how you are using it. There are two rows in the body, with identical columns, and one has a grey background."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:311
# 07c4770bd9b748b1a03440bd4fb1eccb
msgid "View the template's source, and you see both rows. If you had not added the ``tal:condition`` statements to the rows, then the template would generate both rows for every item, which is not what you want. The ``tal:condition`` statement on the first row ensures that it is only included on even-indexed repetitions, while the second row's condition only lets it appear in odd-indexed repetitions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:318
# 4dfd2706aeb447e9845dbaad01539a0a
msgid "A ``tal:condition`` statement does nothing if its expression has a true value, but removes the entire statement tag, including its contents, if the value is false. The ``odd`` and ``even`` properties of ``repeat/item`` are either zero or one. The number zero, a blank string, an empty list, and the builtin variable ``nothing`` are all false values. Nearly every other value is true, including non-zero numbers, and strings with anything in them (even spaces!)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:327
# 995d59fe01cd49a8b6ba9e7cced9c430
msgid "Defining Variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:329
# bdc26334f0cd4d018d0d6921da502460
msgid "Note: In Plone 4 or newer, use *container/value*\\ s instead of *container/objectValues* below."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:332
# dc078d29cb2340e0b4a8ab407e06777f
msgid "Your template will always show at least one row, since the template itself is one of the objects listed. In other circumstances, you might want to account for the possibility that the table will be empty. Suppose you want to simply omit the entire table in this case. You can do this by adding a ``tal:condition`` to the table:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:343
# bd32c6d464ce498c9eedcdd66e0f31a0
msgid "Now, when there are no objects, no part of the table will be included in the output. When there are objects, though, the expression \"container/objectValues\" will be evaluated twice, which is mildly inefficient. Also, if you wanted to change the expression, you would have to change it in both places."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:349
# 0a1e673348e54ae7b66ffa23aa378513
msgid "To avoid these problems, you can define a variable to hold the list, and then use it in both the ``tal:condition`` and the ``tal:repeat``. Change the first few lines of the table to look like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:363
# bf59b059ab824707a5cd3d9285f4694e
msgid "The ``tal:define`` statement creates the variable ``items``, and you can use it anywhere in the table tag. Notice also how you can have two TAL attributes on the same ``table`` tag. You can, in fact, have as many as you want. In this case, they are evaluated in order. The first assigns the variable ``items`` and the second uses ``items`` in a condition to see whether or not it is false (in this case, an empty sequence) or true."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:371
# 3d240df3308c47d98e6cd9b33c3993d5
msgid "Now, suppose that instead of simply leaving the table out when there are no items, you want to show a message. To do this, you place the following above the table:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:380
# e87942ff183b414497323857f0dd752d
msgid "You can't use your ``items`` variable here, because it isn't defined yet. If you move the definition to the ``h4`` tag, you can't use it in the ``table`` tag any more, because it becomes a *local* variable of the ``h4`` tag. You could place the definition on some tag that enclosed both the ``h4`` and the ``table``, but there is a simpler solution. By placing the keyword ``global`` in front of the variable name, you can make the definition last from the ``h4`` tag to the bottom of the template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:396
# 049d716565624da09678ad6b898ed4f3
msgid "The ``not:`` in the first ``tal:condition`` is an expression type prefix that can be placed in front of any expression. If the expression is true, ``not:`` is false, and vice versa."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:401
# d4f89e3a3f0d4622b5b34c1e610b470d
msgid "Changing Attributes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:403
# f181823ae4e74212a3b4e284e93bae8b
msgid "Most, if not all, of the objects listed by your template have an ``icon`` property, that contains the path to the icon for that kind of object. In order to show this icon in the meta-type column, you will need to insert this path into the ``src`` attribute of an ``img`` tag, by editing the meta-type column in both rows to look like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:417
# a3e25f94f4f44a9182ffcee4e24a70ca
msgid "The ``tal:attributes`` statement replaces the ``src`` attribute of the image with the value of ``item/icon``. The value of ``src`` in the template acts as a placeholder, so that the image is not broken, and is the correct size."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:422
# faddebb5328d4f86b0f09055f705c64f
msgid "Since the ``tal:content`` attribute on the table cell would have replaced the entire contents of the cell, including the image, with the meta-type text, it had to be removed. Instead, you insert the meta-type inline in the same fashion as the URL at the top of the page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:427
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:362
# ddde76f3e900441288f77492463f6a4f
# 48aa1ad15a67476195c5e5efd316b45b
msgid "Based on the `Zope Book <http://www.zope.org/Documentation/Books/ZopeBook/>`_, © `Zope Corporation <http://www.zope.com/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:2
# b332550e9aff45ca9049e3846c182039
msgid "Global Template Variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:4
# ad4086f0e77240eca6b5b0d761883d85
msgid "Plone defines a few useful global variables to use them in your templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:7
# 63e1483c2a7d492381c4b565c583c278
msgid "Note: This page covers the methods for referencing variables for Plone 3. It has changed slightly for Plone 4 (see https://plone.org/documentation/manual/upgrade-guide/version/upgrading-plone-3-x-to-4.0/updating-add-on-products-for-plone-4.0/no-more-global-definitions-in-templates/)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:11
# ffed63cbde0c43dfa3c6c0fd484c876f
msgid "While writing templates for Plone, you will notice a set of variables you use more often, like the URL of the portal or the currently authenticated member."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:15
# b302dc39dad04539b293b8247f7757b3
msgid "For your convenience, Plone defines a few global template variables that are pulled into main\\_template via global\\_defines. Some of the most useful ones are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:21
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:121
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:125
# 4bdfe90faaf1424582bf56bb51970591
# 0e9ff17256d54183886195ee59227937
# 70fb40ccb0ef495eb362ea8138ba3fb2
msgid "portal\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:22
# 62db3f03e2b44c1e8fe837c38d655613
msgid "The url of the portal."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:24
# 2b6773e9e29e4cc28124cc43a357cc0c
msgid "The current user (``None`` if user is anonymous)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:27
# b32dc939e363479bb80a9532083a5919
msgid "checkPermission"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:26
# e4184f8df4c946488214bd92a688fb34
msgid "A function to check if the current user has a certain permission in the current context, e.g. ``checkPermission('View portal content', context)``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:29
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:165
# 7e25d4fd8c1f4fd3afabb5ee42e2cc8e
# 57a4bb409a3a476a9c0b899bec72f851
msgid "isAnon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:30
# 02186b2b7c674101846e3a627c32980a
msgid "True if the current user is not logged in."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:31
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:278
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:282
# 60466a16c01948fc81a24cd5a479a270
# e0e9dab4b656417d9734271544ffae72
# 8399a25c339146148cc2e22dfcce1102
msgid "is\\_editable"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:32
# ae54dbaf5e6b4d27b3c40803986f30bf
msgid "True if the current user has edit permissions in the context."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:33
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:137
# 4c31f2e3858f41fdb6fc6cf0ccfda7ac
# 2433858b902a4958afd9aad6e4e76cc7
msgid "default\\_language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:34
# a8bdf99def554f7ab8d15530ac54de60
msgid "The default language of the portal."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:36
# c776c1358c464e8f90d1486afd3c2a6a
msgid "here\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:36
# 7e18b4c588f0460c80be92313a626fe5
msgid "The URL of the current object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:38
# d50bbf3b4ca74d80b4e386f57d9aa613
msgid "To see the full list list of these variables, see `the docstring for ``globalize()`` in the interface ``Products.CMFPlone.browser.interfaces.IPlone`` <http://dev.plone.org/plone/browser/Plone/branches/3.2/Products/CMFPlone/browser/interfaces.py#L199>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:2
# b4ce59a06dc04b50b44d11f0422539f0
msgid "How to customise view or edit on archetypes content items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:4
# ef4b011976a24df0ab619a5135bf6fdc
msgid "Explains one way to customise the view or edit templates without having to change the action of an object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:8
# 9fabde03fb994d4298f6cd69b4798ecc
msgid "Reasons/Use Cases"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:10
# ad4f421d799b4214a5b5de040b903513
msgid "I usually like to customise as little as possible so that more of my page templates are just like the plone default templates. I find this helps when I move to a new version and also makes doing styling using CSS easier."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:15
# 284612bbb0fd4ce1a2b1b3a6c12aa108
msgid "Another use case is if I want to generate a form using the schema but I need it to do different things based on which button is pushed, you can accomplish this with putting named buttons on the form in combination by using portal\\_formcontroller to override what happens on a submit. E.g. importing data from CSV, in a seperate schemata I have a form.button.Import button and on this schemata I only show this button and the cancel button (instead of save, nex previous etc.) and then I customise the portal\\_formcontroller action (and validation) so content\\_edit (the script that does the saving) goes to a script that does the importing before going back to the view action."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:27
# ca95ee2e79ac42bca0de13cf34565c5c
msgid "Archetypes base\\_view and base\\_edit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:29
# 17dbb14382384f7fa70bdd4e91c5d92b
msgid "Both of these templates have several macros which are gotten by from other page templates. They are setup in such a way that they will look for a template named with the content type for these macros and then default to the generic archetypes macros. I.e. say you have a content type 'Newsletter' base\\_view looks for a template named 'newsletter\\_view' if it finds it and it contains the right macros it will use those instead of the default 'view\\_macros' (found in 'portal\\_skins/archetypes' skin folder."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:38
# d92da883ad41410aa65bf05d30b41505
msgid "Below is a skeleton example of a custom view template showing the different things you can customise. See base.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:105
# 45e33b8c409f4d79985fe74839190a0f
msgid "Below is an skeleton of a custom edit template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:240
# 82fbd0225da448959f8370587db2e501
msgid "See the templates into Products.Archetypes:skins/archetypes for examples about how does Archetypes work by default: get the field lists, hook up translation, handle form processing and more. Using them as a base and customizing only the neccessary bits can make the job much easier than starting from scratch."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:247
# 352b80c7667543848ddbd97f0abb80cd
msgid "How to do it"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:249
# d1e333c1a6354861bdfa10b4bacf6024
msgid "Lets say your content type is '**Newsletter**\\ '"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:252
# 3f5c4f24009b43a0ade0bb427f0153a2
msgid "Steps for View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:254
# 466b8177331a4ca7925c830d4ef698e1
msgid "Create a page template (either file system of in ZMI) called 'newsletter\\_view'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:256
# c7424aa2d2e94819b5dc8e230c39df05
msgid "Use the skeleton and comment out the macros you wish to keep the same. I.e. the ones you want to use from view\\_macros template (in portal\\_skins/archetypes)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:259
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:268
# bc57476df751492b9794dba9c93e4cbd
# fd9de1574d974a54b8a82042cc785d81
msgid "Put your code into the relevant macros/slots."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:260
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:269
# ff404c60386b4788a65b11be1f05513a
# 304eb4a7a511446eb7287d94262adc44
msgid "Test and you are done."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:263
# cd0f994ca06843b5abb0b4d100e30ca9
msgid "Steps for Edit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:265
# fde62394597a4b518c01e36bf651e487
msgid "Create a page template called 'newsletter\\_edit'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:266
# 232f832674f14bb9a8ef1bbc4b8b0f4f
msgid "Use the skeleton and then comment out the macros you wish to use the default for. (from edit\\_macros)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:2
# 83367b6cdeed4bfaab542de042ae431b
msgid "Macros and Slots"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:5
# e714cf20d6ee402ea7622f8dabb58890
msgid "Macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:7
# 7979e9d9aea24cd3be4431a58fefc37b
msgid "So far, you've seen how Page Templates can be used to add dynamic behavior to individual web pages. Another feature of page templates is the ability to reuse look and feel elements across many pages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:11
# e320de7913e547fb9914f02437a113be
msgid "For example, with Page Templates, you can have a site that has a standard look and feel. No matter what the \"content\" of a page, it will have a standard header, side-bar, footer, and/or other page elements. This is a very common requirement for web sites, and this is exactly how Plone works."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:17
# c13dfd4e4f404bdca50bbdabfe8dd027
msgid "You can reuse presentation elements across pages with **macros**. Macros define a section of a page that can be reused in other pages. A macro can be an entire page, or just a chunk of a page such as a header or footer. After you define one or more macros in one Page Template, you can use them in other Page Templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:24
# 70f50f05b26946038075dd9cbd0c336b
msgid "Using Macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:26
# 937b17ffa02148f0a057a50bd4d3256e
msgid "You can define macros with tag attributes similar to TAL statements. Macro tag attributes are called **Macro Expansion Tag Attribute Language (METAL)** statements. Here's an example macro definition:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:36
# 524262546d7a4c91bdffd3de838b23a1
msgid "This metal:define-macro statement defines a macro named \"copyright\". The macro consists of the p element (including all contained elements, ending with the closing p tag)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:40
# 09125a30fb974524979ac83c22b85af5
msgid "Macros defined in a Page Template are stored in the template's *macros* attribute. You can use macros from other Page Templates by referring to them through the *macros* attribute of the Page Template in which they are defined. For example, suppose the *copyright* macro is in a Page Template called \"master\\_page\". Here's how to use the *copyright* macro from another Page Template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:54
# dc6476aea6524137a0c71ff8beee9a9d
msgid "In this Page Template, the b element will be completely replaced by the macro when Zope renders the page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:64
# 485cf781ff95426b8b327817bb02f7e2
msgid "If you change the macro (for example, if the copyright holder changes) then all Page Templates that use the macro will automatically reflect the change."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:68
# 92e04f927baf4eb7bd7d68c4237292a1
msgid "Notice how the macro is identified by a path expression using the metal:use-macro statement. The metal:use-macro statement replaces the statement element with the named macro."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:73
# 0a2181e7f6994efe9700cad11ae0a482
msgid "Macro Details"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:75
# be5c275f17bd4b1bb28d08d08d92f1f5
msgid "The metal:define-macro and metal:use-macro statements are pretty simple. However there are a few subtleties to using them which are worth mentioning."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:79
# 02df711acd1748f7a7e7d81b83b727da
msgid "A macro's name must be unique within the Page Template in which it is defined. You can define more than one macro in a template, but they all need to have different names."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:83
# a74bc2c9771443c1b2ab31d55df19f4f
msgid "It should also be noted that, despite the define-macro attribute, the macro is anyway a regular section of the template; so, when you call the whole template, the macro section is rendered in the output page just like any other section in the template. By using the define-macro attribute you are simply **adding** some sort of \"anchor\" to that section, so that you can call it from outside; but you are not changing anything regarding the behaviour of that same section in the template itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:92
# 8e7975fc92064ac28c92be6927eed19d
msgid "Normally you'll refer to a macro in a metal:use-macro statement with a path expression. However, you can use any expression type you wish so long as it returns a macro. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:103
# d30fcdf025004ccbad9426ac74350c5f
msgid "In this case the path expression returns a macro defined dynamically by the getMacro script. Using Python expressions to locate macros lets you dynamically vary which macro your template uses."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:107
# cc9c7da0393b404fb4220395cefb0a62
msgid "You can use the default variable with the metal:use-macro statement:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:115
# 850a6249d55d4a4286fcc64b44eca231
msgid "The result is the same as using default with tal:content and tal:replace. The \"default\" content in the tag doesn't change when it is rendered. This can be handy if you need to conditionally use a macro or fall back on the default content if it doesn't exist."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:120
# 500ab0d0927d4a9dbad0fc072d163844
msgid "If you try to use the nothing variable with metal:use-macro you will get an error, since nothing is not a macro. If you want to use nothing to conditionally include a macro, you should instead enclose the metal:use-macro statement with a tal:condition statement."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:125
# e6ef39056a3f498fabc5f3e76e971fba
msgid "Zope handles macros first when rendering your templates. Then Zope evaluates TAL expressions. For example, consider this macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:135
# 6942fe00175c4a33873f885893e509ec
msgid "When you use this macro it will insert the title of the template in which the macro is used, not the title of the template in which the macro is defined. In other words, when you use a macro, it's like copying the text of a macro into your template and then rendering your template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:142
# 42b69be1afae4fc4bf868fcce6210734
msgid "Using Slots"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:144
# b4314f2651d64601bd3ae82b2d47720e
msgid "Macros are much more useful if you can override parts of them when you use them. You can do this by defining **slots** in the macro that you can fill in when you use the template. For example, consider a side bar macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:161
# 59f59c844580413faf459a49d37df787
msgid "This macro is fine, but suppose you'd like to include some additional information in the sidebar on some pages. One way to accomplish this is with slots:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:178
# f57a0190e6774ce9a38697171897f097
msgid "When you use this macro you can choose to fill the slot like so:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:188
# 3bda6481dada4bc8be52f1693064aeb7
msgid "When you render this template the side bar will include the extra information that you provided in the slot:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:206
# b3e7e1bc577947458a813e8a1bcf30f2
msgid "Notice how the span element that defines the slot is replaced with the b element that fills the slot."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:210
# 580f14a934c34088814030c4a754994a
msgid "Customizing Default Presentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:212
# 1a2fa387384e4ade9e8a7611cb0e8bad
msgid "A common use of slot is to provide default presentation which you can customize. In the slot example in the last section, the slot definition was just an empty span element. However, you can provide default presentation in a slot definition. For example, consider this revised sidebar macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:233
# b990839b6d784d3a88cedf8b66845522
msgid "Now the sidebar is fully customizable. You can fill the links slot to redefine the sidebar links. However, if you choose not to fill the links slot then you'll get the default links, which appear inside the slot definition."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:238
# 70a72fd5b4414f63949c4f8006d500ad
msgid "You can even take this technique further by defining slots inside of slots. This allows you to override default presentation with a fine degree of precision. Here's a sidebar macro that defines slots within slots:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:259
# c9a68adc522e4fa8849a12839b60b17d
msgid "If you wish to customize the sidebar links you can either fill the *links* slot to completely override the links, or you can fill the *additional\\_links* slot to insert some extra links after the default links. You can nest slots as deeply as you wish."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:265
# 12de696bc9e14f199ce02eaa53904d31
msgid "Combining METAL and TAL"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:267
# cfbf78aea86c4639a2c6f9ae4e78cf26
msgid "You can use both METAL and TAL statements on the same elements. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:281
# 829f00a19d054cc69f6bb81a47aa0e95
msgid "In this case, getLinks is a (imaginary) Script that assembles a list of link objects, possibly using a Catalog query."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:284
# f26f4367704b4d0d9994582a4f430520
msgid "Since METAL statements are evaluated before TAL statements, there are no conflicts. This example is also interesting since it customizes a macro without using slots. The macro calls the getLinks Script to determine the links. You can thus customize your site's links by redefining the getLinks Script at different locations within your site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:290
# 3a0574c7b21f4b6dbbf4eac0060133e8
msgid "It's not always easy to figure out the best way to customize look and feel in different parts of your site. In general you should use slots to override presentation elements, and you should use Scripts to provide content dynamically. In the case of the links example, it's arguable whether links are content or presentation. Scripts probably provide a more flexible solution, especially if your site includes link content objects."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:299
# 24f6e00b6505467ea90e61e490aea5fd
msgid "Whole Page Macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:301
# ecfb81b0677245e7abdd9dc279193d7c
msgid "Rather than using macros for chunks of presentation shared between pages, you can use macros to define entire pages. Slots make this possible. Here's an example macro that defines an entire page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:327
# f214150283d1406b8b4e0ff387cef450
msgid "This macro defines a page with three slots: *headline*, *body*, and *footer*. Notice how the *headline* slot includes a TAL statement to dynamically determine the headline content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:331
# d5a71dbc6fc04481831202abc2b48f1b
msgid "You can then use this macro in templates for different types of content, or different parts of your site. For example here's how a template for news items might use this macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:351
# 71251fb9c2a441478a1932223eb22308
msgid "This template redefines the *headline* slot to include the words \"Press Release\" and call the getHeadline method on the current object. It also redefines the *body* slot to call the getBody method on the current object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:356
# 1059993c24074e44b7c978ee2a59b373
msgid "The powerful thing about this approach is that you can now change the *page* macro and the press release template will be automatically updated. For example you could put the body of the page in a table and add a sidebar on the left and the press release template would automatically use these new presentation elements."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:2
# 9034f82768ed4979809dd366e7b933b5
msgid "Templates and the Templating Language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:4
# ecffdc1a3d5e446692aa7cecd2ffb59e
msgid "The main elements of a skin are page templates, images, Python scripts, CSS files, and JavaScript files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:8
# 44b0d5c4892145129b9cdeb493b3dcae
msgid "(Zope) Page Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:10
# bc1e1f492fbf47d5947d0744f7aec85a
msgid "Page templates (.pt files or ZPT) are an essential part of a Plone theme and are probably the easiest aspect of Plone to get to grips with. They are written in an elegant XML-based templating language called TAL, sometimes make use of macros (METAL), and sometimes incorporate Python expressions (small one-line calculations) or Python scripts."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:16
# b512be7b90a94e16af7bce98e29b776f
msgid "There are several excellent introductions to ZPT, and it doesn't take long to learn TAL. Try these:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:19
# 9e9caddd13e64764bb140f0c7ac76188
msgid "`Zope Page Templates tutorial on plone.org <http://plone.org/documentation/tutorial/zpt/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:21
# db267662531e43dca338c04eddff6ee2
msgid "`ZPT Reference on Zope.org <http://www.zope.org/Documentation/Books/ZopeBook/2_6Edition/AppendixC.stx>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:24
# 6fb81d27997349e0a28210118276aff4
msgid "TAL is the one language that we really recommend you learn properly. The rest you can pick your way through or familiarise yourself with as you go along."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:28
# b938275c3b9d49c1ab6a1dbc745144c2
msgid "`Zope Page Template Tutorial on plone.org - Advanced Usage <http://plone.org/documentation/tutorial/zpt/advanced-usage>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:31
# 7606c1b1243541f89153a8cca138033b
msgid "A Plone web page is delivered via an aggregation of templates, rather than just one, and there a couple of aspects of Zope Page Template that you'll need to be aware of."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:36
# bf54d2f38dfd4a7aadbc83bb85f0552c
msgid "1. Slot"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:38
# ff3d7e91900e465fb1ce4ca2b8fd4bb7
msgid "A slot is a predefined section of a template. This can be left empty, or given some default content, but it is available to be filled on the fly. A slot is defined in a template in code like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:48
# 85cdf7cd7a124ce1879728e6063b9590
msgid "And filled via another template like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:58
# bbb09262d23143ef9c5ec7eca24b5843
msgid "The ZPT tutorial on plone.org talks you through this in more detail, and the `Templates and Components to Page <http://plone.org/documentation/manual/theme-reference/buildingblocks/page/templates>`_ section of this manual gives you an example."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:64
# 7bd7e1948ac149068c3774ec9c9aebfc
msgid "2. Content view templates (\\_view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:66
# daf0c0bda783440c9c9a2e03f2153c3d
msgid "Note: the term \"view\" also has a more technical application, so in the context of Components (discussed later in this manual) it will mean something different."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:70
# dfb6fe340f5e47b483a16b0391b740b5
msgid "From the user's, contributor's, or visitor's perspective, a view is the way in which a content item is presented on the page. There's a `useful introduction <http://plone.org/documentation/plone-2.5-user-manual/managing-content/folder-view/>`_ to this in the Plone User Manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:75
# 43d9d2691c6c41239e8eb3a62bfe0686
msgid "Templates that are used to render a content item for a view have \\_view appended to their name (e.g., document\\_view.pt) and may have a title such as \"Standard View.\" These templates are, in fact, sets of information ready to drop into slots."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:83
# df1c9e7e72814a86bb891b979c55835c
msgid "These are small stand-alone functions for times when you need a few lines of code to perform your calculation. On the file system, they have a .py extension; you'll find them in the Zope Management Interface as Script (Python)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:88
# 6e151c6e2aa54dcdb560c5d2a09d52c2
msgid "Here's a snippet from the event\\_view template (the content view for the event content type) which uses a Python script to format the a time field according to the default format for the site. If you look in CMFPlone/skins/plone\\_scripts, you'll find toLocalizedTime.py - just a few lines of code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:4
# 4f0cd17d1fd242668ad182aac6bdba4e
msgid "Google analytics code snippet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:7
# 7a5110b7df2d4260aec1d1124cd4570a
msgid "Provide the code snippet for your site through the web: Site Setup > Site settings"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:8
# 5481b27e87474fb79b477af8accd370a
# 057a99f86f324e87a373de57b2a736cc
# 5b44ee9b849a41aaa7e717eb84d2ec1b
# 790033b2e6374a3899328e111ac41359
# 31aac5bd1cd84c29b97444aaf03787f5
# 7658989031dd4310a82f9913a0f038b8
# 744b9c3e28554643bfb2c7c6ac229fdb
# 101ca9dd8efb41f9b9a66ca425b1bd56
# 9072ade7cd874517a0ed111e4daed4e8
# 3950159dbb9443c49cd97d4ddd192879
# 476e41e6c7ca4f4ca4cce97b2b394706
# 36f1a24cc5b74ed283796f0fc574ef3f
# be05042dc59a4a57a08f884ef8ff7127
# 111f7dab936940e9bdef78abea6ee0ca
# 9520c2665fe742ea9396c9e7c0ba7c55
# 34163cb0540341968d2beee497789942
# 01adda04be014a90aa2447e059463718
# 2bc472a7af8a406c9e022c49ebc4af86
# 5ba7dad79a404ababe2dbd6c859d618d
# 2c7676dbfb2f4708b334f7d1d9488fef
# 9e0d3caae53a47a38721cc2eb621fd95
# 7879e9cce8bf40c3b9e3fbd7a22442c5
# 2fafc97363454eb8a9341885bfe40239
# 29865c4480d845a9b68d223fec533520
# aca0d30602df4150911ab2d32fa3d20f
# 10004ef9eb11453cb5b82d81c2300e4d
# ad0de195ec2a44f293351fd243051f0c
# 748d4cab8e2c4ed9a8b82a28ee8330d9
# 9fc23de42a714a9a86874f9afa857490
# bb67cacf3e5447048e68fcd099f99d63
# 8a19b6e7c23e4407ae4fcd30cdeecb02
# f425323d302f4d32908e4f1d7e6b1959
# 79a6c0cf8f344510b781855fce8458fe
msgid "Snippet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:10
# b7b85aeedb1e4fab9d9166f546ac666b
msgid "``(code snippet defined by the site manager)``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:10
# 47ca5c424fe84d2a8c984fbb776dee85
# 5f507ff519ce49f5901b97d70641c8b5
# 7ac6c9b7964e4cdb81dffae673caf239
# 34ef5c0eb65b45378e91d32619a6c30d
# d1d1c027476f4df287bec34153f1cfba
# 2878f1d40e21483a9baccba4f90ec2fa
# 251acd4d7ea54484afefca229b1893be
# 4613739618b04252a5753e39c127707e
# 0de9ceeb19d34539b53d03a8ca931ed8
# bb7fc50860e1480f8081aab6d7b2f749
# 87ff83723fb24809bb2d05d36d03de75
# 7dd96ca520f341bb867f4c6694833c81
# 127ca08d22814fcb9ba887af1741d520
# 83ab81b4c8ad441b818fce899c990fba
# c620080da437415da69e96b69e48d379
# 3991b5c10a2a4fc68d7ca0957cd225a6
# d60d7af3dd4944f3b4ea56948ab99eee
# 7bf175f584424ad581317ecf4e993b32
# e2ff5044bea94bbd83c7f3d7e8c967b6
# 3aeeb7d1006d449abbd1cb7825082764
# 7ef3ea631dd9467dbc07fa751ec93ae9
# 223a5ab71a534df2be502dfcb8066b1b
# c1da859ee2044af7b241757f9c73d0b5
# f06f1275b0ab4a3cb00efc2b1628c7c1
# 378b28cd753b46b1a0989814def6c97e
# 4762d97a7f0945c68d896c8d4722d23f
# 41991fa8ee284f49b2fff340f7ab0a25
# 84e538d58d8243babac1b62181c0a2c7
# 10a845c4a4ac43cea029e8c2cd2c4dac
# b10f0564e8dd4190927862eb9f567732
# 8d673bf33ad74902b7edd491018d08ac
msgid "CSS:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:47
# 1f8f916e597b4bbea1a83dab7220da2d
# 7f9f97dad5f8450199ec71ab9fbdc6f5
# db49951c984c47d3afa805b6bc059574
# e7127d7d946e4552a2cf0aed9141c1fa
# 96225e2606d846eea5331832433387ac
# 28ed887f86fd473a82469f62aeff6b1f
# 89c83291e90248dfa3ad980590a5c19b
# 5c404eb412c84e6c860b0a5598ba4033
# 18f5c519af304f31ac388cd348d24d10
# 1209b988fea64519a365aeafa6903f45
# 004e51232b8b4b02ae030d56ab7c38be
# 9c34643114614cfd9c07de6768fde4e6
# 65754db23f8e41e4a6b18170a9ba56ac
# a5729bf6cb23486cae912704ca18fa4f
# b00bc5f4c810493ca61b8380648cef58
# fddcbf6333744cbe9f0a668f9ec6c8c7
# 218a3fdf13154661abf26deef687a311
# 75eb1e68b2db458194a619c57229aab9
# 851c04f1a122407a8cea93567dda3853
# 87dab09d39d548a1aca5f21fe74ce9ef
msgid "none"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:12
# a5018f1a5318424cbe0a9409e77914d3
# 4072ed7eab7c4861b08fee494fa7d614
# 062b83ce380246efb49b119c023d07f6
# 18a9b06db3514a738ecbca68ceb65071
# 8482e63d7375484d90858cd446f50acf
# 8348637a9214419cb75ef83be527ce60
# c88925dfa32345cb89b4415560a67921
# 91670fdd99394d8fa0a2ab008f5d960f
# 38d6f51338ef4ebca8e595a7667aea5a
# b099a34e51f14804a8888752237e97f3
# e98cd3b6d22c45ff9ae4d9b9c0ab4a77
# f57a82b0e35d4d79983be0afe617fc47
# c8f08876eb4841819d8bafdb0f407cbf
# 616b682c758742d8aa2aeddfff6b66b4
# 2ae258e9bff74b97a6263c2d9653592a
# fb673ded00924488a7c5c386a5c0a4c8
# 277dfe34e4384911a584df7085007491
# 87a9c21a2e874357a39dc0bed1955bf8
# c51ba729cb1d4d0d956373b85c2ca60d
# 27f7d2caec0541e6a0a70121e3bd7dc4
# 0134fa4c29534b76ab7b6eaedc227eaf
# 74619370478e4b76a419d642743543b5
# 8ee220becebe407e964584453f01311b
# dc6d980d058844ceb59ddd99a0d61267
# d315da47dad64b23b81d7efc0d0d2ac8
# d943a6114b904d92b16f138ca2a4259b
# 37e168fb470c40bbba025831cf017e75
# 437223f1a22d4873baa78e660f10182c
# c1f72c93881f459dbeadf2723bf86266
# d2a155a8df304bf9a2f6ef3d1a476f7a
# 08d8217be7bf461587838f7bcce0d396
# 71121c7a3ce941a5acc347bf10811355
# 3abd2b9c68ad421cb333a4c81cc5d275
# 9944d0a64a1c4e4ab43ea862930c8966
msgid "Name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:22
# 4a2c00abade44d82b73959edb3bde0fc
# e19189ccd5fb4124a90aec2f88c585ff
msgid "plone.analytics"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:15
# 86af22e792864f19b3f091998a530018
# 515c489546d54554b4f142a771ed610c
# 8fac04a60b134c0db57af12c7b8a2b03
# 30b102ba714446d995263fbf3699635c
# a00bf4830a1f429ebec4b999dbbb227d
# 4e94c2acf9b84eb4a4543af0fcfa3cd2
# 9fe68aa5f17540798d625a2eb4863353
# b24e7d64acc3404cbff7581f15365c25
# 181c7b60a0734279a3d381ece247e10f
# 2260b4fb6c34421ca8f357fb9ca8b7d4
# 4e2655ec6ca74c43963cb42c7c6fad52
# d2a67283ff5e4d4a9c81dc1d16bffc97
# 01292e494b4e4533a8be3d1eff4bc1e4
# 2c4ff1bf5a5143bc96a7f8eebfe74009
# b764912d31b040acbdd3be0ac7405453
# 5b6bb4110c944ee8b3800aad53d591a9
# 41720b9ef3574c6da9044b4fd04791ee
# 14b878f7dbcd47479613b11c667c6e20
# 52e51f3caa074d54b6fca39e2d6a7d91
# b3e4ff445a5d44cda0d5a57a853036fe
# d4608b7eae5c4d9a8bcb81f37d6ebde1
# 5ee712e6ad3241dfa12a510d03cf8db6
# cd861dc30375467693b7978037c1bd5c
# 485ae55484e34959be95da8960f6001b
# 9bdb8ff6d12a4dbcb2ec69b2c1140a0c
# 8122ebe78916480cb67fe97d5ae652bc
# a05e2d852d904d1b95e358db68c457e0
# 82b86bf295844bb1a774e226d4b93be3
# aada9ea0ca98492fa5dd5227cee4a97e
# 298b3a1c28ba46ed90dc1b3f528d0c66
# f54b5d7e87dc46e3a19caf681c82aa7d
# 6d5a56d41ff845f7a5799b5ef9894789
# ef0f2d2b2bd2414c8047ddca2a4ffe31
# dea48772fff64e1ea8b708b908bec376
msgid "Type:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:15
# 94baea5d197f4d1498756b73185ca940
# 99514d1ebe2c4079b0eb3896d9f1e2d1
# 6cfc1f2107714fd39a6cbbf9fcc9f681
# 0407a1df9b5d4759a19cdc6e6a81e7c5
# 0bc05a97616b4a33b10c80ad383ac5d8
# 1458aaa4ef9e4d718b73aa9af95d5d50
# 4238080028614e4da9afedcbcdf94a27
# c0fce31aaf6447a4b6564df3cb509057
# 3daea4e670444a54ba0377e59d051dcd
# 063031cf98d24d2ea281115c66b18507
# 0a3ebd9aba74490fb1f5f54d31ab688a
# e5b3e46ae1f845be97f537316f330b2e
# ea4ce3ed5d454157a487d22489771a76
# 4d97c826b65c4fde8d9e422ddef9fa34
# 91e8e96ab9a04c1dbf5482baf79ce9c9
# 7f4a78dfb9db4f0eac290078e3165be9
# 3f335d5f5b904a288b1856103b6aa283
# 4b1d22a3de8c4e2795cd1c9eaf9bb6b5
# ff0a1365b1714389bef7498a93ec82e7
# 4cc555901b3047be9513c0153cd98ab3
# 78113143c95a44c58a6844267a8bb5c5
# 8b4d156371ac45bda14f51c7637b1543
# 59ad8a4c101b4392a08533962767175e
# e64859ca672e4b5c9b7d4751837ade70
# c77cc97f03b0435aba2cef402d9b59d6
# 413fd1b9d1594ddba8cd59d5659831e2
# 2ddb007515c447ec922bc8903512c1d8
# 6e2113fab4d5483298840869472097f3
# 23ec1bf376e3416fa71ee594f7bf7de5
# 5a8d13c718f44bff95408f83cdaa05d0
# cf201c4eea82493395f52e0c52f32aeb
# 803f592374a045648467033395399ad7
# 46ce940f2bcd4fa8a4161eb83f60a273
# bc2a6971565d410bb59bbfb28372dd2c
msgid "`viewlet <http://plone.org/documentation/manual/theme-reference/elements/elements/viewlet>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:18
# 98ad2f075951402c9346bed6a1ec93e3
# a23b39987eaa4a9991f771b7a160ea13
# d40edc5f02c14a378b2bf0b1a7e51cde
# b97a661a911d4f7d8e899f0e80038f87
# 10d4489ff2104f488fca70ad91f5a514
# 92f1cd2b2a3c415e8b8bc1f83090122e
# c3151715393a42ec81a35d490c605c00
# 5598114e147543b19d75b1ba8d5ee6c6
# e38050097b1a4abd8825254fef46abfe
# f5c43c76bc874fd3921d109cf452b1eb
# 2bded9988cc24c83970721c8c331d58c
# 43a0abbbb9334512929c27a6ba290eaa
# 5e4aabb6c8c14b28b9abad90daa67838
# 48ab240803484197a799ef1380f9aadf
# 0645707d9510493eb69cae0b2ed19fa7
# 7d9a22995c1a4513a19d2dbfbe5d9e8c
# 3748884c505b41f4a288f86f45e46fce
# d11156d543904a00aec8bd81d86a55f6
# 99f3487b654546f59e570846c442f114
# 1be152bb221c4ea1bc01e36692c6ceb0
# 08e3bb2c71184f7e89db69bf30e52f27
# 0114fc7ab8a4496eb54814bcb3999057
# 01541ea96d1e4c2e839af486a94d1c35
# c46265448e9c4d538e798e993e9fcc52
# 917a9401eb7d4100a9275bbdb3957170
# b51142ae1e654e3aa050ff679d59e2c1
# 1508901256344cc8a9a3cc5b13d28e2e
# d3ef7b2254d1434cb25e81560a3ac3c8
# 48c71907057d4595a471f538e8ad489e
# c92f6cb5c10f4f36b01d968ff7c5ee06
# a5d8cfad525b40a38930d2c74e277d07
# 0783cc7823544ea5a792d6c48938c718
# a9906a6922f44d1ca2352faa9126a01d
# a426e952a15a4db9beab3a7ec9c6fa5b
msgid "Use:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:21
# c83077855b1a498681bfb8cd15a6ca83
# 33e8c36de83949bb99bc92d70a91c546
# 1404f85cac3344a1b488f5cc7d059a70
# c54382e7379f4160a89b768d377c6d76
# 940fa73c43d247088cd466d655c8f7e2
# 163a6a9f8c32493098595f95fc5b6951
# 75ddb44600754787bcd4869772f153d2
# 4d5061f947d346f89ee39f0aaa60b086
# 6c97c5a7df394842a6f5fea220ea4ccc
# 714568af78a44170adc6b09c74757908
# e8049999bb0847269cee6a8bfffbedd1
# 06cadbbcdc694ea5baaabb74eae13ade
# 8a3bb3ec1af24e9a937644a078ee2088
# d4e40825939e480285911d4ea92cd0a2
# 833d90921ab04e1bb2c90dd6c6160d4a
# f8545f90af994efe9e9e9738119cde13
# 9e9ec0ec297b43da851999a3e4540ae6
# 7a2b6fe2ea504d96beac4198b181fa46
# e3bd0002e1de424cb8a31500d321e321
# a528fd48c4004c01ab99837d0934d377
# 2e5741ceb0a3446a91530564341ee38c
# aee2b803dd5b4370bd6f330048432a3e
# a1dc6f9fcf454ec6a338c5f88ba5e808
# b738d6e55576427097d1e7cbbe019e2d
# b3f73277fa4c429998f223f722333cf5
# 054beb9cb1704c1a82826d054960786e
# 7da7a4a9086a4ad4a6721266f251f1bc
# 5872867c5bc740eb9376fca9a71a8d39
# f9a68b296f9c47ecb5601b3f0ee73458
# a7fe55d135cc4b11b885c14e366834e2
# 0ad5677eb135410abca644d7b44d0804
# 6edd33da989d41bfb8da4972b157b625
# a62812d4551341f1ad8e8541b439bc34
# c1ea5b42ba744c8c81d3e150558ad141
msgid "Go to:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:24
# 726eb253c0bd4fd0ba0bce8be7b20d9c
# 588a53fa2f8b41e8b413863283364465
# e7e1b77caaec41f09509b0b4103c11dc
# 1105e8ca49734d1c9155332caffc2d0d
# 1b5196ae76eb401aa4b9af64477402c5
# 6d4b52d83ccf4e9c94d512b8b8492280
# b29d67984ea84a5c95e7dee8b21e9d04
# e336ae2345dd4e71a1ec295e3770aadd
# e14919855a0a419cb46746e3b98d1b06
# f77a976a38b647b595ad2f1f661ee5fd
# 899e3e43b4344e99906708e57896fe80
# ff8035fd547641cca572ffd7bb040532
# a347d58551034cc99bd98dd3c517498b
# 59d0b94923da49f4a546398ccb58d98a
# 3f42134ee25140ecb408ffad2c91df91
# 5e4ee3cb3e40457490615151e6f2438e
# 26a83f213a054944bda208404c34d85f
# 730d112defac48bc8583d1c5edf73c22
# a2eb4c13471e440dac3cd124aa9850f2
# 9f59c90d95db409a9e3b28822ce9ca8a
# 939470d9019d49949e01ec0144cfede2
# 46b2ae121a00477ab0c8ba70f6e44b2e
# 0f6ac56cd6c949b08612f834103f928e
# 79139d09c2b34be083853bee9f5da3f0
# d116168331944566b6db7978e7d364ac
# e5913b69e8ed4e7cbea39e546d4aab4c
# 056389685aee468aa930a0995560698f
# 3544b35ec3fb430292e35d558028e0bf
# 6dc6272214c148f0b29b6567ef257562
# 042400dd48274ed295aef86477c22009
# 25b4855a7901442397899a35f823b1ba
# 46f3f13020d9430bad18b0f1be863eb5
# 70899cc454494e488abdc43e70583b91
# a64154215e784fe69653d420e26c236a
msgid "Customizing in your own product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:26
# dd1fa9212d4d418fad23453b606b7b95
# 8a144246d1e442e7872af0588f46b9b8
# 854298575ebf4e4991956d2dd95b33b9
# 53a8d65955f4417cb3db02c3ca2157e7
# c0e0ef6de3f2463c87c02ac0221bffbb
# dd8ff76dca934d6dbceb01459fffd2b7
# 701cde781d5f4f02aae384c7cdf01b0c
# 22e41c180dca4803ab24bb49ae975a0b
# 2c87ca3fad1445319e5633d152ea0504
# 66c25e70c4d74692a46950c5c03b07e9
# 1ded002d5a5248f3a8b5fa8735491f0d
# 2aca1c943f4e4484a99468115167c988
# 8abb673e38834b5d96dbfd8bc349a3c0
# 3cdff4d62d994391a13aa2a1f3ad5921
# 6d4a5bcc38674640894cac766cd638c8
# ded601b0a69d4741987f7371c266b727
# 6b9e889a6f23463aaac4c6931269985d
# ad02dca4e2494b89851885278e27a1fb
# 88524b436d0d499d85360d0128828a61
# fe960c18f1b74602b2d7dda22e32122a
# daa5c8271a0e415792c196168463bab0
# 1b2a5f593bfe4b3db4b9aeacfddb6de0
# 7d8c26ba18eb4b01863ed4e1ada299b8
# cd780335329441948dede7bf186fc90b
# b31f8438033246e0924c4fa9b2d062d9
# 81838da87d15447e819ba8f9989606e0
# 24839c4467d446c7b0021071d4b002be
# 42bb5a9f5e0e4718b55ec4ac4ba34164
# 531203089043483cbb8ad1d578e057a8
# 350415e2863a49d89102c50c4c72210a
# c3576e3ac9aa40b59a13cb3c9127a8ea
# b8591ab4885f4266b45c1aef806ef83a
# ef4e5a3a6caf413a821d0362a0667648
# 6e2d969a1c4c453f8ec1a35add953737
msgid "The following details will help you locate the files that you will need to copy into your own product. They will also help you to provide the correct information to create your own zcml directives, Python classes, and interfaces.See `viewlet <http://plone.org/documentation/manual/theme-reference/elements/elements/viewlet>`_ for more information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:33
# 752e2c4750974f668cbd009ff9f0bfa5
# afd94dab450f47e0bd47d24aa57f206c
# 83be372fe6ee4297bfd60d8197e2828a
# 2fd591617e6741c9aa112573205b9555
# 65f3eeab6efc4af4987f9f7af9d7c82c
# 03539523da364d7e83871c72bfd07cfa
# aa473784e84a461dab8935b503d67825
# e1a4b84b8afe40d2a50cfcbf5594b260
# 4a02594a49c347fb9505face28299d08
# c4c5db1833b94782b621bb4dbca3766c
# b6d782b7c0e74706be6d6c526ce53008
# 8d1b637225b04904ae6efb8755bd9bec
# 5fa34096fdd14a2baf646bb2d71838c4
# 85b35916db8d49308b44ceeb6fe0dcf4
# 5ac0caaf4a5243c38427fafb8b09e014
# 620c5c5e44f846d386f306e6f7c82141
# 93f02bed82144c3b9c3ca57e01be19cd
# e92325e352f94ba8bf5a4b0ebf38ce4f
# 100818a969f04bf5a2ae407b1b585f8f
# 5522fe537e0a4435b73e12ee100c7dc2
# 6d00b125804843f3bd777ba6d94460f6
# c353840117404a929d5f6637208a97f4
# 807c0e1e8a7a429e84f4a0a126dfdf4a
# b1597ebf4de940c5920e074a6a8c1e3f
# efe9a8699361498c8a6bdac82a2697a6
# 47292b63e84947c2b30d580ac8f73fbc
# b198ce1878334d09ae220bafabfbc4fe
# f84eab315a5442c6a45d593e791896b9
# 45df78379de54450902961cc1b1092f1
# e7de833f28c44668a1799eb6305dd386
# 719cae3445384881ac0a777631d8ebba
# 99200efbb2d54b59af14cd0e381d1657
# 5db116588f244965930d67689d43d0e6
# adb8c14b493448e299141ec8f1d16408
msgid "Located in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:36
# dffc983dafbc49de8cbe2ddff9961e2a
msgid "[your egg location]/plone/app/layout/analytics/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:37
# 7832d34dc3aa4b1681d4867182441b93
msgid "[your egg location]/plone.app.layout-[version].egg/plone/app/layout/analytics/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:39
# 07762ac449f944f69c1dfb55eefb3474
# d4395bea977041faa671c6ad9d91ed4f
# 156e87fad03e40a7844e82e9155e080d
# 7022fc593ba54f92bd247523aa98469e
# 02e2d8b7943c4c268ef34f40ec4ef7c7
# 18d55c8d9dae4f3da388f1c97268d2ee
# dfddf97f76de43b99cde538239e53bc8
# 8ed69103b50443a19cc875de1b505230
# 7f1cacae04184fb1b327c7eb3685a4d5
# 2b324789733d466095100590f42da84b
# 6b49e1525d254607a5f2964fde9c4bac
# 20816796455c4839a56ba8abf6b6e4ff
# dda84f2402b947a5a83d265ae578afb8
# ffdc2f406e3542cf9f91921cb59c0f3b
# 4382e42d2e1042ed8564c891d7ce0ee9
# 56fab94e2ff54626845ba4b3cc496fe4
# 39cbe9c2c075410ea8a747450060f98c
# 75593db61ebc4eab8cba3fe8a49b55a9
# 424736f0e3ba4145840c2f89bb777cd7
# bfad67226dad42a1aab901297fa51b91
# dc96578ef8f042a2886909c2ec4b1c94
# 4ec6c83f8bb344d0b94a9754e3716582
# 29f3cf44e70c4d2986bfbc5cc6dc212f
# 2bb8838461db4240b0dc97022db28591
# 82ad5f1663ed4224bb7ca086c03ff5ba
# bf1f6f4578d540888a1ec0afd1f19a11
# 02eab9fcd6924faaaee7e9b020d96b3c
# a15cf12cc41240a7888e51f4b1bd7464
# 200fe93db8ea49f7ae07039728c7bc74
# 0d4f1c517a6748e9aecfd16dce760206
# 6a79990534ce40289fad5ccf2cdf8fa2
# 855d971216d948f3842044c594ff8cac
# ae0c082aa55c4466947bf1d64ca15fcb
# e06a81cebd054602ad00403c64d8aae4
msgid "Template Name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:41
# cfa8e8cda17440b3b56accdfd7632921
# 3e5c0cceaae14fb1a6db8ec08b2ecfae
# ac38732607bc490aab55d4be38a253f4
# ac587b62bee2445d9825405405209a98
# 5806b1084c0b4b58b713c91bb90e3260
# 62f8816288b4413bb5dcd1b57a41cc67
# 575609be61bb4208b23a8f2918c49c90
# 8ab4919fffae445399e5758baec458ad
# a21abbdafec047fba5607f64fd2abc33
# da025c3cec954775b6d32e05cdc001be
# 07976676ab4642a4b5953b9ae8f7703e
# 7c32946f3615439cbc60133384065162
# a748ddc5a69b42118e652dbb95bbdaca
# 31c4cbf729074f5da69b2ab0333ff46b
# c848b2815b364c7e8c6e07a4e210e693
# 988f0b371771464690a98ec39c6144c4
# 17175476ce2743c89189930bdeeaf4ea
# 70420c5b29c84908834a7e4ba1591645
# f44ff4c2d2a94f8ab44575d40a46d329
# dba39a8052174b76a3eb973a7908de8d
# eff7443e0cdf440ea77fd70baad92bf2
# 5b2ecb519adf4dccaebda0a8368e671f
# aa9916e906a54f8c84c8e2e67ef74a15
# 065ee88b6a524809acef59bbe76d55fe
# 2b5d1472618f4289abf04a1b3e9122c4
# f7d29308449941c39a6ab13e3065c9a6
# dd63faf45b444d43a667a7a5a81831dc
# d9ef1c470c7c41dc8b57d0418742e4a8
# 7eb83dc8c86643cca9230eb627939f7f
# c088cbbc8a464b1e9cbecc75bb096820
# 421cc3de5f284e4c978c53750c43618a
# eaa911b064e843749e207c8492b822d3
# f3bd917f8a4947d9a8ea3f327e673692
# 47bd6358b0ee4fd29d0b9103f3fe7bdf
msgid "Class Name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:43
# 0a74266bbc184b4d913b9435eb238dc1
msgid "plone.app.layout.analytics.view.AnalyticsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:45
# 0745092cc8ba41e2b7250b4caee06b63
# 3803656dce594a929b6d217f9171a348
# 6734e2ee512f4ddf8b83d970db82903a
# b21225ee1a2249f4b27cf5003e79d17f
# 6606b4d090544ec5a67b809fa7b58b69
# b87c63c144f9485087fbaf0ea4f886db
# 59664f18314544e89cf8878c76696940
# 0d2ca848fe124cdb94222c91748cdd6d
# 41d5bf53fd3f4a5a8f4b408a0ed9c3ae
# 9d06e410d95843cc96e3ce68c73da9f6
# 3ca07ab81c4446e7b0f3faffc00773b6
# dc0dd69f961f4f7bbb12431a7d06df99
# a7155061410e436595ebbe142f2a5a46
# 0b8de0b30845469789591e26ad880b99
# e96b87b9231049aea63e3b8a61b554fe
# e71984604afb49e992894a33bb757c5f
# a2f5756e4ed948cf9834a993b2a34f23
# fdbaba2463f846dbb7d172087df26915
# cce1b660049f4c27afc9f236bb24dddb
# dccad8c3a8b44102852502ee7a9d6efe
# 41f7041cf54e4112acf91194b15dcfd1
# e8b8334c0f5943cd964c878d530ee35f
# f4de7bca3be14b6e879bd0732d5094da
# 75e9886d2b6d413f878bc8d0e769b616
# 325c8a010f6942f5b1a77ddec6f4e411
# 9f809e3308644e7bb4c6e6ff1cd06ba7
# df17ec3b65ba4faca0d83aec7d3c6593
# 9b7ccb5ee06e46f792b81413b1a1cb63
# c60c569676ee47f3a0cf3e7ef52029ea
# c5a9a49dcf4341fc863767f7e9464e30
# c5ef818b65774985865faceee5ffead9
# 0fb8d1b973924bbf8035ac66e6a03840
# 32803d664fdd40b0a68e6afa727cd38c
# 5d86698dd3b248289110594381c82181
msgid "Manager:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:42
# cd0c3ee8d85f42839e1e995adbfb2479
# 934d675a4eaa47bd99b0f05c1fa2e07e
# 5dfc9859bdaa4c70811698b32f19452a
msgid "plone.portalfooter (name) plone.app.layout.viewlets.interfaces.IPortalFooter (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:53
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:48
# 3079b7539c09434fab27e4269e381f91
# 99604a8096c24022bfa92564eede453b
# 38930a7c41a14992ae482b1f9c292e7a
# 6bbcb03e0421428bab7e6df656eccee7
# d87a801ebd2f4ab6a8580dfa3f2f0a42
# be9cba4d5327479ea75a83374f04c3b1
# 74d2f79f2fd74cf697aafd24871faa4d
# 21aa888c5e4c470db7fd9db2c232a9dc
# 2b9812bc85e64689b76c7555953f7563
# e7ddf7eb482c47c8b6e01b871a072dac
# dbd90ea9d1dd491587e92a46a9af5f2f
# 2e79f0e1aa1f4f1e97c507a169ae6378
# 981194353acc42d9a14b02624304c46a
# 6ad755a584c64208a0ebafadcdd75067
# 9e2836fa1bc04714bdbe5f22b5a93786
# 0bea034e7c624c649d574e8ed04c8136
# 6d4d762f695b40b48c8ab6e2d25bb390
# 83c976dbbc4142fb92c730662d33d07b
# edec2386cdba495abd0830bafded8a89
# 9120dac4c8564f9aaa535267333ebb37
# 44a7b0a931094c268f9e597da26afe1f
# 6d6c7982b6e94ede88611b10c4197719
# bd250f80294a42ddab5b1dd983bc772b
# 03340e8031c340f9858449f551dc0f6f
# a060592d652b4192abfae1b40195d947
# 6a05c40a475c4e7f98d167fefa4bbf0c
# f72a108e2656479b8f66727cdb15741b
# 46e6564b0d85445b9b505c2126e1aba7
# 22218682ab8d4208a1bd18e1cc40e613
# a0008c1c49f04860836609d42b071ddc
# 21f8910682274209bc8a45a907733563
# 65eb557dbcd548d1a54a460aa75bbd38
# 45402bfe0fde4d5d97bb176a890de261
# 1bcee5a8e5c347caa8d0b90a74750487
msgid "Sample files & directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:62
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:53
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:56
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:57
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:52
# 2cd89b98280f4d5886a53eb747eae676
# 427a228093b548fbb072aade82bac827
# 93cc73e840e7423686ca7acd8ae3361d
# 37b792793abb458083294d871744b41f
# 629a603e7e0c424c83f082b36f63e5e3
# 37096a402c1b4d0eaab5bcb30862a08f
# 55d5aecc40ff4c599d67adbb3424eccd
# 2111dbeb428243f5b0b8d4e8c6a6fe4d
# 1d30500ddcc644e187a3c097b816bf7c
# aac8bd2fed984209ae9576c48a524bca
# 7830586271994afe930cced2206d53aa
# 0a5057e12ac84ecb9284544242d99180
# a08954c95fde4e9da9b3043dc99e6f8f
# 8ed5f78f237e4de99e2adac5dfa2d185
# 9c27d8ad092345ea92afa6caa88ab62a
# e6653c031b4c4680a08df7bb9796d712
# f906f83d5c7e41dc97df4fdda4c3b8f3
# e238ff4a3a264618b78dc412e4971ab8
# 26722ba2bf014132af592250ed2196fe
# 042b2906448c454791df03e05c99c59b
# 583574a460844f2ca6c256491ea34fbf
# 062162c421474215b7ce6436c838d402
# 41d36fb773f547b28e4069c996777e7c
# 2e6489a725ad4c46aa873aee76a4cec7
# 7cd2d88b71ec4a7eb137d3b7d621304c
# 097cc1abdb53490d83e843e04910acc4
# a86bd4ea5e3045e58ef1d5e2f4a0e4c4
# 346d9432ee384b308c5ea969410d295f
# df0e8c89a3254fccb60d82448fbda8d1
msgid "Create your own version of the class in [your theme package]/browser/[your module].py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:62
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:64
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:70
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:62
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:64
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:66
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:70
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:69
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:62
# c63ae1d3d33d4a148ad54befda3fb18f
# e44ef60fb7874569b86302adba7cc411
# be260c7013cd44079ad2a7661cb9e502
# 7249c041771a4085a43eeedc8b47ecf6
# 23afd75678254b02a447f48b9c4780a2
# 3ba0299062d94e1598e0daada7d4b39a
# 8351c5e1059d4d1abf8985f93a10796c
# 0528a52c70e0459b84e7ec0e202d79dc
# 8f7bbff3a25f42019f8ac8b75c5f6eed
# a1c060adae7e480a8de44dd4e0b5ed56
# c02d419742744bf38e521c6fb0388952
# baddcdaa1894460a9bf13b0835a7ae3b
# f7dbd94d9b3743459b23cb7acf9a607c
# cfa02a6ceead45b68526e5d993b45130
# f531e221f0574665a2e9d17ebb4302af
# 847be8edddfc437684148174c820ae46
# c273d90b28b7497193eacbecf103460a
# e18f560dc0a44fbcb82640782dcf1d39
# 70fbb6f4bde44ae2956089ed91ab5519
# 16d745028c6348398edbf40087d955b2
# 350b5fecddca4aa4a3e7e1e04f1e2c5c
# 214c2e6f85474c6b89c6f7988a29a744
# e5ab40e5d87440cc8f7deb44a2a55a7c
# 83319e5f795a483bb718f16513ee37ff
# 650706172c0b4c4b8753f030a805c9bd
# 66add50a2dbb455e9d89e36006c55f51
# e50d1bf5e5874f9b944d639dd6b68045
# 0cefbf0b5a584499830730e515b03d23
# 60d5220db6dd41d9b4a6f288fd57438d
# a8c3dde489794269bc1423f701da1107
# 0b030c1c87284881893fa4fd3dfe3474
# e1ea1fbd7c344afea6d774553ad06112
# dbd793c52fd8475190607a1d5ee355bf
# 2b7feceb2d4d41658f1374e79ce5453e
msgid "Wire up your viewlet in [your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:71
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:70
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:71
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:71
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:80
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:66
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:90
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:80
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:75
# 93751981270c4125a74970973c3c04d2
# aa7bf98687b44ad69095f540ecce76da
# 4fbbee96c53f4a2996cedf63dca77453
# 8e7564b75ad94e3dbd8f3ccfea50ce80
# b3d3adba55d340aab8136bf705afee85
# 78e0e560e4cc41249b9546901d7c4597
# 145214cc4a07431e982fabf01ae668d5
# cac4700e96884669a5a090047f52db7c
# a93e3414fa504d8db0f8d5befbcc7149
# 3f0c3d8e200748b0995fddff6885ff80
# ea84c5b2c7824e29abc37d2bfc52d5ec
# 7306b3a3e0824246a0d89e6108460bdf
# bd9f5141b96b4c758e1ed42fe372cb98
# d6a7e9d6c91340ddb89d01f118236929
# 8555c95bbb854e0e964f4087e4aa94ff
# 60db1419604349d8a3c3b3dd63521817
# 1900e8ea35a14715a08dc3ddce73fbf6
# 0adb4bb9a0444ee69b33b288a25722a3
# fe2748a56ec4479dac9cdbf940eb66c2
# a7dac95bd1924d5586a54a2c841e287f
# 669773a8a5164082a22f191a73a3f464
# fc502d02cab34874a3cf4b395faea9b1
# dd337b2b2ac8489ca77b2e703ff109b7
# 2a5c988da9e64f2fa7f077a5d7e4fb81
# f5e193aa77ab40618bb8f4a82207cb6e
# f594b9101edc43539ee0a188a8ae686f
# 1e99a120f0384a2693f85c167dc0d44b
# 9274965f100942b097c8a105204b7ca4
# e98dcb7438804658aba5b905487d2d32
# 6ba34dd114554a168fb74b6c31154d15
# 779b3be711bf4cbcac43e5522b74d950
# f10d4b333da34a33bcb16c4d90c27cc3
# 6d99317462454361a047b018ec83f7d9
# 0fd06b30ed494fdb8ca5c0abc23504a8
msgid "In [your theme package]/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:65
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:65
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:65
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:86
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:77
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:80
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:77
# bc88bff81a384880bcb54e959637337d
# 6978e71f87e54bef9a67e16c95192bac
# ff8a4700dbb44b6ea0c1600e51b214cf
# 902ba2ae9dd64edfad795436c62b2ca7
# 6991398715da4c309a57de3c15e7cfca
# 713de864176c4ac3a2ab178368dd67ba
# b3da66fe5a63450b9d227b8ab4e5b90a
# 670a38defcc14c69b4be2933ed87b9e1
# 58960a07d2f94d4d830b17f191bc5b47
# 30699550341c4e1ca75d7b7c78fc7cf1
# 5909e1baa3cf446e8b541871c73a3301
# 7a71d2fe077d4694ac33127f02cd7845
# 7a102f7d28f548d3a81a70aa5cb6f168
# bd403e40450244a980e88117a4613de0
# 31713082cc3d480e9febe4c052c1f4a7
# 4df0970135634dcbbffe2501842b272b
# a8b5c1bec05a4e618265970429efc16e
# ec398e6fbbd847f4978cb19d3660f648
# d995f4f767cb4ad4b689beed3d10b1e1
# 98155548f0cf4817a1b5370d28c48042
# cd2cbfbf86494520b23a429df4df591b
# dbf4e33cecb24baea541536a7bb734e5
# 50a49676108b4212901b3a6082fe7b7e
# 168f3053d96e4767a6f3e0a437a9842e
# b1fc88e4570f4d6a846c7647ea073585
# 50f092b5d43f431fafdd29d4c82f6b7d
# 97274b4bccb84e11a4a357d91c65cf2f
# 6c187e96f4174a1ba0a4c37ddd13d377
# 2da06562c9fc4c9bab5ca515e39fbf3e
# 15dcb240688b4c00bcc04083c11c9c2c
# 83ad851ac6a14ae3964a67e982294b12
# 1e8b60c89d1b4d75ad7b3d07533fe752
# b2fc62d38b9142bda8e115946c485d82
# d9085f6ed40447f9a5788d9e21ad111e
msgid "Hide the original viewlet (if you wish)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:85
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:87
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:93
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:85
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:87
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:91
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:77
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:95
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:101
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:86
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:89
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:93
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:91
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:86
# 37911e9731c94dad9a3e8d25347ac042
# ddb107c96cbc42b79e1987a4ec301d5e
# 851d411da2504a449d3be9cd2e3ef57b
# eccbf627e9ba4eeb996c84a8777ec7b3
# 5306a7a16b32472e9a23da6e3d349e92
# f660ce0f95744ec6b7d805da77e5a090
# cda98f205f874cbd9f022440651de2f3
# c1f34e875f6a4fba8167d1e514a61828
# ac55197440c74819af75a11265a831e6
# 2fff8335518d48a38c1e12ad962849c5
# 1f92fdb9192b4b008f64e729f64bd0a5
# 777f44a65ea343969fcee537df215ced
# 4d5428210c4c441c99da33c63fd8245d
# c0c75527db8f469cb6db8c1a603dfec2
# 4679cf7e6b5044a9a9ee273054dc9d7f
# aeee2bc67d7a4b0f9651cf1496417efa
# 74fc503fba654c7caa41b77698dcbeec
# 0de9f3882b834e3eb1e242950d5af062
# 67be77b543a04f21b4c7985032cdce3c
# 153eb1e05a22402dae085d02b1a819f9
# 91d15e853c0c4e56bf94480d5f2ac43f
# 6fb62398985a40009ad4568497cf7961
# 4df8984148f14260bacc4f3010e2d409
# f751968024c843168fdb2e7ef12ecbd1
# 4f7f5dac11a54b94bb1d0bd87c9a3c15
# 73d5c56de1cb480daf1edec1875cfa18
# 752effacde364f2c801b237ce25651c6
# f8dd418a64c9416e9576107afbd5d342
# ff8bdbabc26b44b1b4b4d7ea39b2d51c
# 6f1c74d3907f442bb2ee6fe506308231
# e91e67c5c2b44f9c8c21dc4bd1d859d8
# f8d140e634f744799cc6552aded1cf9d
# 517e094e445c4efcbf33d24d2c2acd6f
# e58cd658d5ae4743ae54fd9c785a39c9
msgid "Insert your new viewlet in a viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:2
# cd4e9699a0804a47bcde0ed13efe22f1
msgid "Dublin Core Metadata"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:4
# b471cfc3bde043a28ef33bb945d65c45
msgid "The Dublin Core metadata in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:7
# ad04bee3ab8f4beb8607b60677f8c060
msgid "``<meta .... />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:19
# 8c77452bf9be41799a9331b9b41a8246
# 35f5875ac01849fe92fd01a950375090
msgid "plone.htmlhead.dublincore"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:35
# 55f781b2a3f5481b94147e45ffb6ef3c
# bac7d717d5aa47b89dbe585fb50ed192
# a42d2e9c07e944889055ff0eec37510a
# 984f6a9294a14072b5fc88ef9e2b7b88
# 877b02f9ea5f45549429bafc2dbc875c
# 3452b41ee5884988af2b2011d6aaef59
# aa6f3700f9234a9185ab18c3baf8894f
# 53f5e70093d24adfab4067fda661c2c8
# 73a896f0805a416b9bc60934abf320db
# 69cbf043e6e647369970975573dc113a
# b10ad3c6f7c54884b3ca0640e14be98b
# 3f677aea71d04354968ac2bdf5a63897
# 5c2be5cbd6664e71b8e7a23411a04854
# 009c022485db4c33a0be5f5b746f2d3e
# 05c4f77422d34d3cb11444d6f9838290
# 8615c105c956419eb8121a8a63655cd5
# ae75ebd3995b486a903020961c702f50
# e387ee598ce04e13a8b2a0c04823d8a6
# a16004b1aa884041afcfbb766706c790
# e978edbab2674cab9f64a9855017665e
# 6982eee10d8f4ac380c9fdf75f949781
# a6cad2577a53440596ba4c0540197a4a
msgid "[your egg location]/plone/app/layout/viewlets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:36
# 7125ac9208064233a475b8ad952ddfb1
# 4dc422ffced641f4af14020569c8c9ca
# df29501cc33247578766c19f757245a3
# 9a736968e380442dbb6eebb1ebd2b55c
# 8faf259febca46d0a42f8de98832c202
# 2dee607b0232409f90ae9b0adf513e2d
# 9b922323294f48d1ac242026ac6d6e09
# e2a1f9a529874197a38b662394b736b9
# db12b37d3d764586a6e3ba30e41b0334
# 45f0d7b67ea0476d84b87881a5c249b8
# 577a005be89d41a6b2f7a9adf3177802
# 09f43cb0353f49499cdd442108b928dd
# 3f64298694cf4602af58fe8b56a689da
# b51868fa8d5e44c6a2c8eb55d8ba03af
# 10465de076164c3f98e3957f3b7cb004
# 2892a58f63514a3d9dad990a22f72091
# 081c68d8dd874c6a8cd2a2a323b83768
# cc09256075804d9cbfac6adb10bb3ada
# e18ba7eaa7bc4d66ab3b5d1ee5e6e669
# abb0b251dd024717ab32a3acdf73175e
# eb7d7771a0e4451e82ca1478edd37813
# df353b16716d4783a20e567d00b8c164
msgid "[your egg location]/plone.app.layout-[version].egg/plone/app/layout/viewlets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:38
# 0293c4558348416597db91b323369302
msgid "dublin\\_core.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:40
# 22f0cc1b7cb54cc8941140f148efbc2d
msgid "plone.app.layout.viewlets.common.DublinCoreViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:42
# af98c87418564bfa8f896d0447c4f862
# ef1b68daee0a477189cc658e863a3941
# 6d249425f49a468b99f743f146760071
msgid "plone.htmlhead (name) plone.app.layout.viewlets.interfaces.IHtmlHead (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:2
# 4bc82a1be9ac453ca7345b04abda98a6
msgid "KSS Base Url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:4
# cb80887b7a464bbea637fe56d7797130
msgid "Link rel tag in the HTML head with the real url of the published page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:7
# 037af9b4d9c74b26aa81badd9ad67d00
msgid "``<link rel=\"kss-base-url\" .... />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:19
# 62f09da3b9ef41e2a7d2f6f551ace5a7
# 9576b17004984bb3a7659922d9b33ff8
msgid "plone.htmlhead.kss-base-url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:33
# d19468648dd04eba8cc4e1d97373ee8a
msgid "[your egg location]/plone/app/kss/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:34
# a861effff20941ef9e210792437bd721
msgid "[your egg location]/plone.app.kss-[version].egg/plone/app/kss/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:39
# 367d9d08ad4b404b91f7f183cc71e827
msgid "plone.app.kss.headerViewlet.KSSBaseUrlViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:2
# e4b13ee4d2564dceb8a8166b7be33a87
msgid "HTML Head Title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:4
# 785f3a093ba74663b29986bab63d5023
msgid "The page title in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:7
# eab5c0f7db2b41a78efa2a2172b5e21b
msgid "``<title> ...</title>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:19
# 25dbbcf301ba4e55ba9f42a812164dfd
# a771eeaf1ab8422496f4325dd01c91f8
msgid "plone.htmlhead.title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:40
# 091099a6475346e59749bad3ef7822ae
msgid "plone.app.layout.viewlets.common.TitleViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:2
# 418c313b70274db7908d3250678dc2f0
msgid "RSS Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:4
# 653d609c7bfd4ffab6faef336d0928db
msgid "The RSS link in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:7
# e092657f81f347f786b829aef91601fd
msgid "``<link rel=\"alternate\" title=\"RSS 1.0\" ... />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:19
# d4b9d87ea2974323925b0a6acceb9e73
# 07dde4cc3fa841a0b4eb49e85cd6b824
msgid "plone.links.RSS"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:33
# c5d4c3cd3f8f4f72bc9c4df146da0b01
# fadd4af2329f4e66998da4fa0946d0c9
# 38cf7911e70f479db0239fcf9ef9c731
# 1490953343cd4ae7b6d9ff7797820021
# 380542c95c6746779ca429643862bc52
msgid "[your egg location]/plone/app/layout/links/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:34
# 1dc63658a9d94e9189cfdb1648f88294
# 9b856b3d33704cde8551c78538af13d7
# 2782d8dd683d41febdefbe10a5e8bcb4
# 80461768f958454c925cb709118961e3
# 47fa555fab58409e9b5d8032b5d2e25c
msgid "[your egg location]/plone.app.layout-[version].egg/plone/app/layout/links/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:38
# ecb6c7afdc684dd3abce8855dc911a30
msgid "rsslink.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:40
# 0fe132c021b14ef4992b08da4a54ac47
msgid "plone.app.layout.links.viewlets.RSSViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:42
# 488f7add657f43aca4f1f6de0b3a978e
# 828c25c9f7d74655bfe9390b64b49ba1
# f0538ff88a7042fab392dd65efbdb457
# a5b01890b0fa4849b1df7a7f2e7f424b
# 27ae1aa8b2c9486b85da3b0aa9b228c3
# 98f5b48cb9aa40e792a20f49bbc21f76
msgid "plone.htmlhead.links (name) plone.app.layout.viewlets.interfaces.IHtmlHeadLinks (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:48
# f8825dac185b44dd9afe1d4f0611470a
# 68a44d39f10f4a7291a4269fab978290
msgid "Put a version of navigation.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:2
# 5576d66a97664beb978a56c0ec9c6394
msgid "Author Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:4
# 9fbd9547972c4efbb10ea571ac1e9030
msgid "The author link in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:7
# 116cb50742424327ac50ec4cb7e1173f
msgid "``<link rel=\"author\" …  />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:19
# 5cdf51d875a94c6a936d77f58493b8e5
# 6b0726cf28b248949afa552a73a42792
msgid "plone.links.author"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:38
# c8efd8abc8104daeb8c0c708737ed6a7
msgid "author.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:40
# ce16585577f949079d0e9179b9b1e221
msgid "plone.app.layout.links.viewlets.AuthorViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:48
# dbc450a9f9244aedb6addf36cee3338e
msgid "Put a version of author.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:2
# b4d9166c20b04f69bc23a08df9b52f58
msgid "Favicon Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:4
# 7aaa469dff494e5bb62c125a2641e93f
msgid "The favicon link in HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:7
# 2096893a321643e8b97e9c266fee3df0
msgid "``<link rel=\"shortcut icon\" … />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:19
# 5fe33ce1ad784d9a997629dd55bb8c1c
# 642af046bac54e86b1ca61dbcae2aade
msgid "plone.links.favicon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:38
# a0fccda60f6b417b9c8349836b2e9d57
msgid "favicon.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:40
# 969a58c1c7674a4bb89db2b235e3198d
msgid "plone.app.layout.links.viewlets.FaviconViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:48
# 0908b0e87925456d8e12f1938f82afb7
msgid "Put a version of favicon.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:2
# 5c2076246047435a9c8c971d73ca9dcb
msgid "Navigation Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:4
# ba61eaefb553428b8530d08e8f756ff5
msgid "The navigation link in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:7
# 3ebd8de49f464431a3db9e804ccbe0d8
msgid "``<link title=\"Front Page\" …> and <link title=\"Site Map\" ..>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:19
# 8490299c5bcb46029b8a7778d8949034
# de2f0d4c8580428b9c86feb88cac36b9
msgid "plone.links.navigation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:38
# 71b3b65dc55d46999d1a79cbd2bba089
msgid "navigation.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:40
# d96909c080e24cfe8cc560e434f944c7
msgid "plone.app.layout.links.viewlets.NavigationViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:2
# 5a5653fef40549eb8087e8f0a7772a5c
msgid "Search Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:4
# 3d0634e6addc4493b6fac5df7cfc4556
msgid "The search link in HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:7
# 5803f1d13f024ff0b5a9a86118ddbd42
msgid "``<link rel=\"search\" … />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:19
# a4a2e8d8a264423f93b3ea38637cc42f
# 58958c6776b942d082640a2e60e30a68
msgid "plone.links.search"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:38
# 9d2aa8915ffd4d779a649ae5365dd794
msgid "search.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:40
# 11efba9454934b03a5875684decc21e5
msgid "plone.app.layout.links.viewlets.SearchViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:48
# b26d6bb6a01d4343b3b87ddb30597761
msgid "Put a version of search.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:2
# 20832611c5a74382b216f4e26f08d378
msgid "Next Previous Links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:4
# 759d672f21c7497d87a846415bc73b0c
msgid "Provides next/previous links in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:7
# fbd129fec261494e957b51783cbda106
msgid "``<link title=\"Go to previous item\" … />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:19
# 4ec6a8eba4fe4ac796203adb80eae864
# 1206d366c3d14817a0c9c68e48a566a6
msgid "plone.nextprevious.links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:35
# e00c084509ba452faf83be339023ed3a
# 640e87b88f924a9180c329cad3df64ae
msgid "[your egg location]/plone/app/layout/nextprevious/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:36
# fd17f72a52224a6091d5e667ce30f66d
# e0391fce8fca48d7b91eee715ef08c23
msgid "[your egg location]/plone.app.layout-[version].egg/plone/app/layout/nextprevious/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:38
# 5f871f2e5b39437086f642692a1c3ed7
msgid "links.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:40
# ac98afc853064da3b29504ea44f55281
msgid "plone.app.layout.nextprevious.view.NextPreviousLinksViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:48
# d4a365cde921483e8d3554234987cda4
msgid "Put a version of links.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:2
# 06fb95b75d244efa8b0a2d6c4656ded2
msgid "Skip Links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:4
# 731d7a07987a4d96a77c6a16c9c34cdb
msgid "Hidden links at the top of the page to skip to the content and the navigation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:10
# 58f393aa5f6849e7aebd094e6328e0f3
msgid "``<p class=\"hiddenStructure\"> … </p>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:12
# 6b78865940744adba3e7e5abbff0daa9
msgid "invisibles.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:22
# a06956008e1b4d2ab0f9b3c5b27be766
# 09ea33d3d0ff420182ce8e07b805156d
msgid "plone.skip\\_links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:41
# e5439662a35c438ebf19a755dce3712d
msgid "skip\\_links.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:43
# f17c1af4b3694a4788d0a1b414bad70b
msgid "plone.app.layout.viewlets.common.SkipLinksViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:50
# 079562af5ea649229499864ed456c93b
# 9b0bd50bc9974d29a2bc65918f7867da
# 2237ae4864cd42a8a01b2d0a5af7f7f5
# 00b3fd0b2580472d9efb2ecd0b487d40
# e5400e9e53dd46fbad31df87130bd1a8
msgid "plone.portalheader (name) plone.app.layout.viewlets.interfaces.IPortalHeader (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:51
# 67f7a9c6fdc44345ad80781bf65808e1
msgid "Put a version of skip\\_links.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:2
# 7b348371f2b448b5b8e8c6d7f1eefb3c
msgid "Anatomy of a Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:4
# 09a01aa1f01c410c976ad11c4c81057e
msgid "The bits that go to make up a portlet renderer (which is the bit of a portlet you'll want to customize)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:7
# 903fe880c53040a9b3105ebedd148fe9
msgid "Customizing a portlet is similar to overriding a viewlet, but rather more straightforward. There is a specific ZCML directive for customization."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:7
# 00e2afbdaef44ad3a5ae1351886b184c
# c6f84b58cb1b4feabe60cb41a0ce34be
# 8edb77531adc48a4963ec375562acf6d
msgid "Directive in ZCML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:14
# c7688ff46e934cf3ad0cd214b42e5616
msgid "<plone:portletRenderer />"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:12
# ea588c7bc4ce47f980106d5174cf5bb6
# 1da85d060c7d4efaab7e4a9d0ff19218
# 64d63558f3be47508d870d5452daf3b9
msgid "Attributes in ZCML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:18
# ac9704f88e14499ab423b6cda365484f
# d2b12a74e48c4d1c8eede5229bc3a571
# 3c0d456b3d7c4943bafeda793fab1ae8
msgid "layer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:19
# 42a92938396442908e31ce384aa64f11
# ee5948466abf470580e03b5cb2905d4a
# 6c19887aca9b4119b15fcc071853088f
msgid "a marker interface for your particular theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:22
# 60eb4661e8b44242a940f5b5b1846f38
msgid "the interface of the portlet you wish to customize"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:28
# 54172bd89a194d25a6e447a70a8c99bf
# 8dd5d4596d45452685b2f75f3f680e2d
msgid "template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:24
# 911a68366a204aad9d8f100ff5ab4d16
msgid "location of the template you wish to override"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:26
# 27840946f6714df984bfffe54cfa8063
msgid "your custom class (use this if you don't specify a template) for rendering the portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:2
# 03fea237c1344e4e891f2b4a0ec1b48a
msgid "Moving, Removing or Hiding a Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:4
# 53cb4e3750bf47a5ab66064886629b61
msgid "Some tips on moving or hiding portlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:6
# 9be819042c264571b576e5d854135bec
msgid "Whether or not portlets appear on your site is highly customizable through the web, you can use the manage portlets link in most contexts. For more information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:10
# 8345056b57e04c3c92597da4bf290494
msgid "`http://plone.org/documentation/tutorial/where-is-what/portlets-1/ <http://plone.org/documentation/tutorial/where-is-what/portlets-1/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:12
# d642bcdcd7c945abbd27a6842a9922eb
msgid "It's assumed that you wouldn't want to *fix* portlets on a page (otherwise they'd probably be viewlets). However, if you wish to set up an initial assignment of portlets on installation of your theme product, use"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:17
# d9e61bd2bae8450e8f88700495eced2d
msgid "[your theme package]/profiles/default/portlets.xml."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:19
# f86a1d61e3bd4f4abbe62a7327966196
msgid "Here's an extract from the Plone Default portlets.xml, setting up the login and navigation portlet for the left-hand column, and the review and news portlets for the right-hand column."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:68
# 5fb8f71337ce41e090d033c0c360d84f
msgid "The attributes for the assignment directive are described in full here: `http://plone.org/products/plone/roadmap/203/ <http://plone.org/products/plone/roadmap/203/>`_. In brief:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:74
# 0812b380971f453da964cdce12e256d1
msgid "manager and type"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:73
# c9e0c5b830ce4e1cb5f12006a8ec64e9
msgid "The names for these can be looked up in plone.app.portlets.portlets.configure.zcml (for type of portlet) or in the Plone Default profiles/default/portlets.xml file."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:77
# 3ec5a7a1f6f14d64932febbaded33efb
msgid "This can be one of four values \"context\", \"content\\_type\", \"group\" or \"user\" - depending on where you wish to assign your portlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:82
# 9cdefd27b6ed4387bad2c7b86a49679c
msgid "key"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:80
# 6947ab4d5fc8438ab7da9a6bcec1b53d
msgid "This will depend on the value given in category above. In the case of \"context\", the location in the site is indicated (the examples above specify the site root)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:84
# 60680862709740d7a72b2fc45c1cd002
msgid "If you wish to configure the portlet in more detail, you can nest property directives within the assignment directive. Here's a tweak to ensure the navigation portlet appears at the root of the site:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:2
# eece036dda744facb2a4f5c5d0a06bed
msgid "Overriding a Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:4
# ae198608b3d0489abf4dd19915598d39
msgid "A quick cheat sheet of how to override or customize a portlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:9
# 4e128a28ce17466a8bf77c67f6423039
msgid "Use Site Setup > Zope Management Interfaces > portal\\_view\\_customizations to customize the template of an existing Plone Default portlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:14
# 5a17ed4ba4fa4504928650bc6a1a4a01
# 6c301813832d49abaca468f9912610e3
# 2bc4b973674f423d9fcb2e601dcadce1
# 71a4dbd32deb4cd394bf80994d9fd318
# 4239e35a488446d8bbd96a4c1eb98f85
# a2698ffe8b054444ad950fa2674a9237
# cb6a0f02e24c422d945a47ff27fa8350
msgid "In your own product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:16
# 21d9c7bb67d647a6b016d73aa8c0481c
msgid "There is a detailed tutorial available here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:20
# e89ef0c699e54baf94c5331de884ed80
msgid "You can also look up the details of the portlet you want to override in the Elements section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:12
# b60ea98a094144ac908c4a5774ac2716
# 04219f0c1dad4077b7cd0df3f8a79600
# eb57e25d58934e75a46f23eb4f0a33cf
# d487f96987084413ba7677b85ebe3eeb
msgid "Quick Cheat Sheet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:19
# 22c3f5b57c2044d199e60e83cb142eb5
# 41afbac9392b4929b3af896a5815a543
msgid "You will need to know the name of"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:28
# 3c87a16101144d4699922fc46220a87d
# b18944ea2e7d407b836882675d7cd382
msgid "Your theme-specific interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:29
# c6c827fd6c7e4a5ab93061234cab6009
msgid "This is optional but ensures that your portlet is only available for your theme. If you used the plone3\\_theme paster template, then the name will probably be IThemeSpecific."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:33
# 9ebc7e9a3d1f43b993c4d8e7c86987f2
msgid "You will need to create the following (you should be able to locate the originals to copy by looking them up in the Elements section):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:36
# f2bbcd364e4b40a39d4a990c9f73070b
msgid "plone portlet renderer directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:30
# a8ce35fb020c4524a62c4adf99fd5f59
# 02e7bdfbb00e406ba723c29a8697a9a2
# 513a6e37881945169e365562baff7ce1
msgid "[your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:47
# 08fdb3581b234006aab1ea1bab72aa96
# 446469ce13d34e79943a78a03aa93e8d
msgid "page template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:48
# aca309755350478baa7544e06a16a44e
# 8506d5999bbd47ab85ce5d638e7671c3
msgid "[your theme package]/browser/[your template name].pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:41
# dc3035cc73874170b55643bc646d4806
msgid "Python class \\*"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:41
# 6d5c883c250d4cb8920869f4baae460f
msgid "[your theme package]/browser/[your module name].py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:43
# c5e5680490c24b4f9c0eeab08707fdd0
msgid "\\* in most cases you won't need a Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:46
# e82a3ad496f148aca2d77b62643a2945
msgid "Sample configuration.zcml directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:62
# 9d2b2487ec454dfdb3a73844a7fcedfb
msgid "Sample Python class for navigation portlet override"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:64
# 08af290726e2449b8f4f1d4cb0e3e2f4
msgid "If you want to customize the navigation portlet, you may need to supply the class as well as the template. Two templates are involved: the first is the usual display template; the second handles the recursion through the navigation tree. If you need to make your own version of the second, then you'll need to assign it to the recurse method in the class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:2
# ba8c5722cfe54084acd4730479cf85a4
msgid "Override the portlets in Plone 3.0"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:4
# 5202b053815c43639e27f570d8b6dfc5
msgid "Customizing the portlets is a regular task, working with Plone theme. In this how-to we will find out how-to do this in Plone 3.0 with it's new mechanism for managing portlets (contributed by Denys Mishunov)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:9
# 143f0cc4b7234431b0799c98315142be
msgid "Purpose"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:11
# eabc859add2748df9ecbd9b216d1b2cb
msgid "It was pretty easy to customize one of the standard portlet in times of Plone versions prior 3.0. You just had to copy a page template for appropriate portlet to your theme product and do whatever you want, changing it's XHTML. You could also create a new portlet the same easy way - just create a template for the new portlet and register this portlet with your site's Properties."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:18
# 1df32ee10ac747f18344d4c3509f897a
msgid "In Plone 3.0 portlets became slightly more complex. But don't be afraid. They became much more powerful at the same time! The advantage becomes obvious now, right? ;) They are served from separate python package and have really flexible management possibilities. So, it's worth to try this new mechanism to realize how powerful it is."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:25
# da22e4d802884c04aa149adf48e41b17
msgid "Prerequisities"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:27
# 0025c155722e4f8db7f91465f380dcc4
msgid "First thing we should mention - this is not about TTW (Through The Web) customization. If you need a fast and dirty trick, have a look at portal\\_view\\_customizations tool. This how-to assumes you want to have your changes in a repeatable way, so that you could have the same changes on any site where you install your product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:33
# 76bd470f66d34ec1b10fd2056ef65ea5
msgid "Another thing you might consider is worth a mentioning - you don't need this technique in **any** case you want to customize a portlet in Plone 3.0. If you have hardly customized portlets used in previous versions of Plone or you want to continue using portlets in \"pre-3.0-era-way\" (that we strongly don't recommend) you might need to have a look at ClassicPortlet that is shipped with Plone 3.0. It deals with the regular page templates the same way you have worked with portlets before Plone 3.0."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:42
# 433c58ebb44645228327258eb5ea94ff
msgid "And the last before we move on. If you want to customize any of the standard portlets removing all back-end logic from it (making a static portlet), don't do this. We mean that - **don't** do this. Wise people thought about you. Better install plone.portlet.static and play with it, creating the static portlets when you need it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:48
# ac817a68f5c242858fc1df0a6a35de5c
msgid "So, for all those who are still with us... we move on finally."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:50
# bd0c93d49896499a8470a2b9cecd058e
msgid "We assume you have created **MyTheme** Plone 3 theme with either DIYPloneStyle or ZopeSkel generators. We do not cover explanations of all aspects of creating a theme for Plone 3.0. To find out more about core ideas of making a theme, managing the viewlets in Plone 3.0 and many more, check an excellent tutorial by David Convent - `Customizing the viewlets in main\\_template <http://plone.org/how-to/override-the-portlets-in-plone-3.0/.org/documentation/tutorial/customizing-main-template-viewlets>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:58
# 35c8d6393f1e470ba7facb6ef701875b
msgid "The key concept in working with portlets in Plone 3.0 is the use of Zope 3 skin layer - the same as we have when overriding a viewlet. We assume you have at least the following minimum set of files in **MyTheme/browser** folder:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:67
# 2934e2c41a9d4bf2b35ca5e5b0026017
msgid "In common, portlets' overriding process looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:69
# a11cf620a1514efa88b3c03d5eaa51aa
msgid "choose the portlet you want to override;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:70
# e1757731353b4891a967944d1db42049
msgid "register a skin layer if you don't have one yet in **interfaces.py**;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:71
# 8f0ce7de751f4532b79219d9f083caf0
msgid "add the special <plone:portletRenderer/> directive to **MyTheme/browser/configure.zcml**;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:73
# 68fc32d68ed647a083c70f46d2c72a34
msgid "define **portlet** attribute for <plone:portletRenderer /> directive. This is a portlet data provider type for which this override is used. This can be either class or interface. For example plone.app.portlets.portlets.navigation.INewsPortlet;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:77
# 5b4acedf5dfb4def9831697dd5d3ca42
msgid "define a new **template** attribute for <plone:portletRenderer /> directive. When you add this the default renderer for portlet you are overriding will be used, but with your template;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:80
# 9271c2e113e34e3b8ce4a6369ea0edea
msgid "in case you need to customize the default behavior for the portlet, you should use **class** attribute instead of simple template. This new class will be acting as the renderer for the portlet instead of the default one;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:84
# e08ce864a1bf41cbb062d7266a466593
msgid "define **layer** attribute for <plone:portletRenderer /> directive with **MyTheme** browser layer. The **layer** attribute of the portletRenderer attribute associates a particular IPortletRenderer with a particular browser layer (**MyTheme** layer in our case). When our layer is in effect (i.e. MyTheme is installed) the new renderer will be used instead of the default one;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:90
# cb97532383ca457f840eb9dd5468e47f
msgid "add a new template to **MyTheme/browser** that will implement the renderer;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:92
# 3f36a457d0054f6fb8e9986fd993f5db
msgid "restart Zope and enjoy."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:98
# f3cbe9d851114f69bef09e1cc77656ac
msgid "1. Choose the portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:100
# afe88ad47b1c4707b25b51d2a3c5494b
msgid "First of all we should decide what portlet we would like to customize. Let's choose the News portlet. If you will have a look at the standard news portlet, you will see those news\\_icon images in-front of the titles. Let's get rid of them in the XHTML just for the test."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:105
# 96fcc528627e4360965cb7f2aee23264
msgid "Plone default portlets are declared in the **plone.app.portlets.portlets** package. The core Plone 3.0 portlets can be found in **$INSTANCE\\_HOME/lib/python/plone/app/portlets/portlets/**. It might be located somewhere else in the $PYTHONPATH though. Depending on the zope installation (win32 or unix like operating system, installation from source, installer, eggs or else…), you may need to use the search tools available in your operating system to locate the package."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:114
# aefb4a177ca04c08aeb430f58a54a63a
msgid "**plone.app.portlets.portlets** package contains python modules, page templates and ZCML configuration file - **configure.zcml**. This file contains a set of <plone:portlet /> directives that define the standard portlets like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:123
# fe0d84fe4682462ea6e504add25005ab
msgid "Attributes in the above code are pretty self-explanatory. But if they are not clear to you or you want to know more about additional attributes for <plone:portlet />, have a look at **IPortletDirective** interface in **metadirectives** module inside the plone.app.portlets package."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:130
# 7e5016affea241bd838b0e67866c79c7
msgid "2. Register a skin layer if you don't have one yet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:132
# be3758e57eab4256ba763ea8e684e819
msgid "We can register an override for a portlet only for one theme (one skin selection) thanks to the **plone.theme** package. Thanks to **plone.theme**, we can set a Zope 3 skin layer that corresponds to a particular skin selection in portal\\_skins (a theme)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:137
# 9ed30140e96f4ea996bfc63b28bd3231
msgid "Add the following code to **MyTheme/browser/interfaces.py** if you don't have it yet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:145
# 7cacbcd11d394a69a2aad66b4f427f27
msgid "3. Add the directive to configure.zcml with appropriate attributes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:147
# b608d8da999f47c0ab546a28f7d7206e
msgid "Along with <plone:portlet /> directive, plone.app.portlets package defines another one - <plone:portletRenderer />. The last one is used to override the portlets, defined in your site. It has quite a few possible attributes that can be found in **metadirectives** module inside the plone.app.portlets package. We will not list them all here, so just spend 5 minutes and have a look at those attributes, so that you could understand the following code..."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:155
# 0cf27c6a145f4ab48e6c9df7b5c66c8d
msgid "... 5 minutes later..."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:157
# 44758efcaeb342978c77e22c4f070586
msgid "Ok, let's get back to work. So, to override the standard News portlet for MyTheme product we should add <plone:portletRenderer /> directive to **MyTheme/browser/configure.zcml**. Let's have a look how this should look like (be sure you have xmlns:plone=\"http://namespaces.plone.org/plone\" namespace defined in your **<configure>** top node.):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:168
# 9b7571145bec47dcb3f3e5d2d4101ad4
msgid "First of all we include plone.app.portlets package to be sure that default portlets are enabled before we override anything."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:171
# 38835029eb6040bcafea9960e0bc8a46
msgid "Then we make browser layer interface for **MyTheme**, defined in **MyTheme/browser/interfaces.py**, available. If you have customized any viewlet you should already have this in **configure.zcml** so no need to add it twice in the same theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:176
# 5a0de3ae562b490f96a577ea3e5eb406
msgid "Next, let's sort out what attributes we use here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:178
# 05700a595adc418399b1a9e41c82cbe9
msgid "**portlet** - define the portlet that we are going to override. In our case we define the full dotted path to INewsPortlet interface, that is implemented by news portlet;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:181
# cf6ef3a40a60491e8539ed1a3163fd6b
msgid "**template** - the name of a template that implements the renderer. The default renderer for this news portlet will be used, but with \"mytheme\\_news.pt template instead of the default one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:184
# 1347c174578e48ba82cabab0fd27bca5
msgid "**layer** - our browser layer for which this renderer is used."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:185
# cb8972c87e604929a6aa80da11b696c4
msgid "one more attribute you might need to remember here is **class**. You will need to use it in case you want to change the default behavior of the portlet. This attribute will define the class that will be used as a renderer for this portlet instead of the default one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:190
# 31def7da8c144e5b82883a48a60baab2
msgid "That's it with **configure.zcml**. Let's move on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:193
# 3826d38357d24920bee48da173423053
msgid "4. Add a new template for portlet's renderer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:195
# 3adeda54869d48df823e1dd7e92c96a6
msgid "So, in previous part we have defined mytheme\\_news.pt as a value for **template** attribute. But we don't have that template on file-system. Let's add it to **MyTheme/browser/**. Just copy **news.pt** template for news portlet from **plone.app.portlets.portlets** to **MyTheme/browser/** and rename it to mytheme\\_news.pt. Open this template in your favorite editor and let's play with it a little bit."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:202
# d7b032dcbf7742aebb06fd53302e1520
msgid "As you remember we should get rid of standard news\\_icon.gif icons we get for news items by default. Find the following line in your template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:209
# c5c086214b494c8eb7adb241dc821974
msgid "and comment it out so that we do not un-recoverable steps and could revert our changes later. So, we get:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:217
# 2d41ab8fba544e63b9b1818227509a04
msgid "That's all folks!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:219
# ee3a8962f3ab4c10bf819121968ea783
msgid "So, that's it. Restart your Zope and have a look at your news items portlet - no images! Cool! Yeah! Actually not that cool just to remove the images, that might be useful for community portals :)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:226
# 09a3f708fca749dcadcf228942e9582f
msgid "This example is really simple and not pretty useful for sure. But you definitely can do much better customizations now. When using **class** attribute in <plone:portletRenderer/> directive you can do portlets that will really differ from default one. And that's where the beauty of portlets in Plone 3.0 goes - you will not need to put a load of python to your page templates as you had to do before. All python will be exactly where it should be - in python class. And template will just get the results from different python methods within that class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:235
# ba4b9f5ab0bb45c99d97faca94a4b363
msgid "Enjoy!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:2
# 082cec5866d54fc38dad6be1e29e2710
msgid "Creating a New Portlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:4
# 1c957e75a96d40d7b8026b58c45de67c
msgid "How to create a new portlet manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:6
# ae6e3f532e7048ec9adb6e4b8da80600
msgid "A practical example of creating a new portlet manager can be found here"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:10
# 7e07bba29a26460f8404737e2e67f805
msgid "Here's a quick checklist of what you need to do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:18
# 33373356cd4e40b18532d333cd8b4eb6
msgid "You cannot create a new portlet manager through the web."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:23
# 0eb562869c5c43c883ea2fcc45032f2a
msgid "You will need to provide the name of"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:26
# f270f6e19d324198aec2960827fb143c
msgid "This is optional but ensures that your portlet manager is available for your theme only. If you used the plone3\\_theme paster template, then the name will probably be IThemeSpecific."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:26
# 30c9e411f45140cd8d1126ca858e29b5
# d5760c9ce60c48819ce482ab8abe79cb
msgid "You will need to create the following (you should be able to locate the originals to copy by looking them up in the elements section):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:35
# cce7a6b3a9bd413a90993a9d86cba5ff
msgid "Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:34
# 2c554984ae5f4b05bcc27eda86083c25
msgid "This will go in [your theme package]/browser/interfaces.py. You can give it any name you like, but by convention, it should be prefaced with \"I\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:37
# 861f9513a3ba4bc1a6fe93ba9b79b946
msgid "configuration directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:38
# 8874a028490842baafab6fa8a78ccc94
msgid "[your theme package]/profiles/default/portlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:39
# cd3dc9865d464fe4a21d3e7fc0e205ce
msgid "browser:page directive (for the management view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:42
# 065d4b9dc88a46379b75d067998b346e
msgid "page template (for the management view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:42
# 9a4dd5a3f8a64c48889fbc1d2be313a8
msgid "[your theme package]/browser/[your template].pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:45
# 0ecd5fcd6564442ab041cdcad348a208
msgid "Sample interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:55
# afb37f0e36f941f68932fa20c11a866a
msgid "Sample portlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:68
# b9c7d35d10dc4e8ea3c9c29fdefe002e
msgid "Sample configure.zcml directive (for the management view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:2
# 9605d98a36dd47fd8efbd08e5723ffa3
msgid "Hiding a Portlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:4
# cfc47140d09a4f71a31729874b0d5f14
msgid "There are several methods for hiding a portlet manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:6
# 4c11cdf9d903482bb4b4e694f79f6ebd
msgid "A portlet manager won't display if there are no portlets assigned to it to display or if the assigned portlets have no data."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:9
# 57c1f27211aa42658c04f030d4a3c23b
msgid "In the case of the portlet columns, if the portlet manager is empty, then it is also useful to have the surrounding block elements disappear too, so that you don't get a wide blank margin on your page. For this reason, the columns containing the portlet managers in the main\\_template are wrapped around with slots. Hiding the portlet managers is, therefore, a matter or manipulating these slots. There are various techniques:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:21
# 88cc3cb3298f4394aee1faeb90abebeb
msgid "Defining an empty slot"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:18
# 29321d8f131f4d2cb122a1ddfb457266
msgid "Use the following in a content view template to ensure that the right hand column is removed:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:21
# be97a73dfcbc486ebf16a29237d3438f
msgid "``<metal:column_one fill-slot=\"column_one_slot\" />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:25
# f997bdb9a69b463faca2d434aa8b44e7
msgid "Using the sl and sr global variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:24
# bebcae06675448ebac1424f262353064
msgid "These are set as conditions on the slots; they check the respective portlet managers for content and, if they are empty, evaluate to false. You can override these in the template itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:33
# ca4c0f56f7d84dbeb6df634a93b521cc
msgid "Using show\\_portlets option"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:28
# d672b970e6e344639a3b6188fb4b2cd7
msgid "show\\_portlets=false can be passed as an option to a template to set both sl and sr to false. To see this in action, have a look at"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:31
# 98009094af994dc4989069bad2e0be83
msgid "CMFPlone/skins/plone\\_templates/standard\\_error\\_message.py and"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:32
# 6e0b88018cb64a818805457f526bf5db
msgid "CMFPlone/browser/ploneview.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:2
# eb1a64b8a45b4f1f922948b88f822c9c
msgid "Moving or Removing a Portlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:4
# f165470bade24576a1350c04f8a8a79e
msgid "Tips on how to move or remove portlet managers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:6
# f62974ce2c3b4bcf85e4b3042a81d5ae
msgid "Portlet managers are called by main\\_template. Moving or removing them is simply a case of customizing the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:12
# b16fee2d69994b59a41ce7867871b395
msgid "Site Setup > Zope Management Interface > portal\\_skins > plone\\_templates > main\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:14
# bc85754ecb15444b9a283c1aea5b7a96
msgid "Customize this, and look for"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:25
# db41354f70cf49609051bc3af9b3879e
# 67e1cf1232234bf38ff7e1c8f2c857ab
msgid "(use the Elements key to identify exactly which manager you're interested in)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:26
# d53605e9e66a464aaeb625350917715f
msgid "Put your own version of main\\_template in [your theme product]/skins."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:2
# 1cc703ad33d248e78e721fc8e67c3e92
msgid "Adding Portlet Managers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:4
# 51972d38511a449999ad603317c3fe65
msgid "You need portlets at an additional place in your Plone. In this example we put contextual portlets above the content (contributed by Jens Klein)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:7
# ee04b597617941fea144807a65af8ffc
msgid "This is about adding Portlet MANAGERS, hint: **PortletManager != Portlet.**\\ A PortletManager is a kind of container for the portlets, like the ViewletManager is for Viewlets. So, after reducing the momentum of misunderstanding, lets start:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:13
# 949349e3b9364a22adf8623eff924877
msgid "Prerequsites"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:15
# f9953b5cf45a48e9b0b5d78a693ddd7b
msgid "I assume you're familar with GenericSetup based setups for Plone 3. Take a look at *DIYPloneStyle* and related tutorials if not."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:18
# 7a5972994d4d4b26af0ed82b4329575c
msgid "You need Plone 3 installed and a Product NEWTHEME for your own skin (based on DIYPloneStyle works fine)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:22
# fc1c8875aca845c6a9e8afac19e4be0c
msgid "Strategy"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:24
# 4787f9617aba47ceb54a7f5b7dde930c
msgid "In my example I don't want to customize the main-template. So the idea is to add a viewlet to the *plone.app.layout.viewlets.interfaces.IContentViews* viewletmanager. So the steps need to be done is"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:29
# 7c690e2c82374b80972756fa71fbed8f
msgid "Add a viewlet to the viewlet-manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:30
# 47ef9571f6a1474d8d9181fcbb145d4f
msgid "Add a portlet-manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:31
# 02840b05c3b842b1893884c50750d7f9
msgid "Add a management view for the portlet-manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:34
# 9d6e96aa482d4752893e7f258d4ffd3e
msgid "Step One: Add a viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:36
# bf99b60170d049acbad14b081277c52d
msgid "in Products.NEWTHEME add a file *abovecontentportlets.pt* containing:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:42
# 4313d751a73745989f3d7edd58964b98
msgid "Here we call the portlet manager, we create it in step two. But first lets register our new viewlet for the viewletmanager. Edit your Products/NEWTHEME/configure.zcml and add:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:56
# 75c659e66f1b4e0c88e3210138589fce
msgid "Step Two: Add a portlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:58
# 556fece83e9c4d55b0206cbe2eca4b08
msgid "Create a marking interface for the manager and add or edit *Products/NEWTHEME/interfaces.py*"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:69
# 538c2b25f19c47ac80c379c95e59332e
msgid "Add (or edit) your *Products/NEWTHEME/profiles/default/portlets.xml* and register a portlet manager:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:82
# 7cf80a2d2aa640eba356177554cf3209
msgid "Thats all you need if you don't want to manage the portlets through the web. Oh, you want to? So you need a third step:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:86
# 73710786ea2f47858cbe275d5e19fc2d
msgid "Step Three: Add a management view for the portlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:88
# 3c9ac22814934b3daf0c3340a1a2f2bd
msgid "The management view is rendered for the left and right slots directly on the main-template. But we use a viewlet and in here we have a different view. so we need to call explicitly our view and call the our manager within its context."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:95
# a6e177d22bae4d29a11d50bbda2202cd
msgid "We need to register a new browser view for an own page template directly calling our manager. Again add some lines to your *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:108
# a75e73af0ddc44629675d0574cda2d73
msgid "And finally we need the template, so add an file *managemyabove.pt* and edit it:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:135
# 9a7be88e6eac43f3b8d59a4bd641d290
msgid "That's it. After restarting your zope you can call *http://DOMAIN.TLD/plone/path/to/some/context/@@manage-myabove*"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:138
# 96da06be42bd445894c24bce650ea061
msgid "and assign portlets over your content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:2
# 6ef0968bd4834724a3cfbe7790330343
msgid "Header"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:4
# f07b70a3b90c4637b7dc721ff0501db9
msgid "Calls the viewlet managers for the site header."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:7
# d4f53ca263bf45b898fb7d3e69624596
msgid "``<div id=\"portal-header\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:17
# 1b433cad5c9a43d88f6ad3e3cff92586
# bfafcd218c044a9bb55fcbffa81d02e3
msgid "plone.header"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:36
# 7815a8b2e7c041398878afc0371bab02
msgid "portal\\_header.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:51
# c3eefe6753544d8bb8a4c990ad1610cf
# 13b7dd3dacd14b3a8bd18cba35a56d2a
# fb8de1a0795947fabb02b36d4eccb07f
msgid "plone.portaltop (name) plone.app.layout.viewlets.interfaces.IPortalTop (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:46
# 380ebf6002414a4382aa6e1e68dcffa1
msgid "Put a version of portal\\_header.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:2
# 96dbf5b10bec4191992e32777271f298
msgid "Anatomy of a Viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:4
# 4c3ecd494d74465ebfd3e8d7e9f8f691
msgid "The bits that go to make up a viewlet component."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:9
# 8f281fac6bad4c7ab8764de057418b1e
msgid "<browser:viewlet />"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:15
# d3f926d8ae6c4b75801cc6fa0000e378
msgid "e.g. [your namespace].[your viewlet name]"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:16
#: ../../reference_manuals/old/portlets/architecture.rst:143
# de63f630c53c451b84dff6b17e6177eb
# a47ad8d45be340b3888aae18f62de61c
msgid "manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:17
# 8e8795273ae44f8482fecff61f319b00
msgid "a manager interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:21
# 31b2370dd4534c92ac903ffb92a0bd3c
msgid "a Python class. This class requires a 'render' attribute, which, in most cases, will point to a template. You don't need to specify the template in the ZCML, however, in Plone version 3.1.3 and higher, you can override this template using the template attribute below"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:26
# 0d6132ff9fc64c6ea549efd265e66c0c
msgid "in Plone version 3.1.2 and lower, you can only use this if you aren't using a class; in Plone version 3.1.3 and higher, you can use this to override the template you've set in the class you specified above"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:23
# 39f9020412f044fe988ee1fa4dde2cd9
# 341cfe5cebd345f5b306c0bbfcecf708
msgid "in most cases this will be Zope.Public"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:25
# 396541ff9c17490d81e8513c187af527
# 4c796404abcb465c8414711632d11315
msgid "for"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:33
# 42b7b44544e14e5cad59c7e829e40fc5
msgid "specify an interface marking a group of content types, if you wish. The viewlet will then be restricted to those content types (for an example see the `Presentation viewlet <http://plone.org/documentation/manual/theme-reference/elements/visibleelements/plone.presentation>`_ in the Elements section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:39
# f514589f857a4dfebf43cab8367109aa
msgid "specify an interface marking a specific browser view, if you wish. The viewlet will be restricted to items with that specific view (for an example investigate the source code of the Content Actions viewlet - you'll find directions on where to locate this code on the `Content Actions <http://plone.org/documentation/manual/theme-reference/elements/visibleelements/plone.contentactions>`_ page of the Elements section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:2
# 489f0a9d95b84da2afdc37e2c1bfcbb6
msgid "Move viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:4
# 078e436c8229444d83006c77c11b8cfd
msgid "A cheat sheet of what you need to do to move viewlets in your page layout, or remove or hide them from your page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:7
# 94c7aa3776ec4060ae785ace99152fe9
msgid "You'll find detailed information and a tutorial on how to move viewlets here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:10
# 595f7f0ea2224f3fbf620f9e1e2edfb9
msgid "`http://plone.org/documentation/tutorial/customizing-main-template-viewlets/reordering-and-hiding-viewlets <http://plone.org/documentation/manual/tutorial/customizing-main-template-viewlets/reordering-and-hiding-viewlets>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:13
# 9b83c915cd1143959872828b1a1d58c5
msgid "Quick Cheat Sheet of the Basics"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:18
# df89d3efce9a459a8b3fd6cfb042297e
msgid "Add @@manage-viewlets to your site URL."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:19
# 4195f2b61e484847aa20cacf2744b9cd
msgid "If you want to move viewlets that only appear on a page, be sure to append @@manage-viewlets to the URL of the page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:21
# b91592754b954155a479d7a91b40c547
msgid "You will find that you can move, hide or remove viewlets with this method, but that you cannot move them from one viewlet manager to another."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:28
# 37177b8f1d774f3abcd3e96b3859b916
msgid "Moving or removing viewlets is part of your site configuration:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:30
# 8e0eed702a574ea4b873503c20af3921
msgid "Add or edit [your theme package]/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:32
# 4d6d4e9d91034e778ccac9a099e86b72
msgid "You'll find general information about the site configuration in the `Configuration <http://plone.org/documentation/manual/theme-reference/elements/buildingblocks/configuration>`_\\ section of this manual. It's worth reading this through before you launch in here, as configuring viewlets and viewlet managers can be a bit tricky. It will tell you"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:38
# d2e5ac696dfa4ed186a138b069aa56f3
msgid "how you can get the Generic Setup tool to write out the configuration for you"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:40
# 35b830e63c8f47148050ad428d51149f
msgid "why things might not be working as you expect"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:42
# 08637dae43bf4cf18ed7aa6bf635ec4b
msgid "`GloWorm <http://plone.org/products/gloworm>`_ is a useful tool here too. It will help you move the viewlets around through the Plone user interface and inspect the resulting configuration."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:47
# d9691bf2dc204f0680f0e31eb44a02e0
msgid "Removing a viewlet from a viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:49
# 6042991d291e436187f029e855b3d131
msgid "You can't do anything more than hide your viewlet in the viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:76
# 2ac4417be40e472c9c7dd2d9ffdfd5a6
# 7d07eb21d6d345e1a14297f55db91aeb
msgid "Note that you can do this process through the web and then get the Generic Setup tool to write out the configuration for you to transfer into your own theme package."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:64
# ebf84ecc989e4423879980c16b083313
msgid "Moving a viewlet within a viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:81
# a7dd14648f3b4adea0bdb37ae43a538d
msgid "Moving a viewlet from one viewlet manager to another"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:83
# ec8be17ffaa444f98a68770170083d21
msgid "If you are basing your theme on the Plone Default theme, then you'll find that reassigning a Plone Default viewlet is a two step process"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:86
# 0d248a5b9c714839857f32378936ff5c
msgid "hide it in its current viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:87
# 0f422c13dd9f4f69a985330f79d272be
msgid "add it and give it a position in a different viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:108
# c3044ad95cae41009107367efe293855
msgid "you can also use 'insert-after=\"[Name of Viewlet Above]\"' or use an asterisk to place the viewlet at the top or bottom of the manager (e.g 'insert-after'=\\*)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:111
# 8312aca6e7e741f49564c96d4b780797
msgid "based-on=\"Plone Default\" means that it will take the Plone Default ordering and then apply the insert-after and insert-before adjustments you've specified."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:116
# 8c5c624514bf41d9b69d3e473b7d99c6
msgid "Registering a viewlet / non-std. theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:118
# ebb9c9f0663a4838ba99722d238672a4
msgid "If youare basing your theme on the Plone Default theme, then you'll find that reassigning a Plone Default viewlet is a two step process \\* hide it in its current viewlet manager \\* add it and give it a position in a different viewlet manager If your theme is not based on Plone Default you need `to register the viewlet in your theme <http://collective-docs.readthedocs.org/en/latest/views/viewlets.html#creating-a-viewlet-manager-zcml-way>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:2
# 9cc24d68909a4ae9a5d6a0daf1b54559
msgid "Override viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:4
# aea1221f7ccc4e5a90cc8ea71cd264fc
msgid "A quick cheat sheet on how to customize or create a new viewlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:6
# 2c9637ca360d4062a17394f850ba70d1
msgid "You can customize a viewlet template through the web, but you can't alter the underlying Python class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:9
# defd220b0eda462da00ef7e37e607d9e
msgid "On the file system, rather than customize, the process is to wire up a new viewlet, or re-wire an existing viewlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:12
# f887d2744ae1446f84aab983512d9d25
msgid "You'll find a detailed tutorial on creating a viewlet in `this article <http://plone.org/documentation/kb/customizing-main-template-viewlets/adding-a-viewlet/>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:21
# ba0c4ab4934c4d3a9bb1d3bab467e585
msgid "Use Site Setup > Zope Management Interfaces > portal\\_view\\_customizations to customize the template of an existing Plone Default viewlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:24
# 8b320213e7084ee487e44d3abb11245e
msgid "You cannot create a new viewlet through the web."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:29
# 9af1c4bc46bb4e41bdd9fc5c341ad503
msgid "You will need to know the name of:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:31
# b07e5543eb474097bcd7af39ca6ef49e
msgid "The viewlet manager interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:32
# e9ccb06e488a498f8aeff090d8dec612
msgid "Look this up in the Elements section of this manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:24
# 004224ef58844e998151b124cb55b7a4
# 1e5445a15c5a40c5ae07937a19dc55bf
msgid "Your theme specific interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:22
# 1cb53a62084247d69f87cb57806231f5
# 4669b9b087ec45b88d34b03ed08ec02e
msgid "This is optional, but ensures that your viewlet is only available for your theme. If you used the plone3\\_theme paster template, then the name will probably be IThemeSpecific."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:38
# 192f37fc59624c6382ec6a159e1d9d4f
msgid "You will need to create the following (you should be able to locate the originals to copy by looking at the Elements section or by using `GloWorm <http://plone.org/documentation/products/gloworm>`_):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:42
# e3d4aead9df147ccb7b598dd295d68e8
msgid "browser viewlet directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:43
# 6f849818ceba440e9b225b4907797718
msgid "This will go in [your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:45
# b24b0ab3ede5429db665638da53cd9b3
msgid "configuration file"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:34
# 77468291407f41fe876e0096de501599
# 20711290829d4b518dd1589a45872c9b
msgid "[your theme package]/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:52
# d998f3fa5c78432c961e06f0e181223d
msgid "Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:50
# 9f43c8e8d3e34063b01b0381157e779c
msgid "This is optional (but see the note below for Plone version 3.1.2 or lower) put this in [your theme package]/browser/[your module].py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:55
# e028dfb6c98041779faf0eeb526b892f
msgid "Sample configuration.zcml directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:57
# b0d0ea5622e0454784e62ae5f4c97a8e
msgid "Re-wiring a Plone Default viewlet to use your own template (note the layer attribute is really important here)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:71
# 0e5fee2a8b5d43bc93293892b90ce7ba
msgid "Wiring up a new viewlet but borrowing a Plone Default viewlet class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:84
# 7f410b12d1074f6ab9bbbf30e789c6b1
msgid "Wiring up with a brand new viewlet with your own class or your own template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:99
# d2babe3d20bb4d12bf28481b7e3f9286
msgid "Notes for Plone version 3.1.2 or lower:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:102
# cbab100856cb43328aaea22d6e338144
msgid "Sample Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:104
# 1562b4f2975340f6b7817be5c0de34c2
msgid "In Plone version 3.1.2 or lower, you will need to use this to override a Plone Default viewlet, even if you only want to change the page template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:2
# 95d2d2c14dbd4fac8a89c0f11977b51e
msgid "Anatomy of a Viewlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:4
# ca5842ef24df4eaf95022f93ef7a4a93
msgid "The bits that go to make up a Viewlet Manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:9
# 9a663cfad7654d95b42c1d18867a9924
msgid "<browser:viewletManager />"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:15
# 53ab21a332a84683ad9ad3b18b3a2a9f
msgid "e.g., [your namespace].[your viewlet manager name]"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:16
# cde0e512e8cd40419aff3ebe1a1d9bd1
msgid "provides"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:17
# 3c22b9a9db994bfaa275b29107ee03bc
msgid "a marker interface defining what this manager does"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:21
# 45b799696cf0416c8869fcd08a8d2280
msgid "this will be plone.app.viewletmanager.manager.OrderedViewletManager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:25
# a7061edea82f4a1fae67ebdaa05f05af
msgid "specify an interface marking a group of content types, if you wish. The viewlet manager will then be restricted to those content types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:28
# 0f2d66d022774aa48d40d47a66364f9d
msgid "specify an interface marking a view, if you wish. The viewlet manager will be restricted to items with those views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:2
# c4ec4bfdd8444a90831b1d34ef334c40
msgid "Moving, Removing or Hiding a Viewlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:4
# 59b148174b494dc0b98cc1f67a885092
msgid "Some hints on moving or hiding viewlet managers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:6
# a166dfdfb1b54a1697efd4550e64c818
msgid "Viewlet managers are called by page templates. Moving or removing them is simply a case of customizing the template. Most are called by the main\\_template, but you may also need to look into specific content views for some of them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:17
# 65fd71e185f84632bad1bc6a6acf4733
msgid "Site Setup > Zope Management Interface > portal\\_skins > plone\\_templates or plone\\_content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:19
# d5e222e200e74b439bb0bc6f34b9c69e
msgid "Click the Customize button, and look for"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:31
# 32ba0a92a0b04980869098dfb181e0ec
msgid "Put your own version of main\\_template or of the content views in [your theme package]/skins."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:2
# 26cea29dd11c49aeb8b02c6eb1098359
msgid "Creating a New Viewlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:4
# 03e338148eba48ddb99a9f42c47515ac
msgid "A quick cheat sheet for creating a new viewlet manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:9
# e3a9bae110d64979a50522a6880e3076
msgid "You cannot create a new viewlet manager through the web. To override the order in which viewlets appear in a viewlet manager, use the instructions for viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:16
# e583a803948a45fe96757df2c89029d9
msgid "If you're basing your new viewlet manager on a Plone Default viewlet manager, look up the details in the Elements section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:29
# 54b1b2cbe0e14ec4a3a6561cea478522
msgid "browser viewletManager directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:31
# 6d591e643804439287328c539f4aba45
msgid "Your viewlet manager interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:32
# 335aac2b8df345d1a6ff0d7d68ddf3b4
msgid "[your theme package]/browser/interfaces.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:34
# 8224a09e845a45d2b5221c87e4487555
msgid "configuration file directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:37
# e216067899144446842be1d83f1ba92b
msgid "Sample Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:47
# 012f109c91f24db985bfffd22e1d12c7
msgid "Sample configure.zcml directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:2
# ad03fae3b58e4d00b4a96651c297de0f
msgid "Document Actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:4
# 81f24860a50f4af4b3b60c13bab38aff
msgid "The Print and RSS links."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:7
# 0f0ae49f69274142bf3c5a7e4ae6b5ee
msgid "You can reorder, add, or remove individual document actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:9
# a859a9ec963e44fe956c406bb4c59e8b
msgid "through the web: Site Setup >Zope Management Interface > portal\\_actions > document\\_actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:11
# c72fc134e8334de89e6195ae877d76dc
# b55c3b950a614a3091a59f9cf04f223e
msgid "In your product: profiles/default/actions.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:14
# beb7a22cbffe4a4d9149d7b3d7355ca2
msgid "``<div class=\"documentActions\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:17
# 79675c9935f14fd8b20f046eb9f30df2
# 0fbe0be86a034be0a3e6b9ff5586c894
# ce1200501515419fba7829b21d638b32
# 8f2687dafd704d21913ed034139b7c08
# d14ea16795574a5aa6cded219e516a8a
# 37e11dc5bf514057896e36a280a13789
# 4ac2aa0d55c446c898d9ae22b50541fc
# 4e63a2015b2f4860835328446cf74952
# fa499849b4764941951bd923a00a92c3
# 776e71459e9f4f94988270e24f20649f
# 668715be1edd442eb139c427a4b26cc9
# 6f39ca431cc742ba81531d8a83bcabb7
# b6dfa1a2a5b14b999050c785fe6e32b3
# 56251fd907d44fc1aae442233b880b89
# f086109e62a447c9acb977add6f31193
msgid "public.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:26
# ccd84e40e30241a681a8cc16603b15a8
# cda9344e95fe45cbb8d64111b9e29efd
msgid "plone.abovecontenttitle.documentactions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:27
# fdeb3e92f0bd489ba0f873f552e36da8
# 4e19a28c6d2141609ba27065a7d51bad
# 4a650c387d8f418997aa5b75db988c8f
# 267d1c430c584c059169eb6c90345a48
# 90b24f79c3f344eebf70c0a3c7058651
# b7607deba55d47b4810266be886dd3ef
msgid "Further information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:28
# 110416e6785b49ce856a590dcab23163
msgid "`http://plone.org/documentation/kb/where-is-what/document-actions <http://plone.org/documentation/kb/where-is-what/document-actions'>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:47
# b49d05b3dd3c4c84a8be006f557f9d9c
msgid "document\\_actions.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:49
# 547eaa41ef7a404581d5dfc3c90787a9
msgid "plone.app.layout.viewlets.content.DocumentActionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:42
# 98dbfee99d554aa1828cb20690f3b513
# 5d209407137b4b55a57610532fc55f11
# b7a32ce55a5b45c3bc72cafda4f83c94
# c5c6860f67c44d94aac59f0171b147ed
msgid "plone.belowcontentbody (name) plone.app.layout.viewlets.interfaces.IBelowContentBody (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:57
# a82d631feb664e1cb3869d1adeab30f1
msgid "Put a version of document\\_actions.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:104
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:98
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:106
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:112
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:100
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:104
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:102
# 58566e5903f64c69ba1c478368a90c17
# 482ff6ada25146ec8c6945a6d53674fb
# 4adca3ff503e419ca1bd2ee9bc529c71
# c69f0ebcf4f44b23a1b55e569addc38c
# dc0c655a1a504e37bcbfd4570f003093
# a069474a3b484757bdfb57862057f503
# e8d6cba50e544c0b88d8b8538766c2d6
msgid "'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:2
# aae2efc413544b6c82264c375bb95aa5
msgid "Language Selector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:4
# eb365ceb5474429c96f53b7ffaaff0ee
msgid "Provides a drop down list to select a different language."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:7
# 556b62fc043641aebcbac534a7f8b7b8
msgid "``<ul id=\"portal-languageselector\"> … </ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:17
# cf7c822211e94a5c8459fc15c3a51790
# 586f544a49e24e8880132839cac71883
msgid "plone.app.i18n.locales.languageselector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:31
# fd5a8fa0278549c194c6e994f407e22e
msgid "[your egg location]/plone/app/i18n/locales/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:32
# 7f9aa23bf0bd43218b0a346499d8a110
msgid "[your egg location]/plone.app.i18n-[version].egg/plone/app/i18n/locales/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:36
# c06ac9c6aaa649ef91ff33514ebb2168
msgid "languageselector.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:38
# 229c57a0e3454966aa13404dfa6d13cb
msgid "plone.app.i18n.locales.browser.selector.LanguageSelector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:40
# fd9405d7d12c4706a5a911d9e68d4715
msgid "Portal Top (name) plone.app.layout.viewlets.interfaces.IPortalTop (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:46
# 884fba199d2c456983eceb4ddde0879e
msgid "Put a version of languageselector.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:2
# 0a99e0c09770467f84432455ccef26c7
msgid "Content History"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:4
# 2bfba31d60af40568e9c090f0ae432d1
msgid "Summarizes workflow transitions and version history on the current content item (this replaces the workflow viewlet in Plone 3.3)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:8
# 8ffb263c28754921aa246b565cd2e0cf
msgid "``<div class=\"contentHistory\" id=\"content-history\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:9
# 9d878e241e1846eebbe42abafb8da0e3
# 706692db78174e3c8acd331dff27ee6a
# 99fc0f70e2134a45a9f94e3d202df8f6
msgid "authoring.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:20
# f63b57ac268447d1b6fbcf835c59a549
# 1ab2c528e72948059a54be5dfbd897ff
msgid "plone.belowcontentbody.contenthistory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:39
# 1a3a579658a3434eb458676d27416fad
msgid "content\\_history.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:41
# 50522826d3c14fc39713e6574176e623
msgid "plone.app.layout.viewlets.content.ContentHistoryViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:48
# e32ac002d5d347ce82210d7668d6d584
# c802b29759f64df09128f2af658c1933
msgid "Put a version of review\\_history.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:2
# e08bd4c445864b058487d98f73fde55e
msgid "Related Items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:4
# c5eac0c636344b34a6017f5a04e6dcd0
msgid "Items related to the content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:7
# 9d9d4f4230f6419db2e77e0423ffb51d
msgid "This viewlet displays links to additional content items selected by the editor under the categorization tab."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:10
# 416c388c305c4513ad68d58421f50952
msgid "``<div class=\"relatedItems\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:22
# d5a98829598e488bb35cd42706ec1d2e
# 08edb0693e5f411aa1a4bbcf6823857c
msgid "plone.belowcontentbody.relateditems"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:41
# 83938118e0a548f7aa803ac6b6645fb0
msgid "document\\_relateditems.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:43
# af2fa9a73a3e41d2899d2b0f36a5921e
msgid "plone.app.layout.viewlets.content.ContentRelatedItems"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:51
# 0047bf1afb1e4f389a35ff958c1946f4
msgid "Put a version of document\\_relateditems.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:2
# 5888b56818934aaeaa4c3e98c633363e
msgid "Workflow History"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:4
# 759ad0c1bc0643bd938e1288b8dd98a0
msgid "Summarizes workflow transitions on the current content item."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:7
# 82427b8670aa4f479182d0c91c3e0720
msgid "``<div class=\"reviewHistory\" id=\"review-history\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:19
# 4548a916c38d477fbed87592c98e97a2
# 460de3dcbeb44573939abd0f72b03b73
msgid "plone.belowcontentbody.workflowhistory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:38
# 099a3109c67a4b81bae20edd07c9b49e
msgid "review\\_history.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:40
# a512d2fb90314e83a87d356996e93981
msgid "plone.app.layout.viewlets.content.WorkflowHistoryViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:2
# f7f0b0d517bc43edb6e6102568f3890a
msgid "Byline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:4
# e050208e18b04b7cba95d30a483f72dd
msgid "The 'about' information (who created a content item and when it was modified)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:8
# c7980f2f11e44ef1a86d6a71be4f0998
msgid "You can turn off the Byline for anonymous viewers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:10
# d9fae41bd0a0407e92aaef4ae56635a8
msgid "through the web: Site Setup > Security"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:11
# 1f7767aae2cc454db65891890fc438e2
msgid "In your product: profiles/default/propertiestool.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:14
# 0220ef1a5d3c4480a2e4d62da8cc7677
msgid "``<div id=\"plone-document-byline\" class=\"documentByLine\">...  </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:26
# 48e1a22e9b17410383603979e5b993f5
# 3a49ab9c5c484183beefc0f2a3bde2a2
msgid "plone.belowcontenttitle.documentbyline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:45
# f9c42d8ad551467290eb8891ceea8bf2
msgid "document\\_byline.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:47
# cffa25c03924421da935acb03ff17c43
msgid "plone.app.layout.viewlets.content.DocumentBylineViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:46
# c8f2cb2f71d44a7b983128d87aedc604
# 2f08d910c89f4139ab7273048dc5979a
msgid "plone.belowcontenttitle (name) plone.app.layout.viewlets.interfaces.IBelowContentTitle (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:55
# e7e199413c3043ae97d4b8f56f7181cf
msgid "Put a version of document\\_byline.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:2
# 5e4c3bb62e764267af6fc75ef69b3210
msgid "Keywords"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:4
# 3a1cba4a98074ff297c848e3b65a28c6
msgid "The categories (a.k.a. keywords / tags / labels) that have been assigned to the item."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:8
# 27190e2c40e54b7d9d21c08d84fdd845
msgid "This will only appear if some categories have been assigned using Edit > Categories."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:11
# 24f3d3f62c4e4cc2bce75f1fd4239b41
msgid "``<div id=\"category\" class=\"documentByLine\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:23
# cf16cec9c6d54ea8a2afb2925d9b9c42
# abd24d46f4f14cd6b9556a8ade1c639c
msgid "plone.belowcontenttitle.keywords"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:42
# 11b1a4e328564311b3028a5fa4de5a2f
msgid "keywords.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:52
# a8333dd137f64bba8fa2558b6ee90d19
msgid "Put a version of keywords.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:2
# df75f4e05c6e45cca2f2a102ac1b2a1e
msgid "Colophon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:4
# 582a7055f2f54a2bb0fda355ae69ebeb
msgid "Contains links to plone.org etc."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:7
# 98967b598c4c40c38e06b4a4a9304baa
msgid "`` <div id=\"portal-colophon\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:19
# efaf34cac4b04934b9a2139f72c2a69c
# ac7114da88fd47bf98f50abf63b940d2
msgid "plone.colophon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:38
# 3ee5904250e54ffd842d70fea2748873
msgid "colophon.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:48
# ba4dec187513492e9650fb3973f73333
msgid "Put a version of colophon.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:2
# 813ee960ac4b47d0a5d47ae1778063ee
msgid "Comments"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:4
# 7a25f422accd4a2f8d4274878ad82b8c
msgid "Supplies the commenting interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:7
# 68ffa31169264108a5327c9513279b87
msgid "Comments can be turned on or off"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:9
# b994d8fff9884ce99a3e2c55238ca377
msgid "through the web: on an individual item (Edit > Settings > Allow Comments )"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:12
# 6de143cbde4646aea6895f3421d30b83
# c46680433226410c8d7551058b4a89ed
msgid "or Site Setup > Types (site-wide per type)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:13
# f6735f1de5e742519fcdcd2adafd468e
# f523cf3aed7a46fabd2306491c6fb357
msgid "in your product: profiles/default/types (per type)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:15
# 219ba7a04bc844d7bae056c1febc4cf4
msgid "``<div class=\"discussion\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:27
# df4abf0ae7d8493cbf7e5aca7d016ad8
# cc6156f27229415487eea0209f89a41e
msgid "plone.comments"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:46
# 5510768f68fb49848dc29bb6a715fa68
msgid "comments.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:48
# 9e2de0a5b268491fa7db7278e14ed947
msgid "plone.app.layout.viewlets.comments.CommentsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:44
# 428f3141f1e1421993a37e70b67e9735
# 7970890e73b3475b9275f89f4f8ddd6f
msgid "plone.belowcontent (name) plone.app.layout.viewlets.interfaces.IBelowContent (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:56
# 5670572a2ea04fd6931b93c03326283c
msgid "Put a version of comments.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:2
# d40d205c50b8481aa8284d2e3077d16a
msgid "Content Actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:4
# e3e5301c077741618232db50b65c0078
msgid "Provides the display drop-down and other actions in editing mode. There are three content actions components, registered for different view interfaces (as different sets of actions are required in different contexts)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:18
# 9be37a64b88844948f3f3a5be377d7c9
# 22df8691b599487bbec918a0fdcbf8d7
msgid "plone.contentactions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:37
# 1b2259d812234deab22b622978ea5d0a
msgid "contentactions\\_blank.pt & contentactions.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:39
# e1628defaf854cd6aa1c8794addca62f
msgid "plone.app.layout.viewlets.common.ContentActionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:42
# 3bed8e5411204a70829e6dd58faeca35
# fdc2260e3e754acab34afd9c0356ae8b
msgid "plone.contentviews (name) plone.app.layout.viewlets.interfaces.IContentViews (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:47
# 4d3ae680f3d541269dbc10ade877c265
msgid "Put a version of contentactions\\_blank.pt & contentactions.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:2
#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:11
# 511a053ddfa049f8950d995f8976d99d
# 08c384f00b304588ab03a9edfc48f56c
msgid "Content Views"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:4
# 60f6e42f1d4747c797cb0584dc4eef09
msgid "The View, Edit, and other tabs in the editing interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:7
# c6ee3de2f6274926b24c881b3d5d5ffd
msgid "``<ul class=\"contentViews\"> … </ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:19
# c37be33c71c64cd197dcecb2a9750598
# 535b75d8afa441579028125b3c28d247
msgid "plone.contentviews"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:38
# 85ae0a9245b64907b83c985242d91f55
msgid "contentviews.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:48
# 01f71ae2f90d470f8be1503e3cd058b1
msgid "Put a version of contentviews.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:2
# f4392bb10fdc49868f0f8ffb30bb831c
msgid "Footer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:4
# 60e9873daee54cc3b3c7701bb8dabae9
msgid "Contains copyright information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:7
# e9a6f12eb8f74a8681b972f0fee824e4
msgid "``<div id=\"portal-footer\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:19
# 4e5b633fb4c84fd0b4d441220e734151
# 49cabc92d19c4bb1bddb589ab723f3b8
msgid "plone.footer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:38
# 06b99bc8d39843b4ac001f173ef67221
msgid "footer.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:48
# cd5f21278d244a8fb7ab0d4d6f3a1eff
msgid "Put a version of footer.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:2
# 39e814387d824d3a935861ffd6e61c40
msgid "Global Sections"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:4
# f95a55eba3174625942f2816108d63d7
msgid "The top level sections of the site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:7
# 99d23f8505ce49478c07ef554d26332e
msgid "The sections are either auto-generated from top level content items or can be set up manually"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:10
# d00a645c57a2485b9653c55c8e1860c7
msgid "through the web: Site Setup > Navigation (for auto-generation) Site Setup > Zope Management Interface > portal\\_tabs (for manually defined sections)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:13
# b6b1056f311b4530bd1accc93e240237
msgid "in your product: profiles/default/actions.xml and propertiestool.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:17
# bd63ee763b7644229f22b95d429c805a
msgid "``<h5 class=\"hiddenStructure\">Sections</h5> <ul id=\"portal-globalnav\"> … </ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:29
# 20a66b1c60654b49b8a608980e0846d0
# 05ac58d6dbb344e8b2b714ac3547e155
msgid "plone.global\\_sections"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:31
# 5ad3b77f7abc48119a9d37fc72ac1401
msgid "`http://plone.org/documentation/kb/where-is-what/the-navigation-tabs <http://plone.org/documentation/kb/where-is-what/the-navigation-tabs>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:50
# 0537acefdab54c6ab53184af8b90a8ae
msgid "sections.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:52
# 3b32fb1e584d4466843e0266b4b53d5a
msgid "plone.app.layout.viewlets.common.GlobalSectionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:60
# ea007132fdbf4ad08da88a7974d993f5
msgid "Put a version of sections.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:2
# c607e9c06b92407ca351c50c280a9b4a
msgid "Lock"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:4
# 460c11d4a4ef425ca8edf5cceabc77ae
msgid "Indicates that the content item is locked for editing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:7
# a44e3b5297f24e53b5f7ed82c7b4ba44
msgid "``<div id=\"plone-lock-status\" />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:19
# 9528cd104bce4c928f89f75cc6dedbe0
# 9811d1f7c7bc4d3191c7c110c4487302
msgid "plone.lockinfo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:33
# 3c5b15d90ace4033ba5dbbfba240063a
msgid "[your egg location]/plone/locking/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:34
# b75123a02166487ca434e6e663846b00
msgid "[your egg location]/plone.locking-[version].egg/plone/locking/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:38
# 99109160720a447eb1450145c939a958
msgid "info.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:40
# 9f7b0cb3eb9742c8a3b9ad5037737558
msgid "plone.locking.browser.info.LockInfoViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:42
# 8e23c676bb67409eb006f8e672f99e7a
msgid "plone.abovecontent (name) plone.app.layout.viewlets.interfaces.IAboveContent (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:48
# 8948fcb114714cb8abb4ce0edb4777e9
msgid "Put a version of info.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:2
# 06e973d69290471fb19f460808ef7333
msgid "Logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:4
# 2aceae1e015e407da313183f5b7b4194
msgid "The site logo."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:7
# d8497c97914f4d9eb85bce8d40f0be67
msgid "``<a id=\"portal-logo\" ...>... </a>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:19
# 571951bb3cea42cdb4633b170410121b
# 7ffb5a4d29eb402fb0819d50ce0e43c5
msgid "plone.logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:21
# 002890c1aeef49b19b3b96d9d1ba27b8
msgid "`http://plone.org/documentation/kb/where-is-what/the-logo <http://plone.org/documentation/kb/where-is-what/the-logo>`_ See also the Quick Start Section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:41
# 4798e7f03ec5462c9cfdb49cba0c88ff
msgid "logo.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:43
# d5e615f389544175b2dd5ac0c7d8b360
msgid "plone.app.layout.viewlets.common.LogoViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:51
# 768b823299d64fe29e9ae6dacb14138e
msgid "Put a version of logo.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:53
# 7b76377af8384c958af247e682b768a2
msgid "Modify the logo.pt to suit your needs. For example, if you want to use an image named something other than logo.jpg, you could use this code and style #header in your mytheme.css file."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:2
# 08a2681ca47c498ba2b3083c9803b07c
msgid "Next Previous"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:4
# 0ab29ba2179a4d9981910571d72b8f42
msgid "Provides next/previous functionality for a folder."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:7
# 07069d45cfa94ea9be2fe501e9703cb1
msgid "Turn this on per folder using Edit > Settings."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:9
# 10a4b2791673440885ded61294d6ee96
msgid "``<div class=\"listingBar\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:21
# a2dea326cd844a7c8ef2e87578470990
# 6d1d9211f72f4d78b29ecf7ef26383d3
msgid "plone.nextprevious"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:40
# 6654ed4765c94aef95516f8c9c702297
msgid "nextprevious.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:42
# 08a5fe4be09d4b7c8cd0cdeb755e7433
msgid "plone.app.layout.nextprevious.view.NextPreviousViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:50
# be3cb5722f9b411fac46d05ea1df8dd4
msgid "Put a version of nextprevious.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:2
# df400209345348088a3e3d8cf2d0c0df
msgid "Path Bar (Portal Breadcrumbs)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:4
# f69631b5654e4004968fc2171b42ca5b
msgid "Provides the breadcrumb trail."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:7
# 0871bb6f78f44cff829165b88eff0943
msgid "``<div id=\"portal-breadcrumbs\">...</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:9
# 354ff2a46d4e46ef83c677b48329280e
msgid "In the Sunburst theme, the breadcrumbs have been styled not to appear until the third level down. Customize the CSS to change this behaviour."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:23
# bbcbd1da60bf4e0b9f005be139124608
# 22b906e8eac140bcba366939a1e85d0d
msgid "plone.path\\_bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:25
# 9dbadcc1e38f488984203e99eba89c46
msgid "`http://plone.org/documentation/kb/where-is-what/the-path-bar <http://plone.org/documentation/kb/where-is-what/the-path-bar'>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:44
# 9142392422674b97abea8d7bfc1593d3
msgid "path\\_bar.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:46
# 7640f35dc99d44b2be2aafe72717aeea
msgid "plone.app.layout.viewlets.common.PathBarViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:54
# ae484a62c2a34d249ac2261e5aaf1924
msgid "Put a version of path\\_bar.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:2
# 972215a78f314bf3bb3b1e08c82d533a
msgid "Personal Bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:4
# 05cd7c3b6f2c4015abb679adb29e1585
msgid "Provides the Log in link and further links for users once logged in."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:7
# b90fcaa9ac744192878c492ea06ac780
msgid "You can reorder, add, or remove specific links in the personal bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:9
# c41a509476df4f42b0f8706375ae0f75
msgid "through the web: Site Setup >Zope Management Interface > portal\\_actions > user"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:14
# 09b2402518244837bc2bb7cd47680cad
msgid "``<div id=\"portal-personaltools-wrapper\"> …</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:26
# d8f8fc9f20c54f88b9f0d5d862e72304
# 594594bb6e1b42fa88fe07a152ac7375
msgid "plone.personal\\_bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:28
# d058da480621492b83c4d3c55399846f
msgid "`http://plone.org/documentation/kb/where-is-what/the-personal-bar <http://plone.org/documentation/kb/where-is-what/the-personal-bar'>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:47
# a1cdac829c05484aafe9e8826c1541b6
msgid "personal\\_bar.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:49
# 2383c464e2ec445ba5d5a6c222be73b3
msgid "plone.app.layout.viewlets.common.PersonalBarViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:57
# ce92c8ed883a44f1aa0afe87d96496d2
msgid "Put a version of personal\\_bar.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:2
# 8dbd0512f98a4b1991ff2718f301968a
msgid "Presentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:4
# f9a6bef9e3054c66bda7de124f044e06
msgid "Provides a link to a presentation view of a document."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:7
# 47f4cd70231d45ba859329358603e4f3
msgid "Only available for a document. The link to a presentation view can be turned on or off"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:10
# c779112ef0cb4bb5ae8d20869a4d4faa
msgid "through the web: on an individual item (Edit > Settings > Presentation )"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:16
# f3a1e8f62b61423dbedb579ed9933de9
msgid "``<p id=\"link-presentation\">...</p>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:28
# a6a7205abf784d069df45d43f18ee421
# e6e992663e344796a7398f9ea634f465
msgid "plone.presentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:42
# 13b3a64cc7ce4a71a611d7a7f9e89e34
msgid "[your egg location]/plone/app/layout/presentation/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:43
# 38176bee59584266b4c61eb250db12a4
msgid "[your egg location]/plone.app.layout-[version].egg/plone/app/layout/presentation/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:49
# d347304ff63d474caf2c1957a0c4c64e
msgid "plone.app.presentation.PresentationViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:44
# b902c06567e64ce79182d0f976f779c6
# 3ef6d3ef9d3145f0bdce7ee2b82e1819
msgid "plone.abovecontentbody (name) plone.app.layout.viewlets.interfaces.IAboveContentBody (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:2
# 9d5c37d21d784318a819b4bfc9dd9561
msgid "Search Box"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:4
# 7a00376127224b649e7b2923b7ca727f
msgid "Site search facility."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:7
# 1099d6b407f04a89a581d9877e3489e3
msgid "To customise the search box behaviour"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:9
# 8fa4336b93b442b095a028983ec4d2a1
msgid "through the web: Site Setup > Search"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:10
# 30a3054ae63143599ab050d49a5025dd
msgid "in your product: profiles/default/propertiestool.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:13
# 787aa5ba63424ad5ba8fc29ab9ef3f85
msgid "``<div id=\"portal-searchbox\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:25
# 98d5df0f91684191a5915df3431779e7
# b00778c17a36497997b899bfcd7f4404
msgid "plone.searchbox"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:27
# 05e23aa5a49f4edf992cc77aea8232c4
msgid "`http://plone.org/documentation/kb/the-search-box <http://plone.org/documentation/tutorial/where-is-what/the-search-box>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:46
# f9d8ca34d5444ac4bc955bf9eac017c3
msgid "searchbox.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:48
# 67b078d6ea9c486c9c350a434139c1a8
msgid "plone.app.layout.viewlets.common.SearchBoxViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:56
# 2d8684b09c93427d919149affd37dd69
msgid "Put a version of searchbox.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:2
# 37b7e216773e4e078b5ca2802f269e5a
msgid "Site Actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:4
# 795ce22587b24eb7bb956027ab982775
msgid "Links, available on every page, to provide specific functionality or information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:8
# fcf3d7bc24654955a2953ad95a605bad
msgid "You can reorder, add, or remove individual site actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:10
# 978901d4214d4f07bb83eca28edc7a29
msgid "through the web: Site Setup >Zope Management Interface > portal\\_actions > site\\_actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:12
# 4452db9d07fb4acfb057592d28e83b7e
msgid "in your product: profiles/default/actions.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:15
# 67c6a2f59c664866937e9b79e790ff5a
msgid "``<ul id=\"portal-siteactions\">...</ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:27
# 592bc14993e74fd6bfc6a2b8cac09602
# 92f311bcadf74869b45ffc8a78b2dcd1
msgid "plone.site\\_actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:46
# 6543528c18f54d658911d1b2b1d263d9
msgid "site\\_actions.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:48
# 5930a92c03854348a88ac8a14b0a1a9d
msgid "plone.app.layout.viewlets.common.SiteActionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:56
# 925afc563bd647c4b05112bf1e40efe7
msgid "Put a version of site\\_actions.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:2
# 2a8498103fe24f33a805c14d38d8fe3e
msgid "Table of Contents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:4
# 4e6f44715d6b4255860cedbbb0af6286
msgid "Provides a set of bookmarks for the current page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:7
# 4317418114a54841abda2151df112da5
msgid "Turned on per content item through Edit > Settings."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:9
# 5bfeca426324409b9953b6df80fed70b
msgid "``<dl id=\"document-toc\" class=\"portlet toc\"    style=\"display: none\"> … </dl>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:11
# 966d80d1d3ca4cab9de97d46388fbc86
msgid "portlets.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:21
# 06ffda43aed44cadae8b410e3d6d5320
# 9be520c28e294ea9a7655c1207858ffa
msgid "plone.tableofcontents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:40
# dee0e8c268b64a54a7497ac4278c2c8a
msgid "toc.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:42
# eda2916cc4d2456d91b1eccda2f134d6
msgid "plone.app.layout.viewlets.common.TableOfContentsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:50
# b5a2a7bac6654644886ba5c8f554fd3d
msgid "Put a version of toc.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:3
# 778ea08b18ef4208a1582406b1b5f5cb
msgid "Theming guide for Plone 3"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:10
# 0413c4e56a9c4feeba07b61a9064807f
msgid "This is a theming guide for Plone 3. The technologies here work directly on Zope Page Templates (TAL) and viewlets. On Plone 4.2+ versions of Plone the suggested approach for theming your site is `plone.app.theming <http://pypi.python.org/pypi/plone.app.theming>`_ where you can create your theme through-the-web and with less needed low level programming information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:17
# ce757ec8168f4ffc8d8fa5a9897efc9f
msgid "Even if not recommended the techniques described are still useful and might be needed with new versions of Plone. Please consult `stackoverflow.com (plone tag) <http://stackoverflow.com/questions/tagged/plone>`_ or `plone-users mailing list <http://plone.org/support/forums/general>`_ when in confusion."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:35
# 3319e93cfc8a4bd490a7582efe8c0164
msgid "Quick start"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:46
# 35af431fbe7c43aaae4457bf8879c8f7
msgid "Approaches"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:66
# 22edd4b2956641dcb73f1246b145dcc2
msgid "Building blocks"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:68
# 80134a6c29be43539755ee4ffb2fb06b
msgid "Skin, Components, Configuration. The three main building blocks of a theme; interconnected, but each with a distinctive way of behaving."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:71
# dbb3d8d3440542a9abe5b0c7676c9a8c
msgid "**Overview**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:79
# 4138d359ba034e5f8c88ccb8ae647fea
msgid "**Templates**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:98
# 831a4bce8e1347d3a366311ab1e4e7d5
msgid "**Skin layers**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:107
# ff95bdbac68b4ef8bfb3b427c3db1d73
msgid "**CSS stylesheets on skin layers**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:114
# 3f416a2e7b1542e49682a6c689bac6a8
msgid "**Components**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:130
# 7a9fdf6ca9434a6d9dfa567e7bf3c944
msgid "**Configuration**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:143
# 6672bfb0f4544101be1d2c475ea83857
msgid "How do all these bits and pieces go together to make up a web page? And, more importantly, how do you get content onto the page?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:159
# f09627e7f5014fb38d44c82f7d378d72
msgid "Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:161
# 47b227428e7141f4a9d4c25b37065062
msgid "A reference for the viewlets, portlets, viewlet managers, and portlet columns which make up a page. There's a quick reference to each component type with links and reminders on how to handle them, a visual index of page elements plus code snippets to make your life easier."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:166
# 1e91cae962f442fdbc81079776b7cb94
msgid "**Viewlet**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:175
# 6d9d7ae5bd0349a5b1f904980e086a06
msgid "**Viewlet manager**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:184
# b4db63d53a7840d985e568f01a561394
msgid "**Portlet**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:194
# 1b99b497923349718ceb55700a911ec5
msgid "**Portlet manager**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:204
# 5c1df33463254d0d862a5549f8ea8abf
msgid "**Structural elements**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:211
# 1cedc5483b6246739823612ac3f61556
msgid "**Visible elements**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:239
# 8b27a2a3a14641798af4499740cc8381
msgid "**Hidden elements**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:257
# 55ccfe574c41409db325ed325d2a5bc7
msgid "Where is what?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:259
# 7b84aef0c3764ca19efb11a2d1a4a7b3
msgid "How to locate the bits and pieces you need. Links to useful visual aids for identifying page elements, pointers to locating your product and eggs directories, diagrams of a theme egg on the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:2
# 2b08f5e49ef04b1aafa0091bdc7142c3
msgid "Aims and Prerequisites"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:4
# 303bb21f79e94faaaff6264c87a71451
msgid "The aim of this manual is to give you an overview of the theory, tools, and techniques involved in customizing Plone's look and feel or creating your own theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:9
# e2aa7a573ec640e2ac2fbdfee1ee33e3
msgid "Aims"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:11
# 844be97e9e104d20ae5f9cafdde9c929
msgid "Don't read this manual from beginning to end. Think of it as a guide or phrase book to help you get your bearings in the rather complicated world of Plone themes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:15
# db87ff51888f47d68f6a2dc6dcc55a2e
msgid "We'll introduce you to the theory, but there's no substitute for practice; so we'll point you to the many excellent tutorials, books, and resources on this site and elsewhere, which will walk you through various aspects of themes for Plone 3. We aim to complement those resources by filling in gaps, providing brief overviews of theory, setting things in context, and giving you a quick reference for bits you find confusing or can't remember clearly from the last time you tried them out."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:27
# 7ff341c4e30b4329b6373a56a67220dd
msgid "This manual is written for integrators and customizers, and we're not assuming any development experience. We do however imagine that you are experienced with XHTML and CSS, know a little about XML, and have some knowledge of scripting languages. We're working from the premise that you are entirely new to Plone, though if you are familiar with Plone 2, you'll find one or two new things."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:34
# 298edfc98ae942ebb621d2f3c6ecce0e
msgid "It will help if you have installed Plone and have looked briefly at the directories that ended up on your file system when you did this. It is also useful to have investigated the Site Setup link on your Plone website and to have clicked through to the Zope Management Interface for a brief look behind the scenes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:4
# 62a3c4c5822b4ff991a94fc96a3e4d70
msgid "Here's a quick overview of what this manual covers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:8
# 322c82afd5e34681966fd82720797b7e
msgid "Section 1: Introduction"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:10
# 601b6687ed754300b183232b36b41e64
msgid "A theme is a distinct look and feel for Plone, which is often based structurally on the out-of-the box Default Plone theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:13
# a71080e02d774bdbba3aa1cd9a8d2191
msgid "Section 2: Approaches"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:15
# ec95c7a06704452abf395a437f294da0
msgid "What's the best way to go about it - what are the pros and cons of working through the web or on the file system?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:18
# 19abf8457123415fa1bd4738aab65171
msgid "Section 3: Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:20
# 115bec75b77d4654a3c9e2ad9e50b42d
msgid "What tools are required and what's available to help you build your theme?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:23
# a2aa7a85a635405ca0a92c996d33e45d
msgid "Section 4: Building Blocks"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:25
# a2eeb81392104062911f99474c4e6e97
msgid "There are three main building-blocks in a Plone 3 theme. While there are a few overlaps between them, in general, it helps to see them as discrete entities."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:29
# 66f0005b37e24cd59cb488d18162231a
msgid "skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:30
# 5b9cc0635d79453e86b34ceafc4ec499
msgid "components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:31
# 81ddad903d8148c99290dbde8270e64b
msgid "configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:33
# 4302d937dce1445895471db951fc631e
msgid "This section will give you an overview of"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:35
# 1146de6ac2fb4005a4723aed6acbcb33
msgid "the terminology involved in each of these building blocks"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:36
# 9ca18ce1832a4582b2640da5ed76aaab
msgid "the languages you'll need to work with each of them"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:37
# 428774dfef27443a93de700c6593892b
msgid "the techniques / approaches required to customize these building blocks or create new ones"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:39
# 099aebbb74c34508a854940be2b4012b
msgid "how you can locate the files you need"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:41
# 2f5a38a2b303449dba418969658ded4f
msgid "Section 5: Putting a Page Together"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:43
# f9ac60648ffd4be58e70a5efa6fbd9df
msgid "How is everything pulled together to create a page? We'll look at"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:45
# 6df1a2d8b8834613806c4e189ede24e2
msgid "how a page is constructed"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:46
# 231a7bcbd76a4370bf0c964f4a0103df
msgid "how content reaches the page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:47
# bac81c88c89946e68b4a8042634d0648
msgid "how style sheets and JavaScript reach the page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:48
# 883b26d1fa6d4c3ab94be9b50ace097f
msgid "how you can get hold of other information about your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:50
# 600e370f92604ef6ae91352056b9e841
msgid "Sections 6: Elements Reference"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:52
# 46dc52f457fe43e091a5baafbf8b8601
msgid "There's a quick reference to page elements and a brief summary of how to tackle customization and creation of components."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:55
# 5efebf7d160e442fbea10c89d11f7865
msgid "Section 7: Where is What?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:57
# d8554b8f36904c769082382f94bab8ae
msgid "It's often difficult to identify the location of the files you need. This section gives you a quick reference to the file layout of a theme product. There are also pointers to other diagrams on the web which should help you to map the visual page elements to components, templates and styles."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:2
# 2d4dfb23a673477096f8c7a7571d3698
msgid "What's a Plone Theme?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:4
# e9f579e6a24f49d99b32b66ee5ac0ba8
msgid "A brief description of what we're talking about."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:6
# b9bf97fab7214c25831b9b1da746e5eb
msgid "A theme is a collection of page templates, style sheets, components, and configuration settings that go to make up the individual look and feel of a Plone site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:10
# f2b3280d373f4c85a0f7404e82b34016
msgid "Plone gives you the option of embedding your theme changes and additions into a single site by working through the web. Or, alternatively, by packaging your theme into your own product, you can then install and uninstall it at will and apply it to a number of sites. There are pros and cons to both approaches, and this manual runs through them in later sections."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:17
# 719d7597e10141d8b881c26f31930444
msgid "Plone 3 comes with with two themes:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:19
# 4fe35a619c834a2c96bca85cefab7fb7
msgid "an inbuilt, ready-made theme - Plone Default"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:20
# 822b5d7b01634e8fb9ca9db5444e6667
msgid "and an additional optional replacement - NuPlone."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:22
# a9f44781488241d5a12ee3eea65ccca7
msgid "Things are somewhat different in Plone 4:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:24
# b0e198380efd4f37bcdda5ac88ee638c
msgid "Two themes are available -  Plone Classic and Sunburst (with Sunburst being the active theme when you first install Plone)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:26
# d9b9e459e0d44738beefb31e05dd4028
msgid "Plone Default still exists as the core on which both Plone Classic and Sunburst are built and should prove a useful basis for any theme product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:29
# 10ab77a76d48411bb0c0efa9304ba3d2
msgid "NuPlone has been removed but is still available for download if required"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:32
# ad963e4241b14f0584146b8203e0a29d
msgid "If you're at all skeptical about what can be achieved, have a look at the wealth of different sites showcased on `plone.net <http://plone.net/>`_ or at the downloadable themes available from the `Products section <http://plone.org/documentation/products>`_ of this site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:38
# a1e82ef3694340d69868e0cd8858d768
msgid "If you already have a Plone 3 theme and want to know how to upgrade it to work with Plone 4 then the `upgrade guide <http://plone.org/documentation/manual/upgrade-guide>`_ has further information and guidance."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:2
# 490c1454cac040788c3f481b6cf8cd66
msgid "Content to Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:4
# 06f9612bfa2e4745aaadb504b40660aa
msgid "How content reaches a Page Template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:6
# 86bf7bfcd9344d70b5002c2a04aa7f28
msgid "There are three ways in which content from your content items can reach a page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:9
# a379f1d16fb849148922695760d3478c
msgid "directly from a content item"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:10
# ca1044e7f4af48619d02dc4731c767cc
msgid "from the catalog"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:11
# e5a16e6763e54210b6c7b11d93be1795
msgid "via a view component (using Python)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:14
# d7f2ec9c7234489fb4147721f56546aa
msgid "Getting content directly from a content item"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:16
# c4db3a7c48c04d8c94bab4e9f181f2ee
msgid "A page template can pull data directly from the content item it is displaying. Here’s a snippet of the RSS template, calling the description field of a Collection content item:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:30
# 3b73fbc3d99f4883be72ef215d956842
msgid "*context*\\ refers to the current content item"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:31
# d1f14f6f189645adacc37a775ea12df3
msgid "*Description*\\ is the accessor of the description field"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:34
# 4eef5a2d6dba467d969722c53519c55f
msgid "Accessors"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:36
# 5df83f9871424b49a8357392b784cafd
msgid "An accessor is simply the method by which data in a field is extracted. In most cases the name of an accessor is the field name with the first letter capitalized and prefaced by 'get' (e.g., getStartTime). There's an exception to this rule. The title and description field, common to most content types, have 'Title' and 'Description' as their accessors (i.e. no 'get', but the first letter is capitalized)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:46
# f1debde4329c4c928d944b97c76cb8c3
msgid "This snippet from the news item template does exactly the same thing but calls a specific display \"widget\" macro for the field rather than just the data."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:59
# e8f5242fc2b7414db5950a29aefa1fd5
msgid "Getting content from the catalog"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:61
# 8828f5cc8ff644dfbb18afe4187a2baa
msgid "Every content item is catalogued on creation and editing. Some of its fields are indexed for quick searching and sorting, while the values of others are stored in what's called the \"brains\" or \"metadata\" for quick access."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:66
# 2634ab411e144cb2b16d26e43fd3fdaa
msgid "Pages pulling together a number of content types - a folder or collection listing for instance - often get their content from a catalog query and the brains, rather than waking up every content item in turn. You'll normally find a variable defined somewhere which holds the results of a catalog query:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:76
# 603a9987a27743d381b8f80b5b13d5f2
msgid "Then the template will loop through the results and call values from the brains/metadata:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:84
# 98da6863371f4326846017340fcdd628
msgid "These look pretty much like normal accessors, in fact they are the names of fields in the catalog brains/metadata. This can get confusing - if you try to access a field which isn't in the brains/metadata you'll get an error."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:89
# 5d69f8769a244419990acc318f4f9f09
msgid "You can see what fields are available to you via"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:91
# a1259bb87bb34149ab1665f31cf20dc4
msgid "Site Setup > Zope Management Interface > portal\\_catalog > metadata tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:94
# 4ed0dd8e898d48e1bb239eadb2728cc4
msgid "If you want to understand more about the catalog, there is a useful, general overview in the `Zope book <http://www.plope.com/Books/2_7Edition/SearchingZCatalog.stx>`_, and a more Plone-specific runthrough in `The Definitive Guide to Plone <http://docs.neuroinf.de/PloneBook/ch11.rst#searching-and-categorizing-content>`_ (this book is for Plone 2 only, but the catalog section is still relevant to Plone 3)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:103
# 48af01aa559c4e12ad935a277dfb064d
msgid "Getting content via Python (using a view component)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:105
# 4355a58642b642999861d26f9a9647c7
msgid "It is often more efficient to use a view to process the data from the content item (or a group of content items) and then drop it into the page template. In this case, by \"view\" we mean a specific component defined in ZCML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:110
# ad9cd5aab24e470e9637de4973b4c1b0
msgid "Here’s a snippet calling a view to render the sitemap:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:120
# 7ecb67bd11e5414b8a1e8dd38304eb54
msgid "*context/@@sitemap\\_view* is assigned to a variable called (helpfully) 'view'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:122
# 723ef5390c844fb6b62bd00ed6c969c0
msgid "*createSiteMap* is a method of @@sitemap\\_view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:123
# 8f01814ba5fc484fa21bece924452a55
msgid "@@ indicates that this is a view component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:125
# 3b40a49a7ed54acfb4c9be80725e7010
msgid "Here's the wiring in ZCML that creates @@sitemap\\_view:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:141
# 552ca2c3ac1f4e09bf12f3f3e8e3647b
msgid "In summary"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:143
# 79a1c051f81841afbb689181231c39cc
msgid "the content is processed by a Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:144
# 4f0ea92cc4944e03bad581b0a330271f
msgid "ZCML wires this class up into a component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:145
# 68416109cf094d9a89bb03b420cabf9f
msgid "the template calls this component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:2
# 761e9a37636845b8baee3afdcab1671a
msgid "Using Other Information about your Site on a Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:4
# aa34f5cd965d40a1a4cc0bfb43317d2d
msgid "How to get information about the state of your site and other global variables."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:7
# 65dba65343b741028dcecf40dd3dbd90
msgid "At some point or other you'll find you need to use the title of your site in a template; or you'll want your template to deliver something depending on the roles or permissions of your visitor or user. There are two approaches for obtaining this information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:13
# d504cd7612354265ba0f6683767ab1fb
msgid "1. Browser Views (recommended)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:15
# 093aecf1ea284b3cada5100874331c84
msgid "The first, newer, and recommended approach is to use the methods available in one of three browser views:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:18
# a3dd845f1a634dfd8b4402e4222232f1
msgid "@@plone\\_portal\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:19
# 885148f51d43407ca346e4184b1978ca
msgid "@@plone\\_context\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:20
# 2f8bba6c1eb5412593e3751bac02d3dd
msgid "@@plone\\_tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:22
# dd561ddbcbb34373acdd6341105065d4
msgid "These are kept in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:24
# c98a3747f6f7414d8f6ef8ed2a1981dc
msgid "[your egg location]/plone/app/layout/globals OR"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:25
# 88a3fb9762334c77b8c38a14627b65e1
msgid "[your egg location]/plone.app.layout-[version]/plone/app/layout/globals"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:28
# 62cac8c0a81645ae83d2239cc4d6a71e
msgid "You can find a description of each method in interfaces.py in that directory, but the main methods are outlined below. This excerpt from the main\\_template in the core Plone Default templates in Plone 4, demonstrates how these views, or their individual methods, are made available to every page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:48
# 081ce8eb5c79485396968b699365ec46
msgid "Here's an excerpt from the newsitem\\_view template in the core Plone Default templates illustrating how the @@plone\\_context\\_state can be used to establish whether an item is editable or not:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:62
# 252520b511194d0cb13a8d5be8b9c3c8
msgid "2.  Global Defines (deprecated)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:64
# ca0cb07b807f41fd94d24a1fff65b20d
msgid "The second approach has been around for a long time, but is being phased out (as it is slower) in Plone 3 and has been pretty much removed in Plone 4. This is to use a set of variables that are available to every single page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:69
# 54e1fe25e31e43ee8f0af3236642ed4a
msgid "In Plone 3:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:71
# 1c707f225816495191cdf565662bea1a
msgid "These are called by main\\_template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:77
# a74a9d6ffb9a472dbe48557654bcdb55
msgid "If you want to investigate them further, you'll find them in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:79
# 11e1de43c6974c50ab761fdf280eac02
msgid "[your products directory]/CMFPlone/browser/ploneview.py."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:81
# 560a7a9b34964ba88ec96dab18927fb0
msgid "These variables are used in a number of the default Plone templates in Plone 3 and so they are listed below alongside their equivalent in the available views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:85
# ff850531af47464095fd5e402650fa01
msgid "In Plone 4:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:87
# e9ce706436ce438dae2d807d1f4492f4
msgid "The global\\_defines macro is not used at all and the variables have been entirely replaced in all Plone templates. However, should it be required, the global\\_defines macro is still available in the core Plone Default skin layers in the plone\\_deprecated folder.  For more information on making a Plone 3 theme compatible with Plone 4, consult the `upgrade guide <http://plone.org/documentation/manual/upgrade-guide/version/upgrading-plone-3-x-to-4.0/updating-add-on-products-for-plone-4.0/no-more-global-definitions-in-templates>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:96
# 1ecd0da802de494c89f7f51ec9020a15
msgid "Available Views and Methods"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:99
# 0c0557be6df14967aae56b7fcee8f283
msgid "About the site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:101
# 66adc52f1f8445dc8d18050a9f471023
msgid "View @@plone\\_portal\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:103
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:176
# d7b0580ae44e4fa0ae598ed8bfa2ab6f
# 0640cf36c3ed4d8e89377381525d5888
msgid "Method"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:105
# fe89ebe44ab1419b8053757994c9c584
msgid "What you get"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:107
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:180
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:315
# 5d87d6451fb34718aa9152318bdbcaa7
# 94fb0fbf87e041e29ca2ca17291db4b7
# e8cd5c9f5c254261a72ee03daee7ea9d
msgid "global defines"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:111
# 574cd4a979be4b9bba809eb4a788480a
msgid "Portal Object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:115
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:119
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:175
# 9b71af363d454d20989f2515cff517e2
# 6ce66d310d8443aabd50d99f1c2c409b
# b5098c8c571346879136976b69352baf
msgid "portal\\_title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:117
# 2dcd0564f74340a69808fc40f3e3c7bf
msgid "The title of your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:123
# fb8c40edda314850911c7cf038a13f30
msgid "The URL of your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:127
# 7a045293ac27471c953458c56ddccc0c
msgid "navigation\\_root\\_path"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:129
# 1786d0123b1f483eb0cbb7f24ad52ebc
msgid "Path of the navigation root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:131
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:135
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:166
# 74a6cd82e8854044a354075a1b696c8c
# 92118812c2014200940b2ee16705aecb
# ba24132b7d304c2590675446f332d7d5
msgid "navigation\\_root\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:133
# e233c1c28cb642a3a4ea7a95427f50bb
msgid "The URL of the navigation root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:139
# f258ba46a02a41969f7d557bd73955ab
msgid "The default language of the site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:141
# 5c5ca8cee6cc41059d3e402611617ce4
msgid "language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:143
# 47d6c2de3f824db0bfe91e5e7778c441
msgid "The current language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:145
# 3f121a72bf7d4c2eb719d76e5e778efc
msgid "locale"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:147
# 98c0d0609b394dc1ad9eb80522af8ea5
msgid "The current locale"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:149
# 3b835310940a4e0b81bfb5ce5db3062f
msgid "is\\_rtl"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:151
# b8902afa83b641358e8eadf81fb40aab
msgid "Whether the site is being viewed in an RTL language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:153
# e2f0965943d64d6682e692d80edf6125
msgid "isRTL"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:157
# 005aa5c371224711957bdefc9ed646a9
msgid "The current authenticated member"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:161
# 4426b126d96a4e5c8bcbc6e3a9cf5e2d
msgid "anonymous"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:163
# dbb0cae42c3247718c38e11464c87d40
msgid "Whether or not the current visitor is anonymous"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:167
# c11d65dd7030410f809888f67a780511
msgid "friendly\\_types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:169
# 0f4306dc3c7049cb8606467bb58c5cdb
msgid "Get a list of types that can be deployed by a user"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:172
# 77404b7967624693b651f0d397bf930b
msgid "About the current context"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:174
# 5bb09939eee947f8845594d17b0f04e6
msgid "View @@plone\\_context\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:178
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:313
# 8b9204f7d8b9420c8a323e98b25d595c
# 93025f40b56d498490c0c5d536cc6429
msgid "what you get"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:182
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:186
# ee297e22d24c482a83e1049335ea9b6e
# 38e6f83de86c4d2bb82b5f7d1acb49e4
msgid "current\\_page\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:184
# ca8745be96e44a82bfe64405e1d1f535
msgid "The URL of the current page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:188
# 2b909a6abc9b474f984364af0006069e
msgid "current\\_base\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:190
# 3eb501cefcc54bc3a714c124a2884274
msgid "The actual URL of the current page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:194
# b9b61a6c4045431fae7bf673ccf4b26a
msgid "canonical\\_object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:196
# e2a0a0dce4ae4685aea6d43daedc1c88
msgid "The current object itself"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:200
# a2265239676b496d9fa73ce1a6b72e90
msgid "canonical\\_object\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:202
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:226
# 245b0e8ffcb44d918a0b2a134d26eee9
# 10b1021c88b64423a361eec8b7c5c557
msgid "The URL of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:206
# 2cd41a6600084fdebf7764e9c88b3534
msgid "view\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:208
# 02013e713ddc496eb8bd8957dff7198e
msgid "The URL used for viewing the object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:212
# a577b2da1d11417aa2a9c3f472e09f50
msgid "view\\_template\\_id"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:214
# ae13e38f9e1946cf8f80df878ef8d209
msgid "The id of the view template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:218
# e2753427f3654aaebd824c36d2239a79
msgid "is\\_view\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:220
# 72a00cbb00e5492c98666347d3df331a
msgid "True if the current URL refers to the standard view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:224
# 0a60ba7c646b4027994f67259287c3cf
msgid "object\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:230
# 8ad42517f3674f39afd8a93c5fb72945
msgid "object\\_title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:232
# deedbb922f684f16b4de472b028b707a
msgid "The 'prettified' title of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:236
# 633bbbc2e0624b4fba16604679fd5da2
msgid "workflow\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:238
# 9b2553228bdc427d80c01d21ae6e9418
msgid "The workflow state of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:240
# 28229d33309b42058a82ed1f5852af37
msgid "wf\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:242
# 8bdc6da251a84934a25dcb332822271f
msgid "parent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:244
# 0b5b101bacba415db18881f6c724604e
msgid "The direct parent of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:250
# c348d700d69847e8963f5d740958fdeb
msgid "The current folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:254
# af305422444f46dcbe91a6eb91116ebd
msgid "is\\_folderish"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:256
# 9b63fe1ac43a42e5ab2c237a1900e3f8
msgid "True if this is a folderish object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:258
# 56d7be576e5d4cceadf81fb543bc7889
msgid "isFolderish"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:260
# bde4fa4fc2d9405592107ac18a18e57a
msgid "is\\_structural\\_folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:262
# cf0dc66196a747348c017d3b5f7be0e4
msgid "True if this is a structural folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:264
# e51f833fa70e4384b3403c338e4e1e15
msgid "isStructuralFolder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:266
# bb38c3971821431bbab70d7f840218fc
msgid "is\\_default\\_page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:268
# 3cfb72fdc4b546ceae83d03fcb926cea
msgid "True if this is the default page in a folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:272
# 20561e81394c4dd8878dc3381a8ed5ab
msgid "is\\_portal\\_root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:274
# 7d49c7390bb5433a9d0b05b5c4a530b1
msgid "True if this is the portal root or the default page in the portal root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:280
# 50de76fc8fb84ce589c6bcdecb7fda7d
msgid "True if the current object is editable"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:284
# 5a9cf715ae4140118db3e29258004ed9
msgid "is\\_locked"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:286
# e0c73d61304d4157ab7cd4b862fda915
msgid "True if the current object is locked"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:288
# fedb2fe6b3054a69a7c1c6d149eafb53
msgid "isLocked"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:290
# df3feb3a643b4de4887943803497d4e1
msgid "actions (Plone 4)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:293
# 4ff310dccb8b43dc9fbac471cdbbb3ca
msgid "The filtered actions in the context. You can restrict the actions to just one category."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:298
# 67e6debb662047769138141ee8f97fb5
msgid "portlet\\_assignable (Plone 4)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:301
# a57d81c0aed34b1e9cc2ef66acb0dcde
msgid "Whether or not the context is capable of having locally assigned portlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:309
# c81a8441e3994c9abc5f42e1b07cf059
msgid "view @@plone\\_tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:317
# 2e5e16e498c047d99f5bb4f05283b508
msgid "actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:319
# 67231503bda648648761051eda39a2f5
msgid "The portal actions tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:321
# 9a389bd8b026451a8be5d0ced2e49866
msgid "atool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:323
# 75eac7715bdc40ef89e8caeb5a1be59f
msgid "catalog"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:325
# 56bb94caf357448c94ed0c562c93fd59
msgid "The portal\\_catalog tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:329
# f6258af5815447cd87e13842d54b9d75
msgid "membership"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:331
# 588898244d2348f4ad6fd7fba296532d
msgid "The portal\\_membership tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:333
# 21e560590a0f4021b0ec8b1464fe5e9a
msgid "mtool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:335
# 12a4a62bc795464488d64b15357700d8
msgid "properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:337
# 88ffc33605714e6583a81a43b64ea39c
msgid "The portal\\_properties tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:341
# 2f63d784f8d54193975476c1c86c4522
msgid "syndication"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:343
# d524b9ec3a6f47749d7a619a218c1fd2
msgid "The portal\\_syndication tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:345
# 65fa9a14fb164a15a9cf484ed58b85d8
msgid "syntool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:347
# 97e94c9eb7594d4fb2b87ece4fe33866
msgid "types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:349
# dfbd816619554794b294f99ff7c88a04
msgid "The portal\\_types tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:355
# 576a8aee15f14b15ad97ab42543178e8
msgid "The portal\\_url tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:357
# 419b41bfdeeb492f813b0730c82d571f
msgid "utool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:359
# 97544922c715447ab0bf818d95e1cf12
msgid "workflow"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:361
# 595b981b339c4dc1875e8c8549cb976e
msgid "The portal\\_workflow tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:363
# 0190cd0077d641c2aeb72a7bdb18aff5
msgid "wtool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:2
# 6bd10e1bcf1e48a59703bcdb30bf92a0
msgid "How to show full content in folder views"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:4
# 3deb4b5df7c04a86a031d57bb35cc1eb
msgid "This how-to only makes sense for folders, smart folder, or other similar views with a reasonably small number of items. It shows how to display the full view of content in listings by using the macros already defined for the content types. The same approach can be used to define viewlets for layout products like compositepack."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:10
# d05cd11de7014915880f13ba8f377ac7
msgid "I was looking for a layout product for the front page of a site I am working on, and the existing products did not meet my needs out of the box because they only showed summary views of content rather than the full view. Instead of writing viewlets for different content types from scratch, I used the existing view macros of the content types as follows, in a new folder view I called folder\\_full\\_view (this is just a code snippet):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:35
# a98533f3e157433899bff183335762e1
msgid "The setting of actions to nothing is so that the action icons are not displayed for every content item. The on-error=\"nothing\" may not be necessary for you. I have it because I allow the catalog to return results for which there is no View permission."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:40
# 54a3c6ddf94440c5a79b8fa638928f99
msgid "Similarly, for the CompositePack product, I defined a viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:55
# b99ef225f253475681f45ccd5d97dc4f
msgid "so that complete content can be displayed in a layout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:59
# 4e604cc8ae274592a155338b07080ef7
msgid "Use these ideas at your own risk. Seems to work for me so far."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:2
# 8bdf68e8edc14feb98ec4603bdaad551
msgid "How to scale images using PiL in Page Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:4
# 5642f7ca0be04e1a9760126e62f5b2cd
msgid "A quick description of how to scale images from an image field using the Python Image Library in your Page Templates using TAL."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:7
# ad6074a72bcc4e478e60e5ae6f656157
msgid "PROBLEM:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:9
# c63f76b20ce14f5b9d64b8a4dbb51252
msgid "I have a custom type with an ImageField.  I'm customizing a folder listing of these types and I wanted a thumbnail of each image shown in the folder listing.  This is very straightforward using PiL (Python Imaging Library), if you know what to do.  I was also presented with the problem of working with brains rather than the object itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:15
# 9b4cb58cdf9a43a7b14e8b2b4a88b389
msgid "ASSUMPTIONS:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:17
# 50f4c0fdd6f24379a5c0cc30b0dc3711
msgid "You have PiL installed and working."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:18
# 06e3a967176f492cb59703d5b2ad3bb3
msgid "You know how to make a custom Archetype"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:20
# 0333366eb4fa4199abc3aea778970173
msgid "OVERVIEW:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:22
# 20e392e236ca4ed5be6aa6043e54e620
msgid "When you get the folder contents for a folder listing, brains objects are returned and iterated over to produce the list.  This is of course, much more efficient than waking up each object.  The problem being, you cannot get to your Image field in a brain (that I know of).  The following is a snippet from 'folder\\_listing.pt' showing this."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:42
# a946228501084924b5937d95cc3261af
msgid "As you can see, while iterating over 'item' you're accessing brains-y things in a brains-y way, like 'item/getURL'.  But you'll notice that you cannot do 'item/my\\_image' because it's not in the brain.  What to do?! you may wail.  Well, you could wake up the objects, get the image field, and then call the image scaling on it in a pythonic way, but this is a performance hit, puts python in your TAL, which you should avoid."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:49
# 719ac082648f44a2b1f34b17919bb155
msgid "Instead you'll just be crafty.  You already have 'item\\_url' and you know the name of your image field (my-image) so put those together and you'll get right at the image.  Try this in your browser:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:53
# e247fa79004d40629da1795c1ac04933
msgid "http://full/url/to/your/object/my-image"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:55
# b33da310a1d74cfd914811490f2a80b5
msgid "and you should see your image! Translating this into TAL, you would go:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:61
# 6c0f09a886bb4a70a0921fb31f325358
msgid "Now to add the image scaling bit, and this is where I went wrong.  Much of the Plone documentation about PiL assume you're working with an ATImage object, but you're not.  You're working with an AT ImageField. An AT ImageField only defines ONE image scale size by default:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:70
# e4ce12f893a84a77ac086aff5ed1288d
msgid "whereas ATImage defines a bunch:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:90
# 4e1bfe099520433a8e97359665178d35
msgid "To make matters worse, notice that the sizes defined for the same size key are different.  Bad dog.  No cookie.  Anyhow, what this means is that in order to access the size you want, you have to define it in your schema in advance, like so:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:129
# 2716afc6d86d4383bda978866f4f3f56
msgid "Ok, so now that you have defined the sizes you want in your custom type's schema, you're ready to use it in your Page Template.  Remember the way we accessed it before?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:137
# 111d5f8b528c44c3aa1bd35a789ecbe3
msgid "To access the sizes defined in your schema, just add the name to the end of your image, preceded by an underscore."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:144
# 88bfd6559d0f4dafb3ff5d4310f4edf9
msgid "It's that easy, and it should be.  You shouldn't have to access and therefore wake up your objects!  There are also other ways to get at PiL's image scaling, but this I found was easiest and didn't throw any bizarro \"Unauthorized\" or \"TypeError: a float is required\" errors."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:149
# 82b15d04beb84b21b68c035a9a829e89
msgid "Enjoy! ~Spanky"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:152
# 310e950fc7ea4387aedd03fb949cbbe6
msgid "ALSO SEE:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:154
# 374f673a05be4cdc909a333b5b1a6e22
msgid "`http://plone.org/documentation/manual/archetypes-developer-manual/fields/fields-reference <http://plone.org/kb/manual/archetypes-developer-manual/fields/fields-reference>`_\\ `http://plone.org/documentation/tutorial/richdocument/pil <http://plone.org/kb/tutorial/richdocument/pil>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:2
# de9d29b8e39f4c6e8d4f7666ac9bee05
msgid "Templates and Components to Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:4
# 055754ee63a14bc394731396f53b5134
msgid "An overview of how templates, viewlets, and portlets mesh together to create a page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:7
# 8e10ef2d61d8477396010a0a2cee773e
msgid "Plone's page templates can be frustrating at first. There's no single template which seems to contain everything you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:13
# 988ca67a1c3a49ada1dbca17f843de6c
msgid "Since each content type is likely to have a different combination of fields, each content type requires a separate template for display. As we saw in the `templates and templating language <http://plone.org/documentation/manual/theme-reference/page/buildingblocks/skin/templates>`_ section, these usually have \\_view appended to their name. You can find those for the standard Plone content types in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:20
# ca925a2dfe8146b3acd4c2798180729e
msgid "[your zope instance]/Products/CMFPlone/Skins/plone\\_content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:23
# fc0f92a80c5b45b39d90efcefa3a9f5f
msgid "main\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:25
# f8cec699c23c4fb9852fea1bb5a5a81f
msgid "Knowing about content views only gets you so far, however. It is the main template (main\\_template.pt) which draws the content together with the page furniture and design. You can find this in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:29
# 71faba940ef84243902e67f2919141f3
msgid "[your zope instance]/Products/CMFPlone/skins/plone\\_templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:31
# 5e7c3ffc4761433c83397ed0f394171e
msgid "It is important to remember that the content view templates aren't complete in themselves, they merely provide a snippet of content which is dropped into a \"slot\" in the main\\_template - called 'main'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:39
# 29d997220c41472d88df99fe16a14f00
msgid "If you feel unsure about slots, then have a look back at the `templates and templating language section <http://plone.org/documentation/manual/theme-reference/page/buildingblocks/skin/templates>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:43
# d8aba328a7214805868dbff7add6ee3b
msgid "Around this main slot, the components - viewlets and portlets come into play - supplying the page furniture and decoration around the content. The main template simply pulls these in via viewlet managers and portlet managers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:48
# 4526cc6ad1d144f8a4b7a75a54757f27
msgid "Viewlets are so flexible that they can even be pulled into the content view. The abovecontentbody manager, for instance, is used in a number of content views, and handles, amongst other things, the presentation viewlet we looked at in previous sections."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:54
# 2c12d47bd27948d3bf861a5c700db0c5
msgid "In more detail"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:56
# 63ae27e135fb407d9fa9b1d6fb5a30fc
msgid "You might find it helpful to look at an example in context."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:58
# 61639955ad824e17b113068879bd9ec3
msgid "Have a look at:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:60
# 5a6bc272c7cd4b8ba63a9c1c679a1800
msgid "Products/CMFPlone/Skins/plone\\_templates/main\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:64
# afdf950cb8c74fcfa4d52847e323b5d1
msgid "Products/CMFPlone/Skins/plone\\_content/document\\_view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:67
# 6781d60b1b074436a23eca65934a9bd8
msgid "About document\\_view (a content view template)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:69
# 32506244915c450b9514874859ae59a2
msgid "1. Although document\\_view looks like a complete HTML page, ignore this. Just note that right at the top it calls the main\\_template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:76
# 34cd4d025ff14611abd9a164efd9c5f1
msgid "The code that gets used from document\\_view is actually the bit between these tags:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:83
# cb7d1bbac81d46ca94061541ec1a4653
msgid "This gets dropped into a slot in the main\\_template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:92
# 2655b4208a82470693f9904c87d889f5
msgid "2. Going back to the fill-slot in the document\\_view you’ll see a few tags calling the relevant fields from the content type – like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:101
# ee8cbed0056b4837879fa6405d0e88d7
msgid "You’ll also see a few tags like calling viewlet managers which, in turn, will summon up groups of viewlets:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:108
# a9dfcf1c19094f27980b069c11161e91
msgid "These enable you to drop extra bits of page furniture around the specific content from the fields (e.g., the presentation mode link)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:112
# adefdb00c3734534b27b0a0fa4ac4569
msgid "About the main template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:114
# 6497ba8884704b3bb8f725b933ca168d
msgid "1. Jump back to main\\_template and you’ll see similar calls to other viewlet managers managing groups of viewlets for more page furniture:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:121
# cfcd7b41f5bf43dc8d17c9391b2e45ed
msgid "2. And calls to portlet managers to pull up the portlets defined for that particular page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:128
# 605b35e783d44ae0a7a7de5e7aa8f3f8
msgid "3. You’ll also see a number of additional slots (define-slot), which could also be filled (fill-slot) from the content view template if you wanted. Here's one you could use to add a bit of css:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:136
# a6c0bd652fbf41b285b6916974ff2782
msgid "Jump back to your content view template and simply add an additional fill-slot (outside of the main fill-slot):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:145
# a978f196c0974709a66a278f650a96d1
msgid "We'll go into other ways of providing styles in more detail in the next section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:2
# 04403d781cc44836a8a60067d1eef381
msgid "Using jQuery and jQuery Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:4
# 329f500458a44c69918e8376169df7ef
msgid "Plone includes the jQuery and jQuery Tools JavaScript libraries out of the box, which you can use in your own scripts right away."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:7
# 58da2357dffd4897869dfda791576285
msgid "`jQuery <http://jquery.com/>`_ is a popular JavaScript Library that simplifies HTML document traversal, event handling, animating, and Ajax interactions. `jQuery Tools <http://flowplayer.org/tools/index.html>`_ is a collection of user-interface components including overlays, tabs, accordions and tooltips."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:13
# 86c3128bd7184c988b31755228ae9067
msgid "jQuery has been shipped with Plone since 3.1. jQuery Tools was added with Plone 4.0."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:17
# 1bca4946fef24ab1ac2373aed847b7e2
msgid "Using jQuery"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:19
# aaf9b46ea2554dc8b6c92dea1afa90eb
msgid "jQuery has excellent documentation available at `http://api.jquery.com <http://api.jquery.com>`_. Note, though, that it is never wise to depend on the availability of the \"$\" alias for the jQuery function since other libraries may redefine it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:24
# 14b1489096a8456ca9882317aabbe433
msgid "So, Instead of:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:34
# 8b34aefb7ce84d67833a3cbb4c0e27fa
msgid "you should embed and jQuery code that uses the \"$\" alias in a wrapper like:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:48
# c8cf339ad4bd446cb133b6e17a63fc36
msgid "Using jQuery Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:50
# 15490f74844d47f5a0d6352dd5e29c0a
msgid "jQuery Tools is a jQuery plugin, and Plone 4 includes the tabs, tooltip, scrollable, overlay and expose toolset. The remainder of the jQuery Tools kit plugins are available by enabling the plone.app.jquerytools.plugins.js resource Plone's JavaScript registry."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:55
# 65adfc0c972a448e8371d36063fd7ff9
msgid "The integration with jQuery Tools is provided through the package `plone.app.jquerytools <http://pypi.python.org/pypi/plone.app.jquerytools/>`_, which includes a set of overlay helpers for common AJAX overlay needs. This kit is used to provide many of Plone's overlayed forms. See the `plone.app.jquerytools pypi page <http://pypi.python.org/pypi/plone.app.jquerytools/>`_ for documentation and examples."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:2
# 88d27678a4914e53a27dee70db324bbf
msgid "Change the Font Colours"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:4
# 865761cb17d149dd83ef15923777988d
msgid "How to change the font colours - a through-the-web approach."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:6
# 4cdaff80ad3c47549bd24ef759b91e07
msgid "You'll be introduced to some very simple techniques here for through-the-web customizations of Plone's CSS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:9
# 0baf23c3e9e34dcab0ca1c5b342c8e0a
msgid "How to locate the styles you want to change"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:10
# 17d2ed11cba84cb09884efcf889b041e
msgid "How to override these styles using the ploneCustom.css style sheet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:12
# 776cf84868ac480080b1ff39a3690f37
msgid "In this case we'll change the colour of page titles from black to turquoise."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:16
# 516a9c1894424754bd923733ae73cb32
msgid "Before you start"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:18
# a5b936504d4b4552964e176f59e87b04
msgid "For convenience, Plone themes often comprise a number of separate style sheets, but for speed and efficiency, in production mode, Plone has a mechanism (portal\\_css) for packaging these up into just one or two files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:23
# 8492f16d3b79460481a10ad411f23f62
msgid "You'll need to disable this when making changes to your site or customizing CSS. So make sure you've followed the instructions on how to put your site into :doc:`debug mode </getstarted/debug_mode>`."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:28
# a2e2cb03029448f5a277c22fc0d124bb
msgid "Locating the styles you want to change"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:30
# b30daf6c24fa4119bde363e71b5a9c1d
msgid "If you don't already have a page in your Plone site, add one, save it and inspect it in view mode."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:32
# c6eec6353d7a4c819b818c021ffc37d1
msgid "Use `Firebug, or a similar tool, <firefox-mozilla-ui-development-tools>`_ to locate the class name of the page title - in this case its h1.documentFirstHeading."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:38
# c7b059ec85aa4037b8576d595323fc4c
msgid "Locating the ploneCustom.css style sheet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:40
# 6e6583a7c7ba40ce92bac139c70e26ad
msgid "As a matter of course, the last style sheet to load on every Plone page is ploneCustom.css. You'll see this if you inspect the HTML head tag of your page using Firebug. If you dig further, you'll probably find that this style sheet is completely empty. By the rules of precedence in the CSS Cascade, any styles in this sheet will override styles specified in the preceding sheets. So you have a \"blank sheet\" here for your own customizations."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:48
# 02eeba230ab146699c8f28361d3dcef2
msgid "The trick now is to locate this file, so that you can make it available for editing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:51
# 9a207221b8ca408cadb959ea135a6ba0
msgid "To make life easier for yourself, you might like to open a second tab or browser window at this point - you can then quickly switch back to the first tab to see your changes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:55
# 0787b9336d2e459083f3a5437aa56db2
msgid "Go to Site Setup > Zope Management Interface and click portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:57
# 1a0cfe9ca5ca4417a3bd885dbe2ec30c
msgid "Use the Find option in the tabs across the top to locate ploneCustom.css:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:60
# 3fb3f961b50f469b916b654e653d9fb3
msgid "Type *ploneCustom.css* in the \"with ids:\" box and click Find"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:61
# 66aa9b84b6194fe38f1b254b97ef2254
msgid "You may get more than one result, it doesn't matter which you choose to click on, however best practice is to choose the one flagged with the red asterisk."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:66
# 3e54167764d44831811754b71154f7e0
msgid "Customizing and Editing ploneCustom.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:68
# 2b948b24bc3b4c448c37b4f3f09c8527
msgid "When you click on ploneCustom.css you'll find that you can't edit it. The next stage is to put the ploneCustom.css in a place where it can be edited. You'll see a Customize option just above the grey text area, click the Customize button and you'll find that the style sheet has been automatically copied to portal\\_skins/custom."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:74
# 198ce376231747a9b3bd3ea99f7578fb
msgid "You're now free to edit the file as you like. To change the colour of our page titles, add:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:83
# aafd48d6d7314449a6791cdb9e16a490
msgid "and save."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:85
# 3e2e028295af4274b15f03dd39ddeeb6
msgid "If you've installed Plone 4 with the Sunburst theme, the ploneCustom.css comes with a number of commented out pre-packaged styles that you might like to experiment with. You can override the layout styles to a fixed width and alter the colours of the links."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:91
# 68eadca60ff049bcab35bc64c529353c
msgid "Rolling back your changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:93
# 4fa372197ffc40fcb588eca84eca9c74
msgid "You've got a couple of options for reverting back to the original CSS:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:95
# 78b688e00e85460b98e262de57be0fa7
msgid "comment out your styles in the ploneCustom.css - the usual CSS commenting syntax applies"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:98
# c48e4bff57a04bdbb6340f00a312b886
msgid "delete (or, if you want to keep a note of what you did, rename) your version of ploneCustom.css, you'll find it here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:101
# 34d076c25a2f4594a34b3d6c669cb408
msgid "Site Setup > Zope Management Interface > portal\\_skins > custom"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:102
# ea5cd61d6b204a5ead257e47feaf1975
msgid "you can choose the delete or rename options - try renaming to ploneCustom.css.old"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:104
# 0ff56a48d3324be59923da49136f7df4
msgid "you can then go back to the beginning of the process of locating and customizing ploneCustom.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:108
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:231
# c01b3550a39a401fa89a3529a3a5fd16
# f7d536d7f738484f9527619c12d4a49a
msgid "Further Information"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:110
# 9402869a28cc4a45bd922f848ea64e28
msgid "You've actually encountered two types of customization here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:112
# 9514a54eec474bf9913912e7a5b3547a
msgid "The first is a standard method of using order of precedence - the Cascade - to overwrite CSS styles as they reach the browser."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:114
# 1a65de2fda3b494490caad7d214ece9f
msgid "The second is a Plone/Zope specific method of overriding the style sheets themselves by dropping them into the custom folder of portal\\_skins. This method can also be used for templates and other resources and is explained in more `depth in the section on Skin Layers <http://plone.org/documentation/manual/theme-reference/buildingblocks/skin/layers/precedence>`_ in this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:121
# 556ef5c22b1144fab15855b4435abdfd
msgid "More advanced techniques, including incorporating your own style sheets into a theme product, are covered later in this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:124
# bede6057a8a9428599adaf527ec72366
msgid "You can find out more about how the CSS Registry (portal\\_css) packages up the style sheets to deliver them to the page in the `Templates and Components to Page <http://plone.org/documentation/manual/theme-reference/page/css/overview>`_ section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:2
# 8e73d19738034d329aab4d4566b83097
msgid "Change the Logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:4
# e58542fbc5bd4a71953a7ae2f05bcc1a
msgid "How to substitute the standard Plone logo with your own logo - a through-the-web approach."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:8
# 4016f6efd3a942c39010512354500b71
msgid "The Basics"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:10
# ed74f63f57304abfb0eb544eac0f5d0a
msgid "In Plone 3 and 4, the logo is simply an image with a link to the home page of your site wrapped around it (there's just one small difference between versions, the name is logo.jpg in Plone 3, logo.png in Plone 4)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:20
# b6a68d1c73264f46b7399cfcac756a24
msgid "If you're happy with this approach, then you won't need to touch the HTML as all the attributes in this snippet are generated automatically. Follow the instructions in Section 1: Changing the Image and its Title."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:24
# 7b2ba8dec89c45c28d10d1b78b29ac6b
msgid "If you just want to tweak the styles a little bit, then go to Section 2: Changing the portal\\_logo style."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:27
# 5a849db80ce546499594d6132541b32a
msgid "If you would rather deliver your logo in a different fashion and need to rewrite the HTML, then you can do this by customizing the logo template, follow the instructions in Section 3: Changing the HTML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:32
# 75d0fc9ccde64b68986b4eb5a65d3c06
msgid "1. Changing the Image and its Title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:34
# a820dbaaeab54705b1bd4c01131338f0
msgid "The logo image - logo.jpg (Plone 3) logo.png (Plone 4) - can be found in the plone\\_images folder in portal\\_skins. The quickest way to replace this is simply to upload your own image and give it the same name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:38
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:59
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:101
# ac5a17951b03431a9e87cbc7e2dc67aa
# 4b5aa4001cac4eccb35c39eef138db51
# f850b6db78b240b8b36097071008c01f
msgid "Go to the Zope Management Interface (Site Setup > Zope Management Interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:40
# cc667ed6a4924be6b05075d183998738
msgid "Go to portal\\_skins > plone\\_images"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:41
# 21bc56db1d9a4486b091fbf9bfbe3c5a
msgid "Click logo.jpg (Plone 3) or logo.png (Plone 4) and then click the customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:43
# 42727916de874804b1ce30fd2c06005a
msgid "Now replace the image by clicking the browse button and choosing your own image from your file system"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:45
# 315b82205ae0410abe116573b9807a32
msgid "Edit the Title field (this will ensure that the title attribute changes in the HTML)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:47
# caa797fb430d44ad952c91e3f67855a9
msgid "Save your changes and refresh your browser to see the changes on your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:51
# 8c3e590484974dcfbd81da7e5b85b01c
msgid "Alternative Approach (Plone 3 only)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:53
# 6cacbab19b9647558c874e1fbe87f3eb
msgid "The name (ID) of the logo image is specified in base\\_properties - a list of useful values that, in Plone 3, are picked up and used across the Plone Default theme style sheets. This gives you the ability to upload your own logo image, give it any name you like, and then customize the base\\_properties with that name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:61
# 7450378c6dde44f08b441b9b291fd1d8
msgid "Make sure that you've switched your css registry to debug mode (portal\\_css)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:63
# a3c457e88e3b4c0b9413b4f1a94e3aa8
msgid "Go to portal\\_skins > custom and choose Image from the drop down list on the right"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:65
# dcac31615c894bdb9125bb62ac00eaee
msgid "Upload your own image giving it an ID and a Title e.g.:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:72
# 93fd682fc83547f884dfaa3a35a75d39
msgid "Go to portal\\_skins > plone\\_styles, click base\\_properties and then click the customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:74
# cb6bf1ba82cb47a194130075623b1c5a
msgid "You'll now have a customized version of base\\_properties in the custom folder of portal\\_skins which you can change as you like. Find the logoName field and replace the value *logo.jpg* with the ID you gave your image (if you gave your ID a .jpg or .gif suffix, make sure you include that, and remember that it is case-sensitive) e.g.:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:84
# 2887416e30af47878011607a9e15b237
msgid "Save your changes and refresh your browser"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:86
# 50c9b720392646309e4be5ac2984b250
msgid "In Plone 4 base\\_properties still exists but has only a very limited use."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:89
# 150314364d7f471497c21179f16b30ba
msgid "**Note** that when you go back to your customized base\\_properties in portal\\_skins > custom, it will look like an empty folder. Click the properties tab to get back to the list of properties."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:94
# 5df8ff3a26014767a02e4ccb69f8a46e
msgid "2. Changing the portal\\_logo style"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:96
# ee7c721e11514484b6adb4ebbcf95272
msgid "There are no styles set for *#portal-logo*, but there are some for *#portal-logo img* in basic.css. Use the Firebug extension for Firefox to investigate these. The simplest approach is to override these with your own styles in ploneCustom.css."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:103
# 623ea15858d8421599459619b6269ab7
msgid "Make sure you have debug mode / development mode turned on in the CSS Registry (portal\\_css)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:105
# 4a9db0034e234b5d89a1231a94793a28
msgid "Click portal\\_skins > plone\\_styles > ploneCustom.css and then click the Customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:107
# ad4dfb36bd504c30a950509e8b441ea2
msgid "You will now have an editable version of ploneCustom.css in the custom folder of portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:109
# ca97f4f3e54f443abc8c0632b3afc23f
msgid "Add your own styles here, click Save, and refresh your browser to see the changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:113
# e19c00fe7d9c414ca8580da5eabaa265
msgid "3. Changing the HTML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:115
# c5ce8f5776b24362bfe54136f2fbc793
msgid "The HTML for the logo is generated by logo.pt - a page template which is part of a viewlet called plone.logo. To customize this through the web, you'll need to use portal\\_view\\_customizations."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:119
# 49bb925f2ab54ca5af4df58940317515
msgid "Go to the portal\\_view\\_customizations in the Zope Management Interface (Site Setup > Zope Management Interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:122
# bcbe44ccfd0648a49859e7136fef6b26
msgid "Click plone.logo and then click the Customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:123
# 95c85ce875c248d3a256e50462563f45
msgid "You'll now have a template you can rewrite - we've highlighted the significant bits in the theory section below and given you a couple of examples to get you started."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:126
# 1864f0556c2f47e8876c67c4450c4b6a
msgid "Save your changes and refresh your browser to see them"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:128
# 3a42ba49f1524b2ba58d9525700eafa4
msgid "**Note**: if you want to go back and make further changes later, you'll see that plone.logo is highlighted in the portal\\_view\\_customizations list, click on it to edit it. If you want to remove your customizations completely, use the contents tab of portal\\_view\\_customizations, tick the box next to your template and click Delete."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:135
# b351ec67a5d1446a938bc64185d15d7e
msgid "The Theory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:137
# fc5e06ffee464bc7b20def2d7f9968e3
msgid "Here's the logo.pt template. It is written in the templating language used by Plone - TAL (or ZPT). It helps to know this (and it doesn't take long to learn), but we'll talk you through this example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:152
# b11e30e65d16481181dab8330a904c33
msgid "First we have the link tag:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:154
# bcbdc06ec75a464ea40aa9da4171627b
msgid "You can disregard *metal:define-macro=\"portal\\_logo\"*\\ this is just wrapping the code into something that can be re-used again if necessary."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:157
# b73ad4a46c9f424bae61bcdbbfd948fb
msgid "The important bit is *tal:attributes=\"href view/navigation\\_root\\_url\"*, this is the code that supplies your site URL to the href attribute."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:160
# 31d9ab6750214c9fb9780916b06546df
msgid "There is a magic variable here, *view/navigation\\_root\\_url,*\\ that seems to have appeared from nowhere. In fact, *view* is a collection of properties computed by the plone.logo viewlet and seamlessly passed to the logo.pt template. Here are the available properties:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:166
# 9ae4f1cb9cae4e0d9b43617bc5a42008
msgid "supplies the URL of your site (it could potentially be something different if you've set up a different navigation root)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:172
# cd2eb6b808874ea48a4147bc13a307d4
msgid "logo\\_tag"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:169
# cbd72be91f1f48efa77f9c1b31fa6328
msgid "looks up the name of the logo image from base\\_properties, finds the image, collects its dimensions and title and turns all of this into an HTML image tag with the appropriate attributes Check back to the alternative approach in Section 1 of this How To for more information about base\\_properties."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:175
# 32d4e77c97b64abeb102655681842947
msgid "looks up and supplies the title of your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:177
# 053c5a56434d46ccbc2a595817b3d899
msgid "Now look at the image tag in the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:179
# 8dcbaaa9024740e08584f9328c8820eb
msgid "The key here is *tal:replace=\"structure view/logo\\_tag\"*. This means that the template won't deliver the image tag actually written out here, instead, it will **replace the whole thing** with the tag generated by the plone.logo viewlet. If you don't want this to happen, then you should delete this line."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:185
# d7a44ba69bc14bf0be5b919cf9ff4b21
msgid "Note: *structure* means treat the value as HTML rather than a text string."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:189
# 4ba764afb4854d32abc3e7aad06f0fc3
msgid "Example 1: A plain text title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:191
# 5458b2f2abe846a898bad9bd10a977a0
msgid "Here's a customized version of the template, using *view/portal\\_title* rather than *view/logo\\_tag*, to give you a text header instead (if you've used Plone 2, then you might recognize this):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:205
# 064b87c6915544018de4dbccfc7554cf
msgid "Of course you'll want to supply your own styles, look back at Section 2 of this How To for information on defining these in ploneCustom.css. You could adjust this example to use an accessible image replacement technique in your CSS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:211
# 51f564d1849f4c29aadbf87559d4f605
msgid "Example 2: Supplying your own image tag"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:213
# 427fded4acbb436ea01f94103430a247
msgid "You don't have to use logo\\_tag if you don't want to:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:227
# 5bc9fb297ef24696abd48400394234dd
msgid "You will, of course, need to upload your own logo to the custom folder in portal\\_skins, see the instructions in Section 1 of this How To."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:233
# 52e8ce4d7ac24778abe1496923335895
msgid "There are further How Tos in the Logo section of the Plone documentation dealing with more advanced customization methods."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:235
# dac5b70d5fc9484c8c9723a088f64784
msgid "More guidance on TAL and ZPT can be found in the ZPT tutorial."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:236
# ba5f96af072f477da053ec0e5e682375
msgid "If you want to transfer your changes to the file system in your own theme product, then the further sections in this reference manual will give you an outline of the files and templates you'll need (`Logo viewlet section <http://plone.org/documentation/manual/theme-reference/elements>`_)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:2
# bc73d0def8db4550a4bb6a84852375e8
msgid "Firefox/mozilla UI development tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:4
# 13a04b5c95df4ce497d1695a3b51c456
msgid "Firefox and mozilla have a number of extensions that can greatly help your UI development work. A basic set is listed here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:7
# fdf610962b864f8ebb4cfe982453a732
msgid "Using trusty old \"view source\" used to be the way to debug bad-looking html. Now there are mozilla/firefox extensions that make html development much more productive. A basic set is listed here to get you up to speed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:17
# e6dd8bf6d9a2495c8522cb2a23a72e2a
msgid "Web developer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:13
# 762f6175056546caa2e4ee104fe28146
msgid "`Web developer <http://chrispederick.com/work/firefox/webdeveloper/>`_ adds a web development toolbar to your firefox with almost everything you'd want to do or know. CSS info, validation, resizing to test other screen resolutions, converting POSTs to GETs. **An essential**."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:23
# 1c2101a0cf0c410bb94295a125881db7
msgid "Aardvark"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:20
# ee6a19808ed04a03bfe97692ce51a0dd
msgid "`Aardvark <http://www.karmatics.com/aardvark/>`_, when enabled for a page, shows you the class/id information when you hover over an element. Pressing ``v`` for instance, gives you the source for the item you hover over. Start the demo on their site and experiment with the keystrokes. It is a lightweight and elegant tool."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:30
# fd4d1d822aa942faac052ac87244d59e
msgid "ColorZilla"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:26
# bb05e7cd7fbb47a99a0251568e5b5edb
msgid "`ColorZilla <https://addons.mozilla.org/firefox/271/>`_ is surprisingly handy. It does what the name suggest: providing a color picker that displays the hex code of the pixel you hover over in the status bar. There's more: showing the box size of the current box element; showing the element, class and ID of the current element; distance between two points. All in the status bar."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:36
# 0da7af387b604953ac4a30e1de996111
msgid "FireBug"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:33
# 5ab64b2e22ac45c0885abb221140748e
msgid "`FireBug <http://getfirebug.com/>`_ constantly displays the number of errors it finds in your page. Handy during development for finding that mis-spelled css class or the faulty javascript statement. Also includes some css and source examination, but aardvark tends to be a bit handier for that."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:42
# e53495e0204e4a998b51aecddc046bac
msgid "X-ray"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:39
# f48d7fe7345048bfbcbe5e3a6c720380
msgid "The `x-ray firefox extension <https://addons.mozilla.org/en-US/firefox/addon/1802?id=1802>`_ is pretty handy in figuring out the layout of a plone site. It displays the tags, the IDs and the classes inline, giving you a surprisingly good idea of what's happening behind the scenes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:49
# 13005a3feb1943aeb418c8e613fd8ddd
msgid "View formatted source"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:45
# d94e69296a5f4ec1b9d252f53efac58b
msgid "`View formatted source <https://addons.mozilla.org/extensions/moreinfo.php?id=697>`_ gives you a well-rendered view of the page's source. More important, when you hover over an opening tag, it shows you the css that gets used for that tag. And with multiple css files (plone anyone?) it shows them in the order in which they're used (and overwritten)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:57
# 31c17a6e96164b728e7c203d7750e65b
msgid "View source with"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:52
# b42b50fc96b64b7a92e4e47ce1cc3ab0
msgid "`View source with <https://addons.mozilla.org/firefox/394>`_ allows you to right-click on every textarea or source view and select a program to edit/view it with. A bit like ExternalEditor, but then for **every** textarea. Not 100% developer oriented, but handy for small changes to test css files in the custom skin folder and so anyway."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:60
# 5d5418b3ce7e474f97b1dfce7e83e677
msgid "Another type of useful gadgets are **bookmarklets**."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:62
# ebd5b01490a640b68acc1ac190b57d18
msgid "Two sources of these are http://squarefree.com and http://slayeroffice.com See for example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:70
# 18a4b2462a184cd1ac9d581f29e9cc3d
msgid "Web development bookmarklets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:66
# e1a2a8d91fd547a786dd72dc1746a528
msgid "The `Web development bookmarklets <http://www.squarefree.com/bookmarklets/webdevel.html>`_ provide the same kind of functionality as the web developer toolbar. The `JavaScript Shell <http://www.squarefree.com/shell/>`_ and `JavaScript Development Environment <http://www.squarefree.com/jsenv/>`_ deserve mention."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:76
# ea67b10c7dad4ebb9c7e10956b86d5d7
msgid "Mouse-over DOM Inspector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:73
# ee7829954903475b875f95e1c054222f
msgid "The `Mouseover DOM Inspector <http://slayeroffice.com/tools/modi/v2.0/modi_help.html>`_ , or MODI for short, is a favelet (also known as a bookmarklet) that allows you to view and manipulate the DOM of a web page simply by mousing around the document."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:83
# fb45566ddbc445498f41e5547fd145e7
msgid "Javascript Object Tree Favelet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:79
# 8a9fa046cc2d43e2b3bc0efc84c08120
msgid "The `Javascript Object Tree Favelet <http://slayeroffice.com/?c=/content/tools/js_tree.html>`_ will overlay your current document with a DIV element containing a collapsed list of all the javascript object types currently referenced by the page, from functions to strings to booleans and all else that falls between."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:91
# 593dc985db304203b8e813bf8c6d6aa3
msgid "Favelet Suite"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:86
# 037b4bf4816847c4a0810c9bca2c7e1c
msgid "This is a `favelet that combines most of [the slayeroffice] development favelets <http://slayeroffice.com/?c=/content/tools/suite.html>`_ . When invoked, a div element will appear in the top left corner of your browser window with a list of all the favelets I've included. Simply click the link you want to invoke the favelet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:4
# 9aee020997f54239b698d7d549e72863
msgid "Once you have your new shiny Plone site installed and running, the first thing we recommend you do is try out a few through the web customizations - changing the font colours and replacing the Plone logo with your own."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:9
# 1c26ca112b2446f5a1cd92c3417d377c
msgid "You probably have greater ambitions than this for the look and feel of your site, but editing the CSS and replacing the logo is a good way of making a start in learning theming techniques."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:16
# 5dba7573fe864f2c8557c7a0f71490c6
msgid "We're assuming that you are familiar with HTML and CSS - although the very basic customizations outlined here, don't require much knowledge of that. It will help if, as a manager, you've had a chance to investigate the Site Setup section of Plone."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:22
# e9ee072191ff428cba31d10cc1371930
msgid "Outline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:29
# 281444aeafeb4ac8a92e53bd52e1ce23
msgid "First Sharpen Your Pencils"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:25
# c83fd542e54247ca8fba0836107b5922
msgid "There are a number of tools out there that will make the process of theming Plone a great deal easier, :doc:`so we run through them here <firefox-mozilla-ui-development-tools>`. To see your customizations, you'll also need to be sure that you are running your site in :doc:`debug/development mode </getstarted/debug_mode>`."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:34
# 5219e36afeaa4717bdd67741cef519dd
msgid "Next Try Som se CSS Customizations"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:32
# efde30a3720347ab9a82c3301731270a
msgid "We'll walk you through the :doc:`process of overriding the page title style <change-the-font-colours>`, by customizing and editing the ploneCustom.css style sheet. All of this is done through-the-web via the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:45
# b716e03166a84ad3934fd688bd806101
msgid "Finally Replace the Logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:37
# 6e42a09911e14e5b8cd77ba1135b0cc2
msgid "We'll revisit the techniques of customization and CSS editing and expand on them to :doc:`replace the Plone logo <change-the-logo>`. image with your own logo."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:2
# 0a3f3d3fdf694c688f830961375ec52c
msgid "Authoring Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:4
# 5495069e43974da3a0cb161e8adfaff0
msgid "If you're working through the file system, you can use any text editor to write templates, configuration files (xml, zcml) and the small amounts of Python code you'll need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:8
# f5558190886f49d79d56219835761d1b
msgid "You might find the following useful:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:11
# 1b79b901798042279f7b620625218d12
msgid "Zope/Plone TextMate support"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:13
# 75b970569001492e98988c55ce6ae2d5
msgid "`http://plone.org/products/textmate-support/ <http://plone.org/products/textmate-support/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:14
# aa472ec8140744768d1ac76aface911e
msgid "`http://dev.plone.org/collective/browser/textmate-support <http://dev.plone.org/collective/browser/textmate-support>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:16
# 15798287dc814a48be15483397a1ca5a
msgid "You will have to check this out of the collective svn - instructions on how to do this can be found on http://svn.plone.org. There is also a Windows version of Textmate (`http://www.e-texteditor.com/ <http://www.e-texteditor.com/>`_)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:22
# 32509d66bb87421da11c3cc80b3496d2
msgid "Checking template syntax"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:24
# c72b1eac857b4663a973d86deaf2ab80
msgid "A quick and dirty route to finding out what's wrong with a template you've written yourself is to customize it through the Zope Management Interface. However you can also set up your own checking, to run before you install a template on your site:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:29
# 6e5cef3e560941dc80aee23f27761efa
msgid "`http://docs.neuroinf.de/PloneBook/ch6.rst#conducting-syntax-checks <http://docs.neuroinf.de/PloneBook/ch6.rst#conducting-syntax-checks>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:31
# 0896b69f67434381908fab1573900443
msgid "this is a little complex if you're not comfortable with Python, but it's worth the effort in the long run."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:35
# c2d1524ec42843f0987c017c283b9527
msgid "Python code editors"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:37
# 60aa4c08f27a4ea7bcdce0e57823f575
msgid "Something a little more advanced than Notepad will give you code highlighting for Python. You'll find a comprehensive listing here"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:40
# dab671775e7444ad85c2949f5d2ac8cc
msgid "`http://wiki.python.org/moin/PythonEditors <http://wiki.python.org/moin/PythonEditors>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:43
# 465c92800e9e4bef8d72cf85ecfc86e8
msgid "Integrated Development Environments"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:45
# 45f051ebc4274ffebfdfb5fd5ea602b6
msgid "If you fancy using an IDE, then there are plenty of options, though these are directed towards Python development rather than writing or customizing templates:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:49
# 7bf8237eda3b4edd87d67a1eb2cfecba
msgid "`http://plone.org/documentation/how-to/developing-plone-with-eclipse-ide <http://plone.org/documentation/how-to/developing-plone-with-eclipse-ide>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:50
# bb5764cd1b0749998e725ccf91f22a34
msgid "`http://plone.org/documentation/tutorial/debugging-plone-products-with-pida <http://plone.org/documentation/tutorial/debugging-plone-products-with-pida>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:52
# 9916260da247444fa69960fb0844f7ef
msgid "Other IDEs include Wing (`http://www.wingware.com/ <http://www.wingware.com/>`_), BoaConstructor and Komodo (`http://www.activestate.com/Products/komodo\\_ide/index.mhtml <http://www.activestate.com/Products/komodo_ide/index.mhtml>`_)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/debug.rst:2
# 56107307d46646da879bdb101f2791ab
msgid "Debug Mode"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/debug.rst:4
# 2f1359a7c8e948f3bbb682b4fa565f5f
msgid "Inevitably you won't get things right first time, so you need to make sure your site is running in debug mode."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/debug.rst:7
# b904f52defda4047ae948c862b8195c4
msgid "For further information see the :doc:`debug mode </getstarted/debug_mode>`."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:2
# 6a33360a450343d79eafad70c5ad17fa
msgid "Creating a Python package for theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:4
# e4431fa455ea422881cffa22e27f939f
msgid "If you want to work on the file system, here's the magic required to get yourself set up with a skeleton set of files and code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:7
# 5099cd597fc044c59e7a074cf9b60783
msgid "This section will talk you through the processes required to create your own theme on the file system and to install this in your own Plone site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:11
# 239f8405c3f94d8ab983a794e40e4f81
msgid "The good news is that you don't have to write substantial amounts of code yourself to create the framework for your own file system theme, you can use a generator (Paster from ZopeSkel) to do this for you. This will give you a directory containing a number of pre-prepared directories and files, which you can augment or re-write with your own customizations."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:18
# 5c35ee97e5144977ab94377f50d88d99
msgid "In **Practical 1: How to Create a Plone 3 Theme Product on the File System**, you'll use the code generator to make your skeleton framework. This practical will also talk you through the files you've been given and what they do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:31
# 03d3eb13ec5d42ae84ade0392c8bfbb3
msgid "In **Practical 2: How to Install your Plone 3 Theme Using Buildout**, you'll make this product available for your Plone site to install and use."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:2
# 4444f81d6b4748759b990479738325fc
msgid "Anatomy of a Plone Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:4
# d8d4ce4fd2e64eada85e709146e04d93
msgid "The directory structure and an explanation of what all these files do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:8
# f276ba648b1d468fa33e89ab331712ad
msgid "Assuming that you've created your theme product successfully, you should have a directory structure that looks roughly like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:15
# 077fc7eb82a74984b3fd18f4b774c265
msgid "Things may seem a little complicated at this point, but not to worry. Let's take closer look at the main files and directories according to their respective functions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:20
# 5b023a8b02534dd6a5daedeb7f6bed69
msgid "Documentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:23
# c9a2ca9f7b9e484bac28ce627cc0d92d
msgid "docs/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:23
# 0491cb634e4f4c9fb2b6f9ec50ac4204
msgid "The docs directory contains installation instructions (INSTALL.txt), license files, and the development log (HISTORY.txt)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:28
# 89360b2d6fd84ecda2df8486558a939b
msgid "README.txt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:26
# a7333c27675448b7b98e949b08b03463
msgid "The top-level text file contains the one-line description of the product you entered during the interactive session with ZopeSkel. Other README files exist throughout the product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:31
# 238cc133a3e54b00adc1be251adb7a17
msgid "Python Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:33
# 6d517081178b4c1699a4a35d2c25045b
msgid "plonetheme/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:34
# a99b3adc5ca24b2ba356fb1c92f5903d
msgid "This is a namespace package, which serves to group other packages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:36
# 25a821b2f7ae4feaafb8f1c5daf8ad98
msgid "mytheme/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:36
# 2b3c8d6f83384f29a807c0bb7e62acd7
msgid "This is the actual name of your theme, usually the name of the client or project you are working on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:39
# e3f27498b2cd42aba1bca3a3af1e6479
msgid "tests.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:39
# 02e9d3865f0545738a709e6d82ef7ca7
msgid "Python tests for our package go here. Typically themes don't have much python code, and so don't have much in the way of testing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:43
# bf1c870a67fe4ddcb3e8124c78f342a7
msgid "version.txt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:42
# 1885bc2b4bcd4d2e8e7e62a59add0c5a
msgid "The version of our product. This information is also contained in /profiles/default/metadata.xml."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:46
# 34eeec1de5c04d519e5483b6f877669f
msgid "Python Egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:48
# 9f49a9b652d341678477bdc723ecf622
msgid "plonetheme.mytheme.egg-info/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:49
# 1f45064b28ff4b1ab82a87172de76303
msgid "The egg metadata is stored here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:51
# dd303f6500814b7bb1de94c978a00127
msgid "setup.cfg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:51
# cf89f3128fef430cb9a798f0548b0ca8
msgid "This configuration file contains information used to create egg-info files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:56
# 366f65c6bfe84d9e87eeb8afcc14d7b5
msgid "setup.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:54
# e48e87b0e5ad4307b1c70e4483e0b359
msgid "If we wanted setuptools to handle the installation of the package and dependencies we could install via \"python setup.py install\" (for now, we don't)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:61
# ec95d9f09fb647fe8b6497c2c28f16aa
msgid "profiles.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:62
# 0c9f1404e7be4575941b11cfc27bcc57
msgid "Register appropriate GenericSetup profiles."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:64
# 9d44fb4214a74ff5825cd5904f27fb2b
msgid "\"Default\" is the current configuration profile (only one profile is automatically created, but more could be added). Within our configuration profile we have XML files which tell GS how to configure CSS files (cssregistry.xml), Javascript files (jsregistry.xml), skin layers (skins.xml), and viewlets (viewlets.xml). Metadata.xml tracks the product version number and other metadata, import\\_steps.xml \\_\\_\\_\\_\\_ and the presence of plonetheme.mytheme-various.txt tells GS to look to setuphandlers.py for additional methods."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:75
# 89878ab2f0e7409cbb94ab22ec84cdbc
msgid "Zope 3"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:77
# 79db599dfc6c41009b2bbff1fe37e719
msgid "plonetheme.mytheme-configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:79
# cee5752b8cd449e9851e6741723ab140
msgid "This is the ZCML slug which must be placed in the etc/package-includes if the theme is installed as a python package (ours won't be)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:84
# eb55874d970d40bc8d71fe53d2acb513
msgid "skins.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:86
# f2890a79e3834c7fb7bdab22d1a25f66
msgid "Register skin layers (images, styles, templates) as filesystem directory views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:89
# 5a3ff90879be4ff784a928b2ea8bd48e
msgid "browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:92
# 91a365a9796c4e498565ee62fb3631cc
msgid "Stylesheets, Templates and More"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:94
# c797a322bcf64a2db511a01ac04c1b82
msgid "Once you've got your theme product in place, the next step is to modify the pieces that Plone gives us, specifically templates, stylesheets, and viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:104
# 21a4d0c5e39141dd8024787abf72a538
msgid "Templates/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:99
# 8a06af5c05374ff885c77b2b7e5449c0
msgid "Plone templates, specifically the main\\_template that controls the layout of a Plone site, can be grabbed from the parts/plone/CMFPlone/skins/plone\\_templates directory. Most of the templates that were contained here in 2.5 have been moved to eggs and are controlled by viewlets. To modify a template from this directory, copy it to your theme product, into your theme's skins/templates folder and make your modifications there."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:114
# 0e7c4f733a8e44ae81fbf3c25a0714ff
msgid "Stylesheets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:107
# 2379b8c5132e4a3c94cc44b7ccbbb895
msgid "Plone's default stylesheets can be found in your buildout/parts/plone/CMFPlone/skins/plone\\_styles directory. It's usually advisable to create a stylesheet specific to your theme product, e.g. \"mytheme.css\" (where \"mytheme\" is the name of your theme product), and then take any relevant styles from CMFPlone's stylesheets and customize them in your own theme product, rather than overriding entire CMFPlone stylesheets. The one exception here may be IEFixes.css, which you likely want to keep intact as a single file, since it is called in explicitly from the main\\_template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:126
# dcfe79a6134e42718836fd6f6e935b4b
msgid "Viewlets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:117
# aa4dddf60c4f455c864a20fed8408aca
msgid "It is a great oversimplification to state that most often you will be overriding viewlets from eggs commonly known as plone.app.layout, plone.app.portlets, and plone.app.content. Those viewlets, can be found in your buildout/eggs/ in packages named \"plone.app.layout[xx],\" \"plone.app.portlets[xx],\" and \"plone.app.content[xx],\" where [xx] is a version number. When modified, these viewlets and their related code belong in your theme product's browser/ directory. For more information on how to work with viewlets, `read this tutorial <http://plone.org/documentation/tutorial/customizing-main-template-viewlets>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:128
# 32cddbb207c04cafb6615c1b7e98279e
msgid "If modifying page templates, you won't need to restart Zope in order to see your changes take effect. Changes to python, XML or ZCML, however, will require a restart."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:132
# 075e7fac488c4cebadf785ec397e821f
msgid "`Customization for developers <http://plone.org/documentation/how-to/how-to-create-a-plone-3-theme-product-on-the-filesystem/plone.org/documentation/tutorial/customization-for-developers>`_ An overview of Plone 3 customization by Martin Aspeli."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:2
# 3c66955b0a7d466c8d4a5d5cf655297b
msgid "Python Eggs, Generic Setup and Zope 3"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:4
# 058c13d802c4413b914e94531190f9e0
msgid "Background notes on changes between Plone 2.5 and Plone 3."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:6
# 887aab4d4ce741a49bc7c74130771a26
msgid "Products, in Plone's parlance, are analogous to modules or extensions for other applications. In the move from Plone 2.5 to Plone 3, several important changes were made in the way Plone handles products. First, some products began to be packaged as Python eggs, which made them easier to manage, distribute and install. Second, products began to use GenericSetup as a means for installation. And third, products increasingly incorporated Zope 3 (Z3) technologies like browser views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:15
# 1477e9c2f76b471abaebbd03d29c0bee
msgid "Python Eggs"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:17
# 094e4608214942558e2d69e691071aab
msgid "A python egg is simply a bundle of files and directories which constitute a python package. Eggs can either be compressed, in which case they appear as a single \\*.egg file, or uncompressed. Eggs are similar in concept and function to Java's JAR files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:22
# 78bce5d8633a4bdeafcb4b0420d41cf5
msgid "Eggs are installed via the setuptools framework, a side project of the Python Enterprise Application Kit (PEAK), which provides for package (and dependendency) management and distribution."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:26
# cf35aa648f1245c3bd33acdd9b3a0518
msgid "If you're using version control, you'll want to add \\*.egg-info and \\*.pyc to the ignore patterns for your setup so that the egg metadata and compiled python files aren't added to your repository."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:30
# 0c348a2aa7284efdbf04f3c6dd36abf8
msgid "`A Quick Guide to Python Eggs <http://peak.telecommunity.com/DevCenter/PythonEggs>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:33
# 3ec7bb6df8dc4a59bc114488ece19e1b
msgid "A good overview of eggs and setuptools from the folks at PEAK."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:35
# 68c5903b1c554d76ba60c9c5fd3b1e96
msgid "`Hatch Python Eggs with SetupTools <http://www.ibm.com/developerworks/library/l-cppeak3.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:38
# c2f905ae874c48a99c716b260520cc22
msgid "David Metz takes a look at the setuptools framework."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:43
# 8d3253bac60247e6aa5015f2a625a5f4
msgid "GenericSetup (GS) is a tool for managing site configuration in Plone using xml files. GS makes it possible to export customizations from one Plone site and import them into another. And to some extent, GS replaces the Portal QuickInstaller (QI) post-Plone 2.5 in that GS can be used to install products. In products which rely on GS, we find xml configuration files; in products which use the older, venerable QI for installation, by comparison, we find install methods written in python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:51
# bc7c3adbc9ff41a2a160e7c225b8aca7
msgid "Keep in mind that GenericSetup does not currently allow you to undo the profile applied during installation. You can uninstall your theme using the QuickInstaller, however, assuming that an uninstall method is present."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:56
# 4194d7c69cf2487898aaf5a4b33b5a33
msgid "Because our skeleton theme product utilizes GenericSetup to install itself, we will shortly be configuring several xml files needed by GS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:59
# 61c0c4822d304caca427b9297afa9804
msgid "`Understanding and Using GenericSetup in Plone <http://plone.org/documentation/tutorial/genericsetup>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:62
# 1406bad79c4446a78e8b58e397120c54
msgid "Now a bit dated, Rob Miller's tutorial on GS remains a useful resource for background on GS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:65
# 231a317fe671489fa9476483d0fb612d
msgid "`GenericSetup Improvements <http://theploneblog.org/blog/archive/2007/06/21/genericsetup-improvements>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:68
# 5314025db3304b14884ad20c9238b47f
msgid "More information about GS from Rob Miller."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:70
# 50f1a8fbb79a4fb4a1eb1ea72ee286d8
msgid "`Benefit NOW from Using GenericSetup and Z3 Technologies <http://plone.org/documentation/tutorial/benefit-now-from-using-genericsetup-and-zope-3-technologies/?searchterm=benefit%20NOW>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:73
# 9c17effe26434735b0d5ccad9a074327
msgid "Impress your colleagues by using GenericSetup and Zope 3 views efficiently and with minimal effort! This tutorial shows you how to add a new view, how to use it, how to add a new content type and how to hook it all up."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:79
# 85f64af5051548298d5002c38660e793
msgid "Zope 3 Technology"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:81
# d7e485fdb4574bb3b8ed75635f18371c
msgid "Despite any version number-induced miasma, remember that Plone 3 runs on Zope 2. Zope 3 is a dramatic rewrite of Zope 2 and some Zope 3 functionality has been backported to work under Zope 2. (And yes, Plone 3.) For a full explanation of the Zope 3 technologies involved, consult this tutorial:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:87
# 8fdf55fab5594439ab92629eb3744231
msgid "`Customization for developers <http://plone.org/documentation/how-to/how-to-create-a-plone-3-theme-product-on-the-filesystem/plone.org/documentation/tutorial/customization-for-developers>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:90
# f158282725084b2781f262145725769a
msgid "An overview of Plone 3 customization by Martin Aspeli."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:2
# 38f4ab315b2248d69571b922838c4376
msgid "Jumpstart Your Theme Development Using Paster"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:4
# a0427bcdda8849eba05bd1c3a83d714e
msgid "The quickest and most efficient way to get started is not to create your theme product folders and associated files from scratch, but to take advantage of a product generator which will automatically create the framework for a theme product based on your responses to a few interactive questions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:11
# 46b4a02037364cb0be05bd2e4cef027f
msgid "Using Paster on Your Local Machine"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:13
# a5125f33e6354baca60acbeb428c5c7b
msgid "For users more comfortable using the command line, you are more likely to use a tool called ZopeSkel and the paster templates it contains. ZopeSkel is a collection of PasteScript templates which can be used to quickly generate Zope and Plone projects like buildouts, archetypes products and, most pertinently for us, Plone themes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:19
# 743eb9f9ba6448f6a0a4398a9a5745fe
msgid "`Please refer to this manual page for up-to-date instructions how to include Paster with ZopeSkel templates in your Plone configuration <http://collective-docs.readthedocs.org/en/latest/tutorials/paste.html>`_. Plone Unified Installer should ship with a working Paster command."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:25
# 1ea88235a74447efa5eb98c80cf5ec72
msgid "Create your Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:27
# 2ee7d7289e6e4607a778fff3d55d6fd5
msgid "If you have paster and ZopeSkel installed, navigate to the directory where you'd like to create your product (we'd recommend [your buildout]/[zinstance\\|zeocluster/src]) and run from the command line:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:35
# 5f3bbbbcb6084ac7a3ba7428bb4142d6
msgid "or, if you have paster in your Plone installation:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:41
# afdbc2fef7df49808613b492437887b9
msgid "This will initiate a series of questions by the paster script. The defaults are largely appropriate for your first theme, so in many cases you can simply hit return. Here is example output from the interactive session."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:50
# c9d7ff343e044bd9a83185bb89e50c38
msgid "You cannot use 'delete' to correct a typo during the interactive session. If you make a mistake, ctrl-c to stop the script and start over."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:55
# b148ba7231714891858a3eb72e3e28f2
msgid "Paster Options"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:57
# be25229c7e4747bbadc45f88429562c4
msgid "Some of these questions warrant further explanation:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:62
# 38910560f26a4480b182bd260f3fce4c
msgid "Enter namespace\\_package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:60
# 22d433d3ae754fd79ad1c9aaa59c75c5
msgid "It is good practice to use the 'plonetheme' namespace for your theme. You can use other namespaces, of course ('products' might be another), but unless you have a compelling reason to do otherwise, use 'plonetheme'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:65
# a0cccacb0b16439a95d81b224d4d4574
msgid "Enter package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:65
# e1ca357204fc4ed7a2427c7e21f3fd56
msgid "The 'package' is simply the lowercase name of your theme product, sans spaces or underscores."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:68
# 4c57dcae20e74badaa6793a0968c192e
msgid "Enter skinname"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:68
# ada8353b93194c75a11207bc165ed16b
msgid "The 'skinname' is the human-readable name for your theme. Spaces and capitalization are appropriate."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:70
# dd375d597df249d1b2fd42d550a5a6a5
msgid "Enter skinbase"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:71
# 850744a147e04233913b4eb02a32f010
msgid "In nearly all cases, you'll want to leave this as 'Plone Default'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:76
# fa2ff6c8af6543fca5d93c1e28de2d5d
msgid "Enter empty\\_styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:73
# 7055ef7e1c5648cdbb6f8407ca81ae3c
msgid "Answering 'True' will cause empty stylesheets to be added to your product which will override the default base.css, public.css, and portlets.css included in any Plone site using the 'Plone Default' skin. 'False' will not add empty stylesheets. For the purposes of this practical, we recommend entering 'False'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:80
# 3f9c4bc0a56f471faaea923e9b4a2e53
msgid "Enter include\\_doc"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:79
# 2e18660adf964ab89de1c56cb81fe3f9
msgid "Answering 'True' will cause inline documentation to be added to the files created by ZopeSkel. It is worth doing this at least once, as some of the documentation is quite useful."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:88
# 299b86111dc34606910e433551999394
msgid "Enter zope2product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:83
# 8bc31ff0ba6c47219b870b8515c775e9
msgid "Answering 'True' means that the package will be useable as an egg, it will be listed in the ZMI, skin folders will be registered as layers with the Skins Tool ('portal\\_skins'), and the Generic Setup profile for the product can be loaded via the Setup Tool ('portal\\_setup'). We'll explore some of this further; for now, suffice to say that you'll always want to enter 'True' here when generating a Plone theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:91
# 1d84385a09a8478f952e32a21262fc45
msgid "Enter zip\\_safe"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:91
# dfc15efd9d75465a82309cc8a265c28a
msgid "Stick with the default here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:93
# 4948bb2cf3a344f1b8407ce5aee72ea5
msgid "`Creating new eggs and packages quickly with paster <http://plone.org/documentation/how-to/how-to-create-a-plone-3-theme-product-on-the-filesystem/use-paster>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:96
# 82a2734963c949c8a79d3b75363fab49
msgid "How to use the paster command to create new packages with proper setuptools- and egg-compliant filesystem layout quickly and easily."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:2
# 707bb7afca0b4bf0bad2f76cfa6c16a1
msgid "Installing your Egg-Based Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:4
# 38d909756b594232b06f346710426c76
msgid "In this section, we will look at how to install egg-based themes using buildout. As of Plone 3.1.2, all of the Plone installers create a buildout that contains your Plone instance. When installing or developing themes, buildout is highly recommended."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:9
# 8421ebb4a95d4555babfe8a44799c046
msgid "To install the theme product you created in Practical 1:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:11
# 7076e18607bd48e1ae0c3258afa943dd
msgid "First, if it isn't already there, copy your theme product to [your buildout]/[zinstance\\|zeocluster]/src (if you find that this directory doesn't exist, you can create it yourself)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:14
# 33c70cbaa3da4b8f8cf993d8dc8b928a
msgid "Then, using a text editor, edit your buildout.cfg (you'll find it in [your buildout]/[zinstance\\|zeocluster]) and add the following information into the buildout, instance, and zcml sections. The actual buildout.cfg file will be much longer than the snippets below:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:35
# 5fe64140458d4ee4a9fdc3959e190b16
msgid "The last line tells buildout to generate a ZCML snippet (slug) that tells Zope to recognize your theme product. The dots [...] indicate that you may have additional lines of ZCML code here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:39
# 7d989517ef5e4247ac78f1492026d85d
msgid "After updating the configuration, stop your site and run the ''bin/buildout'' command, which will refresh your buildout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:41
# 583c91b3349440559737bb846007337f
msgid "Then, restart your site and go to the 'Site Setup' page in the Plone interface and click on the 'Add-on Products' link. The 'Site Setup' area is also known as plone\\_control\\_panel, as this is the URL used to get to 'Site Setup'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:45
# 1492b9fda9664c308cb003d69af81a59
msgid "Choose the product (My Theme 1.0) by selecting the checkbox next to it and click the 'Install' button."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:48
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:91
# 96a5ab26c41147bc8e786989e465971a
# 21c316cab0fa487985abfae7d27916b2
msgid "Note: You may have to empty your browser cache to see the effects of the product installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:52
# 2e5acec9b72e4f8aaed662c25fef3b04
msgid "Uninstalling a Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:54
# 277d079cbb4b45208688d9b55ab4711d
msgid "Uninstalling can be done from the 'Site Setup' / 'Add/Remove Products' page, but only if you installed it from the 'Add/Remove Products' screen. Not all themes uninstall cleanly, but reinstalling the Default Plone product generally cures any issues here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:2
# f3a058a49ffa4b16817562d4b1759906
msgid "Background: Third Party Theme Products"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:4
# 8d5a22ec135a4c3db45606785b9e0542
msgid "In this section, we will look at how to install a Plone theme that you have downloaded from Plone.org/products, PyPi, etc. We will also show how you can distinguish between an old-style 2.5 product and a new egg-based one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:9
# 0de82b49a6624ed7be6fc4bbbf6dc414
msgid "There are two kinds of theme products: newer **egg-based products**, and older theme products that are in the **\"magical Products namespace\"**. The type of theme product you are working with determines the steps you must take to install your theme. We'll now see how to tell the difference between the two."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:16
# bb80a23bb8d84b5489068c0cd3f56584
msgid "Is the Theme Product Egg-Based or in the Product's Namespace?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:18
# e968354414ef41959e9e6962b45735e5
msgid "First, we need to understand what egg-based means. If the theme, when unzipped, is named plonetheme.whatever, or you generate a new theme using the `Paster <http://plone.org/how-to/use-paster>`_ recipe and answer \"yes\" to the \"is this a Zope2 product\", then your theme product is egg-based. On an even simpler note, if the root folder contains setup.py, it's an egg. In a typical egg-based theme product, setup.py would look something like this, where the highlighted text is the name of the egg."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:37
# 45947b4162214e71a1feef9f2421ce4a
msgid "If the product looks like it was created using DIYPloneStyle 3.x (now outdated), it lives in the Products namespace. You can also tell that you are working with a theme in the Products namespace because there is no setup.py file in the root."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:43
# ef1abb5dce1a4ddbae8c6a72c34448ad
msgid "Installing an Egg-based Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:45
# 481681137c554436bb8488795afb306e
msgid "We recommend using buildout to install an egg-based product. You can decide whether you want to download the package yourself or leave buildout to do it for you. If the former, then follow the instructions in the previous section. If you want to leave the download up to buildout, then buildout configuration is simpler:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:53
# 9c2ddeadaafa4938ba0cde355399e498
msgid "[configuration here]"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:56
# e19aae0f27854532accf63bec1967941
msgid "Dependencies"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:58
# c2a3627227e34b318b7b66adb59fa2ba
msgid "If another package depends on the theme egg or includes its ZCML directly, you do not need to specify anything in the buildout configuration; buildout will detect this automatically. This is considered a more advanced topic. Similarly, if the theme egg depends on another product, then buildout will take care of this too."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:65
# e803c97b27ac4fa88e7bd00cb90663d4
msgid "Installing a Product if it is in the 2.x Products namespace"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:67
# 9eebb9a2de1544debe0a80834a88239e
msgid "Assuming the theme product is an older 3.x theme and that it is in the Products namespace, all you have to do is place the theme product in your buildout's \"products/\" directory and restart your Zope instance. There is no need to rerun your buildout, because we have not changed any ZCML code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:73
# 245b827b3ea04f8fabdcafd50879c376
msgid "Then, after your Zope has restarted, go to the 'Site Setup' page in the Plone interface and click on the 'Add/Remove Products' link. The 'Site Setup' area is also known as plone\\_control\\_panel, as this is the URL used to get to 'Site Setup'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:78
# 64a0560643474c6fb282959ee1e63144
msgid "Choose the product by selecting the checkbox next to it and click the 'Install' button."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:81
# becf8487621849f094ac9545dc120165
msgid "Older themes in the Products namespace may show up twice in the portal\\_quickinstaller, but this is a bug that is fixed in a more recent version of ZopeSkel. You can either ignore the bug or resolve it by removing this line from your theme product's configure.zcml file and restarting your Zope instance:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:2
# d450e21ae5c24c2db97bbb05859e57eb
msgid "Files for Components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:4
# 2823d8afc89642469c0d7529c5f8240f
msgid "These files and directories will be relevant when working on the Components part of your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:7
# ecd40a8911dd4f0a8e8a04363053a322
msgid "/browser/viewlet.py \\| viewlet.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:13
# 6af63ccb9c584b26a773df376718268c
msgid "This is used to create your theme interface (and any other interfaces you might need)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:20
# c2e6be4a05794055bf606f7bdc30b86e
msgid "/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:26
# d3c47c520ccc40ea998c5d74c0172101
msgid "These directories can be used for templates, styles, and images. You will need to register these as directories as resources in configure.zcml."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:34
# 6332ee817a694930aec5bbec131aaca6
msgid "your theme egg - the components files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:2
# 228c481586df4436b71f7ff160387014
msgid "Files for Configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:4
# 0babcabfc0414a67b6b1759a3629c7be
msgid "These files and directories will be relevant when working on the Configuration part of your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:7
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:8
# 2ea6159435a240d785e202c6c99dd542
# 2dda31e4683c47eb9a6deb8df8639e5d
msgid "/profiles/default/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:9
# a33d70ccb21c4fab8a302dcf57275878
msgid "This directory holds the xml for Generic Setup. The plone3\\_theme paster template will have provided you with some ready-made files - for setting up your skin layers, registering your style sheets and JavaScripts, and ordering your viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:23
# 5f329d9da78340d7a8e770c6485c8282
msgid "your theme egg - the configuration files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egg.rst:2
# 04de8c9399174c59aa11250c2b36055d
msgid "Files for Installing your Egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egg.rst:4
# 5ae1a7fb5a944328811a337801b7f7eb
msgid "These are the files and directories required to install your egg in your python path and make it available to Zope on start up."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egg.rst:11
# 406b4f1cbfd14001871c37942054b148
msgid "your theme egg - the files used for installing the egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:2
# 92f2b54e7b7b4d12900c0fed7557ff25
msgid "Where's my Egg Location?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:4
# 1e6ef14a27d24e409cada01461ec31d3
msgid "It is easy enough for Zope to find your eggs, harder for humans."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:7
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:16
# a89b78d85b6f486a8e37aa5ca5bc5112
# 287ebd5770b44bbe849919cd17fb983f
msgid "Plone version 3.1.2 onwards"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:15
# c2a2781c240b472abf110d153ea1f1cd
msgid "Core Plone Default Products"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:10
# ad6b2e5ebbc64070a642e3e0d02d3fc9
msgid "For core products used in the Plone Default Theme, buildout has an eggs directory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:13
# 6a828a8a784a4a368f355aa296c18193
msgid "[your buildout]/eggs"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:15
# 611e33bc98e948e99f7509ce56e0bebf
msgid "which is where eggs are automatically dropped when Plone is installed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:21
# cf43ce93900b48fbb64d544711f4deb5
msgid "Your own theme product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:18
# be1adf09e53b4193ad46a72c84901abb
msgid "Because your own theme product will be under development, this will go in a separate place in your buildout"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:21
# 383a932304594058b598397900996a89
msgid "[your buildout]/[zinstance\\|zeocluster\\|]/src"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:23
# 7f8f198f78ae465cb822c851ee48f1fe
msgid "(note that to share eggs between buildouts you can specify a different location for this in a buildout defaults file, check the `buildout tutorial on plone.org <http://plone.org/documentation/tutorial/buildout/creating-a-buildout-defaults-file>`_ for more information)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:30
# 97864a80dfaa4cd1a7ffe2bd0433158b
msgid "Using Omelette to get at your eggs quickly"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:32
# 28600d2939414dbea9a60306337cb95b
msgid "It is a bit of a drag navigating your way around all the eggs used by Plone. David Glick's Omelette recipe creates a unified directory structure of all namespace packages, symlinking to the actual contents, via buildout. Full instructions and documentation on this can be found here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:38
# 74f4d378121f4916a13e445437241d42
msgid "`http://pypi.python.org/pypi/collective.recipe.omelette <http://pypi.python.org/pypi/collective.recipe.omelette>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:40
# 2d18531a4f194f6d897b0ec975f7c93e
msgid "Once you've re-run buildout with the omelette recipe, you'll find that you have a new section here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:43
# 6d57b409cb344a2d88fc7217a4908520
msgid "[your buildout]/[zinstance\\|zeocluster]/parts/omelette"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:45
# 33ad0b80445549e786e31bdbc26b5e4f
msgid "and eggs such as plone.app.layout can be found in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:47
# 4e751bf970fe4fa28ceeec1ec986fb92
msgid "[your buildout]/[zinstance\\|zeocluster]/parts/omelette/plone/app/layout"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:51
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:43
# 9e843de4c6074ee78089b9ca4fc77b9f
# 9186d57cf9154d338d6d66d418b944c8
msgid "Plone version 3.1.1 or lower"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:59
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:29
# 0e285373f1214ce6a7aa29fa45bd3925
# df3f7dd7b4254177a522b1704ddcb037
msgid "Plone Installer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:54
# eecbf57a51ca4dd0b99ca614e8683a1a
msgid "If you have installed Plone with an installer, then the eggs will probably have been dropped into"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:57
# f9227ba7ff4e4f639ebb5c2e0f95ed77
msgid "[your plone installation]/Python/Lib/site-packages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:59
# db03b92657af4360a303aea2a822c3c9
msgid "However, if you've used the Plone 3.1 universal installer, then you will have a buildout based installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:66
# 41e8494c58fc49cda51dfd15344b6387
msgid "The Plone Product Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:62
# 930d604dee404562a97e80bf34f400bc
msgid "If you used the product package (i.e. installed from source), then you may well find them in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:65
# 35f661e8a4fc4c94ac22366564ced755
msgid "[your Zope instance]/lib/python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:2
# dab23160ada44aeea27d40f803f47b36
msgid "Where is What on the Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:4
# 4bc28c86087b433c9a510e0201009c2a
msgid "How can you track down the files related to an individual page element?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:6
# 01159526005b473c90706bd3be83c1c1
msgid "At the time of writing, there's no in-built magic wand to point at an element on a Plone web page and find out exactly what templates and code are involved in its creation. There may be soon though, and the adventurous might like to explore `Weblion's Gloworm tool <http://weblion.psu.edu/blog/esteele/gloworm-0-1-alpha1-now-available>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:12
# 5d966aef55bd4042a03a095ac90e185f
msgid "If you're not ready for an adventure yet, then there are a number of good tutorials available with diagrams and guides to where is what."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:16
# 45e917dfb84644c5894947525395e490
msgid "Understanding how the CSS maps to the Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:18
# cd327cb914f24d6ba12422b41c322a4c
msgid "The Weblion project has an excellent Wiki page to help you with this"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:22
# abb26ec7559a472bb74ae3788f86564f
msgid "`https://weblion.psu.edu/trac/weblion/wiki/PloneThreeWhereIsWhat <https://weblion.psu.edu/trac/weblion/wiki/PloneThreeWhereIsWhat>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:26
# 4b580035f3864d12b4fc74b23371af45
msgid "Firebug (an add-on for Firefox), of course, is an essential tool for inspecting code and CSS for a page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:31
# 1bb0ae5e971242848834506f13633600
msgid "`http://www.getfirebug.com/ <http://www.getfirebug.com/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:36
# 57b2d04b41894e98820d962826f5043d
msgid "Page Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:38
# c1c6a43dfb824599a961a5436cd7476f
msgid "Page elements are consistently named in Plone, so once you know the name of an area of the page, you're well on the way to tracking down the relevant files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:42
# a1d87168330a453baa96ff0bd4315f95
msgid "you can find a visual key to page elements in the Elements section of this manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:44
# 0102ef372a7142c5841347d1ac321ff5
msgid "you'll also find an excellent overview in the `What Controls What You See <http://plone.org/documentation/tutorial/where-is-what/introduction>`_\\ tutorial on Plone.org"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:47
# 505c488ea32b4a87977cc0993f6bc431
msgid "and a mapping of the viewlet and portlet managers on the `Weblion wiki <https://weblion.psu.edu/trac/weblion/wiki/PloneThreeWhereIsWhat>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:2
# 698312be8c3140198c8c17f092db61c1
msgid "Location of files in your own Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:4
# dbe9f30e98704709bb3c36a19adebd7b
msgid "The egg created for you by the plone3\\_theme paster template should have a file system layout very similar to this diagram."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:7
# 70156ccff44542d49ef19149df56e219
msgid "If the diagram doesn't help, then consult the next few pages where sections of the diagram are combined with a text explanation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:14
# b9999808d8f14bd99e161df0abcd055e
msgid "your theme egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:2
# 004361a2fccd42e482b6851681d9c3a7
msgid "Where's my Products Directory?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:4
# c869f6a2e39a4003a06407abd426ddc7
msgid "How to track down your products directory. It'll differ according to the Plone installer or installation process you used."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:7
# f77fa7f9c34742299fd98d4c40b0956e
msgid "The products directory is where old-style 2.5 products live. To track this down, you'll need to know where your Zope Instance or your Buildout is first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:11
# a68ed048492e4f00a0ed8621814ce8ee
msgid "For theming purposes, the main reason you'll need to investigate the products directory is to locate Plone Default theme files - as parts of Plone are still in old-style product form."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:18
# 3b923a3eab7a4e0c9a6f0260c36044b9
msgid "In a Buildout based installation, you'll find products in various directories."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:24
# 2d109d18be2b4ea4b1a47e69fd0a5168
msgid "Core Plone products (such as CMFPlone)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:22
# 329221a9a2194ab5b6b41f896a247ca1
msgid "For these, have a look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:24
# a507417c236646b9913f29e2629502b2
msgid "[your buildout]/parts/plone."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:31
# 03f7eacf5f2c4f1eb7217e06ff0dbe9a
msgid "Products you download yourself"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:27
# f7c92e74538f46f683af9556b158cd38
msgid "These should go in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:29
# 4a2aef1fc3bf4d14ab95caa4e4269a75
msgid "[your buildout]/products."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:31
# e1aa04dbb713474e838258be42d9f0c9
msgid "If you find you haven't got a products directory there, then it is OK to create one yourself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:40
# a396b54aeabe4eac80b99fdb4376e87f
msgid "Products you asked buildout to download"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:34
# f356d71faa4f43b59e56bb3ce6b64c0d
msgid "If you asked buildout to go and fetch some old-style products, then these will have been dropped into"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:37
# ddf37433528e4e938d7a7b181ba04748
msgid "[your buildout]/parts/[directory name]."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:39
# c70aa0a2293e49689b0eec4c1bda53c0
msgid "(Buildout will also have created the directory and will have called it something like \"productdistros\")."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:52
# 5235e34f37fc4e88869c449dbdd4d89a
msgid "Plone Installer and Plone Product Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:46
# 1e57340333ee4e60829e8ba07512ccfd
msgid "It should be easy to locate all your products (those belonging to the core Plone installation and those you've downloaded yourself) in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:49
# 5d59f80a05814982a17e42f6f0f2aee4
msgid "[your zope instance]/products"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:51
# 20ccab53b0e74a48ad659e0ef9b3cc89
msgid "However, if you used the Plone 3.1 Universal Installer your installation will be buildout based."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:2
# 65898fec1136419daae44e620a410638
msgid "Files for the Skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:4
# 0dbf5c50cd294b2d9721f12e797da946
msgid "These files and directories will be relevant when working on the Skin part of your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:7
# 564ea246cb314d6c9b0f9ffff09145b0
msgid "/skins/[your theme namespace].[your theme name]\\_custom\\_templates \\| custom\\_images \\| styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:10
# b62c5bb81d14493a842558efc9b60387
msgid "These directories will form your skin layers. Your templates, images, and stylesheets can go here. If you asked it to, the plone3\\_theme paster template will have provided blank style sheets to override the Plone Default ones."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:22
# bb59272b64d34550a7a17ed3de46a37a
msgid "When your theme is installed in your Plone site, this sets up the hierarchy of skin layers, and registers your style sheets and JavaScript with the registries"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:30
# 84c5cbd6294a473b9765adebd7aa2395
msgid "your theme egg - the skin files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:2
# e1af48e7b2e240b7975f98573cc1a596
msgid "Files for Installing your Theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:4
# 09ea6e6c3609483c91ea8d7d3fd27f99
msgid "These are the files used when you install your theme product using Site Setup > Add / Remove Products or Zope Management Interface > portal\\_quickinstaller"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:10
# 2e92ad4cb54d4c2bb98038068069e936
msgid "Generic Setup will install your theme profile when your theme is installed. import\\_steps.xml points to a 'handler' for installation steps which aren't yet part of Generic Setup or can't be expressed as XML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:15
# 105a23297cc2455b9fb1b23243ade7cc
msgid "/setuphandlers.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:17
# 5075ecea36ac4aa4852637feefc5bc53
msgid "This contains the handler for non-Generic Setup installation steps."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:23
# 20087fada055498abdd0a8aacf641d29
msgid "your theme egg - the files used by quick installer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:2
# 2f80c700ec074c15a1406a6bcbe553ba
msgid "Where's my Zope Instance?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:4
# db339c65f0e441a9a07e5a2c20398ddf
msgid "Where your Zope instance lives depends on the Plone installer or installation process you used."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:8
# 005c1aa5b60443e1bf45098187f4b48e
msgid "Plone Version 3.1.2 onwards"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:11
# 1490b71a20e3487a8065af70db5cc9c5
msgid "In a Buildout based installation, you don't need to worry much about your Zope instance. If you really want to investigate you'll find the actual instance in [your buildout]/parts/instance. However most of the key bits (your Plone products, 3\\ :sup:`rd` party products, your Data.fs) don't actually live there. They are all assembled together from various parts of your file system by the zope.conf file which is generated when you run buildout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:20
# a419c0bb8a8a4a568f086934fcffdd27
msgid "Plone Version 3.1.1 or lower"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:23
# 3f97b29fe400496d85bfcbac74af42ea
msgid "The Plone installers (apart from the Plone 3.1 Universal Installer) usually drop a Zope instance directory alongside the Zope and Python software directories. So, for example, a standard Windows installation, locates your Zope instance at c:\\\\Program Files\\\\Plone 3\\\\Data. On a Mac, it will be called 'instance' and will probably live in a Plone folder in your applications folder. The Plone 3.1 Universal Installer, however, will have given you a buildout based installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:34
# 5c1a0237249d43cfb0fd7ea7f455cbb1
msgid "Plone Product Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:32
# 411ea2c870fd4c55bf9afc5e0aecfc4a
msgid "If you've installed Zope yourself, you'll have been prompted to create a Zope instance, so you should have a good idea of where that is on your system."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:3
# 5208bdf2879d4881a2b5df1785645bc0
msgid "Authorisation algorithm"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:7
# a11bbb88989649a78ac001f333744ac0
msgid "These are the steps the PAS user folder follows in its ``validate`` method:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:9
# 84bcc06aa36649d398dfabdeabbcd435
msgid "extract all credentials. This looks for any possible form of authentication information in a request: HTTP cookies, HTTP form parameters, HTTP authentication headers, originating IP address, etc. A request can have multiple (or no) sets of credentials."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:15
# 24bcae2dc020476dafbeea2e02820084
msgid "for each set of credentials found:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:17
# da4553dbaa7842e29f1743ae380f2233
msgid "try to authorise the credentials. This checks if the credentials correspond to a known user and are valid."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:20
# 8a39ed4559b44f85817d3f845574cada
msgid "create a user instance"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:21
# f03b982b6c6d499792851ec145b68684
msgid "try to authorise the request. If successful, use this user and stop further processing."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:24
# db92a78fdc4f4604883f2d3654089e73
msgid "create an anonymous user"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:26
# d85a5da1555049b4984c889f9f622afc
msgid "try to authorise the request using the anonymous user. If successful use this, if not:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:29
# 452669801c9041609542ba24697d8c93
msgid "issue a challenge."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:3
# ce3bb1b9c21f4d02aca04968b1f0873e
msgid "Challenges"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:9
# 5d6fd2277bed45b5b3b5456da0f002c1
msgid "If the current (possibly anonymous) user is not authorised to access a resource Zope asks PAS to challenge the user. Generally this will result in a login form being shown, asking the user with a appropriately priviliged account."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:13
# 72673d73331e4310b8fd7258aabdea8f
msgid "The IChallengeProtocolChooser and IChallengePlugins plugins work together to do this. Since Zope can be accessed via various protocols (browsers, WebDAV, XML-RPC, etc.) PAS first needs to figure out what kind of protocol it is dealing with. This is done by quering all IChallengeProtocolChooser plugins. The default implementation is ChallengeProtocolChooser, which asks all IRequestTypeSniffer plugins to test for specific protocols."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:15
# 843da2854da646fbb59321c99e13b7a2
msgid "Once the protocol list has been build PAS will look at all active IChallengePlugins plugins. Writing a plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:18
# 5e5ba26dacb641e8a0f7a124f69041e7
msgid "The IChallengePlugin interface is very simple: it only contains one method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:32
# 4838d61b586647fda22b9801cbcc7de0
msgid "The plugin can look at the request object to determine what, or if, it needs to do. It can then modify the response object to issue its challenge to the user. For example::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:38
# af0b2f564c9a436786a74a5a56d47a8d
msgid "this will redirect a user to the Disney homepage every time he tries to access something he is not authorised for."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:3
# 3b95a9927f304bb2b9ce1fab45f01dd2
msgid "Concepts"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:9
# fbe985d2a9f54a18b715da403e0e6951
msgid "PAS has a few basic concepts that you must understand in order to develop PAS related code."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:12
# 386d9292508d4446a645e5e6ded96031
msgid "There are a few basic concepts used in PAS:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:18
# 1018a06006f4437ba2c57640a1504846
msgid "**credentials**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:15
# 72a72d9f22314cb98c3899a2b817f2a3
msgid "Credentials are a set of information which can be used to authenticate a user. This can be a login name and password, an IP address, a session cookie or something else."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:23
# c7bd20b4f9e840d8ae75b8dc68fd4ecf
msgid "**user name**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:21
# 0a54556607f54f3e9590ca3eccfb1520
msgid "The user name is the name used by the user to log into the system. To avoid confusion between \"user id\" and \"user name\" this tutorial will use the term login name instead."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:27
# feebd7c421634010967bca71e0036ecf
msgid "**user id**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:26
# 8b51d6306f7740008a74ed2267599a97
msgid "All users must be uniquely identified by their user id. A user's id can be different than the login name."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:33
# 05218d047ec44a6c8fac4ad8b7f8db2b
msgid "**principal**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:30
# bf3f124ec6764dd0aa78fe6a356d4378
msgid "A principal is an identifier for any entity within the authentication system. This can be either a user or a group. This implies that it is not legal to have a user and a group with the same id!"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:3
# daa8491af2634b54956f96c577cf7033
msgid "Configuring an individual PAS plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:9
# 79c07877e3c048038e29696a624bb30a
msgid "In addition to enabling and disabling plugins via the plugins object each plugin can also have its own configuration. You can access this by opening a plugin in the ZMI."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:13
# 73cfd27b77b04f7cb84a1c7e018c5a3e
msgid "Taking the ``credentials_cookie_auth`` as example again you will see the screen for the :guilabel:`Activate` tab. This tab is mandatory and allows you to enable and disable PAS interfaces for a plugin. This corresponds to the plugin configuration we saw earlier, but does not allow you to change the ordering of different plugins for an interface. If you enable a new interface for a particular plugin, it will be activated and placed last in the list of plugins for a particular interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:27
# e46f3de6e9de4d2fa4d97adbb051f29e
msgid "You can also go to the :guilabel:`properties` tab to edit settings specific for this plugin:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:34
# a8f261e6b8bc44a5a76e95e0b126a8e5
msgid "What you can configure will differ per plugin. Some plugins do not have any configurations options, others can be very complex."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:3
# c018b498d08c4144a65280e2afd9ac0c
msgid "Configuring PAS"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:9
# cb165d274b11419b8b6168da30e1a6ba
msgid "There is no Plone interface to configure PAS: you will need to use the Zope Management Interface (:term:`ZMI`). In the ZMI you will see a ``acl_users`` folder in the site root. This is your PAS object."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:14
# 5495e0a67ad24c2ca9542df872d35b50
msgid "If you open the ``acl_users`` folder you will see a number of different items. Each item is a PAS plugin, which implements some PAS functionality."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:22
# 377a2bb10e22487b8c9b5d16caa3b820
msgid "There is one special item: the ``plugins`` object manages all administrative bookkeeping within PAS. It remembers which interfaces are active for each plugin and in what order the plugins should be called."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:27
# 59cb323651f64662a9c0c56c9c46e046
msgid "Let's take a look to see how this works. If you open the ``plugins`` object you will see a list of all the PAS interfaces, along with a short description of what they do."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:32
# 97d2ad1dd0154279bcf49b72ecd936dc
msgid "We will take a look at the extraction plugins. These plugins take care of extracting the credentials such as your username and password from a request. These credentials can then be used to authenticate the user. If you click on the Extraction Plugins header you will see a screen which shows the plugins which implement this interface and allows you to configure which plugins will be used and in what order."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:44
# 6a55b0b394b44221b2652924d5bcde7a
msgid "In the default Plone configuration there are two plugins enabled for this interface:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:47
# f02166f8bb4a432092eec5bb920096a9
msgid "the ``credentials_cookie_auth`` plugin can extract the login name and password from an HTTP cookie and HTTP form values from the login form or portlet;"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:50
# 2781199dd4ff45ea8d611e8f93650819
msgid "the ``credentials_basic_auth`` plugin can extract the login name and password from standard HTTP authentication headers."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:53
# 5bda0818769a4d31a720b958d91ed4eb
msgid "In the default configuration the cookie plugin takes preference over the basic authentication plugin. This means that credentials from a HTTP cookie will be preferred over credentials from HTTP authentication headers if both are present. You can try this by first logging in using standard HTTP authentication in the Zope root, and then visiting your Plone site and logging in with a different user there: you will see that the new user is now the active user."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:62
# 6b7cd9b920e84094a93798d4d21279cf
msgid "You can change the order of the plugins by clicking on a plugin and moving it up or down with the arrows. Using the left and right arrows you can enable and disable a plugin for this interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:3
# d7c4b9f7b99f4f969d09a9a96231d296
msgid "Credential authentication"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:9
# f40abe1269944002b2a2341b8765bb2c
msgid "The credentials as returned by the credential extraction plugins only reflect the authentication information provided by the user. These credentials need to be authenticated by an authentication plugin to check if they are correct for a real user."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:13
# a86e6142795e4eae9cb79e9481c7d5f2
msgid "The IAuthenticationPlugin interface is a simple one::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:23
#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:27
#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:27
#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:17
# f9167651c7f94ee09ddf691b91ab2bde
# 0a1952a33f8442e7b4b9b115a41bc134
# 7b958a26c2ac4e3eb13bfc423ff78270
# 170185637878456ca9231bc482006e6b
# f28c2f4107b44c4d9e38e15a29da49da
msgid "Here is a simple example::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:39
# 08066df89e594254a7d7b812734c7ae5
msgid "This plugin allows the users *hanno*, *martin* and *philipp* to login with their nickname as password."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:3
# 95e783f26cc74f3f8f6f1b824030dd5b
msgid "Credential extraction"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:9
# be91e7316164432f94cd52962eea259c
msgid "Within PAS credentials are a set of information which can identify and authenticate a user. A users login name and password are for example very common credentials. You may also use an HTTP cookie to track users; if you do so the cookie will be your credential."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:13
# aea02e1f6f524cde88c7b5c73a6d376c
msgid "PAS user credential extraction plugins to find all credentials in a request. Authentication of these credentials is done at a later stage by seperate authentication plugin."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:16
# 76378e522a534387977b607d183219e6
msgid "Writing a plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:18
# b6d83fed21f94d1a9a7201c96e2eac0d
msgid "If you want to write your own credential extraction plugin it has to implement the IExtractionPlugin interface. This interface only has a single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:39
# 41cdab25812d49d18aec7feebf9010cc
msgid "This plugin extracts the login name and password from fields with the same name in the request object."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:3
# b515a4093dd445138d2e66ff96ac96d8
msgid "Features and interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:9
# 4c68d1daf2784bd6b0b51615808ef9e8
msgid "A user folder such as PAS provides a number of different services: it takes care of user authentication, it asks users to login if needed, and it allows you to search for users and groups."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:14
# 352f5e64222746d49128bfaa27e419fc
msgid "In order to make both configuration and implementation simpler and more powerful, all these different tasks have been divided into different interfaces. Each interface describes how a specific feature, such as authenticating a user, has to be implemented."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:20
# 4604e67c27354231b6b52e001d00f649
msgid "Within PAS, plugins are used to provide these features. Plugins are small pieces of logic which implement one or more functions as defined by these interfaces."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:24
# 118cd37ef87740e782189e066b80d68a
msgid "This separation is useful for different reasons:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:26
# 1bcab0ac76a54d548afba3aec444a89e
msgid "it makes it possible to configure different aspects of the system separately. For example *how* users authenticate (cookies, login forms, etc.) can be configured separately from *where* user information is stored (ZODB, LDAP, RADIUS, SQL, etc.). This flexibility makes it very easy to tune the system to specific needs."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:32
# 8a54ed2804cc4c41baed4faa5c582b3e
msgid "it makes it possible for developers to write small pieces of code that only perform a single task. This leads to code that is easier to understand, more testable and better maintainable."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:3
# 47b7cd53cd094b7bbadf1d67a1aacc6f
msgid "Group plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:7
# 186d40705554481babbd678c1ee61538
msgid "Group plugins return the identifiers for the groups a principal is a member of. Since a principal can be either a user or a group this means that PAS can support nested group members. The default PAS configuration does not support this though."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:12
# eba8d1d2470b45be869ef6995d3ce310
msgid "Like other PAS interfaces, the ``IGroupsPlugin`` interface is simple and only specifies a single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:41
# 5464839b9afd4f7a8b8e3606c18878ba
msgid "This puts the current user in the Manager group if the site is being accessed from the Zope server itself."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/index.rst:3
# b962729628d24d5f98c7150ddd3e7135
msgid "Pluggable Authentication Service"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/index.rst:7
# ebcfd6b2b7ce40caa0917179d2ef3581
msgid "The Pluggable authentication service (PAS) provides an easy way to customize the way your users are authenticated and assigned roles."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:9
# 72ba5cc693a646d085a59ec79b11f13e
msgid "The Pluggable Authentication Service (PAS) is an alternative to the standard Zope User Folder or the popular Group User Folder (GRUF). PAS has a highly modular design, which is very powerful, but also a lot harder to understand."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:15
# 3742313b8bec40b39f216139648a3056
msgid "PAS is built around the concepts of interfaces and plugins: all possible tasks related to user and group management and authentication are described in separate interfaces. These interfaces are implemented by plugins which can be selectively enabled per interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:21
# 91893db1b29e4ee7857b13f02c3dd975
msgid "Plone uses PlonePAS, which extends PAS with a couple of extra plugin types and which adds GRUF compatibility. Since PlonePAS extensions are rarely needed and are subject to change in new Plone releases, this tutorial will focus only on pure PAS features."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:3
# adf992120cac421fa603cefc981d449c
msgid "PAS eats exceptions"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:7
# ebffa5ea03df4d1ab16a6ca9da45a9c8
msgid "A broken user folder is one of the worst things that can happen in Zope: it can make it impossible to access any objects underneath the user folders level."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:9
# 7d1329c2ac264861b18d3f98b7eab064
msgid "In order to secure itself against errors in plugins PAS ignores all exceptions of the common exception types: NameError, AttributeError, KeyError, TypeError and ValueError."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:11
# 5dbffb51c68a4911840f3f19dd9064c9
msgid "This can make debugging plugins hard: an error in a plugin can be silently ignored if its exception is swallowed by PAS."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:14
# 9d86a0ca5e4a4fcea8c8330e76a0c5e0
msgid "Do not swallow"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:16
# 6473bd5e247f463e9235e3eb9153ad33
msgid "You can tell PAS not to swallow your exceptions by setting the ``_dont_swallow_my_exceptions`` attribute on the plugin class."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:19
# 72232c7bda5849218af808727987000f
msgid "From ``Products/PluggableAuthService/PluggableAuthService.py`` line 86::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:30
# 4dce2741f3334c68bf41e7bb7822fd89
msgid "Which means to take advantage of this feature, do something like this in your plugin class::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/index.rst:3
# f93c7bdb839d4bf5bd48d774a4a31456
msgid "Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/index.rst:7
# 63ec3431ec4d4687935ba20a2087b400
msgid "Detail about the stock plugins provided by PAS and how to create new ones"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/index.rst:3
# b50dd39c023643c98de22af28a323c08
msgid "Plugin interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/index.rst:7
# ac23f57318ea45708ca51b8ec7854d11
msgid "PAS Plugins are broken down by the different functionalities they provide."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:3
# c869481269f947cc9a3684c6a9a811f0
msgid "List of Plugin Interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:9
# 3194ddd2e10b447faaa8d07dba1ba72b
msgid "PAS Plugins are broken down by the different functionalities they provide. A particular plugin may provide one or many of the following interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:11
# 857bb97f80f4439fb87602d533bef799
msgid ":ref:`pas-extraction-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:13
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:11
# 0e36500e9a044955a70b717b5777fa48
# 65a8f4d293044cd5bd48f4c6b9a6ea09
msgid "Extraction plugins are responsible for extracting credentials from the request."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:15
# fa417b9c43654db08cc3cb6ab61793c6
msgid ":ref:`pas-authentication-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:11
# 0a1f7ef40fde40f39b3d56d5ddfa8f73
# b062fb07b53e4c4cbf0095eba221e51e
msgid "Authentication plugins are responsible for validating credentials generated by the Extraction Plugin."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:19
# 888cdd94df014871978c1472b927e802
msgid ":ref:`pas-challenge-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:11
# ef0d6d0a0ae94354929bc843c1ece9a4
# 87f090a371114f84a18a04348be7eae1
msgid "Challenge plugins initiate a challenge to the user to provide credentials."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:23
# 9db767c73af844449c04d6bd89bb23ef
msgid ":ref:`pas-update-credentials-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:11
# 82009163501746b7a8f7c4b2f4c3c069
# 4dce6c8b302c4a9f9181e663d2f0e910
msgid "Credential update plugins respond to the user changing credentials."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:27
# e30c10dabeae4c65a8257fb1c92c5a98
msgid ":ref:`pas-reset-credentials-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:29
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:11
# bd3dd38244804453bf05f5e781fac4c0
# 60e70abc77244ee49f5951c65f953c9e
msgid "Credential clear plugins respond to a user logging out."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:31
# a654fbe661f14bdfa22aa32d8e871d70
msgid "Userfactory Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:33
# 511493e59e3a411da3993578b70456e0
msgid "Create users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:35
# 56db828a65fa4097bffc77475cf02cdb
msgid "Anonymoususerfactory Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:37
# 26b926de92404b5b9d1dd2795c343f43
msgid "Create anonymous users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:39
# 54d765c8a5434fd58135c02d8f34b646
msgid ":ref:`pas-properties-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:41
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:11
# 7dd3b15ba2414da09f85f1ee0647938e
# 92fef21df4d94138b94be436a44508a8
msgid "Properties plugins generate property sheets for users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:43
# 0980f66f34ef4d50a2a1f40e79edd1e2
msgid ":ref:`pas-groups-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:45
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:11
# 1c5c0c3a90b04e69b1da1fb76015eca7
# b8d8a7cfa7ac418f8c1c2b2d1c0f2051
msgid "Groups plugins determine the groups to which a user belongs."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:47
# 5fbb1c68aee34b90bda7732581a7fb61
msgid ":ref:`pas-roles-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:49
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:11
# 7c48aeb345a643cb905ebc1612636e37
# 96e92bced9c642e69cced88713eacb3d
msgid "Roles plugins determine the global roles which a user has."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:51
# 13b06d0ae6a0455e999c62868fc3e921
msgid "Update Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:53
# 956485fa441e41cda25cd4e9365c7621
msgid "Update plugins allow the user or the application to update the user's properties."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:55
# 78186354010b4a1b8a5d23fe11319786
msgid "Validation Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:57
# 25987d02c5c349b79c206d3cec66ce3d
msgid "Validation plugins specify allowable values for user properties (e.g., minimum password length, allowed characters, etc.)"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:59
# c2e31c08599e4f458347dc064d12fd0f
msgid ":ref:`pas-user-enumeration-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:61
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:11
# 1915d4a8169d408b90c16917b6ddfe71
# 3bb4e0e2d0c547cd8578e7125dfbe62f
msgid "Enumeration plugins allow querying users by ID, and searching for users who match particular criteria."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:63
# 46f8652fed8e4de280406f6e2d5b5957
msgid ":ref:`pas-user-adder-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:65
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:11
# e7bbb443bfae402d9637a1f022bdbafe
# 3b05d99ce8c84361b19761084f5b40e6
msgid "User Adder plugins allow the Pluggable Auth Service to create users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:67
# ef1d9465aecd4d28853014fbec1af3cc
msgid ":ref:`pas-group-enumeration-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:69
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:11
# a940a72df04e4becbd4703addc980947
# 438f8208b4214fef82ed0165bd5a2300
msgid "Enumeration plugins allow querying groups by ID."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:71
# ea40ffa09e7044628cfe923df24ba0bf
msgid ":ref:`pas-role-enumeration-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:73
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:11
# 8daeb07e3841442fb64df69f551962c3
# 14ec61f817884dc2bb8cf50e65a4b371
msgid "Enumeration plugins allow querying roles by ID."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:75
# 16c0297424534f3fa8f655f5c3365949
msgid ":ref:`pas-role-assigner-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:77
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:11
# 04e7a66d6f8243aea57cae793a676a46
# e3c3ab6e10504f5c8e1893ba3aa1c56a
msgid "Role Assigner plugins allow the Pluggable Auth Service to assign"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:5
# aa97c944f1684f22a14f5d419f28cd6e
msgid "Authentication Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:15
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:15
# f2a1db11cfc64b308f0eeed4b195777f
# afb0d43044444657bc53504b0c5990e2
# 6e34832661ce46d68940531c0ea9938d
# 1984e4192fdb4ff9a555552b449f63ee
# 92a7249a983542f7a19f36d4aa433848
# e26a90d89b5b4d3ebbe1b9ebabcbe08a
# 6367b232c62f467f95130398ef4832ef
# 6a74eb75edf74ccb856cd4e1d0e02770
# 4b0a0b2986e2430dae8e95f4d8b851a6
# f384710f0a7346fc9afad3ef1f5697d2
# 9b46c52c95db4ec1b449e64c5ff37203
# 7d65a695ef0b44a984c4797e0858d939
# 64c864ff53d84af2a122b57cf4045c9b
msgid "Stock Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:18
# 6290333dfa0e4c5ebb1ee99eac0d9ef5
# 1f02c4dfab8344179cb32a68059daa71
# a29beb0da388433f8a72ecf981868a56
# 55eb3f6b468340929a07bd714c27c8ab
# 5df809c65c3140cea156ccd28cf90300
# 48b2df9c1fa64f67b15c5afae3828032
msgid "Delegating Multi Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:20
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:19
# 9c10705ca18444feb1b7c3afec87625c
# 2b0554a1a6d347a3a5186f0970d1dcea
# 886e9a5e56424bbfaad397e3d0704be1
# de6e2f3867724033bed9468dd4fad3b3
# 4958fd8b7a6540408f79852be7c5be1d
# 89c88b588dcf43ad94c9243c163d0b40
msgid "This plugin delegates a PAS interface to some other acl_user folder, typically a \"legacy\" folder that implements some specific authentication functionality. For example, you can delegate the IAuthenticationPlugin interface to a legacy user folder via a Delegating Multi Plugin."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:23
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:21
# ca69cdacae194b86810ab5f97c487bb5
# baddeb5a78fd49a1b70b97467e7f462e
msgid "Domain Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:22
# c92c25f90e20425b91c5a825149c4b76
# 9f1ad2a452614a39b1dc9ae16cc9c3ce
msgid "Authenticates users based on their IP address. Has nothing to do with Windows \"Domain\" Authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:28
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:26
# f32f147b53d24109a5c7e2d2c4c2a6c7
# 5f247963fde04a1c8faf2db84090a3ff
# 229d628b475046e98d2f7871d2146355
msgid "ZODB User Manager"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:30
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:27
# 14842229dc4b4b1ca0a09b604bd95359
# cf4e6619a3ce46ce91773fd79c1dcf07
# 85b9030d8297425fb402545c28166f29
msgid "ZODB-based user storage. Does authentication, enumeration and properties for users and stores its data in the ZODB."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:5
# f7cf85fa381d4cf586c478774d2351d0
msgid "Challenge Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:17
# bfdeaef34cd740ccbd2e9c6538542497
# 2bea91d5da3d49f1b17048388275f85f
# 6ee6357efa3b4599abde5b436f4d334d
# 977afabc29b74bcf86b396a0533c30bf
msgid "Cookie Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:19
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:18
# 52021431da6f44d48bc2f2577b8091fd
# a88f560241e74877a71cc06520c31cd4
# 57ceefcb9df54b738a9e88fe18d86773
# d19b6fd02aad41198f07b07198142126
msgid "This plugin helps manage the details of Cookie Authentication. Allows you to extract credentials from a cookie, update them, reset them, etc."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:25
# 6edb0f32fe054c9185fb15c8f5513467
# ab911277762947b194c726ef2f13b4a1
# 1278bb4f2faa45a99086afb2c8b7c860
msgid "HTTP Basic Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:23
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:26
# b09326f383134f3eaf354d3ea5f909b2
# 59ab579eb14446079786d40e9b0b6c65
# 352df0f180ff441d8fa2cefc3831e850
msgid "Multi-plugin for managing details of HTTP Basic Authentication. Extracts credentials from request and implements the HTTP Auth challenge."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:26
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:29
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:25
# c9a238a6026e41d8b9972023211e84d4
# a8ec82c1a6ed4f38a1d3b8008a9a0d6a
# 09a63c964bc54389aaf534f27bd5fdd5
# 36c3dd4c194b49ad8eca4debf0b98e0e
msgid "Inline Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:26
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:27
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:30
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:26
# f25c8af60347401ebc1777769a33da54
# 11556ad67dfa47398360805a29c918a4
# fdf19db43bf445f2835c1db53a97e2e1
# a285dff3cf3b4e11bafa61cbf621a528
msgid "Manages credentials for inline authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:5
# f1d51ba2a8f64cc0b9cf7ab911325919
msgid "Extraction Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:15
# ecfe2fa1df7e4529a35003ea63493e1e
msgid "The following stock plugins provide the IExtractionPlugin Interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:30
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:33
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:29
# 17ce37411cb04e97ae46c00b81b40c16
# 8afc4ff022c3434c9469b332dbfcf7ce
# a7c49fa4a2de4efea83b5afd07dad405
msgid "Session Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:31
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:34
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:30
# 7f7ec8b75be9413f93f46aadcd32eba5
# 38a1051fc102402db3101afb04aabf37
# 92da2fe8223147de8a598eef935b4258
msgid "Extracts and manages credentials for session authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:34
# 9141cef1be7047a1a96b90eda175def7
msgid "Methods"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:35
# 196a360f67c44b0581f104f970387a2a
msgid "Each plugin implements the following methods:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:37
# 29353ea3fee74389b64fa528dcdbbbaa
msgid "extractCredentials() -- gets credential info from the relevant request, cookie, session, etc."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:38
# 039e9c6cfa9d44179f860367b7fcbb8f
msgid "updateCredentials() -- responds to a change of credentials"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:39
# a5ae95b74a0a40599d018079b394a9e9
msgid "resetCredentials() -- empties out currently stored values"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:41
# 62e4c288319c4bdeb674d156c2fdebd2
msgid "if appropriate, the plugin will also implement a challenge() method which will challenge the user for authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:5
# 65fcfadd3b5f4d08a61a91722af5f71d
msgid "Group_Enumeration Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:17
# 0a1a462da0eb4d83b82073d91025826e
# 472b8e5309dd44ada1f4ac7a51b735b5
msgid "Dynamic Groups Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:18
# e29407119eff4e1a8d6fc888e3a0c848
# 37c9b9f53e1447ed8a87db44ee0bf4d3
msgid "This plugin allows you to create dynamic groups via business rules."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:22
# fbe904f45ba54d6d9cc6ad6f77d50e0b
# 64fbf4abac574807abc3b83402c228c9
msgid "Search Principals Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:23
# f6acb232771a4e299f8f0298c74b78f6
# da226e054a474badb053b28f4453c8ea
msgid "Plugin to delegate enumerateUsers and enumerateGroups requests to another PluggableAuthService"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:25
# 891fe684ea8e438ea95ff890b8eebdb3
# 971dd011760049b68cb483f913985570
msgid "ZODB Group Manager"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:26
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:26
# 9d18a619843547bb825f13b2e767e194
# f9c1e7e241c94b41a8cf80c4cc5e0dc2
msgid "This plugin lets you manage groups and groups of groups in the ZODB."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:5
# 6c6cf59757e847dab33f9a978f896033
msgid "Groups Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:21
# f77d4f28c76d46a8ae5c4ca8b6829c81
msgid "Recursive Groups Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:22
# 154f3b23e1744e2092fcf4cf095e4418
msgid "This plugin will recursively flatten a collection of groups."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/index.rst:3
# 033d5d3f9ca247c6a8275a9beacbb936
msgid "Plugin Types"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/index.rst:9
# 37cc859352554649b41912e20cdced1b
msgid "A list of the different types of plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:5
# 6eab429641a540efabbc9548374497b8
msgid "Properties Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:5
# 6019e74880d14149847542a2fd2683e3
msgid "Reset Credentials Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:5
# 68699c55de924a2f93c077ba8f6b8236
msgid "Role_Assigner Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:25
# 972ede5ed52545aa971c690719c7a47b
# 2f1374d51f2841fd925bb32d1e20ef01
# 06463586a2a7445fa4b1778bc1ec8ac2
msgid "ZODB Role Manager"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:26
# 0eeb05a36bb040b5afedd3407fec7173
# a821e849c9f944f7bc445b6c05a4d41a
# 9dce5a1fcfb54d9aa3b32d22fc2fa419
msgid "Stores role information for users in the ZODB. Handles roles storage, role enumeration, and role assignment."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:5
# 129540e841b5437cad489fadbc891662
msgid "Role_Enumeration Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:5
# 318e498f5e534114a775a11bbae2c302
msgid "Roles Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:5
# e812bb9411244da3948dd889edb813dd
msgid "Update Credentials Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:5
# b0e37fbf036048db9f43560489f6a12c
msgid "User_Adder Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:5
# 6cbca972c6e34ed4a2cffc383273989e
msgid "User_Enumeration Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:3
# 988765ff76c342e8a0d0b648c502f21b
msgid "Properties plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:7
# b9082d22454b4a06a0c0804ba21b389a
msgid "Properties are stored in property sheets: mapping-like objects, such as a standard python dictionary, which contain the properties for a principal. The property sheets are ordered: if a property is present in multiple property sheets only the property in the sheet with the highest priority is visible."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:14
# 31926b95e2d5482c8587c67b93c73ce6
msgid "Property sheets are created by plugins implementing the ``IPropertiesPlugin`` interface. This interface contains only a single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:32
# bdd053cd3ba14931b0151b47a1a39125
msgid "this adds an *email* property to a user which is hardcoded to the user id followed by a company's domain name."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:3
# 186c417c530d4174af7ef845f27b2deb
msgid "Repositories"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:8
# 31949b6b7a7d48ca8cb5d1d76b71f37b
msgid "PAS"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:10
# 43cac18b3a324831b1a302b64ef27e0e
msgid "Generic Zope code base http://svn.zope.org/Products.PluggableAuthService/"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:12
# 2de53a207c5f4a9f80254b8125d7e6ed
msgid "`Plone codebase <https://github.com/plone/Products.PlonePAS/tree/master/README.txt>`_"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:15
# 68014026a2474f0dbb72463b8520ad81
msgid "Plugin repository for PAS"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:17
# 63e0f8fac2c046e39e2bd02167547f0c
msgid "Ready or half-baked plug-ins:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:19
# 2ffd3b94467f467993051498116ff2d3
msgid "http://svn.plone.org/svn/collective/PASPlugins/"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:21
# d28aeb45c2a2482c9e2a4ea1ef0440db
msgid "Lots of examples for dynamic group configuration."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:3
# 382026b3a4e2417ea5135d26eea95c28
msgid "Roles plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:7
# f04b0c0857e04d70a5f65b5160efc314
msgid "The ``IRolesPlugin`` plugins determine the global roles for a principal. Like the other interfaces the ``IRolesPlugin`` interface contains only a single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:32
# c2db8a315af047c2b2ae80f638a0e159
msgid "This gives the current user in Manager role if the site is being accessed from the Zope server itself."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:3
# 0edeeeb2abdb4948bd69816deb5d799e
msgid "The important interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:9
# 108b0280edc44ec3a113de52e885160f
msgid "PAS has a number of interfaces that are important for everyone."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:11
# ddebf63631864b539581a717268601ae
msgid "The most important interfaces that you may want to configure are:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:17
# 610f544bdae64f6482a3b2d40cd82e83
msgid "**Authentication**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:14
# 0893528f0aaf44718f3cf058cbb3c36e
msgid "Authentication plugins are responsible for authenticating a set of credentials. Usually that will mean verifying if a login name and password are correct by comparing them with a user record in a database such as the ZODB or an SQL database."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:22
# 9896429c4ccd4e74960e0074ba1ec1fb
msgid "**Extraction**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:20
# d074729bfb2d4f85ab773b06febe5314
msgid "Extraction plugins determine the credentials for a request. Credentials can take different forms, such as a HTTP cookie, HTTP form data or the user's IP address."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:25
# 1b8659cf58514bb2a766330e887e7ca9
msgid "**Groups**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:25
# 39e0d1d5080640e6805ad81916c5d883
msgid "These plugins determine which group(s) a user (or group) belongs to."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:35
# c09ed4e9aa5b4d09a6718753b896a931
msgid "**Properties**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:28
# 4faf371dde6c41ae80c77f6d8096630d
msgid "Property plugins manage all properties for users. This includes the standard information such as the user's name and email address but can also be any other piece of data that you want to store for a user. Multiple properties plugins can be used in parallel, making it possible for example to use some information from a central system such as active directory while storing data specific to your Plone site in the ZODB."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:37
# 4efd3142e23245aa871a94ddd3f0a59d
msgid "**User Enumeration**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:38
# 0c9cf1a4b9174aba88756b23a6281c26
msgid "User enumeration plugins implement the searching logic for users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:3
# ef866703fd064f85a9114f91647c9406
msgid "The user object"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:9
# ce1a50dcd71e409a8e701ac4c1bebc9c
msgid "In contrast to other user folders, a user in a PAS environment does not have a single source. Various aspects of a user (properties, groups, roles, etc.) are managed by different plugins. To accommodate this, PAS features a user object which provides a single interface to all different aspects."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:16
# fb6f258864ea49c7812b49773b6db03f
msgid "There are two basic user types: a normal user (as defined by the ``IBasicUser`` interface) and a user with member properties (defined by the ``IPropertiedUser`` interface). Since basic users are not used within Plone we will only consider ``IPropertiedUser`` users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:24
# b8e415c08d1744a195a70c10041bf7fe
msgid "``getId()``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:24
# 5e55a5a760414ba0845e4b7ba602035c
msgid "returns the user id. This is a unique identifier for a user."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:27
# 3548e158c493461487ee3d9d358eab80
msgid "``getUserName()``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:27
# 28e865686c3a46fc8e6986f8ef369b67
msgid "Return the login name used by the user to log into the system."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:30
# a313205302fc4bcfb281ae56344871e3
msgid "``getRoles()``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:30
# 204b1212f39c4968b7f11d235f2bb607
msgid "Return the roles assigned to a user \"globally\"."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:33
# 7aba26ef9cc245c9b37ffeee0d96e803
msgid "``getRolesInContext(context)``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:33
# e6ad364572ed48b8b26e7a9e51cf0bec
msgid "Return the roles assigned to the user within a specific context. This includes the global roles as returned by ``getRoles()``."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:3
# 5d21ac944c9843f69a96e88378d185b0
msgid "User creation"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:9
# 384b0c704c824326836fdbbe358c9f09
msgid "PAS uses a multi-phase algorithm to create a user object"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:11
# f85378d15c724ceebe0b738f90141b3e
msgid "An ``IUserFactoryPlugin`` plugin is used to create a new user object."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:12
# 769038de763f4755b329445e23effa99
msgid "All ``IPropertiesPlugin`` plugins are queried to get the property sheets."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:13
# 2339228e6c5b4dd7b77e3067fc00a148
msgid "All ``IGroupsPlugin`` plugins are queried to get the groups."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:14
# 9321004c198946ce8bdf19e7d36954c6
msgid "All ``IRolesPlugin`` plugins are queried to get the global roles."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:3
# 830799af66534f1aac3783331787aec4
msgid "User factory plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:7
# 1d5d79c76d5b4b72ae23f335c75efeac
msgid "PAS supports multiple user types. The two default user types are: ``IBasicUser`` and ``IPropertiesUser``. ``IBasicUser`` is a simple user type which supports a user id, login name, roles and domain restrictions. ``IPropertiedUser`` extends this type and adds user properties."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:13
# b42fc5a0bd64429b8d8d3cc0b3c8b7e4
msgid "A user factory plugin creates a new user instance. PAS will add properties, groups and roles to this instance as part of its user creation process."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:17
# 5ccb745cd81341f093ed702b61078164
msgid "If no user factory plugin is able to create a user, PAS will fall back to creating a standard ``PropertiedUser`` instance."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:20
# 4f90a8831c9643ad98d55eaba939e0ba
msgid "The ``IUserFactoryPlugin`` interface is a simple one containing a single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:28
# 279bcdbf404b45f2a74e98cb6ca91ce4
msgid "The default PAS behaviour is demonstrated by this code::"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:3
# 9c5ad846fbc64870852f28984bc764b7
msgid "How to make portlets availability configurable via adapters"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:7
# ee5ca7553c1740f581550e702800536d
msgid "Sometimes you may want to make specific portlets available only on some pages, like the portal root. This describes, how to implement such a functionality for custom portlets."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:13
# ca06d7dd207442a1b6a9a278d24af1cd
msgid "The interface IPortletRenderer in plone.portlets.interfaces specifies an available property, which is used to decide if an portlet should be shown or not. The Renderer class in plone.app.portlets.base, from which most Renderer classes derive, implements the available property which always returns True. You can override this property in you own Renderer class. And if you use the adapter pattern to calculate the available property, it gets configurable also outside the package, your portlet is defined in."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:22
# ebec052c1e9949838739fa6f40f06f86
msgid "Define a default adapter including the adapter interface"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:42
# fd450e5ca29e48c496ba0bf8d9f81d68
msgid "Register the adapter with zcml. The default adapter is registered as multiadapter to a portlet assignment, a portlet manager and a generic context. The portlet assignment specifies for which portlet type the adapter is registered (in this case IMyPortlet). The portlet manager adapted in this example is IPortletManager - the most generic one which includes IDashBoard, ILeftColumn and IRightColumn. The context in this example is also very generic - any content which can display portlets."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:59
# b8f57a407a9d417a826b377c792cd800
msgid "Use the adapter in your custom portlet:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:83
# 4d0643ce3acc41829d2ef9a08532d6bf
msgid "The first adapter lookup is a named one. So it's possible to register an adapter for one specific portlet only, whereas the second adapter lookup can apply to more than one portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:87
# 57b66774132e4b18afe3424cde2517ec
msgid "The default adapter registered above always returns True. But we can override this behavior in another package, e.g. an Pone integration package (call it \"policy product\")."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:92
# aba7507bcaeb40e59882ebbc03be4102
msgid "Define custom adapters:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:109
# 4ea555707c794d0fbc3e68baf921fa2f
msgid "Register the adapters:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:138
# a81210b468224ed58c7ba92b0bb3ae5e
msgid "Here, if the portlet is registered on ILeftColumn and IRightColumn, it is only shown on ILeftColumn, if the context is the portal root. Otherwise, it's shown on IRightColumn."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/moving.rst:3
# fac815d8b92f45d99eb50b2a39d5efa9
msgid "Moving portlet assignments from one item to another"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/moving.rst:7
# 1357b156037a48ef91abbc369b6c318d
msgid "This gives some example code for moving portlets and their settings."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/moving.rst:11
# b3f0c1fbd96a420c8bd3f302f65538df
msgid "The following method moves portlet assigned from one item to another and copies over it blocking settings as well for good measure."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:3
# 52d3db9e804c4c5f8696e198e369112c
msgid "How to update schemas for already registered portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:7
# 3f54c4dfaff6400095f17013b749b011
msgid "This describes how an Portlet schema can be updated for portlets, which are already registered in the Portal."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:12
# 93b0b46bcf96441c82de302c0b4c7e9b
msgid "Note: David Glick suggested an really easy fix, so this one might become obsolete:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:15
# 8b21f2d8ca5144a788f6a559b3757869
msgid "Add the new attribute as a class attribute of the portlet assignment class. e.g."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:19
# c0b2be973c434895aefbac764820d634
msgid "class Assignment(base.Assignment):"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:19
# b0f8262066294d2f834d2bc87ddbea61
msgid "image_size = 42"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:21
# 8f425cf52c1941abb4bba6cba63b3ff1
msgid "Then existing assignment instances which don't have that attribute will still get them from the class."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:24
# 4eeaa693891c41c28b3f817dcc88ac82
msgid "Once a portlet with a specific schema is registered, the schema cannot easily be modified. Because zope.formlib will try to get the value for the new field in the schema when you visit the edit screen, it will throw an error since there is no attribute for that object yet. So, you have to update every instance of that specific portlet type and add the missing attributes."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:30
# 62484899b5e343d58ae25d97fa59cc67
msgid "And here is how, in a generic way:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:68
# cd684009434d4d59a4a3de80a11e6ad4
msgid "Just pass the function update_portlet_schema any plone content context (e.g. the portlet root object itself), the portlet's schema interface which was modified, the attribute name as string and the value which should set initially. Done."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:73
# d34640f1d0b34343a75cbfc961d1b7e5
msgid "You can find this function among other useful tools in the package `collective.setuphandlertools <http://pypi.python.org/pypi/collective.setuphandlertools>`_ and on `github <https://github.com/collective/collective.setuphandlertools>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:78
# dadb1caca6554acd946282fb2f192025
msgid "A fix, so that zope.formlib accepts schema updates is beeing discussed in the zope mailing list (see `here <http://www.gossamer-threads.com/lists/zope/dev/230105>`_)."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:3
# a6c58980e907435db9e9c7b878826dc5
msgid "Subclassing new portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:7
# 848927c67dac44d6865181cb8a7da3b3
msgid "This how-to briefly explains how to create new portlets based on another existing portlet class. (Mikko Ohtama)"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:14
# 63c0080f925643dc935d8591631bb686
msgid "Portlet subclassing is not trivial due to explict references between portlet engine parts. Here are short instructions minimal steps to needed to a subclass a portlet to another portlet. Instead of modifying the existing portlet, we need to create a new invariant with little changed properties. `See this general briefing about Plone 3.x portlet mechanism. <http://martinaspeli.net/articles/an-introduction-to-plone-portlets>`_ This example modifies the render behavior of static text portlet, by adding a grey backgroundd CSS class for it."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:24
# e588cf58c79f4710a5165651e5a644cf
msgid "Create a portlet interface stub and portlets Python module: To define a new portlet. Refer this in your product ZCML."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:26
# 20eb225012c34231aa327b5e5f53eb73
msgid "Create a new assigment class: To make new portlet assignable through portlet manager"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:28
# d4e2767c4be24ef382f1b5db3f015db9
msgid "Create a new add form class: To make new portlet creatable, returning your custom portlet instances"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:30
# c3ccc5d94d8645b889b1c91dc420d877
msgid "Create a configure.xml ZCML entry: To make Zope to find the new portlet definition"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:32
# 9d84f2c61c4d466887bd9cd31ca6638b
msgid "Create a portlets.xml installer entry: To make the portlet appear in the portlet manager menu"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:35
# cafe9a95595342f8b3988d2f4d50b351
msgid "The portlet interface class is fixed to a portlet when the portlet is created. Thus, if you make changes any of above, you might need to create a new portlet to see the effect - old portlet instances don't necessarily see the changees."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:40
# 2b57e134b2724f1b8eb0c890183538a5
msgid "Our portlet code lies in *myproduct/browser/portlets/misc.py*:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:68
# 0742cb51636446d19ce6d10147786ecf
msgid "*myproduct/browser/portlets/configure.zcml* snippet. Note that we do not need to override all (EditForm) views:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:93
# 3fb7758be95d49eabcc44cd8083c9220
msgid "*myproducts/profiles/default/portlets.xml* quick installer snippet:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:108
# 25b64d90b66e4812902ba218f04c7031
msgid "*myproduct/browser/portlets/grey\\_static.pt*. We have added one new CSS class (portletGrey) which has a CSS class definition defined in ploneCustom.css (through-the-web) or some of the product's CSS files:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:154
# 3059c83d9ea541509d1dc5c4e8b32d2b
msgid "*myproduct/browser/portlets/\\_\\_init\\_\\_.py*. Create empty file to a mark a Python module."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:157
# ca5d7d8302284f16a1e47507ab545b83
msgid "*myproduct/configure.zcml*. Add following snippet:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:3
# a41a8b95d5864fe39c463e3b21a308cd
msgid "Basic plone.portlets architecture"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:7
# 9a69ff6d20a842cfbf2b91ef53478a62
msgid "This section describes the general architecture of a portlet through an example. You can checkout the example code `from the collective <http://svn.plone.org/svn/collective/ploneexample.portlet/trunk/>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:12
# c16c035612ef4330bac86cc866eeec1c
msgid "The use case"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:14
# ff881b85a4534885b5eb665b06322cca
msgid "As an example, we will develop a portlet to display the last *n* (where *n* is a positive integer ;) modified content items to logged-in users, which will be available to add it to any portlet manager (left or right column by default)."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:19
# f41a45d00bae496d891827b3422274b7
msgid "[screenshot follows]"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:22
# b757a53ec6db4aac96159748caac8c80
msgid "The configuration data"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:24
# 4437f161197c4244a2891d102098323b
msgid "When a portlet is first created, there are often customizations which can be made which tailor the portlet's behaviour to meet the user's needs: eg. which content type to display, how many items to list, etc... In our example, we want the person configuring the portlet to be able to specify how many of the most recent items will be displayed inside the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:31
# def03cf7679f4ec68d0c0f6c9602020f
msgid "First, we have to describe the interface schema of the configuration data we want to store using ``zope.schema`` (see `this page <http://wiki.zope.org/zope3/schema.html>`_ for more info on schemas). By convention, this interface derives from ``IPortletDataProvider``, which is just a marker interface. In the package's *interfaces.py* file, type:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:49
# 79072d5023034be3911f1e5d223dd170
msgid "The ``PloneMessageFactory`` makes our code ready to be localized using the Plone i18n machinery."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:52
# c78e7041e3704bafa87fb253c26e61b3
msgid "After defining the configuration schema interface, we implement it in a class called the Assignment class. This is a persistent \"content\" class which stores the persistent configuration data (if any) of the portlet. Even when a portlet is not configurable, it needs to have an Assignment class, because the presence of an Assignment instance in various places is what determines what portlets show up where."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:60
# e3091338b0f34144bffd98eb0e0bd758
msgid "The Assignment class has a ``title`` attribute that is used in the portlet management UI to distinguish different instances of the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:81
# 714b8bed7fea4e2b9b88d7360857d7fd
msgid "The add and edit forms"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:83
# f704395197ad49639f9d7cce53c948bc
msgid "To add the portlet and edit its configuration, we have to define appropiate add and edit forms."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:86
# 8a690751562a4be39308e3598e77c381
msgid "This is typically done using *zope.formlib* and the portlet schema, together with some base form classes to save us from designing the forms template and logic ourselves. If the portlet is not configurable, this can use the special ``base.NullAddForm``, which is just a view that creates the portlet and then redirects back to the portlet management screen."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:93
# 98383fd92bc541e4b5103becbe8ee15a
msgid "For more information about *zope.formlib*, check `this tutorial <../../../tutorial/writing-forms-easily-with-zope-formlib>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:96
# 01a9525a26154097819a396c6b249bec
msgid "The edit form can be omitted if the portlet configuration is not editable."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:115
# ddaa7ef3b87d45978820f9631c2bdef1
msgid "As it can be seen above, the add form must return an Assignment instance of the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:119
# 91716eb0ea7f4cbfa1daf3dad213d8f1
msgid "The portlet presentation"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:121
# b662279f92cd4871b5b831df2109a351
msgid "Next, we define how the portlet will be rendered."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:123
# 6c51bdbadbfa46c58c008a78f5dc39f6
msgid "The Portlet Renderer is the \"view\" of the portlet. This is just a content provider (in the zope.contentprovider sense), in that it has an ``update()`` and a ``render()`` method, which will be called upon the rendering of the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:128
# f1277411e18341cea04fc4ed3a5b203c
msgid "It's a multi-adapter that takes a number of parameters which makes it possible to vary the rendering of the portlet:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:132
# ddb32f09de084c4e81cf112ed212b5cf
msgid "The current content object. Mind the type of content object that's being shown."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:135
# dd01ca5c604a459493352ed68eb4ef31
msgid "The current request. Mind the current theme/browser layer."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:137
# e016d9984d5a42a987fae2e5a8bb2fa9
msgid "The current (full page) view. Mind the current view, and whether or not this is the canonical view of the object (as indicated by the ``IViewView`` marker interface) or a particular view, like the manage-portlets view."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:142
# 1c7b27e4a1314516897c425da3218869
msgid "The portlet manager where this portlet was rendered (for now, think of a portlet manager as a column). Mind where in the page the portlet was rendered."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:148
# 1787de0c069e45f6958a38c63438635e
msgid "data"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:146
# 8d4adc5fa1254ee1ac26fddd195332af
msgid "The portlet data, which is basically an instance of the portlet assignment class. Mind the configuration of the portlet assignment."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:150
# 05bbb9a8e8ce4ea98286fcfe1d17c6ba
msgid "The Renderer base class relieves us from having to remember all these parameters."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:153
# 6fbea19df6dc42a28231ce7d26a291f8
msgid "The Renderer class must have an ``available`` property, which is used to determine whether this portlet should be shown or not. Note you shouldn't include checks for the user id, group or content-type here, since you can perform these assignments later by registering the portlet under a certain category (more on this later)."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:205
# 672f598cf2964e9ba17a74ea2cf9ccf8
msgid "When reading the previous code, note that:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:208
# 90bf8a9d56284bc3b2f847f07d7b9f68
msgid "``plone_portal_state`` and ``plone_tools`` are helper views providing some useful attributes to gather information from."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:210
# 2f4daa7845fe4ea08c3444e8ee7a1fdc
msgid "The ``memoize`` decorator is used here to cache the results of the catalog query to avoid the perfomance hit of re-generating them in each request. See the `plone.memoize doctests <http://dev.plone.org/plone/browser/plone.memoize/trunk/plone/memoize/README.txt>`_ for more information."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:217
# 56e6d0060b394fb8a463cd31efedef72
msgid "Registering the portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:219
# 4ea94e5bc8fb466b978dc628ee071b3a
msgid "A convenient ZCML directive is provided to glue all components of the portlet in the Zope Component Architecture. In the package's *configure.zcml* file (or any other ZCML file included from it), write:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:246
# 41a450e2e82b4aa48ba3740d58bc93dd
msgid "Note you have to define/reference the plone XML namespace for the directive to work. There is also a ``<plone:portletRenderer />`` directive to override the renderer for a particular context/layer/view/manager."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:251
# 1b65c25151a94db2a5ecf096c618cdcb
msgid "You can see the descriptions of all these directives together with their arguments in the `metadirectives.py file of the plone.app.portlets package <http://dev.plone.org/plone/browser/plone.app.portlets/trunk/plone/app/portlets/metadirectives.py>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:255
# fa0800f989364baebb7b988d02b14d95
msgid "This ZCML directive is read at the Zope startup, so to register each class appropiately into the Component Architecture, but you won't be able to add your new portlet yet. You first need to install its portlet type into your Plone site, as described in the section which follows."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:262
# 41cc8ea2c37b4a1a9874368bb3b80670
msgid "Installing the portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:264
# 85f67d9479c34933a7f0f494ba638393
msgid "The components and registration above make a new type of portlet available for installation. To install the portlet type into a particular Plone site, use GenericSetup."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:268
# 83c9ee22eca940e49163019523608a0c
msgid "First, register a new GenericSetup extension profile using a registerProfile ZCML directive:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:302
# 4d6331645ae347f493d707fe47c109fc
msgid "Next, create the folder profiles/default and place a ``portlets.xml`` file inside with the following content:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:322
# 152e3ca26f8347e0ab64bc975c0c1414
msgid "When this is run, it will create a local utility in the Plone site of the ``IPortletType``. This just holds some metadata about the portlet for UI purposes."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:326
# d0ff129c6f584c9e879f094081888514
msgid "``Title`` and ``description`` should be self-explanatory."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:328
# ef111a86c5744a3fbd08fdbd2dce4f18
msgid "The ``addview`` is the name of the view used to add the portlet, which helps the UI to invoke the right form when the user asks to add the portlet. This should match the portlet name."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:332
# bb0f1fdd9f1f4224b7ca48c764ddc122
msgid "``for`` is an interface or list of interfaces that describe the type of portlet managers that this portlet is suitable for. This means that we can install a portlet that's suitable for the dashboard, say, but not for the general columns. In this case, we're making the portlet suitable for the dashboard and for any (either left or right) column. Current portlet manager interfaces include ``IColumn``, ``ILeftColumn``, ``IRightColumn`` and ``IDashboard``, all of them defined inside the plone.app.portlets package."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:342
# d713f02763744f3ab03b0abbe5aa3612
msgid "Again, this is primarily about helping the UI construct appropriate menus."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:3
# d383a3f51d13481fa3ce8d208984a582
msgid "How and where are Portlet Assignments stored?"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:7
# 5c8368051b204aa6a7192d74ff584b3c
msgid "When you choose a portlet to be displayed somewhere, for example, using the interface that appears when you hit the Manage Portlets button, what you're doing is storing a persistent instance of the Portlet Assignment class into your site, together with all its associated configuration data."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:16
# 959b0245cddb416f95f595528e33d537
msgid "Portlet Assignments are stored in what's called an Assignment Mapping. This is an ordered container with a dict-like interface. The keys are unique string names, and the values are instances of the assignment class."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:21
# d9555b43068d4db1b631f42e20722046
msgid "Assignment mappings can be stored in two different kinds of locations depending on their type: site-wide or contextual."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:25
# 8db44d0ce6d64ba79ff3baa3a207b984
msgid "Site-wide"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:27
# 2308e638a4384748af747bc35d53ee64
msgid "Site-wide assigned portlets are shown in the whole site, unless blocked. They're stored in Portlet Managers. Portlet Managers define a column or other area that can be filled with portlets, and are analogous to the viewlet manager for viewlets. They are named persistent local utilites providing the ``IPortletManager`` interface."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:34
# 7d89694e3b33485aa57667850f9b33fc
msgid "You can look up a portlet manager like this:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:40
# 97c422ae9e1c4e25a22ad6304393307f
msgid "By default, there are two standard portlet managers, ``plone.leftcolumn`` and ``plone.rightcolumn``, as well as four portlet managers for the four columns on the dashboard, from ``plone.dashboard1`` to ``plone.dashboard4``. You can create your own in ``portlets.xml`` like this:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:53
# 39bcaca8ded044ca977ae12f87650f40
msgid "The \"type\" is a marker interface that can be used to install particular portlets only for particular types of portlet managers, as explained above. Example: ``plone.app.portlets.interfaces.IDashboard``."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:58
# 0642d558298440f7b381dc397b1c78f5
msgid "Portlets in global categories (site-wide) are stored directly inside the ``IPortletManager`` utility, under a particular category - e.g. \"group\" - a category-specific key - e.g. the group id - and finally a unique portlet id. Putting this together, we could access a particular portlet assignment like this:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:70
# 45beb21a49c147598153e1ce29c91a4c
msgid "Here we look up the left column portlet manager and get the portlet assignment named *recent* assigned to the *Administrators* group."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:73
# 30558f2d23ec4df68ed6b9edf537eac5
msgid "Each of the lookups here has a dict interface, so you can iterate, call ``keys()`` and so on. You can store assignments under any string as category, but the default portlet retriever is only aware of the three site-wide assignment categories defined as constants in *plone.portlet.constants*, ``USER_CATEGORY``, ``GROUP_CATEGORY`` and ``CONTENT_TYPE_CATEGORY``, which should be enough for most use-cases. More on portlet retrievers later."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:82
# a74d7c425de74964901c6f226a366858
msgid "Contextual"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:84
# ab3981c99e44488da7af16a6f97b4876
msgid "Location-specific portlet assignments are stored on annotations on objects providing the ``ILocalPortletAssignable`` marker interface."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:88
# a919621a39274513a4cc5366c2edf0a6
msgid "To get hold of the assignment in this case, we multi-adapt the content object and the manager instance to the ``IPortletAssignment`` interface, like so:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:98
# 4c5131af61b3463b878c9d8300a018af
msgid "There are two functions in plone.app.portlets.utils to make it easier to find the appropriate mapping for a portlet, or to get a portlet assignment directly: ``assignment_mapping_from_key()`` and ``assignment_from_key()``."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:103
# d9b4dde357c446b6b5f80402a1d46317
msgid "We can use GenericSetup to assign portlets to particular portlet managers upon the installation of a product. Read the `Theme Reference Manual`_ for info about how to do that. Read the `Generic Setup tutorial`_ for further info about what's GenericSetup and how it works."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:3
# aa2b401dc2ce46b4ab45594b3e02f2cb
msgid "Order and blacklisting"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:7
# 03eabe9364364182991a964084440d7a
msgid "How to change the order of the different types of portlets (group, user, contextual) inside a portlet manager, and how portlet blocking works."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:12
# e704f29e54d9435391294761bdc3fbea
msgid "!!! Warning: Incomplete Material !!!"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:16
# e422f4ee80274feb9217cd918a61ecd7
msgid "When giving a key for the context assignment, the root of the site can be referred to this way:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:24
# 244b61c791fd458887a4144a7f95b5b6
msgid "Refer to the default 'news' folder in the site (NOTE: Prior to Plone 3.3.5, this required a full path like /Plone/news):"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:31
# deacf3e9b6e3490eb524f0ec53bd84a7
msgid "Delete a portlet assignment using the remove attribute:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:44
# 8d1d7f5889474dc4a394253d5354a5c4
msgid "Remove all the portlet assignments for a specific manager assigned to the news object using the purge attribute:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:56
# 6d905e6c527040718ef17632f8ade001
msgid "Add or move an existing portlet at the top of the column using insert-before:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:70
# 84487e430a9a4cd4b80959f974a560cb
msgid "Add or move an existing portlet before the 'news' portlet:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:83
# 4a76802a0e944ce8b9f577cbd5b819d6
msgid "Pro Tip: Quickest way to find out the name of a portlet: go to @@manage- portlets and hover over the 'X'. The name for that assignment will appear in the URL."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:89
# c964d5fda594417d854cdc190da26608
msgid "Looted from Six Feet Up's QuickReferenceCard_."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:94
# db4d1c6737054d5680bb789cddb9024e
msgid "Blacklisting portlets (from ``plone.app.portlets``'s test suite):"
msgstr ""

#: ../../reference_manuals/old/portlets/index.rst:3
# 545e49e9d47444e6a446ff30198f1f40
msgid "Portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/index.rst:5
# 9084a4198852497eaa8c55f92f2c2b07
msgid "An introduction to the portlets architecture of Plone 3, with practical examples."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:3
# b18afc11f87a4892ace5b571aa6be9d2
msgid "How are portlets rendered?"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:7
# 670b3df562ef4906a9a29deefd0668fc
msgid "The process to find, update and render portlets from the main views is rather complex. Here we describe how does it all work, step by step."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:13
# 6ed20958e55d47fe8995db449623ff5e
msgid "Portlets are always rendered inside a portlet manager. From a template, we can ask a portlet manager to render itself and all its portlets. This is achieved using a *zope.contentprovider* 'provider:' expression. In Plone's *main\\_template*, for example, you will find:"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:23
# b493eb641d034cb8929939b1277b7164
msgid "Behind the scenes, this will look up a local adapter on (context, request, view) with name ``plone.leftcolumn`` (this is just how the provider expression works)."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:27
# fbd986d7e7b647d3a6aa256d87b93173
msgid "As it happens, this local adapter factory was registered when the portlet manager was installed (via ``portlets.xml``), and is a callable that returns an ``IPortletManagerRenderer``. The portlet manager renderer is the \"view\" of the portlet manager."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:32
# 25db80c559f44a3ea008cdc73d495bd4
msgid "The default implementation will simply output each portlet wrapped in a div tag with some helpful attributes to support AJAX via KSS. You can of course register your own portlet manager renderers. A portlet manager renderer is a multi-adapter on (context, request, view, manager). The ``@@manage-portlets`` view, for example, relies on a portlet manager renderer override for this particular view that renders the add/move/delete operations. For most people, the standard renderer will suffice, though."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:41
# 4a09ad55bd75413e9eba10aedbc58b39
msgid "The portlet manager renderer asks an ``IPortletRetriever`` to fetch and order the portlet assignments that it should render. This is a multi-adapter on (context, manager), which means that the fetch algorithm can be overridden either based on the type of content object being viewed, or the particular manager. There are two default implementations - one for \"placeful\" portlet managers (those which know about contextual portlets, such as the standard left/right column ones) and one for \"placeless\" ones that only deal in global categories. This latter retriever is used by the dashboard, which stores its portlets in a global \"user\" category."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:52
# 4c0b1cab56094cbc990ad56a5a065e0a
msgid "The ``IPortletRetriever`` algorithm is reasonably complex, especially when contextual blacklisting/blocking is taken into account (see below). To make it possible to re-use this algorithm across multiple configurations, it is written in terms of an ``IPortletContext``. The context content object will be adapted to this interface. The portlet context provides:"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:60
# 514fc74f44304afba56313f23fe0d795
msgid "A universal identifier for the current context (usually just the physical path) - the ``uid`` property."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:62
# 5f4bfd02f61647cdb55e660e21c6e547
msgid "A way to obtain the parent object of the current context (for acquiring portlets and blacklist information in a placeful retriever) - the ``getParent()`` method."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:65
# d3df42d9e18f4952b5fbcae2536cafb9
msgid "A list of global portlet categories to look up, and the keys to look under (obtainable by using the ``globalPortletCategories()`` method on the adapted context)."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:69
# 900e08ff8d7a47b18a398cdbe0451fad
msgid "The last parameter is best described by an example. Let's say we're logged in as \"testuser\", a member of both the \"Administrators\" and \"Reviewers\" groups, and were looking at a Folder. The return value of ``globalPortletCategories()`` would then be:"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:82
# 78d70debef334b39921f52da6efc10f3
msgid "This informs the retriever that it should first look up any portlets in the current portlet manager in the \"content\\_type\" category under the \"Folder\" key, and then portlets in the \"group\" category under the \"Administators\" and \"Reviewers\" key, and finally portlets in the \"user\" category under the \"testuser\" key, all in that order. Thus, if we wanted to add a new category, or change the order of categories, we could override the ``IPortletContext``, either everywhere or just for one particular type of context."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:91
# e67735f9bf8445fd93a76bdf51fecc99
msgid "Once the ``IPortletRetriever`` has retrieved the assignments that should be shown for the current portlet manager, the portlet manager renderer will look up the portlet renderer for each assignment, ensure that it should indeed be rendered by checking its ``available`` property, and finally call ``update()`` and ``render()``, placing the output in the reponse."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:3
# 755593ea45d3442eb1eccb48dbc679fc
msgid "Testing the portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:7
# e0cfbe031af94ba4bccc5a827269808b
msgid "Ensure everything's working as it should."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:9
# 3dfb653594c04d4fbf8689e389e287df
msgid "If the portlet was registered and installed correctly, it should now show up in the list of portlets available for addition into the type of portlet managers specified in the for argument of the portlet type (``IColumn`` and ``IDashboard`` in our case), under the ``@@manage-portlets`` view (*Manage Portlets* link)."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:15
# 49921e5c5a0e48ccb3a1306abfd80fbe
msgid "However, to ensure everything's working as it should without having to test it through the web, we can write some integration tests. This is recommended practice in the Plone universe. Moreover, once you've understood how the portlet infrastructure and its API work, you will be able to write tests first (you can copy&paste tests from other portlets products) and then start coding the portlet. More info on testing in the `Testing in Plone`_ tutorial."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:23
# d370273190a94ce08c8d0c222c867c46
msgid "Run them using ``bin/instance test -s ploneexample.portlet``"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:3
# 049f414b176f4251985e8b60e34e7278
msgid "Portlet tips (advanced)"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:7
# b434cef53035440e906fe8dea8f9874f
msgid "How to create and subclass portlets in Plone. How to look-up and modify portlets on the site programmatically."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:15
# cc0c634623a14353bec8e0dcd96dbfd0
msgid "Please read `Portlets developer manual <http://developer.plone.org/reference_manuals/old/portlets/architecture.html>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:18
# 466b3e878fb147c187b906061a6c997d
msgid "Creating a portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:20
# e81de3ed41db4521909b4f1b07a693b2
msgid "You need a paster-compatible product skeleton created using *paster create -t plone* or *paster create -t archetypes* commands."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:23
# 08c3ce30998543fa92da093326571c00
msgid "Use project specific paster command *paster addcontent portlet* to create a code skeleton for your new portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:27
# 44e3f72ef5c54c4dae35c84388263d1a
msgid "Subclassing a portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:29
# 699644dc6fd149fca87a90693db62a50
msgid "You can subclass a portlet to create a new portlet type with your enhanced functionality."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:31
# ac2e354e6875471f8cdc2f6fff7323f8
msgid "http://developer.plone.org/reference_manuals/old/portlets/appendix/subclassing.html"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:34
# 361ee736a55d40569246a2d71484f145
msgid "Using z3c.form in portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:36
# b1e3a93f07aa4cd7935224948b548d7d
msgid ":doc:`z3c.form </forms/z3c.form>` is a modern form library for Plone. The out of the box Plone portlets use older *zope.formlib*."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:39
# 56020c99cb45443aac5de38de87a2553
msgid "Discussion related to the matter"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:41
# a5acee0700a84d90b59a3398c2d61f23
msgid "http://stackoverflow.com/questions/5174905/can-i-use-z3c-form-on-plone-portlets-instead-of-zope-formlib"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:44
# 7ec70b35bfba4f07a4a6ff536b42d272
msgid "Overriding portlet rendering"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:46
# c37e4097e0004c56895442394b38dd1d
msgid "Use ``<plone:portletRenderer>`` directive. Specify 1) layer, 2) template and/or 3) class 4) portlet interface."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:49
# c478189cc3f947f8859e4623ed03ad2c
msgid "You need ``<include package=\"\">`` directive for the package whose portlet you are going to override."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:68
# 428d1b5fe9764230a298204caeb0de11
msgid "More information"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:70
# 1685366f93ad4f6989a42f195ee2e5dc
msgid "http://developer.plone.org/reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.html"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:73
# 9fb61219e063452b88a1c57850d3470d
msgid "update() and render()"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:75
# 83209c55c79442059fca54aa50d70bcc
msgid "These methods should honour `zope.contentprovider.interfaces.IContentProvider call contract <http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:78
# 391b0e2a8f7747c5925e410982cdceff
msgid "available property"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:80
# 74b165cd44354ee8b85703abffbb3f55
msgid "The portlet renderer can define available property to hint the portlet manager when the portlet should be rendered."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:82
# 9d32bd956d334c0687a724ee906ee651
msgid "Example ::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:92
# 759413e5c0144f6d941ba0053450888f
msgid "Iterate portlets assigned to the portal root"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:94
# f8e8d1d4038141d596ba2c0f48591243
msgid "Below is an simple example how to print all portlets which have been assigned to the portal root::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:121
# bc33450048e24ce898ce8cee25b7142f
msgid "Looking up a portlet by id"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:123
# 575cdf4954044259906760532ae74438
msgid "Here are some tips how to extract the portlet id data in the portlet renderer to pass around to be consumed elsewhere."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:126
# 54791cb0875e4a63ac7c3772bf1b1318
msgid "portlets.py::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:150
# a693d2b7b17f49d79018bd4714e4ccda
msgid "Then we can re-look-up this portlet and its image field, based on the field name, in the downloader view::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:245
# 360a5f1f611142b58517f50f8c895e58
msgid "See *imageportlet* add-on for the complete example."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:249
# 33a0b4298ce4433fa341a59d02aa1619
msgid "Walking through every portlet on the site"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:251
# db6786d1e97c4852a8fb9fcee7a30fca
msgid "The following code iterates through all portlets assigned directly to content items. This excludes dashboard, group and content type based portlets. Then it prints some info about them and renders them."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:255
# 381ef9354d044e4a95f427cc86aeb448
msgid "Example code::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:325
# c62671b5a65d436e885b74e1fd2d1a91
msgid "For more information about portlet assignments and managers, see"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:327
# 6e13c2ba1d8a48d9a736a1da15bfc0f7
msgid "https://github.com/plone/plone.app.portlets/tree/master/plone/app/portlets/tests/test_mapping.py"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:329
# 411aa81c427140118b2c87f19ce93b06
msgid "https://github.com/plone/plone.app.portlets/tree/master/plone/app/portlets/tests/test_traversal.py"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:331
# d8a2604b5aa24a4f9a8cc6269550ee50
msgid "https://github.com/plone/plone.app.portlets/tree/master/plone/app/portlets/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:333
# d36405dfa20c47e499c09f0998e72d44
msgid "https://github.com/plone/plone.portlets/tree/master/plone/portlets/interfaces.py"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:335
# ddc68b65a94a4cd8842377cc1e688e0b
msgid "http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto (for portlet renderers)"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:338
# 413e750009c94b4cb4a0bc6139efeb36
msgid "Checking if a certain context portlet is active on a page"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:340
# 8fd825899a114604b2c6433aa3a60155
msgid "Iterate through portlet managers by name"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:342
# 8a54f98d55de4a22a2b5416c79a979d8
msgid "Get portlet retriever for the manager"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:344
# e3ba9644c67348cca9abe6fc4ae19fd2
msgid "Get portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:346
# 9742a4ee4c8449689cd7008538808c74
msgid "Check if the portlet assignment provides your particular portlet marker interface"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:375
# fe62d18b390c4289853e1a17ac3c0a09
msgid "Rendering a portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:377
# 35ecef6222c84feea2392feb6eef8d13
msgid "Below is an example how to render a portlet in Plone"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:379
# 9f3524ccb078468998ac294edb2e2c09
msgid "A portlet is assigned to some context in some portlet manager"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:381
# c11197f68db047b799965b23786879f8
msgid "We can dig these assignments up by portlet id (not user visible) or portlet type (portlet assignment interface)"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:383
# 5f2ce0d0ff264d41b8c8c6d741cc27c4
msgid "How to get your portlet HTML::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:455
# a178066043344d888aa2e6ce140697c2
msgid "How to use this code in your own view::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:476
# 0ace7a360aa54694a49224730144710b
msgid "How to call view helper function from page template"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:484
# 6180a548e84746c8b873138aed1aa6e9
msgid "http://blog.mfabrik.com/2011/03/10/how%C2%A0to-render-a-portlet-in-plone/"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:487
# 7efef3cec52044b187afff4ac0fb871e
msgid "Hiding unwanted portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:489
# e9bc8292729145939b6264f1164b51aa
msgid "Example portlets.xml::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:508
# 7f2cd2cc8493456988fdfcaebcf1b7dc
msgid "Portlet na,es can be found in ``plone.app.portlets/configure.zcml``."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:510
# ea4e7bac4e6842d68d134985d3986efc
msgid "More info:"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:512
# a5bde95fe0514b72891fba3bef798660
msgid "http://stackoverflow.com/questions/5897656/disabling-portlet-types-site-wide-in-plone"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:515
# bbcdbab69dad4525b21d5ee64d4d7363
msgid "Disabling right or left columns in a view or template"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:517
# effd0a97ce7841aea94800eb70f438b8
msgid "Sometimes, when you work with custom views and custom templates you need to disable right or left column for portlets."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:520
# 0ff74413d72a443db5306338e755e787
msgid "This is how you do from within a template:"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:528
# 024937af6cdc4a4191481f93adb2a3dd
msgid "And this is how you do it from within a view::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:540
# 653b168d8d70405db4b7df6e4913efdc
msgid "Source: http://stackoverflow.com/questions/5872306/how-can-i-remove-portlets-in-edit-mode-with-plone-4"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:543
# ddd1b4bc14164a31b6ca44434f9cbcd0
msgid "Disabling right or left columns on a context"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:545
# b272d9a3632b4dd0b05060251d4ddb45
msgid "Sometimes you just want to turn off the portlets in a certain context that doesn't have a template or fancy view.  To do this in code do this::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:565
# e84c8c385e344af4afae54f3b4ea882b
msgid "Or just do it using GenericSetup like a sane person:"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:567
# b2a76777a8df4e24a2a9329597ef0792
msgid "http://developer.plone.org/components/genericsetup.html#module-plone.app.portlets.exportimport.portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:569
# 6466759ddef24d728a81d0d64547bfc4
msgid "http://plone.org/products/plone/roadmap/203"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:572
# a21fe3874e574f828edeb2db31847ef5
msgid "Creating a new portlet manager"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:574
# 9fb056fcebb041e99bc579df8affd430
msgid "If you need additional portlet slots at the site. In this example we use ``Products.ContentWellCode`` to provide us some facilities as a dependency."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:578
# 4bf2795dc680421c9446735c54450df1
msgid "Create a viewlet which will handle portlet rendering in a normal page mode. Have several portlet slots, a.k.a. wells, where you can drop in portlets. Wells are rendered horizontally side-by-side and portlets going in from top to bottom."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:583
# 3d4dfce553c849f7a35dfe0cfca1c1b9
msgid "Register this viewlet in a viewlet manager where you wish to show your portlets on the main template"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:586
# f5aadfe99eaa42f59662c1e546225e66
msgid "Have a management view which allows you to shuffle portlets around. This is borrowed from ``Products.ContentWellPortlets``."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:589
# 2a1675cb93ae4a37a5c4311134a28eb7
msgid "Register portlet wells in ``portlets.xml`` - note that one management view can handle several slots as in the example below"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:592
# d06568941e494c0d82e17b34e0a63fba
msgid "The code skeleton works against `this Plone add-on template <https://github.com/miohtama/sane_plone_addon_template>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:594
# 404afd2b01ef4dcdb70b1bef23466d43
msgid "Example portlet manager viewlets.py::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:718
# da3d2a1e673c4ce28aa79682a65ce57f
msgid "Example ZCML bit"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:742
# c291c59044764c0dbf1d8440dbd1d1af
msgid "The page template for the manager ``manage-portlets-colophon.pt`` is the following"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:824
# 70585ff4e2094835982b2a87727f4b69
msgid "Then we have ``portlets-colophon.pt`` page template for the viewlet which renders the portlets and related management link"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:855
# e6e510e11b1a44c4a382ff8b4e9c6dca
msgid "Finally there is ``portlets.xml`` which lists all the portlet managers and associates them with the used interface"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:895
# a3d4f975433e4ff48f255c12dfec43f8
msgid "https://weblion.psu.edu/svn/weblion/weblion/Products.ContentWellPortlets/trunk/Products/ContentWellPortlets/"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:897
# bd5afe6555014921af98f4c4e9158ff6
msgid "http://stackoverflow.com/questions/9766744/dynamic-tal-provider-expressions"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:900
# 1106ae2f04384578a7bf39870611a9c9
msgid "Fixing relative links for static text portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:904
# 0cbc7083213544b981077e354161a3f0
msgid "This should be no longer issue with Plone 4.1 and TinyMCE 1.3+ when using UID links."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:907
# d8c3e05d0b4a4868b261a4f49a34c7dc
msgid "Example how to convert links in all static text portlets::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:951
# 27f076b45e274317bb6128c3a95d6e34
msgid "Other resources and examples"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:953
# d7a7c24b49df4f068c6a921ab0364e4d
msgid "`Static text portlet <https://github.com/plone/plone.portlet.static/tree/master/plone/portlet/static/>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:955
# 001195b3098449e1abee29a5c22981a8
msgid "`Templated portlet <https://svn.plone.org/svn/collective/collective.easytemplate/trunk/collective/easytemplate/browser/portlets/templated.py>`_"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:3
# 47ba0c262fa743ddbc82737df632aebf
msgid "What's a Portlet?"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:7
# 01e0837b348e42488b7acdc7c9874610
msgid "This manual covers what a developer needs to know to create new portlet types or customise existing ones."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:10
# 484f53225ba846ad9441c919e36465b9
msgid "Portlets are UI elements that can be shown in addition to the main content of a page. They usually appear in the left of right columns, but are sometimes also used instead of or below the main content.  They are usually boxes of different kinds, which content editors can add, configure, and set policies for showing."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:16
# 03d28b7eb2ca47578b98fde587938f6b
msgid "(Screenshot)."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:19
# a2f97a3a192941ee95e4dc1c3e65256b
msgid "Differences with viewlets"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:21
# 4dbd67b5c3e94238a1dbe6dd51f534e7
msgid "A portlet is like a viewlet but with persistent configuration (i.e. persistent in the ZODB) and runtime changeable assignments."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:24
# 28342a89c6d44a94a8ff840f0014c25b
msgid "Use a viewlet for:"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:26
# 9cdac2514078452f8d7556a3d7601834
msgid "General content which is always displayed; for example: breadcrumbs, the logo, or the footer. This is not limited to visible elements, but can also include CSS, javascript, etc.  (actually, that's how ``ResourceRegistries`` work)."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:30
# 5417b7bf88d44e6f88e20b4f92cf4de7
msgid "Displaying elements based on the interface provided by the current context."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:33
# 9aa5b61fc63b4850a20ae0ca82ff46b2
msgid "Use a portlet when:"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:35
# 36efde08923e405b9f67373d38e47266
msgid "You need to specify the configuration data for an item; e.g. the number of entries to show."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:37
# 55b2f33f590945c5ac8a48d21570449e
msgid "You want to give the content editors a choice about when and where to display it."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:39
# 3ba6329d9f444400a807a4194a64b558
msgid "You want to display it only from inside a specific folder."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:40
# b076436eafc14367b9a7074665feda23
msgid "You'd like to show it only to some groups or users; e.g. the *Review* portlet is only shown to users who belong to the *Reviewers* group."
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:2
# e9d03d5b40194c17b3f288f0ddfcb8e5
msgid "A brief example"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:6
# a08482a962b248fba3e52f5bcddfab42
msgid "Just so that you know what we're talking about"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:8
# 8688b3b88af9491e9081bfed9ae367f0
msgid "Try to find the bug in the following piece of code:"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:30
# a9301b9240e345c2bee55e74eada14a7
msgid "Found it yet? Did you have to spend more than a few seconds thinking about it? Any developer could have written that code and not seen the problem. Furthermore, the bug is an edge case that you may not have tested using manual/through-the-web testing."
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:35
# ce7eb814012845ccac231ea27748cc6b
msgid "Let us write a test (actually, a doc/unit test) for this code. Don’t worry too much about how this is set up and executed just yet."
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:60
# 704cb5b241fd46468a73b9af9c07b76b
msgid "As it happens, the last test would fail. It would print You are not an employee currently., unless we fixed the code:"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:83
# 8db5a6324ac447e6ac47f2cfb55cdbc6
msgid "The moral of the story?"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:85
# 637195e0158a4a66890ca295591e7dd4
msgid "you rarely catch problems like these with manual testing"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:86
# b71b2c4f3b5042f3825406225109c234
msgid "put the time you waste catching silly bugs and typos into writing tests"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:87
# c37422d8cd6a4d21838121003a6c4b4f
msgid "with decent test coverage, you end up saving lots of time when you refactor"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:2
# c4e11d8f3b4640f3a8cb009efbb6aa34
msgid "Determining the Code Coverage of your Test Suite"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:6
# d6be3ef6b4d549baacf5759ed648a601
msgid "Explanation for how to use the Zope test runner's built in code coverage features to prove the quality of your test suite."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:10
# 7fa6d6081f4f4d11b2bd068d4e76f922
msgid "The better your test suite’s coverage, the lower the likelihood that some modification to your code will break another piece of functionality in some unanticipated way.  But, how do you **know the quality** of your test coverage?  Zope’s test runner comes with several features to help you do just that."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:18
# 0f54c8df682c4254a098f6981e046f70
msgid "But first, let’s say you’ve written some code with a Python conditional like the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:30
# 62703824a0e442349e9a7e22a8684fda
msgid "The comments and function call in the else clause are symbolic of some advanced coding that’s required to handle all odd numbers."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:35
# 6e631c1db48146749ea918d7c9b80b24
msgid "Now, as you’ve no doubt learned while reading this tutorial, testing is important.  But what if for one reason or another, all the test cases you’ve come up with during testing amount to even numbers when you get to the aforementioned block of code. If this were the case, you’d have a big risk of unanticipated code breakage to the way that you handle odd numbers.  This is something that you’d ideally cover in your test suite."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:45
# 346949e39ee145dba97fa0c5e7afaf19
msgid "Discovering the untested sections of your code"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:47
# 6265eee9fa014a60b7b6167ae3e76ab7
msgid "You’ve learned how to run your test suite in this tutorial.  Zope’s test runner accepts an optional parameter called –coverage.  When passed a path to a directory, Zope will generate some high-level output and produce a coverage file for each of the Python modules in your product or package."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:53
# b57b97103a314588b0281eaad2dcf626
msgid "In full, running your test suite with the coverage option enabled looks like:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:60
# 053bb6fb49ca4aa1a3e1c6f63ed202aa
msgid "**Note**: Running your tests with the coverage option enabled takes significantly longer (as in ~10 times or more) than without, so this is something to be done occasionally to gauge your work, rather than each time you run your tests."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:65
# 396c38b7c7bc45d1bebcc67fd61ace64
msgid "At the end of running your test suite, you’ll get some immediate output like the following, which includes lines of code and your coverage percentage:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:83
# 2ed3657437364a539dcf3b5428ce5313
msgid "If all you’re looking for is a quick status report, this should suffice."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:86
# ebdb3843276042c59aeb659352c565c4
msgid "However, if you want to dig deeper, head to the directory you listed in the –coverage option.  **Note:** The files may be preceded with dots, thus requiring an ls -a in order to reach the coverage files."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:90
# 887fccfe81c84cfcbc712828f3fd7f52
msgid "A sample file may look like the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:110
# 4556ed1264de4bd5b04d5c89eef8605d
msgid "It's really just your file with some meaningful data proceeding each line.  Anything with a 1: signifies that your code was at least touched during the running of the test suite.  The higher the number, the more often your code was touched.  Perhaps this is intentional and signifies really good coverage in other cases, it's may be either unavoidable or could even signify that the high level of coverage wouldn't actually be required.  The >>>>>> means that you've missed a line and you should consider coming up with a test scenario or more that will touch the line of code in question.  The number of untested lines divided by total lines gives you your coverage percentage."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:122
# d1668331defd4b9c87922b01c74a38cf
msgid "If what you really want is eye-candy"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:124
# 653a29bd40ec45f4bcf9e073ee6b09db
msgid "If you want pretty graphs to provide for you boss to include in a report or to make a client feel better about the quality of code they are receiving, z3c.coverage takes the contents of the output files and creates pretty summaries.  Get z3c.coverage from subversion via the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:133
# a7bef88b22b949f0bff332317878b150
msgid "Create a directory within your previously created coverage directory.  We call it reports.  Run the coveragereport.py module with the source being you coverage output and the destination, your newly created reports directory.  See the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:142
# f48d06513f114807a6fee8c51b732146
msgid "You should now be able to open $HOME/coverage/reports/all.html within your browser for a pretty output like the one below."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:149
# 5cbaf49c1b884926b20a9eea0d0a7ff0
msgid "With this information available, you can start to make conclusions about how you may work your way towards better coverage of your product."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:2
# 837b47686b62404881e6754a6ac34bd4
msgid "Testing a Zope 3 component with a separate doctest file"
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:6
# 117f63d2cd354abbaeda60c4776fa752
msgid "Sometimes, we may need to perform additional set-up for our tests to run properly."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:8
# b3d7839c41174d60ad598b76f956e620
msgid "In the previous example, we wrote a doctest in a docstring. As tests become more complex or require more involved configuration, it is usually better to separate the actual test into a text file. Sometimes, this can be the README.txt file of a package. This is the approach favoured by Zope 3 components."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:14
# e58c49f6c00c417384052b221a79ee05
msgid "In this example, we will register an adapter that is used in a doctest. This doctest also serves to illustrate how this particular adapter should be used.  This style of test is great when the emphasis is on the documentation as well as the test. Note that we do not load the package’s ZCML in its entirely. Instead, we register the required components explicitly. This means that we retain control over what is executed in the test. We use the zope.component.testing.tearDown method to ensure that our test environment is properly cleaned up."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:23
# 90e12e0ee9924b73860866a502eeb472
msgid "In the example.tests package, we have the following test setup in tests/test\\_zope3\\_doctest.py:"
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:67
# e6f43adb59ad459da4b4a08a87789f6e
msgid "Notice how we use a custom setUp() method to register the custom adapter, and then reference zope.component.testing.tearDown for the tear-down method."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:71
# c0cab15566ae4266a36499aadb924cc7
msgid "This refers to the file zope3.txt, which looks like this:"
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:104
# a0f8bfa5d4394c2c87aa77fbe87e8e52
msgid "To run just this test, we may do:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:2
# d1e8237ae86843d39af87d77a7b246b3
msgid "Telling stories with doctests"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:6
# 5a79d89b85174e59a154dc4347dfe752
msgid "Doctests bring code and test closer together, and makes it easier to describe what a test does, and why."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:8
# 92926e8bb5a34dbd882525e311d427e0
msgid "By their nature, tests should exercise an API and demonstrate how it is used. Thus, for other developers trying to understand how a module or library should be used, tests can be the best form of documentation. Python supports the notion of **doctests**, otherwise known as **executable documentation**."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:14
# c6dc39110c4b416dab5e208807141579
msgid "Doctests look like Python interpreter sessions. They contain plain text (normally in reStructedText, which can be rendered to HTML or PDF easily) as well as **examples**. The idea is to show something that could have been typed in an interpreter session and what the expected outcome should be. In the Zope 3 world, doctests are extremely prevalent and are used for most unit and integration testing."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:21
# 46ca8b92b1314795a3ceb37b9c22186a
msgid "Doctests come in two main flavours: You can write a simple text file, such as a README.txt, that explains your code along with verifiable examples, or you can add doctests for a given method or class into the docstring of that method or class."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:26
# 1068d74c4b674e0b9017f407210fb390
msgid "The full-file approach - sometimes known as **documentation-driven development** - is the most common. This type of test is very well suited for explaining how an API should be used and ensuring that it works as expected at the same time. However, note that these are not technically proper unit tests, because there is no guarantee of isolation between the steps of the “script” that the doctest describes. The docstring version uses the same basic syntax, but each docstring is executed as its own test fixture, guaranteeing full isolation between tests."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:36
# f2c09f5cbc36411b8b0d168775562365
msgid "Here is a trivial example of a doctest. We will learn how to set up such a test shortly."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:75
# e31e788a19c7408abf6eea3f91c702ef
msgid "Each time the doctest runner encounters a line starting with >>>, the prompt of the Python interpreter (i.e. what you get by running python without any arguments in a terminal), it will execute that line of code. If that statement is then immediately followed by a line with the same level of indentation as the >>> that is not a blank line and does not start with >>>, this is taken to be the expected output of the statement. The test runner will compare the output it got by executing the Python statement with the output specified in the doctest, and flag up an error if they don’t match."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:85
# 8607a6af8cff48209f15d05bd74056f5
msgid "Note that *not* writing an output value is equivalent to stating that the method has no output. Thus, this is a failure:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:94
# 3eb3ca3e1bb841d78b1d8539dcd75a85
msgid "The reference to foo on its own will print the value of foo. The correct DocTest would read:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:104
# 4317566ecf0a4780b7358a96cab71e2d
msgid "Notice also the … (ellipsis) element in the expected otuput. These mean “any number of characters” (anologus to a .\\* statement in a regular expression, if you are familiar with those). They are usually convenient shorthand, but they can sometimes be necessary. For example:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:116
# e8969e3cb6cd4201980509148c3c2264
msgid "Here, the ... in the expected output replaces a hexadecimal memory address (0x0x4523a0 on the author's computer at the time of writing), which cannot be predicted in advance. When writing doctests in particular (but also when writing regular unit tests), you need to be careful about values you cannot predict, such as auto-generated ids based on the current time or a random number. The ellipsis operator can help you work around those."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:122
# 5f42c81f6ffa4820bdfd37cf69bf616e
msgid "Do not confuse the ellipsis operator in the expected output with the syntax of using ... underneath a >>> line. This is the standard Python interpreter syntax used to designate statments that run over multiple lines, normally as the result of indentation. You can, for example, write:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:132
# 0347a74f77404ad7a86a834e3a63a62b
msgid "if that is necessary in your test."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:135
# 4e5dc3276ad5406cb699d608379a3685
msgid "Doctest tips and tricks"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:137
# e05b078e654446dfa22b8e403215ff32
msgid "As with all testing, you will get better at doctests over time. Below are a few tips that may help you get started."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:141
# 03da83211ba0471a9a3a244bbf31f79b
msgid "Read the documentation"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:141
# fbcb47afedd24892857800c095c795fe
msgid "doctests have been in Python for a long time. The `doctest module <http://docs.python.org/2/library/doctest.html>`_ comes with more documentation on how they work."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:153
# bea6512aa88f4c55b62fa7680584fa73
msgid "A test is just a bunch of python statements!"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:144
# 236200148470407bb5865e59288c6553
msgid "Never forget this. You can, for example, reference helper methods in your own product, for example, imagine you have a method in Products.MyProduct.tests.utils that has a method setUpSite() to pre-populate your site with a few directories and users. Your doctest could contain:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:157
# 2ca43c9942594251a570b095d3d5de96
msgid "The test suite can perform additional initialisation"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:156
# 9c23a9251dfb4eb29c149306b4b55fce
msgid "A test suite can have setUp() and/or tearDown() handlers that perform additional set-up or clean-up. We will see further examples of this later."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:162
# a427f569ee7247179bd381841b235b6f
msgid "PDB is still your friend"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:160
# 09130889515e4b14b728140ca2fa0ada
msgid "You can put the standard import pdb; pdb.set\\_trace() on a line in doctest. Unfortunately, you can’t step through a doctest line by line, but you can print variables and examine the state of the test fixture."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:173
# 5262b54d06304994a1a256494289f37b
msgid "You can catch exceptions"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:165
# e796c73bba834c2f97fd62a267ccba7e
msgid "If you need to debug a doctest that is throwing an exception, this statement is often useful:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:2
# ac85d51d970e4765b823edbbafc1da54
msgid "Integration doctests using PloneTestCase"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:6
# 8dd8753dda284b219fafe0118af49317
msgid "The PloneTestCase integration test setup can also be used in doctests"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:8
# b664fdb9b5614c47995041b979e66bf1
msgid "The choice of test case classes over doctest is purely one of syntactic preference. We can use the test setup from the previous section (in base.py) in a doctest as well. This type of test is more useful for documenting the integration of your code with Zope/Plone in a narrative fashion."
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:14
# 567022e1f77b473db6287c2cab23abfd
msgid "There is no change to tests/base.py for this type of setup. However, we must be careful to use a test class that derives from FunctionalTestCase, since this performs the initialisation necessary for doctests. The test setup is found in tests/test\\_integration\\_doctest.py:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:58
# 1b9307bfdaf74d03aa300521ec1782f0
msgid "Here, we set ExampleFunctionalTestCase from base.py as the test\\_class, which means that self in the doctest will be the same as self in the test class we saw in the previous section. In particular, we can access variables such as self.portal and self.folder. We also set some common doctest option flags - reporting only the first failure (to avoid overly long error output when an example early on in the doctest fails), normalising whitespace (so that we can use newlines freely) and allowing the ellipsis operator everywhere (as opposed to having to turn it on each time we want to use it). Look at the doctest module documentation for more information."
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:69
# bc7abc1d40c545e4b05e723d91109469
msgid "The test itself, in tests/integration.txt, is written much like the other doctests we have seen:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:104
# 39f7b23af85347ff9594b133f945f370
msgid "To run this test on its own, we would do:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:113
# a5320e920fa24b5d91de50984b73ef04
msgid "Again, we have cut out some of the output from PloneTestCase."
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:3
# b9bf81b6a5164260b5849d1f291465c6
msgid "PloneTestCase tests"
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:7
# 08b2b807c73949c3b15515f279e06190
msgid "This tutorial will explain how to write safer, better code that makes you look more professional. That's right - it's time to write tests, for everything you do. Don't worry, it's not boring or complicated, you just need to learn how."
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:14
# 205650273e9d42a9829e740c264afcd7
msgid "Technologies presented here are for Plone 3.x and older."
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:16
# f319105d6fad4d7da3e50a91acb19d07
msgid "For `up-to-date testing best pratices read about plone.app.testing <http://pypi.python.org/pypi/plone.app.testing>`_."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:6
# 3e46667be65e47c7a20c86cc39ac1483
msgid "What is this thing called testing anyway?"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:8
# 634a5f88517d47589761369ddffc0b0e
msgid "\"I know I should write tests, but …"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:10
# 55556f3e719b4496b307c7ced898c559
msgid "… they take time to write"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:11
# 459685ea5c3146c9a76512c106cc3876
msgid "… I’m a good developer"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:12
# 3cf8833afd8745ae953d6afb94b2ba61
msgid "… my customer / the community does the testing\""
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:14
# ac8dad36e8dc4896b97ae2f35a275fd0
msgid "Sound familiar? No matter how good you think you are, you will make mistakes. Your code will contain bugs and someone will come after you demanding an explanation. Without some methodical way of testing, you are guaranteeing your code with nothing more than guesswork and arrogance. Clicking around the Plone interface for a few minutes before you ship your code off to the customer or user is simply not enough."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:21
# 52dce30ec0e846a19161b205fceaee2e
msgid "Testing is an art, it needs to be built into your development cycle from the very beginning - it is not something you do only after all the other work is finished, it is something you do continuously. Unfortunately, testing often evokes emotions of dread in developers. It’s slow, it’s boring, it’s not what they signed up to do. But the art of testing has evolved beyond that - there is considerable elegance and fun to be found in well-conceived test strategies."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:29
# 5faecdcb0d52462ba9f3a32a891c2ed7
msgid "This tutorial aims to give you the tools you need to write tests and testable software in Plone. If you are writing software for Plone core itself, don’t even think about committing any bug fix or feature without test coverage. If you are writing an add-on product or doing a customisation, holding yourself to the same high standards that the Plone core team do will give you better confidence in your software and will likely save you considerable pain down the road."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:40
# 287d8723403d4ed49ebf487fc187c610
msgid "This tutorial contains several examples of the various types of tests. They are available in the `example.tests <http://dev.plone.org/collective/browser/examples/example.tests/trunk>`_ package, which you can install as a develop egg in a Plone 3 buildout. The examples of running tests use the standard commands for buildouts, since this is the only way that works reliably on Windows (that is, plain zopectl test will not work on Windows)."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:48
# 46747f1458df4a48b9edf9f53a013892
msgid "Take a look at the :doc:`buildout docs </reference_manuals/old/buildout/index>` for more information."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:2
# c37c4d52d959482aaab69d07a66e2e2f
msgid "Running tests"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:6
# e289b022af29498aa16d7e72c8c680a7
msgid "It is not much good writing a test or relying on someone else's tests if you don't know how to run them."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:9
# bfad78f25c4849eaa05334028b8ea8b6
msgid "The easiest way to run tests in Zope is to use zopectl or the equivalent control script."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:16
# 58417f94b0684cdb9a81e5854f9098fd
msgid "This would run all tests in the Products.RichDocument module. If you are using a `buildout <http://www.buildout.org/>`_ with an instance control script called instance, this would be:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:24
# f5da602f30e84bf3aae76e27b13b3025
msgid "Using buildout is probably a good idea - see `the buildout tutorial <http://www.buildout.org/docs/tutorial.html>`_ - not at least because this is the only way that works reliably on Windows. We will use this syntax from now on."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:28
# 2a379353dace469f8efec5a5d41c418e
msgid "To execute a single test or a set of tests matched by regular expression, you can use:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:35
# 8860b6b0555244e5a6f0e073c76b40c9
msgid "This would run tests in files like test\\_setup.py. To run all doctests in README.txt (presuming there was a test suite for this file) you would write:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:43
# 2daf9e0b70a7489b8cf6a3d1c7dd1ecd
msgid "The new test runner also includes a few debugging options. For example:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:49
# cf83384d31ab416894af0cee61a4fd76
msgid "This will stop execution at the first failing test and drop into a PDB post-mortem."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:52
# 1eaf20565daf42029806ab261e2afd29
msgid "To see the other options that are available, run:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:58
# b86654d5046440c491fb37af886d5382
msgid "When the tests you think are relevant all pass, it’s time to run all tests and make sure nothing else broke. (No, we don’t care that you are writing your code in a totally different python module than what those other tests are supposed to test, and that they were all fine and good and all you changed was a docstring. Run the tests when you think you’re done.)"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:65
# 6f39cf71b16b49e283efa9914cda311e
msgid "When tests finish running, you will see a report like:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:74
# 7119195c91d2462db7a28f8431257e5e
msgid "(it may look slightly different, depending on which test runner you are using)"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:77
# 67c24c8dcf9348c2936a4584cb179177
msgid "Rehearse a satisfied sigh as you read the line “OK”, as opposed to seeing a count of failed tests. With time, this will be the little notifier that lets you go to bed, see your friends again or generally get back to real life with an svn commit."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:82
# 7caafb422ede43c599ff629a8e3cc68f
msgid "If you’re not so lucky, you may see:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:90
# b4df764081ef4a67b46fad4b0c4a48ed
msgid "(again, the output may look slightly different depending on your test runner, but the same information should always be there)"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:93
# 0995ffe171b34ffe8452ca940761cb3a
msgid "This means that there were 1 python error and 1 failed test during test execution."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:96
# 56513ef08a1a4a5aac9173168dd59d20
msgid "A python error means that some of your test code, or some code that was called by a test, raised an exception. This is bad, and you should fix it right away."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:100
# ce9f499bed7f4e8db44058977f3220e2
msgid "A failed test means that your test was trying to assert something that turned out not to be true. This could be OK. It could mean you haven't written the code the test is testing yet (well done, you wrote the test first!), or that you don't yet know why it's failing. Sometimes you may be radically refactoring or rewriting parts of your code, and the tests will keep on failing until you're done. Incidentally, this is part of the reason why unit tests are so good - you can do that kind of stuff."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:108
# b93f613aa45d4898b440d123f23e39b0
msgid "It's sometimes (not always - don't try this on Plone core unless you've been told it's OK by the release manager) acceptable to go to bed and check in a failing test if you are not in a position to know how to fix it. At least other developers will be aware of the problem and may be able to fix it."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:2
# cf917d0434554fc6a087689ee43022ae
msgid "Testing examples"
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:6
# 11ec9f1cd2e943abbab0e9865022a052
msgid "Here, we list a few packages and projects that demonstrate good test coverage"
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:8
# 7e129b9a0b2f4a85bcfbd2ed3160a04d
msgid "Testing is best learned by example. It can be very instructive to read through the tests written by other developers and learn what they test, what they don’t test and how they write their tests."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:12
# f8f1706671654cb3a0c703bab1ec30f9
msgid "`example.tests <http://dev.plone.org/collective/browser/examples/example.tests/trunk>`_, which we have already mentioned, contains an example of each of the different types of tests covered in this tutorial. The test setup code is well-commented, with the intention that this package should provide good boilerplate for developers setting up a new project."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:18
# d55f3992e9ed4c74bf040dce23104e06
msgid "`Plone itself <http://dev.plone.org/plone/browser/Plone/trunk/Products/CMFPlone/tests>`_ has more than 1,600 tests at the time of writing. Most of these are integration tests using unit-test syntax with PloneTestCase."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:22
# a76775bc8b034eba9a25ffa800470945
msgid "`RichDocument <http://dev.plone.org/collective/browser/RichDocument/trunk/tests/testSetup.py>`_ has a basic test\\_setup.py integration test. This is a good example of the kind of testing you may want to do to ensure that your package installs cleanly."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:26
# b674e49c6aa04d45bb3c58ef3f250631
msgid "`borg.project <http://dev.plone.org/collective/browser/borg/components/borg.project/trunk>`_ contains a `README.txt <http://dev.plone.org/collective/browser/borg/components/borg.project/trunk/borg/project/README.txt>`_ file with an integration doctest demonstrating how it is used. It has only a single test module, `tests.py <http://dev.plone.org/collective/browser/borg/components/borg.project/trunk/borg/project/tests.py>`_, which performs the same setup as base.py and test\\_integration\\_doctest.py from example.tests."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:32
# f492be77b3f443be8364cc88a479797e
msgid "Many of the tests in the `plone.app.controlpanel <http://dev.plone.org/plone/browser/plone.app.controlpanel/trunk/plone/app/controlpanel/tests>`_ package use basic test-browser functional tests to verify that the Plone control panels work as expected."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:37
# ac6fdc50d90149fab549518cfd6af27b
msgid "Feel free edit or comment on this page if you have more examples to add!"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:2
# 7a0de90c071c48fb9ecaf7d9c7a0a6a7
msgid "Functional and system tests with zope.testbrowser"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:6
# ded452428bc245819f9bd4f5c058d5ec
msgid "Whilst unit tests and doctests verify the correctness of individual methods and modules, functional tests test portions of the application as a whole, often from the point of view of the user, and typically aligned with use cases. System tests, in comparison, test the entire application as a black box."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:11
# 8255df95a29b4e4b8d69ff4accf18f8e
msgid "No developer likes to click around the browser to check if that button that was only supposed to show up in some cases really did show up. Unfortunately, these are also the types of problems that most often suffer from regressions, because templates are difficult (and slow) to test."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:17
# eb85fad326a94088a484eeaa15e91e24
msgid "Zope 3 has an elegant library called zope.testbrowser which lets you write doctests that behave like a real web browser (almost… it cannot yet handle JavaScript, which means that testing dynamic UIs that depend on JavaScript is not possible, although `Selenium <http://seleniumhq.org/>`_ may be a viable alternative here). You can open URLs, click links, fill in form fields and test the HTTP headers, URLs and page contents that are returned from Plone. In fact, you could test any website, not just Zope or Plone ones."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:25
# 09469583fd7b4da28c919246e9e60a3d
msgid "Functional tests are no replacement for unit tests. They test a slice of functionality, typically as the user sees it. Thus, they may not systematically include every aspect of the application. For example, a functional test may check whether a “Delete” button is present, and even that it works as expected, but should not be used to exhaustively test whether the delete operation works in every possible edge case. Where they excel, however, is in testing things like which options appear to which users depending on roles and permissions, or simply to exercise all the various templates used in a given product to make sure they don’t break."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:36
# 595bc1db3d9d493f92d0cd39733adf3b
msgid "Here is an example from the example.tests package. The test setup is in tests/test\\_functional\\_doctest.py:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:82
# 51b0a430003c4f32b64c92f54ea895c4
msgid "This code is actually identical to the test setup for the integration doctest in the previous section. The differences are found in the actual test itself, which uses Products.Five.testbrowser.Browser, a Zope 2 compatibility wrapper around zope.testbrowser.Browser:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:146
# 5776e0b495b44f68b3c2b27ba915ef7b
msgid "All the action happens with the browser object. This simulates a web browser (though as stated above, one that does not support JavaScript), and has a pleasant API for finding form controls and links and clicking on them. The variables browser.url and browser.contents represent what would've been in the URL bar and the rendered view of the page, respectively, and can be examined like any other variable."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:152
# 5b47bfd38b064b038474fbfb4023ec8f
msgid "zope.testbrowser has pretty comprehensive documentation in its README.txt file - which is, of course, a runnable doctest. In brief, the most important methods of the IBrowser interface (and thus the Browser class) are:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:156
# 9e59d6a4ee9a4cea9ac7c4e36d396edf
msgid "open(url)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:157
# 96697fddbd4c46e4b89c09a1d8d2084d
msgid "Open a given URL."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:158
# 4ccf5d11ec164b128ca74d9f2774c6aa
msgid "reload()"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:159
# b6664418f73e4eafab0b0a336caf7b3d
msgid "Reload the current page, much as the Refresh button in your browser would do."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:160
# fc90864a164e4f949fdf7cb4426db051
msgid "goBack(count=1)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:161
# 2a42d18da1cc4675836483542b52384e
msgid "Simulate pressing the Back button count times."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:162
# 43b37836217f4977b2651221c1bfe3c3
msgid "getLink(text=None, url=None, id=None)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:163
# 5dd67dd3dc544cb2a40607cc0237e788
msgid "Get an ILink (which you can then call click() on), either by the text inside the <a> tags, by the URL in the href attribute, or the id of the link."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:165
# bf772962b1c5450cbbd0a089c9786e1f
msgid "getControl(label=None, name=None, index=None)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:165
# 5d6464d857f64219ac7203d46442453a
msgid "Get an IControl, representing a form control, by label (either the value of a submit button or the contents of an associated <label> tag) or form name. The index argument is used to disambiguate if there is more than one control (e.g. index=0 gets the first one). Again, you can call click() on the control object to simulate clicking on it."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:167
# 69f1df71707b42788e2ef42a2b437fa9
msgid "The IBrowser interface also provides some properties that can be used to examine the state of the current page. The most important ones are:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:171
# 1168ff01e9a04068ac585344236646c2
msgid "The full URL to the current page."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:172
# bb007de5bd704af79ddf756c5a63a894
msgid "contents"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:173
# ee8a6547d27a46d9b19c0ac6d35a4953
msgid "The full contents of the current page, as a string (usually containing HTML tags)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:175
# 930ce0a44ea44887b2e255fd6d1e3f46
msgid "headers"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:175
# d4e8d19a5ce14e0388b44be8cd2c56c2
msgid "A dict of HTTP headers"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:177
# 59dc78225a63495c8f2e662be5b21376
msgid "Please refer to the `interfaces`_ and the `README file`_ for details on the other methods and attributes, the interfaces for various types of links and controls, and further examples."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:186
# 1edea28fb47147488054c5fc347384c4
msgid "Debugging functional tests"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:188
# f7d07e2b5ea44467b2135b23cd9bb1b1
msgid "Sometimes you will get errors from Zope resulting from some command executed using the testbrowser. In this case, it can sometimes be difficult to know what the underlying cause is. Two debugging aids exist to make this a bit easier."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:192
# b6c86f33349b48aa81b55fe677adba71
msgid "First of all, make sure you see all errors in full by setting:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:198
# ddb80f22e41d4d6d9728d9893a0d2210
msgid "If handleErrors is True (the default) you will get errors like HTTPError: HTTP Error 404: Not Found or HTTPError: HTTP Error 500: Internal Server Error. Those are probably not very useful to you. Setting handleErrors to False will show the full exceptions Zope (or possibly the HTML rendering of the error page, depending on the type of error)."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:204
# 4465fc04e86d444a81590f7fb8d2f3b2
msgid "Secondly, if you are using PloneTestCase, you can use Plone's error log. At the top of the example, we do:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:210
# f07cff887b7d4ea5b0332b165a1f2ad4
msgid "This means that errors such as NotFound and Unauthorized will be shown in the error log. It may also be useful to enable Verbose Security in zope.conf (see the comments in that file for details). Now, when a line appears that is throwing an error you can't debug, you can do:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:224
# 0f4de36bc8004c78b75909b859a30b1e
msgid "This will print the most recent entry in the error log, and set a PDB break point."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:227
# 6bfc68c966f7429793a2b6a79d486839
msgid "Using a real browser to render the results of your tests"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:229
# 088adff254ce4cd1ab19bb51c5124c15
msgid "Sometimes you would like to see the output of browser.contents in a browser to easily debug what's happening in your functional tests. To do so, place a PDB break point in your tests as described above (import pdb; pdb.set_trace()) and type the following when you get to the PDB prompt while running the tests:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:236
#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:241
# 51101427cf8c446eb4a789c4ac226d46
# d3ac831fff674414892e716fe07ede15
msgid "::"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:238
# 12dfa65bbc884d629644dffb7e22f62f
msgid "This will print a tuple like"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:241
# 8881dee60d97432fa9e012b7ab98ee1b
msgid "('127.0.0.1', 55143)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:243
# 69102825f5da4097853194254bd43c7f
msgid "containing an IP address and port where you can access the same test site that the testbrowser is working with, in a real browser."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:247
# 70f018090ae74dc19e164aff8a49cf61
msgid "Functional tests vs. system tests"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:249
# 6eecca0be8a145c380df3150b4efac4d
msgid "A system test is one which treats the entire system as a black box, interacting with it as a user would. A functional test is more focused on a single \"vertical\" of functionality, typically linked to a particular use case."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:253
# 40cc2672ffee4090bad797cb8d9b06c0
msgid "For a functional test, it may be acceptable to examine the internal state of the portal (using self.portal and the PloneTestCase.FunctionalTestCase class to build a test suite) to provide assertions. A system test, by contrast, makes no such assumptions. Ideally, you should be able to point a zope.testbrowser test at a remote site running a fresh installation of your system, and have the tests pass."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:259
# 7c86598597f44293a14b9ca9eb0d77ca
msgid "Beyond that, the tools used to write a system test are the same. It is only the approach to testing that changes. Whether you need one, or the other, or both, will depend on the level of rigour you need in your tests, and how your system is constructed. In general, though, true system tests are more rare than functional (integration) tests and unit tests."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:2
# 18218f1649aa495db2d4eaeae1a3c504
msgid "Types of tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:6
# 8e6fdbccccd44c529360cad76d49f8dd
msgid "Some terminology you should be familiar with"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:8
# 6022035225274f8f9cde115a9cb761b5
msgid "Broadly speaking, there are four main types of tests:"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:14
# 5948fab47ca545198be81a9268c59146
msgid "Unit tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:11
# d96900d6a76945bd882c1cca5d9c8719
msgid "These are written from the programmer’s perspective. A unit test should test a single method or function in isolation, to ensure that it behaves correctly. For example, testing that a given calculation is performed correctly given a variety of input is a good unit test for that one method."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:23
# 9749ea27a77d42beaceeb2aca9cb1640
msgid "Integration tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:17
# 8484b86237fb48b8a64a690256074a95
msgid "Whereas unit tests try to remove or abstract away as many dependencies as possible to ensure that they are truly only concerned with the method under test, integration tests exercise the integration points between a method or component and the other components it relies on. For example, testing that a method performs some calculation and then correctly stores the result in the ZODB is an integration test in that it tests the integration between that component and the ZODB."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:29
# d5955bf823d1486cac709b62473f439a
msgid "Functional tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:26
# 41bb9ff08a1d404285f2601f42917349
msgid "A functional test is typically demonstrating a use case, exercising a “vertical” of functionality. For example, testing that filling in a form and clicking “Save” then makes the resulting object available for future use, is a functional test for the use case of using that form to create content objects."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:36
# 188115695363482e8c6c6fc12fb97936
msgid "System tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:32
# 77a32407e6514bbeab59ec808007285a
msgid "These are written from the user’s perspective, and treat the system as a black box. A system test may be simulating a user interacting with the system according to expected usage patterns. By their nature, they are typically less systematic than the other types of tests."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:38
# 1511b22da0ef4f3ca2096fd570c99be7
msgid "Furthermore, functional tests may be **white box**, in which case they can make assertions about things like the underlying data storage (but only if this is specified clearly; implementation details should never affect functional tests). Such tests are also called **functional integration tests** (you can see where the lines start to blur, but don’t worry too much about the naming). Alternatively, functional tests can be **black box** in which case they only perceive the system from the point of view of an actor (usually the end user) and make assertions only on what is presented in the (user) interface to that actor. Such tests, also known as **acceptance tests** would not make assumptions about the underlying architecture at all."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:51
# fca84cdcee184a8e96af8b0639bfd1d9
msgid "Tests and documentation"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:53
# e7ead7342f23435eb05e02765e06f77a
msgid "In a post to the Zope 3 mailing list, Jim Fulton explains the importance of tests and documentation, and how they go hand-in-hand:"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:56
# 5cc10fde38bb486a8c366de2352aede7
msgid "One of the important things about this is that most doctests should be written as documentation.  When you write new software components and you need to write tests for the main functionality of your software you need to: - Get your head into the mode of writing documentation. This is very very very important. - You need to document how to use the software.  Include  examples, which are tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:63
# 1a3a2c40ba8e4ad2bbb0503d39f51ce9
msgid "We will learn more about doctests, and how they are used for unit testing and functional testing later. The important thing to note is that good tests often serve as documentation describing how your component is supposed to be used. Thinking about the story they tell is just as important as thinking about the number of input and output states they cover."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:2
# f7f09d88d21e4a1dbc7b2b482da09b6b
msgid "Writing unit tests"
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:6
# 597d2082bc044308b7d1e4b095d4f4d5
msgid "Now that you understand the principle of tests and how to run them, it's time to write some. We will start with simple unit tests using doctest syntax."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:9
# eedbd72e1ce14deea6c927dd180ac93e
msgid "We will start by showing how to create a simple unit test with doctest syntax. There is nothing Zope- or Plone-specific about this test. This type of test is ideal for methods and classes that perform some kind of well-defined operation on primitives or simple objects. The doctest syntax is well-suited for explaining the inputs and outputs. Since the tests are relatively few and/or descriptive, keeping the tests, documentation and code close together makes sense."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:17
# 98efb56cec6c464aa558ac082343e6f3
msgid "Tests are usually found in a tests/ sub-package. In the example.tests package, we have created a file called tests/test\\_simple\\_doctest.py. This sets up a test suite to run doctests in the doc strings in the module example.tests.context. Let’s look at the test setup first:"
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:67
# 7f82f19fc5b842918bbc6fca9b638d92
msgid "There are a lot of comments here, and we show how to use setUp() and tearDown() methods for additional initialisation and clean-up, if necessary. The test runner will call the test\\_suite() method and expect a TestSuite object back. If desired, we could have put multiple test suites referring to multiple modules into the TestSuite that is being returned."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:74
# 4929dad11a6e4de18125677d5c4c73f9
msgid "Here is the actual code under test, in context.py:"
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:110
# 9b9e1f1c7b0847a29fee8b62bccfd2a5
msgid "Here is how we may run the tests from a buildout:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:2
# 44223a6c7bed4c399e4a2b08da9d27c4
msgid "Writing a PloneTestCase unit/integration test"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:6
# 186e4978bbeb4884b885da7536f8d4ca
msgid "Sometimes, we need access to a full-blown Plone instance in order to effectively write tests"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:8
# f35ed4f8c6584cb1a073b5cd88919b4d
msgid "PloneTestCase, which in turn uses ZopeTestCase, is used to set up a full Zope environment, including a Plone instance, for testing. This type of test is very convenient and often necessary because content types, tools and other parts of Plone have hard dependencies on various underlying Zope, CMF and Plone components. It is generally better to write simpler tests, however, both because they provide better isolation (thus testing the component more directly and under better controlled circumstances) and because they execute faster."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:17
# 572bbbf8744f448b804dcd0055f4a784
msgid "PloneTestCase-tests are often referred to as “unit tests”, but in truth they are *integration* tests, since they depend on a “live” Zope instance and thus test the integration between your code and the underlying framework. We can use the PloneTestCase setup to run doctests, as we will see in the next section."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:23
# 9319996163874e32aa4da61bd3d166ca
msgid "Here, however, we will demonstrate how to use unittest.TestCase classes, where each test is a method on a class (with a name beginning with test) This type of test is not as good for documentation, but can be very useful for systematically executing many variations on the same test. Some developers also find this type of test easier to debug, since it is plain Python code which can be stepped through using the debugger."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:30
# 1a62b6c5dee54167be17aa3f21c74473
msgid "In the example.tests package, we have tests/base.py. This does not contain any tests, but performs the necessary configuration to set up the test fixture:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:115
# d0afaebd03c04df18336d0c05430730f
msgid "Notice how we can explicitly install third party products (and egg-based packages which use product semantics) and then tell PloneTestCase to quick-install these into the test fixture site. The test runner will not automatically load all products in the Products.* namespace, nor will it execute ZCML for packages outside Products.* automatically."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:117
# 43447a68784d41d690eb2239fc58e4ae
msgid "The test class which uses this environment is found in tests/test_integration_unit.py:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:192
# 741e153ea4264040914901a076e13ba8
msgid "Here, we have a test suite with one test class - we could have added more classes if necessary. The afterSetUp() and beforeTearDown() methods - if present - are called immediately before and after each test. After a test is run, the transaction is rolled back, causing tests to run in isolation. You only really need explicit teardown if your tests make permantent changes that are not covered by the ZODB transaction machinery."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:198
# 8146ab1b692247689242be41a6ff39e6
msgid "You are free to add whatever helper methods you wish to your unit test class, but any method with a name starting with test will be executed as a test. Tests are usually written to be as concise (not to be confused with \"obfuscated\") as possible."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:202
# d7ba6245c3b44564b4be800743dda39f
msgid "Notice the calls to methods like self.assertEqual() or self.assertTrue(). These are the assertion methods that do the actual testing. If any of these fail, that test is counted as a failure and you'll get an ugly F in your test output."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:206
# 06b328433d614913b829808597de475c
msgid "To run the test, we would do:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:215
# 7ccc825ef2a9482fa282d27a6a3c639a
msgid "There is actually more output than this, as PloneTestCase installs a number of products and processes ZCML."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:218
# 8492109f345d48a8b55f338ba214e9c0
msgid "Rules of thumb"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:220
# c0ee2d5d889d4c748323593277c5edfb
msgid "There are some basic rules of thumb for writing unit tests with PloneTestCase you should be aware of:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:223
# 8988fb057a4f453fae93e571cf7e5ace
msgid "Write test first, don't put it off, and don't be lazy (did we say this enough already?)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:224
# d8659276ca4f494fa08bd39a4b9351fd
msgid "Write one test (i.e. one method) for each thing you want to test"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:225
# e2b41fa7624a44da93d462f1d9e04d37
msgid "Keep related tests together (i.e. in the same test case class)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:226
# 9c63787e3d7e4861be64d1a2bc710786
msgid "Be pragmatic. If you want to test every combination of inputs and outputs you will probably go blue in the face, and the additional tests are unlikely to be of much value. Similarly, if a method is complicated, don't just test the basic case. This comes with experience, but in general, you should test common cases, edge cases and preferably cases in which the method or component is expected to fail (i.e. test that it fails as expected - you still shouldn't get any F's in your test output!)."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:232
# d17b1814d2c04414aa43c568bdafb903
msgid "Keep tests simple. Don't try to be clever, don't over-generalise. When a test fails, you need to easily determine whether it is because the test itself is wrong, or the thing it is testing has a bug."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:237
# 7fe83e70002b441ab511d442dd72e0b7
msgid "Assertion and utility methods in the unit testing framework"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:239
# db02fbaa748d439fb8d7ea01921a1040
msgid "There are quite a few assertion methods, most of which do basically the same thing - check if something is True or False. Having a variety of names allows you to make your tests read the way you want. The list of assertion methods can be found in the Python documentation for unittest.TestCase. The most common ones are:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:244
# 8e2e2b23d1904c8cab874063a8640aeb
msgid "assertTrue(expr)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:245
# 23f85a7dce23418fb127f1f09b1daed2
msgid "Ensure expr is true"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:246
# c56d08b6ff10456ebe006ba3410e16ce
msgid "assertEqual(expr1, expr2)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:247
# 13100c113b2c49f8b359fa746ed44d44
msgid "Ensure expr1 is equal to expr2"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:256
# 2ab3cf554371438b83114cd4808923e0
msgid "assertRaises(exception, callable, …)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:249
# 4194b8416831426da39911da9ad17d38
msgid "Make sure exception is raised by the callable. Note that callable here should be the name of a method or callable object, not an actual call, so you write e.g. self.assertRaises(AttributeError, myObject.myMethod, someParameter). Note lack of () after myMethod. If you included it, you’d get the exception raised in your test method, which is probably not what you want. Instead, the statement above will cause the unit testing framework to call myMethod(someParameter) (you can pass along any parameters you want after the calalble) and check for an AttributeError."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:261
# e6c7f4f4aaff4d3ca587c3084a074f0e
msgid "fail()"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:259
# 0ab6e4aa2da342319d3a8b7e3207b772
msgid "Simply fail. This is useful if a test has not yet been completed, or in an if statement inside a test where you know the test has failed."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:263
# a4562ea249cb4e95b496346fa7e0f4f7
msgid "In addition to the unit testing framework assertion methods, ZopeTestCase and PloneTestCase include some helper methods and variables to help you interact with Zope. It's instructive to read the source code for these two products, but briefly, the key variables you can use in unit tests are:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:266
# d5be5ec43be8497a9b697a431e741b55
msgid "self.portal"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:266
# c5d447ddbeae4f38bc17225648326d97
msgid "The Plone portal the test is executing in"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:269
# 2d7aedf7b7574f0c9fe6471050ab754d
msgid "self.folder"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:269
# f647b94c7e044041b0b6063ffda7aefe
msgid "The member folder of the member you are executing as"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:271
# 4c13f6eb296f4cfc9a6bd04d16956564
msgid "And the key methods are:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:273
# de2f5246f4674d50872a9f441f2e42c3
msgid "self.logout()"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:274
# 7fd7c80a4dd348c78b8ebff2d90522f6
msgid "Log out, i.e. become anonymous"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:275
# 4b70418f23fd4aa7a1e8247007ea6ff4
msgid "self.login()"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:276
# f170d8cc5742449aade975ac906c1464
msgid "Log in again. Pass a username to log in as a different user."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:277
# 4db3e2fa2e2c4dc9aad5cbbbb31076e0
msgid "self.setRoles(roles)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:278
# 912b93cf9c6d49558cd2c28fd23797be
msgid "Pass in a list of roles you want to have. For example, self.setRoles(('Manager',)) lets you be manager for a while. How nice."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:279
# f8e293b7ce4546ee936a6be7c1a89363
msgid "self.setPermissions(permissions)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:280
# f2e1ebf96e554a1b802f05d23474089b
msgid "Similarly, grant a number of permissions to the current user in self.folder."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:282
# 78c2cfb371484dc6ab9d9878059839be
msgid "self.setGroups(groups)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:282
# dbd7846c7082497c9d9c024cb765d47d
msgid "Set which groups the test user is in."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:285
# 93fd275b7ca44dafbf6d1f6e1c2ea615
msgid "Tips & Tricks"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:287
# 7f82b441c27c4241b7cba202c7685908
msgid "Good unit testing comes with experience. It's always useful to read the unit tests of code with which you are fairly familiar, to see how other people unit test. We'll cover a few hints here to get you thinking about how you approach your own tests:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:289
# 8f4a35d58edf4b2eb488a6ec9fa84d10
msgid "Don’t be timid! Python, being a dynamic scripting language, lets you do all kinds of crazy things. You can rip a function right out from the Plone core and replace it with your own implementation in afterSetUp() or a test if that serves your testing purposes."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:293
# 0ccca01f9c1e4e58aa7a4cb2f06299c3
msgid "Similarly, replacing things like the MailHost with dummy implementations may be the only way to test certain features. Look at CMFPlone/tests/dummy.py for some examples of dummy objects."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:296
# d044c2ae45584c42a99ec594e4a0a623
msgid "Use tests to try things out. They are a safe environment. If you need to try something a bit out of the ordinary, writing them in a test is often the easiest way of seeing how something works."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:299
# 403f681dc32e4e2db177fa5c8870e859
msgid "During debugging, you can insert print statements in tests to get traces in your terminal when you execute the tests. Don’t check in code with printing tests, though. :)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:302
# 09d687111e5c42739e13567287f7039d
msgid "Similarly, the python debugger is very valuable inside tests. Putting import pdb; pdb.set\\_trace() inside your test methods lets you step through testing code and step into the code it calls. If you’re not familiar with the python debugger, your life is incomplete."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:2
# c720aaad90bb4bef8bb554cdbd6ac85a
msgid "Using zope.testrecorder to record functional tests"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:6
# 58c5840a4e76453b9455a5eb7afec2df
msgid "The zope.testrecorder product brings us full-circle: functional tests are recorded from within the browser, and saved to a runnable test."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:10
# 28ad0596e1524a079d8c8042d0b14d98
msgid "Functional tests using zope.testbrowser save us from clicking around the browser to regression test UI, but writing them could still be easier. With complex templates, it can sometimes be difficult to find out what actual links and form fields the testbrowser test should be looking for, and what text to use in assertions."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:16
# f9527035c0104a8ea45cd9cfaa00708c
msgid "This is where zope.testrecorder comes in. The theory is that you click around the UI only once, and then render the history of what you did to a runnable testbrowser test. zope.testrecorder can even create `Selenium <http://seleniumhq.org/>`_ tests - an alternative form of functional tests which runs in the browser (i.e. it automates your browser right before your eyes) and thus supports JavaScript, but which cannot be run as part of an automated test run without a browser."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:24
# 1bebbcdc50ff43a6ad8181c5d355b37c
msgid "Installing zope.testrecorder is simple. First, check it out from Zope’s subversion repository:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:33
# ceba09097caa4262b674916931f2601d
msgid "See INSTALL.txt for further instructions, but the easiest way to install it in a Zope 2 instance is just to put it in your Products directory: Copy zope.testrecorder/src/zope/testrecorder as a product into Products/testrecorder and restart Zope. Then, go to the ZMI and add a Test Recorder object in the root of your Zope instance. Call it e.g. test-recorder."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:40
# 9ee42ecbd2cd47a8a0a78f0017fb7d6a
msgid "Presuming you run Zope on localhost:8080, you should now be able to go to http://localhost:8080/test-recorder/index.html. You should see a page something like this:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:48
# 0713cdb8a7a84813921ec321dfcfe8dc
msgid "**NOTE:** Like most things, zope.testrecorder seems to work better in Firefox than in other browsers."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:51
# 9856f17025bb4f5c825f3e312d06a73b
msgid "Now, enter the address of your Plone site (or indeed any web site), e.g. http://localhost:8080/Plone and click Go. You can perform any number of operations, e.g. logging in and clicking around the UI. If you wish to add a comment to your test run, as you would add free text inside a doctest, click the Add comment button. If you wish to verify that some text appears on the page, highlight that text, shift-click on it, and select “Check text appears on page”:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:63
# 820a9134ce87432b9fa944f503499f8b
msgid "Screenshot of text verification"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:65
# f5032041e3cf4b238178354407ea58f6
msgid "When you are done, click Stop recording. You can then choose to render the test as a Python doctest and you will get something like:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:81
# 3ec6f753a19a4d30ae447b88bb74a123
msgid "You can then paste this into a doctest file, and perform any post-processing or make any changes that may be necessary to make the test more generally valid."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:86
# fe233e4c56a4479fb55f012674232e14
msgid "Tips for using zope.testrecorder"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:91
# 7e6e1d64ade048bebc6adc32d7021ceb
msgid "Plan, plan, plan"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:89
# 1a6b78db922d47dd90647f0c23b5560e
msgid "It's best if you have a rough script in front of you before you start recording tests, or you may get lost afterwards. Make good use of the Add comment button to state what you are testing before you test it, so that the final doctest will make sense."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:96
# 8708019a914b4d78a92a517083e05d18
msgid "Careful where you click"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:94
# d57dd6dbdf9b4d3685bd25b695c71f39
msgid "Some parts of the Plone UI are more ephemeral than others. It may not be a good idea to rely on links in the Recent portlet, for example. Think about what operations will provide the most general and valid test. It will save you time in the long run."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:103
# a4b85370c464458ea2af218848f555c1
msgid "Set up your site beforehand"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:99
# df535bdc7dc2425e947fa764dd44721d
msgid "Recall from the section on zope.testbrowser that we set up users and basic site structure with calls to the Python APIs instead of using testbrowser to manipulate the \"site setup\" screents. When using zope.testrecorder you may want to set up the same users with the same user names and passwords, and the same site structure before you start recording to test. Otherwise, you may need to change some of the values of the test."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:111
# 946c7ffc2d6147d5aee986ca228c1c47
msgid "Check the doctest"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:106
# 5a60973605be4d0ca5a0ad748e54ce75
msgid "zope.testrecorder is a time-saving tool. Sometimes, it may end up referring to parts of the page that can't be guaranteed to be consistent (such as randomly generated ids of content objects), and sometimes you may have gone on a detour and ended up with a test that contains irrelevant or duplicate sections. Always fix up your test (and run it!) afterwards, to make sure that the test remains valid for the future - otherwise, you will end up clicking around the UI in anger again before you know it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:3
# 7c47a79ee37341d8a3e0fe7c69ae922b
msgid "The ExtensionClass"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:7
# 63d08e67cbc7486b8cda08cb88dc7791
msgid "What is ``ExtensionClass.Base`` used for?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:12
# b9f8786a034741bdaabc1f9dd8f3b2f2
msgid "What is an ``ExtensionClass``?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:14
# 4024446d5c72457fb540db3dac97aa21
msgid "Before Python 2.2 and \"new-style\" classes, the ``ExtensionClass.ExtensionClass`` metaclass provided features now found in Python itself. Nowadays, it mainly provides three features:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:18
# cb4edb928b004c87bbafd0fb819356f3
msgid "Support for a class initialiser. Classes deriving from ``ExtensionClass.Base`` can define a method ``__class_init__(self)``, which is called when the class is initialised (usually at module import time). Note that ``self`` here is the class object, not an instance of the class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:22
# 3bc0f88a6ca64ddbb89da84925a4405e
msgid "Ensuring that any class that has ``ExtensionClass`` as a ``__metaclass__`` implicitly gets ``ExtensionClass.Base`` as a base class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:24
# 05752d5637ae488ca164433bcdf8d33f
msgid "Providing an ``inheritedAttribute`` method, which acts a lot like ``super()`` and is hence superfluous except for in legacy code."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:27
# a00247bf31a742359e012bc42b33719b
msgid "The base class ``ExtensionClass.Base`` provides the ``__of__`` protocol that is used by acquisition. It is similar to the ``__get__`` hook used in Python descriptors, except that ``__of__`` is called when an implementor is retrieved from an instance as well as from a class. Here is an example:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:62
# e6818a53fd0d475c8181ad50c73ae787
msgid "There is probably little reason to use ``ExtensionClass.Base`` in new code, though when deriving from ``Acquisition.Implicit`` or ``Acquisition.Explicit``, it will be included as a base class of those classes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:67
# 632d09cec01c44d0b90993fb43c77e20
msgid "How does acquisition work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:69
# 5c3fbf46f262426cb44ed04bd295c5f6
msgid "Black magic."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:3
# 66f9e39f1a9f4aec847bc6616cb33d48
msgid "Zope's many hooks"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:7
# 9ea1892dce84414393f66adee4232215
msgid "What hooks does Zope provide for application code?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:9
# 943e410599504c1fb513e1d6b2e9ef2f
msgid "Zope provides many different hooks that can be used to execute code at various times during its lifecycle. The most important ones are outlined below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:15
# ff7c61c4b4ff448d9fc9d951a1e76cfa
msgid "Process lifecycle"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:17
# dcc11f88761143f18a5de1c64fe44cdf
msgid "``zope.processlifetime`` defines three events:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:20
# 783a05ef3509432b9dff1b893c6e3450
msgid "``IDatabaseOpened``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:20
# a3ea22931f704b6d8dc1106ed96a7355
msgid "notified when the main ZODB has been opened, but before the root application object is set."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:23
# 8cde238951e4420b97f39b28a485d002
msgid "``IDatabaseOpenedWithRoot``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:23
# b3023e4bb8c7448d8d0c2590f6c0eec8
msgid "notified later in the startup cycle, when the application root has been set and initalised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:27
# 962b9e0bb9fc49779baf070582fb0823
msgid "``IProcessStarting``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:26
# 95995a1182874b159e144462fe5213e5
msgid "notified when the Zope startup process has completed, but before the Zope server runs (and so can listen to requests)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:30
# 7b7b5d576ab044e09b3a27a8d5282c1b
msgid "ZODB connection lifecycle"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:32
# 9cf6a9223ba84dc69b21195b09fdf9a5
msgid "Functions that should be called just after traversal over the ``ZApplicationWrapper`` as it opens a ZODB connection for the request should be added to the ``App.ZApplication.connection_open_hooks`` list. They are called with a ZODB connection as their sole argument."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:37
# 1f91671db3bb4f88bd6edb9d4bf25488
msgid "The ZODB transaction provides two methods to register hooks |---| ``addBeforeCommitHook()`` and ``addAfterCommitHook()``. These can be passed functions and a (static) set of arguments and will be called just before, and just after, a transaction is committed. The hook function must take at least one argument, a boolean indicating whether the transaction succeeded."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:43
# fe13aaedba614941bc0b37f821706f00
msgid "Use ``transaction.get()`` to get hold of the transaction object. See ``transaction.interfaces.ITransaction`` for more details."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:47
# 177b6842a2bb449095101a18dbf00f7c
msgid "Request lifecycle"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:49
# 7e8dd40d8e0648bc9fec8c886622606b
msgid "Request-scoped items may be protected from garbage collection using ``request._hold()``. If applicable, the item held can implement ``__del__()``, which will be called when the request is destroyed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:53
# 4ae319e2b8b9485b915daae72c01c0e4
msgid "The event ``zope.publisher.events.EndRequestEvent`` is triggered at the end of an event, just before any held items are cleared."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:57
# 5c3c8ea48a8f47d59cc305d60b8c8017
msgid "Publication"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:59
# bc4ab8b7c5674337a7d8333a8f8a3819
msgid "The publisher notifies a number of events, which can be used to hook into various stages of the publication process. These are all defined in the module ``ZPublisher.pubevents``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:63
# 03fa54f69fc84fa2ad1202de287d9419
msgid "When an exception is raised, a view registered for the exception type as context (and a generic request) named ``index.html`` will be rendered as an error message, if it exists."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:68
# f876248593cb43689ea7551efc874892
msgid "Traversal"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:70
# f8850f8527054377818cc1afecba3b11
msgid "If an object has a method ``__bobo_traverse__(self, request, name)``, this will be used during traversal in lieu of attribute or item access. It is expected to return the next item to traverse to given the path segment ``name``. A more modern approach is to register an adapter to ``IPublishTraverse`` although this only applies to publication (URL) traversal, not path traversal."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:76
# af88bbf83dc34e0496cf83582f06d0c5
msgid "The method ``__before_publishing_traverse__(self, object, request)`` can be implemented to be notified when traversal first finds an object. Implemented on a class, the ``self`` and ``object`` parameters will be the same."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:80
# 9ef3f00b27bc4565a33b704bb101f78b
msgid "See also the ``SiteAccess`` package, which implements a through-the-web manageable, generic multi-hook to let any callable be invoked before access through an \"AccessRule\"."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:84
# 81363d4a9125455a8b6ab472eb6c4c3d
msgid "The event ``zope.traversing.interfaces.IBeforeTraverseEvent`` is notified when traversing over something that is a local component site, e.g. the Plone site root."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:88
# d4182b833c7d47ffacee1061062a111e
msgid "The ``__browser_default__`` method can be implemented to specify a \"default page\" (akin to an ``index.html`` in a folder). A more modern way to do this is to register an adapter to ``IBrowserPublisher``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:92
# 087b0b85e80047e79c5f44dc11d092d3
msgid "An adapter to ``ITraversable`` can be used to implement namespace traversal (``.../++<namespace>++name/...``). See above for further details."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:3
# 92d3c0394bc94960b31325001e34f0e9
msgid "Zope 2 internals"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:5
# 2c5c133ea9574c64af01152d3c02e932
msgid "This documentation will attempt to explain some of Zope's internals. It may be useful for debugging purposes, or simply to better understand how Zope works."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:8
# 7b10a8fb643d4650bf0b77bdc8d6af83
msgid "The guide pertains to Zope 2.13."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:10
# 994ae9b826c2445b938f01bb72548bf7
msgid "If you only want to know how to *use* the APIs and features described below, you are probably better served reading the `Zope Developer's Guide <http://docs.zope.org/zope2/zdgbook/>`_."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:3
# e6e16dcd26c54d3cb37ac27045cb469e
msgid "Requests and traversal"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:7
# 240ecd0f2a414334bbe23b3d4bfe9100
msgid "How does Zope handle requests and translate paths to published objects?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:13
# 6f41061d30014ca890c4c3772d7e6d63
msgid "What happens when a request is received?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:15
# dcdefd9eead2467c88011eaa91511eac
msgid "A request is received either via a WSGI pipeline or the Medusa web server. Using Medusa, it first hits ``handle_request()`` in the ``zhttp_handler`` used by ``zhttp_server``, which consumes the request until it has enough to act on. At this point ``continue_request()`` is called. This constructs a ``ZPublisher.HTTPRequest`` from the Medusa ``http_request`` environment and prepares a ``ZServerHTTPResponse``, a subclass of ``ZPublisher``'s ``HTTPResponse``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:23
# 0ae47733f14f4429aac5084f9e8a5615
msgid "The actual request is delegated to a threadpool. In a non-WSGI setup, this is managed by ``ZServer.PubCore.ZRendezvous.ZRendevous`` (note the typo in the module name!). This keeps track of the requests and (skeletal) responses to be processed, and passes them to an instance of a ``ZServer.PubCore.ZServerPublisher`` for handling. ``ZRendevous`` also deals with thread locking."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:30
# 64f4ae74bbfc4553b2b19515c3262066
msgid "The ``ZServerPublisher`` will call either ``ZPublisher.publish_module`` or ``ZPublisher.WSGIPublisher.publish_module``, depending on the deployment mode, with the request and the response. The non-WSGI version also takes a module name to publish, which is ``Zope2``. This is a relic of the Bobo publisher, which could publish other modules with a ``bobo_application`` variable set (recall that this variable was set in the startup phase described above)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:37
# 8f1e1d4451b7443f9468aaa3656611cb
msgid "The remainder of this section will describe the non-WSGI publisher. The WSGI publisher performs the same actions, but deals in WSGI environs and response body iterators."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:41
# dca5bfba035a41aba6265215d179a195
msgid "There are two versions of ``publish_module``, one with profiling and one without. ``publish_module_standard`` (without profiling) performs the following actions:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:45
# cd16f6895d1b457589e6a836dbbfa8a0
msgid "Set the default ZTK skin on the request, by adapting the request to ``IDefaultSkin``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:47
# 08394eef9e6c4e1cb71be7c25ab41f5a
msgid "Call ``publish()``, which does the real publication."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:48
# ed3cf47eca9a4b5eabbafb2e93856eb9
msgid "Handle errors."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:49
# dffd50d980b943b98983d3dc13e99021
msgid "Write the response body to ``stdout``, which is wired up to be the HTTP response stream."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:54
# 91495993a5d445b78ba1d905e06b2164
msgid "The more interesting function is ``publish()``. This starts by calling ``get_module_info()`` to get the information about the published module (which, recall, is almost always going to be ``Zope2``). The results are cached, so this will only do its work once:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:70
# db027a391b174e64ac935a9d78757446
msgid "The returned variables are:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:72
# d137b3da001740fc9374af9803b9e5b7
msgid "``bobo_before``, set via a module level variable ``__bobo_before__``. This is a callable that will be invoked immediately before publication."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:74
# 03e722072f17482092d3e84b6bf3c8cc
msgid "``bobo_after``, set via a module level variable ``__bobo_after__``. This is a callable that will be invoked immediately after publication."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:76
# b80947620a55467eb152511cbb28ae76
msgid "``object`` to publish, which defaults to the module itself, but can be set via the module-level variable ``bobo_application`` (or ``web_objects``)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:78
# 3410d66acc744911beceaf7668bbf22a
msgid "``realm``, set via the module level variable ``__bobo_realm__``, or a global default which can be set the ``ZConfig`` configuration file."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:80
# 20e0911061034f47b57ecc3fccc9eb1b
msgid "``debug_mode``, a boolean set using the module level variable ``__bobo_debug_mode__``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:82
# 8fca7f2b9a60412e8b712bea6b54319d
msgid "``err_hook``, set via the module level variable ``zpublisher_exception_hook``. This is used to handle error responses (more below)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:84
# 89673826d8d04bd8978e34b3a8c6681c
msgid "``validated_hook``, set via the module level variable ``zpublisher_validated_hook``. This is used to initialise a security manager once authentication and authorisation have taken place (more below)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:87
# c5d4d707b16a49e8ac65248f1c25c7cc
msgid "``transactions_manager``, set via the module level variable ``zpublisher_transactions_manager``, but defaulting to the ``DefaultTransactionsManager`` which uses the ``transaction`` API to manage transactions."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:92
# 8aa64d5007434e6691d741d37250ef50
msgid "The publisher then performs the following steps:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:94
# d8b12846eaf0406287300d289ff04f37
msgid "Notify the ``ZPublisher.pubevents.PubStart`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:95
# fd83bf0241c84cfaa02327cd618872e8
msgid "Create a new ``zope.security`` interaction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:96
# 44ab1e9e13d0499285272de764384373
msgid "Call ``processInputs()`` on the request to process request parameters and the request body so that the Zope request object works as advertised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:98
# 818d54ac8f604d278d1e96e30979d1b7
msgid "If the request contains a key ``SUBMIT`` with the value ``cancel`` and a key ``cancel_action`` with a path, a ``Redirect`` exception is raised, which will cause an HTTP 302 redirect to be raised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:101
# a088322f765c4e00b76849a9af8b1e60
msgid "Set ``debug_mode`` and ``realm`` on the response, as returned by ``get_module_info()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:103
# 159ccc148b5d4c4f8faba82315c68ef6
msgid "If ``bobo_before()`` is set, it is called with no arguments."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:104
# 21ec2e5f6bca412e91210621cc733107
msgid "Set the inital value for ``request['PARENTS']`` to be the published object. This will be the ``ZApplicationWrapper`` set during the startup phase."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:107
# 8b996e0b63e748bebbaf4acfbd603520
msgid "Begin a transaction using the ``transactions_manager``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:108
# be48a0dec8a14c44a1c4e24909382f27
msgid "Traverse to the actual object being published (e.g. a view) by calling ``object=request.traverse(path, validated_hook=validated_hook)``, where ``path`` is ``request['PATH_INFO']``. More on traversal below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:111
# c5353c95f6ff46cd9fb9acf49b735f68
msgid "Notify the ``ZPublisher.pubevents.PubAfterTraversal`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:112
# b3362fe9c03f45a5a9813fb26d3ee0d5
msgid "Note the path and authenticated user in the transaction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:113
# 1efd1e8a5ee34271999c7f06f816aed5
msgid "Call the object being pusblished using ``mapply()``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:123
# 436ea7ce607e464884e77270cb7e863d
msgid "The ``ZPublisher.mapply.mapply()`` method is somewhat complicated, but in essence all it does is to call either a published method, or a published instance with a ``__call__()`` method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:127
# 5a9b9540d2c145cab83e93fd9f412e40
msgid "``request.args`` can contain positional arguments supplied in an XML-RPC call, but is usually empty. The ``request`` is passed to act as a dictionary of keyword arguments, which allows request parameters to be turned into method parameters to a published method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:132
# 599c2dda45cd4055879493f90d5b403a
msgid "The other parameters are about policy |---| we call any object (e.g. a method or object with a ``__call__`` method) to resolve it, but we don't publish class objects (which would in effect instantiate them). We do allow binding of ``self`` for methods on objects, and we pass the ``request`` as context for debugging."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:137
# f087767e80c042c3b8670875e86bbbfb
msgid "Set the result of the ``mapply()`` call as the response body. As a marker, the response object itself can be returned from the callable that ``mapply()`` invokes to bypass this behaviour, i.e. if the published object set the response body itself."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:141
# 86b696f0a27b4c8cb1436e4615dbfae6
msgid "Notify the ``ZPublisher.pubevents.PubBeforeCommit`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:142
# 388afd9035334fc98959a8219412d09e
msgid "Commit the transaction using the ``transactions_manager``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:143
# 5b573b2522274af2883101a52db6b19a
msgid "End the ``zope.security`` interaction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:144
# e92daec0b37148e6a92e102eb7160837
msgid "Notify the ``ZPublisher.pubevents.PubSuccess`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:145
# f3bebcc70b6b46289e170c251ad5aa77
msgid "Return the response object, which is then used by the ZServer to write to stdout."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:148
# 3f9f62cd70964de8ba56352d2ad1b9b6
msgid "If an exception happens during this process, the ``err_hook`` is called. This is allowed to raise a ``Retry`` exception. Regardless, the event ``ZPublisher.pubevents.PubBeforeAbort`` is notified before the transaction is aborted, and then ``ZPublisher.pubevents.PubFailure`` is raised after the ``zope.security`` interaction is ended."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:154
# 4e6abcadfaa748f3928f09bf19dea964
msgid "If the request supports retry, it will be retried by cloning it and calling ``publish`` recursively. All HTTP requests support retry, but only up to a limit of ``retry_max_count``, which by default is 3. Retry is mainly used to retry in the case of write-conflict errors."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:159
# 11692be379ab41c6acde56f510082c53
msgid "If there is no error hook installed, a simple abort is encountered, with no retry."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:162
# 089e7c692b334fa6a39234216f3d8657
msgid "The default error hook is an instance of ``Zope2.startup.ZPublisherExceptionHook``. This handles exceptions by performing the following checks:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:166
# 0d615d33901d436585e40176a44ffe32
msgid "``SystemExit`` or ``Redirect`` exceptions are re-raised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:167
# ec8f6c8b88f94464bdcce64a89e00b38
msgid "A ``ConflictError``, which indicates a write-conflict in the ZODB, is turned into a ``Retry`` exception so that request can be retried."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:169
# 750e769ca8674bcfafb62a78e783d6e2
msgid "Other exception are stored in the ``__error_log__`` acquired from the published object, if possible."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:171
# 824fae5ef4c84f2d82c12ce48e766d25
msgid "If a view named ``index.html`` is registered with the exception type as its context, this is resolved and returned as the response."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:173
# 8cc5b3d1f510485ea012a7dec1461071
msgid "If the published object or any of its acquisition parents have a method ``raise_standardErrorMessage()``, this will be called to create an error message instead of using the view approach. This is called with a first argument of whichever object in the acquisition chain has an attribute ``standard_error_message``, as well as the request and traceback information."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:179
# a363006c48404e75b83c05efcb533429
msgid "When handling an exception by returning an error message, the ``ZPublisherExceptionHook`` will call ``response.setStatus()`` with the exception type (class) as an argument. The *name* of the exception class is then used to look up the status code in the ``status_reasons`` dictionary in ``ZPublisher.HTTPResponse``. Hence, raising an exception called ``NotFound`` will automatically set the response code to 404."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:187
# c575656f69b049a48279a3763d7466ec
msgid "How does publication traversal work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:189
# f9216df0f0ad489caf4075648c06bef5
msgid "Traversal is the process during which the path elements of a URL are resolved to an actual object to publish (there is also *path traversal*, used in TAL expressions in page templates, which is similar, but implemented differently |---| see below)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:194
# 96861a1ca8714ec6ae7c3626ed2e7689
msgid "Traversal is invoked during object publication, which calls ``request.traverse()`` with the path from the request (the ``PATH_INFO`` CGI variable). This method is inordinately complicated, mostly because it caters for a lot of edge cases. The basic idea is pretty simple, though: each path element represents an item to traverse to, from the preceding object (its parent). Traversal can mean dictionary-like access (``__getitem__``), attribute-like access (``__getattr__``), or one of a number of different hooks for overiding or extending traversal. Once the final element on the path is found, the user's access to it is validated, before it is returned to be passed to ``mapply()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:204
# 790833eece9b4131a3576e2457afa957
msgid "Here are the gory details:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:206
# e673137b45f94a35ae97b5a5bb4f58f9
msgid "Clean up the path up by stripping leading and trailing slashes, explicitly disallowing access to things like ``REQUEST``, ``aq_base`` and ``aq_self``, and resolving ``.`` or ``..`` elements as in filesystem paths."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:209
# 9df76167f0ea4074950451623ac03ae6
msgid "Check if the top-level object (the application root) has a ``__bobo_traverse__`` method (it almost certainly will |---| as shown above, there is a wrapper around the application root that implements this method to open and close the ZODB connection upon traversal). If so, call it to obtain a new top level object (which will be the real Zope application root in the ZODB)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:214
# 3223ed4a8fd94213953c12bea254ad9e
msgid "Aquisition-wrap the top-level object in a ``RequestContainer``. This is the fake root object that makes it possible to acquire the attribute ``REQUEST`` from any traversed-to context."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:217
# fe4f3d645594456b8baad5d7508e90e4
msgid "Record the request variable ``ACTUAL_URL``, which is the inbound URL plus the original path. Hence, this variable provides access to the URL as the user saw it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:220
# 3672c8eecb51468399411aec35321921
msgid "Set up (and later, pop from) the request variable ``TraversalRequestNameStack``. This is a stack of path elements still to be processed. Traversal hooks sometimes use this to look ahead at the path elements that have not been traversed to and, in some cases, modify the stack to trick traversal into going somewhere other than what the inbound path specified."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:226
# 2b3fb98aa9bd47bbae8b8fc3f51af49d
msgid "In a loop, process the traversal name stack:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:228
# db0b2a18655b4ba0b246f6c5e13618fa
msgid "Check if the current object (initially the application root) has a method ``__before_publishing_traverse__``. If so, call it with the request as an argument. This hook is used by many parts of Zope, CMF and Plone to support things like content object method aliases, setting the CMF skin from the request, or making the ``portal_factory`` tool work. This method cannot easily change the traversal path, except by modifying ``request['TraversalRequestNameStack']``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:235
# 24c4a28903184c67a5d080e8366311ac
msgid "If there are more elements in the path, pop the next element."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:236
# f88339f1ea1e417e94af9cd4427602fd
msgid "Append this to the variable ``request['URL']``, which contains the traversal URL. Various traversal tricks may mean this is not quite the same as what the user sees in their address bar, but it should be a valid, traversable URL."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:239
# 9b282a3314a247c284414f86886504d1
msgid "Attempt to traverse to the next object using the name popped from the path stack. This takes place in the ``traverseName()`` method of the request:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:242
# 396e8e8ccb9b4e4181137eae79af33be
msgid "If the name starts with a ``+`` or an ``@``, parse it as a traversal namespace. (A name starting with an ``@`` is taken as a shorthand for ``++view++<name>``, i.e. an entry in the ``++view++`` traversal namespace. Other namespaces include ``++skin++`` and ``++etc++``.) If a traversal namespace is found, attempt to look up an adapter from the current traversal object and the request to ``zope.traversing.interfaces.ITraversable`` with a name matching the traversal namespace (e.g. ``view``). Then call its ``traverse()`` method with the name of the next entry on the traversal stack as an argument. This is expected to return an object to traverse to next. If this succeeds, acquisition-wrap the returned object in the parent object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:254
# 5c51e3bc37c649a3b83b66f5867b1c8e
msgid "**Note**: As this implies, objects returned from the ``traverse()`` method of an ``ITraversable`` adapter are *not* expected to be acquisition-wrapped. This is in contrast to objects returned by ``__bobo_traverse__()``, ``__getitem__()``, ``__getattr__()``, or a custom ``IPublishTraverse`` adapter (see below), which *are* expected to be wrapped."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:261
# 263c8a20caac40bd8bcc62bce600bfc9
msgid "If there is no namespace traversal adapter, find an ``IPublishTraverse`` object in one of three places:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:264
# 735a069b100b48eab30c505017984525
msgid "If the current traversal object implements it directly, use that;"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:265
# d36f306595ea48f499009fcee05bf833
msgid "if there is an adapter from the current object and the request to ``IPublishTraverse``, use that; or,"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:267
# d370a630c80c429dbf8cefb542b7bb36
msgid "fall back to the ``DefaultPublishTraverse`` implementation found in ``ZPublisher.BaseRequest``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:270
# 3f3fe388b07e4b16b93e269379777824
msgid "Then call the ``publishTraverse()`` method to find an object to traverse to and return that (without acquisition-wrapping it)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:274
# 6ba6c6a54af74a55bad860b6aec2a849
msgid "Implementing ``IPublishTraverse`` is a common way to allow further traversal from a view, with paths like ``.../@@foo/some/path``, where the ``@@foo`` view either implements or is adaptable to ``IPublishTraverse``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:279
# a133981790ad4023bb2c7d1ec1a515fa
msgid "``DefaultPublishTraverse`` is used in most cases, either directly or as a fallback from custom implementations. It works like this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:282
# e529994c491644cb966c553879a67231
msgid "If the name starts with an underscore, raise a ``Forbidden`` exception"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:283
# 02998a36cddc4e0da324fbad1b820b64
msgid "If the object has a ``__bobo_traverse__`` method, call it with the request and the name of the next entry on the traversal stack as arguments. It may return either an object, or a tuple of objects. In the latter case, amend the request parents list as if traversal had happened over all the elements in the tuple except the last one, and treat that as the next object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:289
# 9d713c535fe04893b0a10f2899990df6
msgid "If the ``__bobo_traverse__`` call fails by raising an ``AttributeError``, ``KeyError`` or ``NotFound`` exception, attempt to look up a view with the traversal name (which would have been given without the explicit ``@@`` prefix). If this succeeds, set the status code to 200 (the preceding failure may have set it to 404), acquisition-wrap the view if applicable, and return it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:295
# a4b0706e8152450580c57ca4e7e5db08
msgid "If there was no ``__bobo_traverse__``, or if it raised the special exception ``ZPublisher.interfaces.UseTraversalDefault``, try the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:299
# 3e251bdc98cf468290cf871a6e39e75e
msgid "Attempt to look up the name as an attribute of the current object, using ``aq_base`` (i.e. explicitly not acquiring from parents of the current object). If this succeeds, return the attribute, which is expected to be acquisition-wrapped if applicable (i.e. the parent object extends ``Acquisition.Implicit`` or ``Acquisition.Explicit``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:305
# 78461c78bfa94252848c6d35fd6b4e36
msgid "Next, try to look up a view using the same semantics as above"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:306
# 1828335c9e0d442bb1cd13209dea04bf
msgid "Next, try ``getattr()`` without the ``aq_base`` check, i.e. allowing acquired attributes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:308
# 1f886208f0f34890a63d05996d834e98
msgid "Next, try ``__getitem__()`` (dictionary-like) access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:309
# ad3bf567799d487d8a07acfa27fd9475
msgid "If that fails, raise a ``KeyError`` to indicate the object could not be found (this is later turned into a 404 response)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:312
# 16eb8851c9a24e9aa42f8b79586b157a
msgid "If we now have a sub-object, check that it has a docstring. If it does not, raise a ``Forbidden`` exception."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:315
# bc48e855fe3d40cc8254c3dcd2f79bc5
msgid "The requirement for a docstring is an ancient and primitive security restriction, since Zope can be used to publish all kinds of Python objects. It is mostly a nuisance these days, but note that views and custom ``ITraversable`` and ``IPublishTraverse`` traversal do not have this restriction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:320
# 852b35e3a65940d9bfcd4edd357e0fee
msgid "Next, raise a ``Forbidden`` exception if traversal resolved a primitive or built-in list, tuple, set or dict |---| these are not directly traversable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:323
# 388a035bd2c84ba48fcaaed6d3cba0f6
msgid "Finally, return the object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:324
# d769beb2de5e4a24bb4440b9a90ef8aa
msgid "If a ``KeyError``, ``AttributeError`` or ``NotFound`` exception is raised during name resolution, return a 404 response by raising an exception. Similarly, if a ``Forbidden`` exception is raised, set and return a 403 response."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:328
# 2c88dd726aea478b90204d9ca182f88b
msgid "Once the end of the path is reached, we have the most specific item mentioned in the (possibly mutated) path. However, this may choose to delegate to another object (usually a subobject) through a mechanism known as \"browser default\", which is similar to the way web servers often serve an ``index.html`` file by default when traversing to a folder."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:334
# 0671c82003c54011b74b5d889dc84425
msgid "A browser publisher is described by the interface ``IBrowserPublisher``, which is a sub-interface of ``IPublishTraverse`` and is implemented by the ``DefaultPublishTraverse`` class. Again, the ``IBrowserPublisher`` for the traversed-to object is found in one of three ways: * the object may implement it itself; or * it may be adaptable, with the request, to this interface; or * the fallback ``DefaultPublishTraverse`` may be used. The ``browserDefault()`` method on the ``IBrowserPublisher`` is then called with the request as an argument."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:344
# dc9a1348750347fe847fd1c997db06b5
msgid "The return value from ``browserDefault()`` is a tuple of a parent object (usually the most recently traversed-to object, i.e. ``self.context`` in the adapter) and a tuple of further names to traverse to from this parent."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:348
# 000dafad2bcb44738b00bc074ed6662f
msgid "The default implementation in ``DefaultPublishTraverse`` does this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:350
# 52f8a04ef485452e9f7ad19a92aa48cb
msgid "If the object has a method ``__browser_default__()``, delegate to this."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:351
# 7bb1c59323d845c89317a68246027d1b
msgid "If an ``IDefaultViewName`` has been registered for the context in ZCML, look up and use this. This is deprecated, however."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:353
# 97b4e58d57184016a95045ac3d4b4530
msgid "Otherwise, return ``self.context, ()``, i.e. no further traversal required."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:356
# 4d5d5a3077454c338b472dd49a6cfa21
msgid "If a further path is returned and it has more than one element, add its elements to the ``TraversalRequestNameStack`` and continue traversal as if these elements had been part of the original path all along."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:359
# d5e1a48205dc48fcb3f0c0dee00138e6
msgid "If there is only one element in the further path returned by ``browserDefault()``, use this as the next entry name and continue traversal to this."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:362
# 8876ec35148a438a9aa64993a6cd2f35
msgid "If no further path is used, fall back on the default method name ``index_html()`` (applicable for HTTP ``GET`` and ``POST`` requests |---| there is special handling of other HTTP verbs for WebDAV that we won't go into here) and continue traversal to this."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:366
# 1d38da8c299e40af8b35e6868ac9bd7a
msgid "If there is no ``index_html()`` method, use the traversed-to object itself as the final entry, so break out of the traversal loop. We always end up here eventually: if the browser default element or ``index_html()`` method is the last item we traverse to, eventually we reach something publishable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:371
# 7d39af13ba744a3a98de9a1285a90137
msgid "This object will most likely be called (through ``mapply()``), so we ensure the roles used in security checks are obtained from the ``__call__()`` method of the traversed-to object (note: function and method objects also have a ``__call__()`` in Python)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:375
# 2b559db4616b4931af407ba4753a030f
msgid "Once we have reached the end of the traversal stack (phew!), we make sure the ``parents`` list is in the right order (it is built in reverse order), even if there was a failure. Hence, ``request['PARENTS']`` is always a useful indicator of what objects have been traversed over, with the last item being the special request container and the penultimate item being the application root."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:381
# 4b786b6c8133483f9a206ac1ea09a4e9
msgid "We then set ``request['PUBLISHED']`` to be the published callable. Note that this is usually a view or page template, though for content types like ``File`` or ``Image`` it is the ``index_html()`` method of the content object itself."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:385
# 186772df96054369ad90732d22e72a3f
msgid "Next, we validate that the current user has sufficient permissions to call the published object. If not, a 403 response is returned by calling ``response.unauthorized()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:389
# b2c89229715340c2b6403d4fb6d877ed
msgid "The authentication works as follows:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:391
# c04929cee7a4416d85fdc17c44c0f5fb
msgid "The roles required to access the traversed-to object are fetched by calling ``getRoles()``, first on the application root, and, if applicable, on the ``__call__()`` method of the traversed-to object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:394
# 007eaa77b9ed46fea3f85820834de2c8
msgid "A user folder (i.e. ``acl_users``) is obtained by looking for the special attribute ``__allow_groups__`` on the published object or one of its parents. This attribute is set by user folders on their parent container when they are added."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:398
# 4fa058191fdc4be583bc7adfadc67f40
msgid "The ``validate()`` method of the user folder is called (there is a fallback called ``old_validate()``, used if there is no user folder, but that should never happen in a modern Zope installation). This either returns a user object or ``None``, if the user is not found in this user folder, or there is a user, but the user cannot be authorised by this user folder."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:403
# 9d714d52b0ce4854b10d9e7079cd694f
msgid "If ``None`` is returned, the search continues up the list of traversal parents until a suitable user folder is found. If no such user folder is found, an ``Unauthorized`` exception is raised, unless there are no security declarations on the context."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:407
# bc1644f0f6274dd288c1f83c447478af
msgid "If a user with permissions is found, and the ``validated_hook`` is set (found via ``get_module_info()`` as described above), it is called with the request and user as arguments. The standard ``validated_hook`` calls ``newSecurityManager()`` with the user, which sets the security context for the remainder of the request."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:412
# 1c12bb752ad342c1a0677312257b6f58
msgid "The user is then saved in the request variable ``AUTHENTICATED_USER``. The true traversal path is saved in the request variable ``AUTHENTICATION_PATH``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:416
# 69b63406f994485ebe04ff2470b915cf
msgid "Finally, if any post-traverse functions have been registered (by using the ``post_traverse()`` method of the request to register functions and optional static arguments), they are called in the order they were registered. If any post-traverse function returns a value other than ``None``, no further post-traverse functions are called, and the return value is used as the return value of the ``traverse()`` function, discarding the actual object that was traversed to and security checked."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:425
# 4ce3ce8e77e74b0fa76c3b6592ea89c4
msgid "How does *path* traversal work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:427
# dc171308f6d44032827e4c03cf03d1f3
msgid "Path traversal is invoked when using path expressions in page templates or action expressions (e.g. ``context/Title``). It may be invoked explicitly in code using the methods ``restrictedTraverse()`` (which performs security checks) or ``unrestrictedTraverse()`` (which does not), defined in ``OFS.Traversable.Traversable`` and mixed into most persistent items in Zope. This is semantically similar to publication (URL) traversal as described above, but is not identical |---| see below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:435
# 4129f607e31747bcaf931c6d9921226b
msgid "All the logic is in the ``unrestrictedTraverse()`` method, which takes an optional argument ``restricted`` that is set to ``True`` when called via ``restrictedTraverse()``. It takes a ``path`` string or element list as an argument, and optionally a default to return if traversal fails. If no default is specified, an exception will be raised if traversal fails. This may either be an ``AttributeError``, ``KeyError`` or ``NotFound`` exception, depending on what type of traversal failed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:443
# 4bbd07014b834606b82b86086812aa27
msgid "If ``restricted`` is ``True``, ``unrestrictedTraverse()`` will perform a security check using ``getSecurityManager().validate()`` for every step of traversal. This is different to URL traversal, which only validates at the end of traversal."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:448
# 566cdbae98c44360b7bc8ff4adfa3a63
msgid "The implementation does the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:450
# c458e1f72e6b4f50a8527c28b2af2927
msgid "Strip any trailing slash from the ``path``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:451
# b86ae1bc50844f709f72261b2ff88726
msgid "If the path starts with a slash, begin traversal from the physical application root. Otherwise, start from ``self``. If performing restricted traversal from the application root, validate access to it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:454
# accdb49a8288444b9aa4c7a4ebf82d02
msgid "For each slash-separated name element of the path:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:456
# f53257991b2c4da89cd1b7ac7421020e
msgid "If the name starts with an underscore, raise a ``zExceptions.NotFound`` exception |---| traversal to names starting with an underscore is never allowed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:458
# e6481dd05b5f40ab9ed99318f460af27
msgid "If the name is ``..``, get the acqusition parent of the current traversal object and continue traversal from here after validating access if applicable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:461
# 47a026ba930a4bd2a37e9901b959777a
msgid "Otherwise, if the name starts with a ``+`` or ``@``, perform traversal namespace lookup as described for publication traversal above. If this throws a ``LocationError``, fail with an ``AttributeError``. If it suceeds, acquisition-wrap the result if possible and validate access to it if applicable before continuing traversal from this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:466
# ad0a5b568fc14234a1c94d62d7231ca0
msgid "Otherwise, if the object has a ``__bobo_traverse__()`` hook, invoke it to get the next object to traverse to. If this succeeds, validate access to the result if applicable, taking into account that it could be a method or non-security aware object, and that it may or may not be acquisition-wrapped. Then continue traversal from this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:471
# accccf885cd4456b8d0b851e0092f72e
msgid "If there was no ``__bobo_traverse__()``, or if it returned or raised the sentinel ``ZPublisher.interfaces.UseTraversalDefault``, attempt to obtain a non-acquired attribute of the current object with the applicable name. If one is found, continue traversal from this. If security checking is being performed, use ``guarded_getattr()`` from ``AccessControl.ZopeGuards`` to get the attribute, which may raise ``Unauthorized``. (This is the special ``getattr()`` that is also used for all attribute access by untrusted Python code.) Otherwise, use standard ``getattr()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:479
# 360759144c6a41f78d395769d474d22e
msgid "Otherwise, attempt dictionary-like (``__getitem__``) access and validate the result if applicable before continuing traversal from this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:481
# 20236490a5c54fd6abb39c18871688e7
msgid "If any of the above failed with an ``AttributeError``, ``NotFound`` or ``KeyError``, attempt to look up a view on the current traversal object with the given name. If one is found, acquisition-wrap it if possible and validate access if applicable, before continuing traversal from the view instance."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:486
# 146e1515464b460ba884a36fabbd6f39
msgid "If there is no view, but there was a ``__bobo_traverse__``, fail by re- raising the original exception. The logic behind this is that if there is a ``__bobo_traverse__()``, we should not attempt to acquire attributes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:489
# 4777ffd8598d40b4ad6ddae2180abc26
msgid "Assuming we still don't have a value and there was no ``__bobo_traverse__()``, attempt to acquire an attribute, using either ``getattr()`` or ``guarded_getattr()`` depending on whether security checks are being made and continue traversal from the result if this suceeds."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:493
# c5b06dce01cb451db990fda241777822
msgid "If we reach the end of the path, return the most recently traversed-to object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:494
# 9f4e38e2db074c00b818aac490fb5574
msgid "If an exception of any kind (other than a ``ConflictError``) is thrown and a ``default`` was passed in, return this rather than letting the exception bubble up to the caller."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:498
# 098bdf80af7f49fe8e7cb043adb7bd7b
msgid "Note: This logic does *not* check for the publication/request-orientated ``IPublishTraverse`` or ``IBrowserPublisher`` hooks, although they *do* allow traversal to a view (e.g. ``context.restrictedTraverse('@@some-view')``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:7
# 8fb61e0e4d7848a382707e384c926a3e
msgid "How does Zope handle permissions, roles and users?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:9
# 6e845d8ff35243cabf6ffbd7474c2699
msgid "Much of Zope security is implemented in C, for speed, but there is a Python implementation in ``AccessControl.ImplPython``, which can be enabled by setting ``security-policy-implementation python`` in ``zope.conf``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:13
# dfe67493ec2c413f89d2cc13f44d0fd1
msgid "Note: We will not discuss RestrictedPython, used to apply security restrictions to through-the-web python scripts and page templates, here."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:19
# 1474f053fcd2428ca19d36bdbf22c89c
msgid "Declaring object roles and attribute permissions"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:21
# 916ab9821f7f45e89c98524e4965eee8
msgid "The permissions required to access a given attribute are stored on classes and modules in a variable called ``__ac_permissions__``. This contains a tuple of tuples that map a permission name to a list of attributes (e.g. methods) protected by that permission, e.g.:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:46
# cb571844672d44fe8ce947384f19dc38
msgid "The roles reuqired to access an object (e.g. a content object), are stored in a class or instance variable ``__roles__``. This may contain a tuple or list of role names, an ``AccessControl.PermissionRole.PermissionRole`` object, or one of the following special variables:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:51
# bb460b455e58427b8062c60dc21d3f5b
msgid "``AccessControl.SecurityInfo.ACCESS_NONE``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:52
# 8ed3b5e3133749d49ad57caddaff5e88
msgid "Inaccessible from any context."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:53
# 050f45aca765404a92763a9d51cb750f
msgid "``AccessControl.SecurityInfo.ACCESS_PRIVATE``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:54
# 3b0513eef485409d8ef78bcf36ff8acb
msgid "Accessible only from Python code."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:57
# 13a21610b15843679da068dcb828d1bb
msgid "``AccessControl.SecurityInfo.ACCESS_PUBLIC``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:56
# 0d7ba2713d6f438d9fc85c86e5a4e5a4
msgid "Accessible from restricted Python code and publishable through the web (provided the object has a docstring)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:59
# 24d243fcf51f413ca35f4d49ada08c0b
msgid "For attributes (including methods), the roles are stored on the parent class in a variable called ``<name>__roles__``, where ``<name>`` is the attribute name. Again, the special variables ``ACCESS_NONE``, ``ACCESS_PRIVATE`` and ``ACCESS_PUBLIC`` can be used."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:64
# 574941722ba548b8aad1c19df9adb868
msgid "These variables are rarely set manually. Instead, declarative security info is typically used. For example:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:86
# e31d29983948468abd628bc90a85d744
msgid "There is also ``security.declareObjectProtected(<permission>)``, ``security.declareObjectPrivate()``, ``security.declarePrivate(<attribute>)`` and ``security.declarePublic(attribute)``, which do as their names suggest to make an object or attribute protected, private or public."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:91
# a2e050b995fc45daae4df5a576d5540b
msgid "Attribute security can be set in ZCML using the ``<class />`` directive with one or more ``<require />`` sub-directives:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:103
# 3a936857e6e24a8cb1cd0453e77e5386
msgid "Behind the scenes, this simply creates a ``ClassSecurityInfo`` instance and invokes it on the attributes listed as applicable. This will also call ``InitializeClass`` on the given class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:107
# cd6b9e7142964afcb853bffd4f1f2e62
msgid "Note that the ``<require />`` directive, in common with all ZCML directives, uses ZTK-style permission names, not Zope 2-style permission strings. A ZTK permission is a named utility providing ``zope.security.interfaces.IPermission``, with an ``id`` that is the short (usually dotted) name that is also the utility name, and a ``title`` that matches the Zope 2 name. New permissions can be registered using the ``<permission />`` directive:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:122
# 0695e433acfc4d7dbe38efb0403fea6f
msgid "Zope 2-style permission names spring into existence whenever used in a security declaration, which makes them susceptible to typos (ZTK-style ``IPermission`` utilities must be explicitly registered before they can be used)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:126
# 2a82e642e62648cb94026d5475c28fc2
msgid "Permissions are also represented by \"mangled\" permission names, which simply turn the arbitrary string name of a permission into a valid Python identifier. For example, the permission ``\"Access contents information\"`` becomes ``_Access_contents_information_Permission``. The mangling is done by the function ``AccessControl.Permission.pname``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:132
# dec99ed353ea434b93bbc39af865df65
msgid "``ClassSecurityInfo`` does little except record information until the ``InitializeClass()`` call is made with the class as an arugment. This will:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:135
# 4de551c89d9748a6bc6cbbde0b49b33e
msgid "Loop over all attributes and assign a ``__name__`` attribute to the value of any attribute in the class's ``__dict__`` that has the ``_need__name__`` marker set (this is used by through-the-web DTML and Zope Page Template objects that may not have a name until they are assigned to their parent)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:139
# f019bedb175c4fe9837a8aeb3865efdb
msgid "Look for any function with the name ``manage()`` or a name starting with ``manage_``. If this does not have a corresponding ``<name>__roles__`` attribute, one is created with the roles ``('Manager',)``, as a way to automatically protect such methods."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:143
# de0f65b93ae54da0ab07a3814eadcdb1
msgid "Look for any security info object (i.e. an attribute that has an attribute ``__security_info__``). If one is found, call its ``apply()`` method with the class as an argument, and then delete it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:147
# 0baaf62ecb604625ab172c76d2a650b2
msgid "The ``apply()`` method of ``ClassSecurityInfo`` does this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:149
# c0d4fb58cbbd4a868d78cd3a4b136392
msgid "Collect any explicitly set ``__ac_permissions__`` tuple and turn it into internal state, as if the ``ClassSecurityInfo`` had been used to set it, so that it is not lost."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:152
# 65f17ec782b4463cb20b91b4176ca32b
msgid "For any attribute declared with ``declarePublic()`` or ``declarePrivate()``, set ``<name>__roles__`` to ``ACCESS_PUBLIC`` or ``ACCESS_PRIVATE`` as appropriate."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:155
# ac52d667c1304dd2997f7d38e8431b6f
msgid "Build an ``__ac_permissions__`` tuple from the saved declarations of any protected attributes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:158
# 7f7887f342b244dc9eae3dc9d816375a
msgid "As a special case, a call to ``security.declareObjectProtected(<permission>)`` will result in a value stored with an empty attribute name, which later translates as setting ``__roles__`` directly on the class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:163
# 618e8059b1b54304958f5e87d4855732
msgid "Find any ``__ac_permissions__`` on the class (probably created by the security info ``apply()`` call) and call ``AccessControl.Permission.registerPermissions`` with it as an argument. This will register the permission in a global list of known permissions with their default roles (usually ``('Manager',)``) held in that module under the variable ``_ac_permissions``. The mangled permission name (see above) will also be set as a class attribute on the class ``AccessControl.Permission.ApplicationDefaultPermissions``, which is a base class of the application root (``OFS.Application.Application``), hence making the mangled permission names available as (acquirable) class attributes on the application root. The value of this class variable is a tuple with the default roles for that permission."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:175
# cc5f6d9997744f5082de1a25c7e87290
msgid "For all permissions in ``__ac_permissions__`` and for all attribute (method) names assigned to each permission, set a class attribute ``<name>__roles__`` to a ``PermissionRole`` object. If a default list/tuple of roles was supplied, record this in the ``PermissionRole``, otherwise default to ``('Manager',)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:181
# c282659b08a9412a836c73fc42e61947
msgid "Determining which roles have a given permission"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:183
# d8ca694f3de549eab85c6a3c89224052
msgid "To perform security checks, it is necessary to compare the roles a user has with the roles required for a given permission. The method to determine the roles of a permission on a given object is called ``rolesForPermissionOn()``. It is found in ``AccessControl.ImplPython``, though a C implementation may also be in use."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:189
# e8b0a1990468450093376912ecd69567
msgid "``rolesForPermissionOn()`` can be called directly, but it should be imported from ``AccessControl.PermissionRole`` to ensure the correct implementation (C or Python) is used. Alternatively, the correct implementation can be accessed by using the ``rolesForPermissionOn()`` method of a ``PermissionRole`` object, which will supply the correct permission name and default roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:195
# 24da84c0df2a45cd837ca934ca5ba053
msgid "The default ``rolesForPermissionOn()`` does the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:197
# 42680067dfa04ef3b137ba48a7e26c38
msgid "Mangle the permission name (see above)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:198
# e39f44c2f24644b6b1e7071fb9979a54
msgid "Traverse from the object up the inner (containment) acquisition chain to find an object with the mangled permission name as an attribute. Then:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:201
# b1c90db5b89c4c75b741d44c1145ea59
msgid "If the attribute is ``None``, this is actually the ``ACCESS_PUBLIC`` marker. Return ``('Anonymous',)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:203
# 7fa7e9181b554cdf84d8d642936ef58c
msgid "If the sequence of roles is a tuple, this is a signal to not acquire roles from parent objects. Stop and return any roles collected by walking the acquisition chain so far plus the roles at the current object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:206
# 5782d9df6cf74680a7e0101f97d05141
msgid "If the sequence of roles is a list, this is a signal to acquire roles from parent objects. Hence, collect the roles at the current object and continue the walk up the acquisition chain."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:209
# 6a1b6f5c77fe4b6584640482e096b96c
msgid "If roles is a string, assumed to be a different mangled permission name, this is a signal to delegate to another permission. Continue acquisition from the parent, but discard any roles acquired so far."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:213
# 4251ba64cac34d9a84ef877fdc19565c
msgid "If no object with the managled permission attribute is found, return the default roles. Applicable default roles are stored in each ``PermissionRole`` object, but for other types of roles, use ``('Manager',)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:216
# b254bd4a380346f980784a5b8eb7a55f
msgid "In all cases, if the global variable ``_embed_permission_in_roles`` is true, include the mangled permission name in the list of roles returned (even if an empty list). This is used as a debugging aid."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:221
# b62f0812a2f247c09b5ac0a3580c25cb
msgid "Checking a permission in a context"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:223
# 3c7e6cf7ca5b484da51ffd2b1a6f34f7
msgid "The most basic permission check can be done using:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:231
# 235224b69aae48b09a376fbbfee33195
msgid "This returns either ``1`` or ``None`` to indicate whether the current user has such a permission."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:234
# 7d833bc277e741b7bc20f242ff5cb797
msgid "The call to ``getSecurityManager()`` returns a security manager instance for the current request. A security manager is created using ``newSecurityManager()`` in the ``validated_hook`` at the end of traversal (hence note that it is *not* set during traversal itself; specifically it is not set when a view adapter is being looked up and instantiated and so there is no security information available in the ``__init__()`` of a view), which creates a new security manager with a context that is aware of the current authenticated user (or ``Anonymous`` if there is none)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:243
# 0288b9649d344b6a9c597296b20342d0
msgid "Again, the security manager may use a C implementation, but the default one is defined in ``AccessControl.ImplPython``. The two most important methods on this object are ``checkPermission()`` (seen above) and ``validate()``, which is used during traversal to validate access to an object and will throw an ``Unauthorized`` exception if not valid. Both of these delegate to a security policy, which will invariably be the ``ZopeSecurityPolicy`` also found in ``ImplPython`` (or C code) and instantiated once with a module-level call to ``setDefaultBehaviors()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:252
# 481117b681434ddca3f6b3a522fb9b2d
msgid "The ``checkPermission()`` implementation in ``ZopeSecurityPolicy`` is relatively simple. It uses ``rolesForPermissionOn()`` to discover the roles on the object, and then obtains the current user from the security context (passed as a parameter to its version of ``checkPermission()``) and calls the user object's ``allowed()`` method with the object and its roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:258
# 5ef4ff227f7f40bdb1f0233eb660ba1f
msgid "Additionally, if the security policy allows for it (which it will by default), checks are made to ensure that if the \"execution context\" has an owner (e.g. it is a through-the-web Python script or template owned by a particular user), the owner as well as the current user has the appropriate roles, otherwise access is disallowed. Also, if proxy roles are set (again applicable to through-the-web scripts), these are allowed to be used in lieu of the user's actual roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:265
# 6da88e4aa3c64ade9a1811213991eb5e
msgid "There are various user implementations that can treat ``allowed()`` differently. The most common use in Plone is the ``PropertiedUser`` from ``Products.PluggableAuthService`` (PAS), though there is also a basic implementation in ``AccessControl.users.BasicUser``, and a class called ``SpecialUser`` in the same module that is used for the ``Anonymous`` user."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:271
# f8c847d3b3fb469e8203a99684f44fdf
msgid "The PAS version is only marginally more complex than the ``BasicUser`` implementation (it deals with roles obtained from groups a user belongs to), so we will describe the ``allowed()`` implementation from ``BasicUser`` here:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:275
# 27c75ed707d74bba95aa006f62359f13
msgid "If the object's required roles is the special variable ``_what_not_even_god_should_do``   (you couldn't make this up), which corresponds to the ``ACCESS_NONE`` security declaration (as used by ``declareObjectPrivate()``), immediately disallow access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:279
# 8ed8adce12d14515bb0e1fa7e092a1a5
msgid "If the object's required roles is ``None``, which corresponds to the ``ACCESS_PUBLIC`` security declaration (as used by ``declareObjectPublic()``), or if ``Anonymous`` is one of the roles (even if the user is not ``Anonymous``), immediately allow access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:283
# f28aeb45f1e84041a53adb4787e9456c
msgid "If ``Authenticated`` is one of the required roles and the user is not ``Anonymous``, immediately allow access unless the object does not share an acquisition parent with the user folder (this is to avoid users with the same id in different user folders trying to steal each other's access through acquisition tricks). This is referred to as the \"context check\" below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:288
# 8d1e4e16dead409ca66238186af8fb95
msgid "Check if the user's global roles intersect with the roles required to access the object, and allow access if the user passes the context check."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:290
# 435566a1883040889a6b6688c81eb539
msgid "Check if there are any local roles, as defined in the attribute ``__ac_local_roles__``, granted to the user and check these against the required roles (and perform the context check). ``__ac_local_roles__`` may be a dictionary or a callable that returns a dictionary, containing a mapping of user ids (or group ids, if PAS is used) to local roles granted. The local role check is performed iteratively by walking up the acquisition chain and checking the instances of bound methods, up to the root of the acquisition chain."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:297
# f3919063abc745dfa6bf57353f5ef95c
msgid "If none of the above succeed, return ``None`` to indicate that the user is not allowed to access the object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:301
# 1883794ea24d4663bbf689a787b57303
msgid "Validating access to an object"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:303
# 36b9fc80eafe4ea8896b028a585ddc15
msgid "The second type of security operation provided by the ``SecurityManager`` is to check whether the user should be able to access a particular context. This is most commonly used during traversal, by way of the user folder's ``validate()`` method. The version in ``Products.PluggableAuthService.PluggableAuthService`` does this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:309
# f908af89ba3f434ea5f9cb1400a7f922
msgid "Get all applicable user ids from the request. Most likely, there is only one, but PAS's modular nature means it is possible more than one plugin will supply a user id."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:312
# 7d6aa554ea3c46b38080e37edae30a63
msgid "Extract the following information from the published object (``REQUEST['published']``):"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:315
# be8c11471cf247ed9694956df49b65d8
msgid "``accessed``, the object the published object was accessed through, i.e. the first traversal parent (``request['PARENTS'][0]``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:317
# b98738a3afb641c88e7f372bb337133a
msgid "``container``, the physical container of the object, i.e. the inner acquisition parent. If the published object is a method, the container is also set to be the method, but stripped of any outer acquisition chains by a call to ``aq_inner()``. If the published object does not have an inner acquisition parent, the traversal parent is used in the same way as it is used to set ``accessed``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:323
# 1cb6f422466c45bebabdad7d0f265c98
msgid "``name``, the name used to access the object, e.g. a traversal path element."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:324
# ee2d34cde5e8446c97a48a06ece92632
msgid "``value``, the object we are validating access to, i.e. the published object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:327
# 5ecb4e1d53554fe2902e194e8fc2b022
msgid "If this is the top-level user folder and the user is the emergency user, return the user immediately without further authorisation."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:329
# 79122abd4a7241d9a077f4166a8c2482
msgid "Otherwise, attempt to authorise the user by creating a new security manager for this user and calling its ``validate()`` method with ``accessed``, ``container``, ``name``, and ``value`` as arguments."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:333
# 0a3c136842374ca1805b249760da8f9e
msgid "The default security manager ``validate()`` method delegates to the equivalent method on the ``ZopeSecurityPolicy``. This is a charming 200+ line bundle of ``if`` statements that does something like this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:337
# 334386c114204ad2b33095c6c61cceb4
msgid "If the ``name`` is an ``aq_*`` attribute other than ``aq_parent``, ``aq_inner`` or ``aq_explicit``, raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:339
# 09844220cf7443cab7d275ee86913855
msgid "Obtain the ``aq_base``'d version of ``container`` and ``accessed``. If the ``accessed`` parent was not acquisition-wrapped, treat the ``aq_base``'d container as the ``aq_base``'d ``accessed``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:342
# 04f9b0dd99c4445398d0779e2a6806b2
msgid "The caller may have passed in the required roles already as an optimisation. If not, attempt to get the required roles by calling ``getRoles(container, name, value)``. The Python version of this is defined in ``AccessControl.ZopeSecurityPolicy``. It does the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:347
# 69e9bedfb04a481f9623c7957bfb84c4
msgid "If the ``value`` has a ``__roles__`` attribute, and it is ``None`` (``ACCESS_PUBLIC``) or a list or tuple of roles, return them. (This probably means the ``value`` is a content object or similar.)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:350
# 489bd35d1a5941cea11965eeb44e92ab
msgid "If it is a ``PermissionRole`` object or another object with a ``rolesForPermissionOn()`` method (described above), call this with the ``value`` as an argument and return the results. (This probably means the value is a method.)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:354
# 13c37cd2721748c59d572f206f86529c
msgid "If there is no ``__roles__`` attribute, check if we have a ``name``. Return \"no roles\" if not."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:356
# db2d500c18ae4855803bcde44f7c5abd
msgid "Attempt to find a class for the ``value``'s ``container``. If ``value`` is a method, go via the ``im_self`` attribute to get an instance to use as the ``container``. Then look for a ``<name>__roles__`` attribute on the class. If this is a ``PermissionRole``, call ``rolesForPermissionOn()`` as above; if it is a list, tuple or one of the sentinel values (``ACCESS_PUBLIC``, ``ACCESS_PRIVATE`` or ``ACCESS_NONE``, return it directly."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:365
# 7d418207daf04600a786aeec77e41621
msgid "If we still have no roles, we may have a primitive or other simple object"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:364
# 40fdeb2a6c2140f0bc3afc9ce143d529
msgid "that is not directly security-aware. We can still try to get security information from the ``container``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:367
# 92491a86a9574cc1bb8a75dbebb29aed
msgid "If there is no ``container`` passed in, we have no way of inferring one, so all bets are off. Raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:369
# ea357dcbbae54db59e83d5b49afe7f06
msgid "Attempt to get a ``__roles__`` value from the ``container``. If it is acqusition-wrapped, also try to explicitly acquire ``__roles__`` if it does not have a ``__roles__`` attribute itself."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:373
# 4e3f2473a708455790048e95262c8161
msgid "If this fails, then we may still be able to get some security assertions from the container (see below), but we only allow this if the ``accessed`` parent is the ``container``. If the ``value`` was accessed through a more convoluted acquisition chain, say, we cannot rely solely on container assertions, so we raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:378
# 41783d29828f4874853fcfd865103bb0
msgid "At this point, there are two possibilities: we have some roles required to access the ``container``, or we have no roles at all, but we accessed the ``value`` directly from its parent ``container``. In both cases, we check container security assertions:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:383
# 8cb9fb49ed3749c6a28865ba5ce6fe19
msgid "If the ``container`` is a tuple or string, and we have gotten this far, we consider access to be allowed and return true. (This can't really happen through URL traversal, but could occur with path traversal)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:386
# c88fda8117944353922d093749b33d4f
msgid "If the ``container`` is an object with an attribute ``__allow_access_to_unprotected_subobjects__``, obtain this. It can be of three things:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:391
# 8ec749d7cd404e14bd02abbf1a978771
msgid "An integer or boolean"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:391
# f0f90e96047343bfa5b7f6ff29fbafe3
msgid "if set to a true value, allow access and return ``True``, otherwise raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:396
# 5e4f40f8110341f196cda27a3452155f
msgid "A dictionary"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:394
# aecdfce3338943fd834205eedbe2cd8a
msgid "Attempt to look up a truth value in this dictionary by using the accessed ``name`` as a key. If not found or false, raise ``Unauthorized``, otherwise allow access and return ``True``. If the name is not found, default to allowing access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:401
# 91d7a6448f5b4c029b3895b47692dee2
msgid "A callable"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:399
# 837096b254664d00913bfda6c4541f28
msgid "Call it with the ``name`` and ``value`` as arguments, and use the return value to determine whether to allow access or raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:403
# f4f8204d166343998085e5cf5e7b3937
msgid "If there is no ``__allow_access_to_unprotected_subobjects__``, raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:406
# 2b588915b86240e69557d42e34658a2a
msgid "If we did manage to get some roles from the container, we still check ``__allow_access_to_unprotected_subobjects__`` as above, but only as a negative: we raise ``Unauthorized`` if access is not allowed, and continue security checking against the roles we found otherwise. In this case, we use the ``container`` (probably a content object) as the ``value`` to check."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:411
# c93a1bb1e3a24da0a6f32a0cfb0a2ade
msgid "At this point, we have roles, and we know the container in theory allows access to the attribute that did not have its own security assertions. We set ``value`` to be the ``container`` so that we can check whether we are in fact allowed to access the container."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:415
# 7946dd6100cd4f93b14d5fd3437df531
msgid "We can now check whether the user has the appropriate roles. This is essentially the same logic as in ``checkPermission()`` above, although stated slightly differently:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:419
# cc859413a86842658a88321eb4046b60
msgid "If ``__roles__`` is ``None`` (``ACCESS_PUBLIC``) or contains ``Anonymous``, allow access immediately."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:421
# c5336e70277c40269f0f397e46082e10
msgid "If the execution context is something like a through-the-web Python script owned by a user, we raise ``Unauthorized`` if the owner does not have any of the required roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:424
# 0e98765bd9ba439b961d52bf9f499b2c
msgid "If the execution context has proxy roles, these are allowed to be used to validate access intead of the user's actual roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:426
# 27ec93d3b38e4994a11d5add1339828f
msgid "Otherwise, call ``user.allowed()`` to validate access and either return true or raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:429
# af44812872c748dca874da9e11e6c293
msgid "The remainder of the logic in ``validate()`` concerns the case where ``verbose-security`` is enabled in ``zope.conf``. Various checks are made in an attempt to raise ``Unauthorized`` exceptions with meaningful descriptions about where in the validation logic access was denied."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:435
# a4f3ec03cbe446e4804b5968e5358626
msgid "Changing permissions"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:437
# 48d686975a3b43d6b7f7db95d92fd1e2
msgid "The mapping of permissions to roles can be managed persistently at any object by setting the mangled permission attribute (see the description of ``rolesForPermissionOn()`` above) to a list of roles as an instance variable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:441
# 7545d18e06a54c9c95f598bcfcac606c
msgid "The most basic API to do so is the class ``AccessControl.Permission.Permission``. This is a transient helper class initialised with a (non-mangled) permission name (i.e. the first element in an ``__ac_permissions__`` tuple), a tuple of attributes the permission applies to (i.e. the second element in an ``__ac_permissions__`` item) |---| referred to as the variable ``data`` |---| and an object where the permission is being managed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:448
# 459e1a3fd49142aeaac6431bbb9672f4
msgid "The methods ``getRoles()``, ``setRoles()`` and ``setRole()`` on the ``Permission`` class allow roles to be obtained and changed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:451
# 6d03f4e305404fe780e28db376893a9a
msgid "``getRoles()`` will first attempt to get the mangled permission name attribute and return its value."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:454
# 8f8b38d7469b4b83b35f7361da17647e
msgid "If it is not set, it will fall back to looping over all the listed attributes (``data``) and obtaining the roles from the first one found, taking into account the various ways in which ``__roles__`` can be stored. Note that an empty string in the tuple of attributes means \"check the object itself for a ``__roles__`` attribute\". If ``__roles__`` is a list, it is returned, though if it contains the legacy role ``Shared``, this is removed first. The sentinel ``None`` (``ACCESS_PUBLIC``) is turned into ``['Manager', 'Anonymous']``. If no roles are set, the default return value is ``['Manager']``, though another default can be supplied as the optional last parameter to ``getRoles()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:464
# 2392bf924285439abbb8eb6c0ca30166
msgid "``setRoles()`` will set the mangled permission name as an instance variable on the object (or delete the variable, if setting to an empty list of roles). Next, it will ensure no other ``__roles__`` or ``<name>__roles__`` *instance* variables have been set (class variables are left alone, of course), so that the managled permission name attribute is the unambiguous statement of the permission-to- role mapping."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:472
# 2b1333c01b224769928ddc85c2739880
msgid "Note that for both ``getRoles()`` and ``setRoles()``, the difference between a tuple (don't acquire roles) and a list (do acquire) is significant, and preserved."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:476
# f231d711a21c4548946ec22615e48fd5
msgid "``setRole()`` is used to manage a single role. It takes a role name and a boolean to decide whether the role should be set or not. It simply builds the appropriate list or tuple based on the current value of ``getRoles()`` and then calls ``setRoles()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:481
# 21adce56b1014161abc0810cd49ceaba
msgid "In most cases, it is easier to use the API provided by ``AccessControl.rolemanager.RoleManager`` to manipulate roles in a particular context, rather than using ``Permission`` directly. This class, usually via the more specific ``OFS.roles.RoleManager``, is a mixin to most persistent objects in Zope. It contains a number of relevant methods:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:495
# 523f3232d4e147f18c4f091372ff1578
msgid "``ac_inherited_permissions(all=0)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:490
# 55bb4a7eb08d445cb28f94ed641a2c0b
msgid "Returns a list of permissions applicable to this class, but not defined on this class directly, by walking the ``__bases__`` of the class. (Note that this is not inheritance in the persistent acquisition sense!). If ``all`` is set to a truth value, the permissions on this class are included as well. The return value is an ``__ac_permissions__``-like tuple of tuples. For inherited permissions, the attribute list of each permission entry will be an empty tuple."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:498
# 142e78d2816445e3b3dd609b58d30b29
msgid "``permission_settings(permission=None)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:498
# daaf92e07dc04188b8aaefea28889a08
msgid "Returns the settings for a single permission or all permissions, returning a list of dicts. Used mainly by ZMI screens."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:501
# 6239e2929a624218988d066d10d42f78
msgid "``manage_role(role, permissions=[])``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:501
# 8b74c75eb7f24c189d71da1983cbae04
msgid "Uses the ``Permission`` API to grant the role to the permissions passed in, and take it away from any other permissions where the role may be set."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:505
# 59485651a14c438b87f2805519bc0fb9
msgid "``manage_acquiredPermissions(permissions=[])``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:504
# 3de919332adf4d9ab7cb1313a17f8db5
msgid "Uses the ``Permission`` API to set the roles lists for each of the passed-in permissions to a list (acquire), and for all other permissions to a tuple (don't acquire)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:510
# b1b456c9c0d9450a9b5169b61f676f46
msgid "``manage_permission(permission, roles=[], acquire=0)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:508
# a307f2266aa14e429b17d0ba6b5cc700
msgid "Uses the ``Permission`` API to set roles for the given permission to either a tuple or list (it does not matter what type of sequence the ``roles`` parameter contains, the ``acquire`` parameter is used), but only if the permission is known to this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:514
# dc7820f4f9b64449a3f5cc502dbb03f7
msgid "``permissionsOfRole(role)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:513
# d2d89b97d59a4f7688b0c362ac83164e
msgid "Uses the ``Permission`` API to get the permissions of the given role. Returns a list of dicts with keys ``name`` and ``selected`` (set to either an empty string or the string ``SELECTED``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:516
# 79ba22b91ff247d684cf04fd3d14981b
msgid "``rolesOfPermission(permission)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:517
# a5dc15f9651546ffbd3a16443f0a8f15
msgid "The inverse of ``permissionsOfRole()``, returning a similar data structure."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:520
# 6a3ecaf626dd4ee6ba09c65516169ee2
msgid "``acquiredRolesAreUsedBy(permission)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:519
# dfc426f746ed4247addbce7a79975fcf
msgid "Returns either ``CHECKED`` or an empty string, depending on whether the roles sequence of the given permission is a list or tuple."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:522
# f9a6d39f42954000a3b1439b9da3035e
msgid "The use of the strings ``CHECKED`` or ``SELECTED`` as booleans is an unfortunate side-effect of these methods being used quite literally by ZMI templates."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:526
# c1faf93b2d504df6bdc57ad1d932be6e
msgid "Global and local roles"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:528
# c59dfcc18d034863a247db6366380df5
msgid "The list of known (valid) roles in any context is set in the attribute ``__ac_roles__``. On the initialisation of the application root during startup, in ``install_required_roles()`` in ``OFS.Application.AppInitializer``, this is made to include at least ``Owner`` and ``Authenticated``. The ``RoleManager`` base class sets it as a class variable with the value ``('Manager', 'Owner', 'Anonymous', 'Authenticated')``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:535
# c193228cc515465d93a295c5d9eae25c
msgid "In ``AccessControl.rolemanager.RoleManager``, the method ``valid_roles()`` can be used to obtain the list of valid roles in any given context. It will also include roles from any parent objects referenced via a ``__parent__`` attribute."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:540
# fa3ac67eb0ee4acf8a236d9ef15b6375
msgid "User-defined roles can be set through the ZMI or the method ``_addRole()`` in the ``OFS.roles.RoleManager`` specialisation, which simply manipulates the ``__ac_roles__`` tuple as an instance variable. There is also ``_delRoles()`` to delete roles. The method ``userdefined_roles()`` on the base ``AccessControl.rolemanager.RoleManager`` class will return a list of all roles that were set as instance variables rather than class variables."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:547
# 98a3388975424cf0979fc30fa635c8b3
msgid "The global roles of a given user is determined by the ``getRoles()`` function on the user object (see the description of the ``allowed()`` method above). The default ``ZODBRoleManager`` plugin for PAS stores a mapping of users and roles persistently in the ZODB, though other implementations are possible, e.g. querying an LDAP repository."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:553
# 7f405161c93c4e26a4187cf80ef09120
msgid "Users may also have local roles, granted in a particular container and its children. These can be discovered for a given user most easily by calling the ``getRolesInContext()`` function on a user object, which takes a context object as a parameter."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:558
# 5d5ceb1168c54aa492299bc3fdb46d34
msgid "Local roles are stored in the instance variable ``__ac_local_roles__``. This may be a dictionary or a callable that returns a dictionary, containing a mapping of user (or group) ids to local roles granted. The local role check is performed iteratively by walking up the acquisition chain and checking the instances of bound methods, until the root of the acquisition chain is reached."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:564
# cb0379cfb6c14270b125615b06b374f7
msgid "The API to manage local role assignments in a given context is found in ``AccessControl.rolemanager.RoleManager``, through the following methods:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:569
# 4f5947b212974e908027f481c5016dba
msgid "``get_local_roles()``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:568
# 4de5a1621ea047adaaf86d67ad7c88f3
msgid "Return a tuple of local roles, each represented as a tuple of user ids and a tuple of local roles for that user id. With PAS, this may also include group ids."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:572
# ca87bc4a77ff403d9ec81c7be9e4a606
msgid "``users_with_local_role(role)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:572
# 9175535ec17a440aaa941e64eb01bb72
msgid "Inspect ``__ac_local_roles__`` to get a list of all users with the given local role."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:575
# d27eb7a07c274df59fa51ba02676ee97
msgid "``get_local_roles_for_userid(userid)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:575
# 5d87e546a5e94fb3a7ca558c0f726de7
msgid "Inspect ``__ac_local_roles__`` to get a tuple of all local roles for the given user id."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:578
# 234542e43ab8438ea2e07c770a65db39
msgid "``manage_addLocalRoles(userid, roles)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:578
# a76236e85d4d4903a2b6faa6cc8baf05
msgid "Modify ``__ac_local_roles__`` to add the given roles to the given user id. Any existing roles are kept."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:581
# 848fed5268984c3787a7c850ec6086cb
msgid "``manage_setLocalRoles(userid, roles)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:581
# 1ccc72e927b84279824d67d701e0c93b
msgid "Modify ``__ac_local_roles__`` to add the given roles to the given user id. Any existing roles are replaced."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:584
# 9b37d9f3803a4369b402e0818adcbec0
msgid "``manage_delLocalRoles(userids)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:584
# c56252059e0e4180a82f9ccb07e62908
msgid "Remove all local roles for the given user ids."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:587
# 7e3254537cc44eaba5bda7f50147af6f
msgid "Emergency users"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:589
# b6fda79482fc45c498be5fba893af6ee
msgid "On startup, at import time of ``AccessControl.users``, the function ``readUserAccessFile()`` is called to look for a file called ``accesss`` in the Zope ``INSTANCE_HOME`` (an environment variable) directory. If found, it reads the first line and parses it to return a tuple ``(name, password, domains, remote_user_mode,)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:595
# ae44a9605a09459c843f0d65df2bb264
msgid "If set, the module variable ``emergency_user`` is set to an ``UnrestrictedUser``, a special type of user where the ``allowed()`` method always returns true. If not, it is set to a ``NullUnrestrictedUser``, which acts in reverse and disallows everything."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:600
# 444921f2ec5f4f3087fc6a072ad98405
msgid "The user folder implementations in ``AccessControl`` and PAS make specific checks for this user during authentication and permission validation to ensure this user can always log in and has virtually any permission, with the exception of ``_what_not_even_god_should_do`` (``ACCESS_NONE``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:3
# c5496f25ae49491c94aa305146075013
msgid "Startup and product initialisation"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:7
# 78dd7d6d260645f38cd064447d664798
msgid "What happens on Zope startup, and how do Zope 2 products and constructors work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:13
# e440dd1607064588a342adb9a5019fa2
msgid "What happens on Zope startup?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:15
# 3230d2d2253c4004b6c2361cd8ccf59d
msgid "A startup script (e.g. ``bin/instance fg``) calls Zope 2's ``run.py`` in an appropriate interpreter context (i.e. one that has the necessary packages on ``sys.path``). This invokes a subclass of ``ZopeStarter`` from ``Zope2.Startup``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:29
# a12a6fc17f7741c9b8299ff3ccae969c
msgid "There are various variants that allow different ways to supply configuration."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:31
# 70455120dade4bbab69d5574d4e19f4b
msgid "There are two versions of the starter, one for Unix and one for Windows. It performs a number of actions during the ``prepare()`` phase:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:63
# 9ebd40cc8ed1424ab5ff3d87e53df405
msgid "Mostly, this is about using information from the configuration (which is read using ``ZConfig`` from a configuration file, or taken from the global defaults) to set various module-level variables and options."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:67
# 4862f2450b3f4d51b30ee356ce5c025e
msgid "The ``startZope()`` call ends up in ``Zope2.App.startup.startup()``, which performs a number of startup tasks:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:70
# 72c117b50af04dca983ca279d163a0ea
msgid "Importing products (``OFS.Application.import_products()``)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:71
# 6226ddf46fb64483ac36b433f9c87fdf
msgid "Creating a ZODB for the chosen storage (as set in the ``ZConfig`` configuration). This is stored in both ``Globals.DB`` and ``Zope2.DB``, and is configured using a ``dbtab`` (mount points specification) read from the configuration file. When this is done, the event ``zope.processlifetime.DatabaseOpened`` is notified."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:76
# f52678b8c1e1429daac343925f81a475
msgid "Setting the ``ClassFactory`` on the ZODB instance to ``Zope2.App.ClassFactory.ClassFactory``. This is a function that will attempt to import a class, and will return ``OFS.Uninstalled.Broken`` if the class cannot be imported for whatever reason. This allows for somewhat graceful recovery if symbols that are persistently referenced in the ZODB disappear."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:81
# 3eb5324e2c094d76abf91a22e83e98cd
msgid "Loading ZCML configuration from ``site.zcml``. This in turn loads ZCML for all installed products in the ``Products.*`` namespace, and ZCML slugs. The ``load_zcml()`` call also sets up a ``Zope2VocabularyRegistry``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:84
# 909aa54ce14942d683817602968cb2c1
msgid "Creating the ``app`` object, an instance of ``App.ZApplication.ZApplicationWrapper`` that wraps a ``OFS.Application.Application``. The purpose of the wrapper is to:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:88
# 003e2e6056114b74aad0ffdf0cca6dbf
msgid "Create an instance of the application object at the root of the ZODB on ``__init__()`` if it is not there already. The name by default is ``Application``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:90
# 33f38db6feea4daf9e0b3217c84e1ae1
msgid "Implement traversal over this wrapper (``__bobo_traverse__``) to open a ZODB connection before continuing traversal, and closing it at the end of the request."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:93
# a059f9dacea9426d87f33d3cd27eb9ed
msgid "Return the persistent instance of the true application root object when called."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:96
# 640d0043ffa64d11b9d52f54865b0dd7
msgid "The wrapper is set as ``Zope2.bobo_application``, which is used when the publisher publishes the ``Zope2`` module |---| more on publication later."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:98
# 17b2526dc2964d879f105fa6843117bc
msgid "Initialising the application object using ``OFS.Application.initialize()``. This defensively creates a number of items:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:116
# 33e431fffec74d259960cc91d966f6f0
msgid "Notfiying the event ``zope.processlifetime.DatabaseOpenedWithRoot``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:117
# 0d56332d14ef48bd91862f51d4bda4c4
msgid "Setting a number of ZPublisher hooks:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:126
# 5f7368a8745549d2a843f743647149c0
msgid "The ``run()`` method of the ``ZopeStarter`` then runs the main startup loop (note: this is not applicable for WSGI startup using ``make_wsgi_app()`` in ``run.py``, where the WSGI server is responsible for the event loop):"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:144
# 58b0c9ef037047a38dabf18f8fdb7fd9
msgid "The ``Lifetime`` module uses ``asyncore`` to poll for connected sockets until shutdown is initiated, either through a signal or an explicit changing of the flag ``Lifetime._shutdown_phase``, which is checked for each iteraton of the loop."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:149
# 2f31bf2468ba48caad3251d9d1cba1b7
msgid "Sockets are created when new connections are received on a defined server. When using the built-in ZServer (i.e. not WSGI), the default HTTP server is defined in ``ZServer.HTTPServer.zhttp_server``, which derives from ``ZServer.medusa.http_server``, which in turn is an ``asyncore.dispatcher``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:154
# 0db89f2577564344a88b0e5879bd9316
msgid "Servers are created in ``ZopeStarter.setupServers()``, which loops over the ``ZConfig``-defined server factories and call their ``create()`` metohod. The server factories are defined in ``ZServer.datatypes``. (The word ``datatypes`` refers to ``ZConfig`` data types.)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:159
# 4f86286b4f3a46079fa944f18ef9c615
msgid "Note also that some of the configuration data is mutated in the ``prepare()`` method of the server instance, which is called from ``Zope2.startup.handlers.root_handler()`` during the configuration phase. These handlers are registered with a call to ``Zope2.startup.handlers.handleConfig()`` during the ``_setconfig()`` call in ``run.py``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:166
# 8ce98bd080f14926b2b69f57654725ea
msgid "How are products installed?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:168
# dc3e1659724344c4b3a38167476e419b
msgid "During application initialisation, the method ``install_products()`` will call the method ``OFS.Application.install_products()``. This will record products in the ``Control_Panel`` if this is enabled in ``zope.conf``, and call the ``initialize()`` function for any product that has one with a *product context* that allows the product to register constructors for the Zope runtime."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:174
# d7c8e941b1ef4520b53cb7405c22907a
msgid "``install_products()`` loops over all product directories (configured via ``zope.conf`` and kept in ``Products.__path___`` by ``Zope2.startup.handlers.root_handler()``) and scans these for product directories with an ``__init__.py``. For each, it calls ``OFS.Application.install_product``. This will:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:180
# 1a9eb3ae6116493da2b3d5f90243e62e
msgid "Import the product as a Python package"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:181
# 42f4485f2812454f8df5d198440434c1
msgid "Look for an attribute ``misc_`` at the product root, which is used to store things like icons. If it is a dictionary, wrap it in an ``OFS.misc_.Misc_`` object, which is just a simple, security-aware class. Then store a copy of it as an attribute on the object ``Application.misc_``. The attribute name is the product name. This allows traversal to the ``misc_`` resources."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:187
# 1e11842bfe124d67a9ababb07a2030a2
msgid "As an example of the use of the use of ``misc_``, consider this dictionary set up in ``Products/CMFPlone/__init__.py``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:196
# f344beb44a7a4726977e46dd023425d5
msgid "This can now be traversed to as ``/misc_/CMFPlone/plone_icon`` by virtue of the ``misc_`` attribute on the application root."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:198
# c7e885899d564062ab42a782bb5a1a0a
msgid "Next, create an ``App.ProductContext.ProductContext`` to be used during product initialisation. This is passed a ``product`` object, a handle to the application root, and the product's package."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:202
# 55a52cf33a444c4abc98f65896ae81b9
msgid "There are two ways to obtain the ``product`` object:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:204
# 934ddf8689464a9690515ba86142f5bc
msgid "If persistent product installation (in the ``Control_Panel``) is enabled in ``zope.conf``, call ``App.Product.initializeProduct``. This will create a ``App.Product.Product`` object and save it persistently in ``App.Control_Panel.Products``. It also reads the file ``version.txt`` from the product to determine a version number, and will change the persistent object (at Zope startup) if the version has changed. The ``product`` object is initialised with a product name and title and is used to store basic information about the product. The ``product`` object is then returned."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:213
# c71dd4b3291842b99230dcbd472feb88
msgid "If persistent product installation is disabled (the default), simply instantiate a ``FactoryDispatcher.Product`` object (which is a simpler, duck-typing-equivalent of ``App.Product.Product``) with the product name."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:217
# ff8c078098d741b9bb7fb7a8217514c0
msgid "If the product has an ``initialize()`` method at its root, call it with the product context as an argument."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:220
# 23b125caf387414bbac0917ca871648b
msgid "Once old-style products are initialised, any packages outside the ``Products.*`` namespace that want to be initialised are processed. The ``<five:registerProduct />`` ZCML directive stores a list of packages to be processed and any referenced ``initialize()`` method in the variable ``OFS.metaconfigure._packages_to_initialize``, accessible via the function ``get_packages_to_initialize()`` in the same module. ``install_products()`` loops over this list, calling ``install_package()`` for each. This works very much like ``install_product()``. When it is done, it calls the function ``OFS.metaconfigure.package_initialized()`` to remove the package from the list of packages to initalise."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:232
# 343ce59790e24fd9b61bd1bf4cfb4be8
msgid "How do Zope 2 product constructors work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:234
# 41b348b8b530424482277fe7fecc6150
msgid "Products can make constructors available to the Zope runtime. This is what powers the ``Add`` drop-down in the ZMI, for instance. They do so by calling ``registerClass()`` on the product context passed to the ``initialize()`` function. This takes the following main arguments:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:239
# 2a98b69d312b49e6921c1f2be3ab9084
msgid "``instance_class``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:240
# b13c044a2ffb41e0bcc6b705254fdc47
msgid "The class of the object that will be created."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:242
# 277333b57c804da789e8efb571f36ffd
msgid "``meta_type``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:242
# c1fde03372ae44d5a662b0833caa5e26
msgid "A unique string representing kind of object being created, which appears in add lists. If not specified, then the class ``meta_type`` will be used."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:245
#: ../../reference_manuals/old/zope_secrets/startup.rst:364
# 3e93ae44851d47d9a3b77bf20d82762c
# 41793453bfcd4da09b1a5da0de2476fe
msgid "``permission``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:245
# 21ca9185713c4fc59a460922a55b6a36
msgid "The permission name for the constructors. If not specified, a permission name generated from the meta type (``\"Add <meta_type>\"``) will be used."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:298
# 4e832a3672854d158760d38aea01d16d
msgid "``constructors``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:248
# f698dedd197a4855bcaaa6ae1c0d0cd7
msgid "A list of constructor methods. An element in the list can be a callable object with a ``__name__`` attribute giving the name the method should have in the product, or the a tuple consisting of a name and a callable object. The first method will be used as the initial method called when creating an object through the web (in the ZMI)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:254
# 47e66305b860434da248040be1e6edc3
msgid "It is quite common to pass in two constructor callables: one that is a ``DTMLMethod`` or ``PageTemplateFile`` that renders an add form and one that is a method that actually creates and adds an instance. A typical example from ``Products.MailHost`` is:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:280
# 57d15b89c0a14aeaabaacfc0eb6fdac9
msgid "These are then referenced in ``initialize()``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:293
# 221b45ce89804088847e479f359e8f42
msgid "The form will be called with a path like ``/<container>/manage_addProduct/MailHost/manage_addMailHostForm``. The ``<form />`` on this page has a relative URL ``action=\"manage_addMailHost\"``, which means that when the form is submitted, the ``manage_addMailHost()`` function is called. ``id``, ``title`` and the other variables are passed as request parameters and marshalled (by ``mapply()`` |---| see below) into function arguments, and the ``REQUEST`` is implicitly passed (again by ``mapply()``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:301
# 0f7a20661a2a417bb10682e6bcef5022
msgid "``icon``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:301
# f2eb644b3bc245e4a1dcb3a439a87a08
msgid "The name of an image file in the package to be used for instances. The class ``icon`` attribute will be set automagically if an icon is provided."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:303
# 960e6213f50148eb9403c5a718c12c10
msgid "``permissions``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:304
# d45e64228bc34f6fab29294a10aa9e4a
msgid "Additional permissions to be registered."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:306
#: ../../reference_manuals/old/zope_secrets/startup.rst:366
# 19ebb693eeaf4cdc9f0c6735c902ee59
# 197fa183b7e346889b7f8737bc3ea207
msgid "``visibility``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:306
# df4bf42fa64745b38bdc2f9b6cdf94a0
msgid "The string ``\"Global\"`` if the object is globally visible, or ``None`` otherwise."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:309
#: ../../reference_manuals/old/zope_secrets/startup.rst:368
# 14d8ce29db4642f287b2a868b4cff535
# 04b4d72469354d50acc84965b48d14fe
msgid "``interfaces``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:309
# 97510a8953cf41879288e2001fd55212
msgid "A list of the interfaces the object supports. These can be used to filter addable meta-types later."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:316
#: ../../reference_manuals/old/zope_secrets/startup.rst:372
# 6724d18d3b6e4233a5d033c1811c2dbd
# 36d1311b971a4970bf765dd94b10f361
msgid "``container_filter``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:312
# 29950ad60b36409ca3d94e92caf5810b
msgid "A function that is called with an ``ObjectManager`` object as the only parameter, which should return a truth value if the object is happy to be created in that container. The filter is called before showing ``ObjectManager``'s ``Add`` list, and before pasting (after object copy or cut), but not before calling an object's constructor."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:318
# cd35395c4d6b4009b222c2f274677ca7
msgid "The main aims of this method are to register some new permissions, store some information about the class in the variable ``Products.meta_types``, and create a ``FactoryDispatcher`` that allow traversal to the constructor method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:322
# a5dec669752c4de08f4d8f7e358e226b
msgid "If an ``icon`` and ``instance_class`` are supplied, set an ``icon`` attribute on ``instance_class`` to a path like ``misc_/<productname>/<iconfilename>``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:324
# 8e0394c0c1654c199a33119edfb94ab7
msgid "Register any ``permissions`` by calling ``AccessControl.Permission.registerPermissions()`` (described later)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:326
# 86acd5e1cff94ef9a9d9e0b43a9a553c
msgid "If there is no ``permission`` provided, generate a permission name as the string \"Add <meta_type>\", defaulting to being granted to ``Manager`` only. Register this permission as well."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:329
# 286ed736374d467889a1996774a08809
msgid "Grab the name of the first constructor passed in the ``constructors`` tuple. This can either be the function's ``__name__``, or a name can be provided explicitly by passing as the first list element a tuple of ``(name, function)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:333
# 3eabc032ff1b4e60ae8e8aa20ec72d48
msgid "Try to obtain the value of the symbol ``__FactoryDispatcher__`` in the package root (``__init__.py``) if set. If not, create a class on the fly with this name  by deriving from ``App.FactoryDispatcher.FactoryDispatcher`` and set this onto the product package as an attribute named ``__FactoryDispatcher__``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:338
# fedee7b43e704c499fd1a5b566ff54f8
msgid "Set an attribute ``_m`` in the package root if it does not exist to an instance of ``AttrDict`` wrapped around the factory dispatcher. This is a bizzarre construction best described by its implementation:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:352
# 9a4043eaacef44df94a7576276dad6e9
msgid "If no ``interfaces`` were passed in explicitly, obtain the interfaces implemented by the ``instance_class``, if provided."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:354
# 9ad5188d905e4902bcccf26c46fa2e2f
msgid "Record information about the primary constructor in the tuple ``Products.meta_types`` by appending a dictionary with keys:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:357
# e11f8885ef3a475b84b12185a459ab75
msgid "``name``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:358
# 15017d3444df4177ac845e5aa2cfdb5a
msgid "The ``meta_type`` passed in or obtained from the ``instance_class``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:360
# af6a81b6410a41f8b32c3be8179ef947
msgid "``action``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:360
# 503449ccbddc4c5083c7475c8091bf7c
msgid "A path segment like ``manage_addProduct/<productname>/<constructorname>``. for the initial (first) constructor. More on ``manage_addProduct`` below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:362
# 6abcd732b3a4458a99a3fed40e6f67e5
msgid "``product``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:363
# f7e41402b0fb4793be32826b0ce70df7
msgid "The name of the product, without the ``Product.`` prefix."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:365
# 945e9019bf694b01903f65bf575ccd27
msgid "The add permission passed in or generated."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:367
# e0e89e26dfa448d2b9deebedfaf524c8
msgid "Either ``\"Global\"`` or ``None`` as passed in to the method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:369
# 73896cecd2424f938e3fcb0eca8104b9
msgid "The list of interfaces passed in or obtained from ``instance_class``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:370
# 51108b1f1a0d4661bc6341b103265157
msgid "``instance``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:371
# 4e99217b17834571ac05d5526da67c6c
msgid "The ``instance_class`` as passed in to the method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:373
# c60be9c8ca654af4a70e9516a5021d71
msgid "The ``container_filter`` as passed in to the method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:374
# 1e6da7cb62c44b669acf36a9b1a0730c
msgid "Next, put the initial constructor and any further constructors passed in onto the ``_m`` pseudo-dictionary (which really just means setting them as attributes on the ``FactoryDispatcher``-subclass). The appropriate ``<methodname>__roles__`` attribute is set to a ``PermissionRole`` describing the add permission as well."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:379
# a8b77424719240c6883f93c28370e31c
msgid "If an ``icon`` filename was passed in, construct an ``ImageFile`` to read the icon file from the package and stash it in the ``OFS.misc_.misc_`` class so that it can be traversed to later."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:383
# f7579089166142f2a6d9a125c677b9e6
msgid "Note that previously, the approach taken was to inject factory methods into the class ``OFS.ObjectManager.ObjectManager``, which is the base class for most folderish types in Zope. This is still supported for backwards compatibility, by providing a ``legacy`` tuple of function objects, but is deprecated."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:388
# b27238d279164c41819753adefb828e7
msgid "``Products.meta_types`` is used in various places, most notably in ``OFS.ObjectManager.ObjectManager`` in the methods ``all_meta_types()`` and ``filtered_meta_types()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:392
# bcc145999a0347f0b15ee9bb798610c1
msgid "The former returns all of ``Products.meta_types`` (plus possibly some legacy entries in ``_product_meta_types`` on the application root object, used to support through-the-web defined products via ``App.ProductRegistry.ProductRegistry``), applying the ``container_filter`` if available and optionally filtering by ``interfaces``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:398
# f02254bf79914da1a8ea98cb4c8b87da
msgid "The latter is used to power the ``Add`` widget in the ZMI by creating a ``<select />`` box for all ``meta_types`` the user is allowed to add by checking the add permission of each of the items returned by ``all_meta_types()``. The ``action`` stored in the ``meta_types`` list is then used to traverse to and invoke a constructor."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:404
# fbd716791101488895803e089b391eda
msgid "Note that subclasses of ``ObjectManager`` may sometimes override ``all_meta_types()`` to set a more restrictive list of addable types. They may also add to the list of the default implementation by setting a ``meta_types`` class or instance variable containing further entries in the same format as ``Products.meta_types``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:410
# a3cb2d3b7905472fa8340d877cfc6843
msgid "Finally, let us consider the ``manage_addProduct`` method seen in the ``action`` used to traverse to a registered constructor callable (e.g. an add form) using a path such as ``/<container>/manage_addProduct/<productname>/<constructname>``. It is set on ``OFS.ObjectManager.ObjectManager``, and is actually an instance of ``App.FactoryDispatcher.ProductDispatcher``. This is an implicit-acquisition-capable object that implements ``__bobo_traverse__`` as follows:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:418
# 28b0d3f6e64c4f4680bea9223ed13aac
msgid "Attempt to obtain a ``__FactoryDispatcher__`` attribute from the product package (from the name being traversed to), defaulting to the standard ``FactoryDispatcher`` class in the same module."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:421
# be35961e82d046d883400140bc634a90
msgid "Find a persistent ``App.Product.Product`` if there is one, or create a simple ``App.FactoryDispatcher.Product`` wrapper if persistent product installation has not taken place."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:424
# 2abcf7a09fb845e3b7dea6e4dc5eb5e3
msgid "Create an instance of the factory dispatcher on the fly, passing in the product descriptor and the parent object (i.e. the container)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:426
# c8fd12886d0948a2b379a527a39d6477
msgid "Return this, acquisition-wrapped in ``self``, to allow traversal to continue."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:428
# dace05cc269f44e087639eb62bf0c92b
msgid "Traversal then continues over the ``FactoryDispatcher``. In the version of this created by ``registerClass()``, each constructor is set as an attribute on the product-specific dispatcher, with appropriate roles, so traversal will be able to obtain the constructor callable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:433
# 872d3717b2784f679e194b7aae7821cd
msgid "There is also a fallback ``__getattr__()`` implementation in the base ``FactoryDispatcher`` class, which will inspect the ``_m`` attribute on the product package for an appropriate constructor, and is also able to obtain constructor information from a persistent ``Product`` instance (from ``Control_Panel`` if there was one). This supports a (legacy) approach where instead of calling ``registerClass()`` to register constructors, constructors are set in a dict called ``_m`` at the root of the product."
msgstr ""

