# SOME DESCRIPTIVE TITLE.
# Copyright (C) Plone community and other individual contributors
# This file is distributed under the same license as the Plone Developer Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Plone Developer Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-09 14:22+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../images/content.rst:3
# e63d77548e604842893dce3bde72a040
msgid "Image-like content"
msgstr ""

#: ../../images/content.rst:5
#: ../../images/templates.rst:5
# 2e50821d15004dbfa5316cef093b7410
# 2c0893f642f8443989592e1f9f187aa3
msgid "Description"
msgstr ""

#: ../../images/content.rst:7
# 3d96fd91b13c4a6ebfffac727881b289
msgid "How to programmatically manipulate images on your Plone site."
msgstr ""

#: ../../images/content.rst:12
# 34d56a6b3b644186a4f19eea877f6de9
msgid "Introduction"
msgstr ""

#: ../../images/content.rst:14
# cd4cf5780a6c4a90ac084a4b0802b18b
msgid "Plone supports image content in two forms:"
msgstr ""

#: ../../images/content.rst:16
# 2d8269b66bc04f5484d57efae5bd0688
msgid "As stand-alone content type, images will be visible in the sitemap. This is the case for the default ``Image`` content type, but you can create custom content types with similar properties."
msgstr ""

#: ../../images/content.rst:20
# 4ea65f9786584bb08d0877ae950869e2
msgid "As a field, the image is directly associated with one content object.  Use ``Archetypes.fields.ImageField``."
msgstr ""

#: ../../images/content.rst:25
# c1bc19a4dd9e4c08aaf372674ee9a338
msgid "Custom image content type"
msgstr ""

#: ../../images/content.rst:27
# 378a609a47ac4d408f8bc3fe964f98f7
msgid "If you want to have your custom content type behave like the stock Plone ``Image`` content type:"
msgstr ""

#: ../../images/content.rst:30
# 0c7266cd23c74b60a8175d866f899a05
msgid "Inherit from the content class ``Products.ATContentType.content.image.ATImage`` and use the schema from that class."
msgstr ""

#: ../../images/content.rst:33
# 9a3c6fdfd3fc48ecaa962a730612538e
msgid "When writing the ``GenericSetup`` XML of your type, follow the example of `Image.xml <https://github.com/plone/Products.CMFPlone/tree/master/Products/CMFPlone/profiles/default/types/Image.xml>`_."
msgstr ""

#: ../../images/content.rst:35
# 8ff94ce775724e698e385afa4ecabf68
msgid "Do not set workflow for your type in ``profiles/default/workflows.xml``"
msgstr ""

#: ../../images/content.rst:48
# 2109d76a013e4dccadebb944534495cd
msgid "Image scales (Plone 4)"
msgstr ""

#: ../../images/content.rst:50
# b9fa33e2c192493994fd4e5f2a862922
msgid "Archetypes based content image scales is handled by `plone.namedfile <https://pypi.python.org/pypi/plone.namedfile>`_."
msgstr ""

#: ../../images/content.rst:52
# e471f46a9cd74b21a772673869e9be79
msgid "Archetypes based content image scales is handled by `plone.app.imaging <http://plone.org/products/plone.app.imaging>`_."
msgstr ""

#: ../../images/content.rst:54
# f20665cdb8ff4715a3b519f84ac99df2
msgid "Both packages offer the same traverseable `@@images` view which can be used from page templates and Python code to provide different image scales for image fields on content."
msgstr ""

#: ../../images/content.rst:58
# 679a8e87d1914cedb195aa6477023bbb
msgid "Image scales (Plone 3)"
msgstr ""

#: ../../images/content.rst:60
# f340a4f888704dc7aacb59f23d798344
msgid "When the image is uploaded, both field or content, Plone creates scaled-down versions from it by default."
msgstr ""

#: ../../images/content.rst:63
# 59430c2c2c4a4ad2b1cee89e5ccd560e
msgid "These are configured using the ``ImageField`` *``sizes``* parameter. See the ``ImageField`` class notes here:"
msgstr ""

#: ../../images/content.rst:66
#: ../../images/templates.rst:174
# 9f9202e6255b434d92a2a1eef481b1a5
# 03e2ac99e9274a319f674ac0dd809980
msgid "https://github.com/plone/Products.Archetypes/tree/master/Products/Archetypes/Field.py"
msgstr ""

#: ../../images/content.rst:68
# 428c723458494f059892301418611ee2
msgid "The default image scales for ``Image`` content are configured in:"
msgstr ""

#: ../../images/content.rst:70
#: ../../images/content.rst:95
#: ../../images/templates.rst:154
# 9a6c20706ec64e1fa56b6df4d7a65900
# ee27fc9b0ecd42cf9a9b475f3b8aa5af
# 8da78fcadd574195ba5d0041bad89710
msgid "https://github.com/plone/Products.ATContentTypes/tree/master/Products/ATContentTypes/content/image.py"
msgstr ""

#: ../../images/content.rst:72
# 9dd6043faf48424e99add45f2c611a44
msgid "Configuration::"
msgstr ""

#: ../../images/content.rst:83
# cc422e1920d54de4b581e3445037540e
msgid "More info:"
msgstr ""

#: ../../images/content.rst:85
# 3d79c68d6ec24043829bb96231d9d58a
msgid "http://plone.293351.n2.nabble.com/Register-browser-view-for-image-scales-tp5626267p5626267.html"
msgstr ""

#: ../../images/content.rst:88
# 133111db9f84400096411767825d3b17
msgid "``getScale()``"
msgstr ""

#: ../../images/content.rst:90
# 111b73d1fdaa479b81a8ec46309cf057
msgid "``ImageField`` provides a ``getScale()`` method to get the scaled version of the image based on the ``sizes`` configuration key."
msgstr ""

#: ../../images/content.rst:93
# 6f9bb2ceebd649baa36516ccbd746d13
msgid "See example in ``__bobo_traverse__``:"
msgstr ""

#: ../../images/content.rst:99
# 02e87c61a7524f918a0f9cb55f9bbe05
msgid "Accessing images"
msgstr ""

#: ../../images/content.rst:101
# dea06d192a7b4fe688c0afd921077dfb
msgid "``ImageField`` is mapped to a traversable attribute of your content type. E.g. if your content object has a field ``imageOne`` and is found at this URL::"
msgstr ""

#: ../../images/content.rst:106
# d7fbb76f82f4431a92b564d4efb6c522
msgid "the image can be directly downloaded from::"
msgstr ""

#: ../../images/content.rst:112
# 61726d4f7761473a8bef7804173d98de
msgid "Scaled versions for Image content (``ATImage``)"
msgstr ""

#: ../../images/content.rst:114
# 1ec14dcad574448b99ee9eedaeabbccb
msgid "If you want different scales you can add ``image_XXX`` prefix where ``XXX`` is the corresponding scale name::"
msgstr ""

#: ../../images/content.rst:119
# a849b7f7c3ae4b2ca606e7e30d62cf2e
msgid "In **Plone 4** this behavior comes from the monkey-patch applied by the `plone.app.imaging <http://plone.org/products/plone.app.imaging>`_ package."
msgstr ""

#: ../../images/content.rst:122
# 79b99671b74c41fea9033275ce82cf7a
msgid "In **Plone 3** this hook is defined in ``__bobo_traverse__`` in ``ATImage`` class: * https://github.com/plone/Products.ATContentTypes/tree/master/Products/ATContentTypes/content/image.py"
msgstr ""

#: ../../images/content.rst:127
# 87ee79df079a40a390e5dce15eb01bb0
msgid "``portal_catalog`` and images"
msgstr ""

#: ../../images/content.rst:129
# 8c01603d770c4dbea17cef24d229612d
msgid "Do not index image objects themselves, as adding image data to the ``portal_catalog`` brain objects would greatly increase their site and make brain look-up slow."
msgstr ""

#: ../../images/content.rst:133
# 983a1971451b4a57af255bde26b21edb
msgid "Instead, index only image paths using :doc:`getPhysicalPath() </serving/traversing>`. When you need to display image using metadata columns, you can generate the image URL manually. Then, the image object will be woken up when the browser makes a HTTP request for the image."
msgstr ""

#: ../../images/content.rst:140
# d037a6289d704fdf855ed4bc71ff925c
msgid "Custom image scales and recreating scale data"
msgstr ""

#: ../../images/content.rst:143
# 4c46c4a36ebd4ee1ba489af5de331d82
msgid "For Plone 4"
msgstr ""

#: ../../images/content.rst:145
# 72198d1685d4405990110fb2fa099fa9
msgid "`plone.app.imaging <http://plone.org/products/plone.app.imaging>`_ allows you to configure available image scales in ``portal_properties`` -> ``imaging_properties``."
msgstr ""

#: ../../images/content.rst:149
# 7a0ed38d09bd438e941985d19cbefd00
msgid "You can update these through-the-web or using :doc:`GenericSetup profile </components/genericsetup>`."
msgstr ""

#: ../../images/content.rst:152
# c3cf7e35960d4cec8bb608b024bafa59
msgid "``propertiestool.xml``"
msgstr ""

#: ../../images/content.rst:181
# 41f4fa9734ae40cda17a8d6089841737
msgid "For Plone 4, after adding new scales no batch processing of existing images are needed and new scales are created on-demand when the images are viewed for the first time."
msgstr ""

#: ../../images/content.rst:187
# 1ab445c607884745b2ed0fcc9d546ebd
msgid "For Plone 3"
msgstr ""

#: ../../images/content.rst:189
# 319d6e758a214c5bb37ad08cbe67e8fe
msgid "Below is an example showing how to make custom image scales available in your Plone site."
msgstr ""

#: ../../images/content.rst:192
# 333072efd8b44beb955deaea693a6960
msgid "Monkey-patch ``ATImages`` to have new scale versions available."
msgstr ""

#: ../../images/content.rst:194
# e5d42cd52538453496883ade9fa5e953
msgid "Have migration code which will run all through all ``ATImage`` content on the site and recreate their scale versions, thus populating image scale data for new scale versions also."
msgstr ""

#: ../../images/content.rst:198
# 37d73b905bd1471eb49fb61b16bb1ac8
msgid "The new sizes are automatically effected to rich text editor image sizes options (active WYSIWYG editor on Plone site)"
msgstr ""

#: ../../images/content.rst:201
# fa81af20b99f47819eada89d0f22853a
msgid "``images.py``::"
msgstr ""

#: ../../images/content.rst:287
# f9a04edc176f417199439c1490c27edd
msgid "``configure.zcml``"
msgstr ""

#: ../../images/content.rst:305
# a7ac9207a2274419bba118c110bc9b03
msgid "Automatic image scales on ReferenceFields"
msgstr ""

#: ../../images/content.rst:307
# ee3300d735a24bfb8a4abf264a6bc9d8
msgid "Python code::"
msgstr ""

#: ../../images/content.rst:343
# fabc6d8e8ae54db48a3ca92cc5258152
msgid "in configure.zcml::"
msgstr ""

#: ../../images/index.rst:3
# ab5500d241684e7eb7a54f81d74af75d
msgid "Images"
msgstr ""

#: ../../images/index.rst:5
# 51c1a5a03e0f48bcad38fe9068491e5f
msgid "Image manipulation related documentation."
msgstr ""

#: ../../images/pil.rst:3
# e8aef800c85c4c468184532d3809067c
msgid "Python Imaging Library (PIL)"
msgstr ""

#: ../../images/pil.rst:5
# 3deab18db891458a8148858ac698de24
msgid "Plone uses internally  Python Imaging Library (PIL) for low level image manipulation and decoding."
msgstr ""

#: ../../images/pil.rst:9
# fb60ac47ffdd4a9dbba76250166ba980
msgid "Installing PIL"
msgstr ""

#: ../../images/pil.rst:11
# d0a3d59b12674be883983ced594fb0da
msgid "This concerns only UNIXes as Windows installer comes with PIL binaries."
msgstr ""

#: ../../images/pil.rst:14
# 03c2a0d9db9b48569e44cab388ab7143
msgid "http://www.koansys.com/tech/install-plone-with-zopeskel-buildout-needs-pil"
msgstr ""

#: ../../images/pil.rst:16
# ba0986f3223648279591ca4e194b21a2
msgid "http://blog.twinapex.fi/2009/11/19/installing-python-imaging-library-pil-under-virtualenv-or-buildout/"
msgstr ""

#: ../../images/pil.rst:18
# 4f4ef1c21f6b49aab818e5055d2d519b
msgid "http://destefano.wordpress.com/2008/03/18/zope-buildouts-for-plone-on-os-x-heaven-or-hell/"
msgstr ""

#: ../../images/pil.rst:20
# 30da969edce048f7bc85007fd21cf7a6
msgid "PIL has libjpeg as a dependency and you need to install it using your operating system package manager. On OSX you can use `macports <http://www.macports.org/>`_."
msgstr ""

#: ../../images/pil.rst:24
# 771b79e9e3434957a49379f06546d748
msgid "Make sure that you don't have PIL without libjpeg support in your system-wide Python setup"
msgstr ""

#: ../../images/pil.rst:28
# 7c7b6a368bb1422fbd95b14f7c7fd0d9
msgid "Installing libjpeg on OS X"
msgstr ""

#: ../../images/pil.rst:30
# c598d17084d94206a1995c7739f5f665
msgid "Get http://www.ijg.org/files/jpegsrc.v7.tar.gz, and then::"
msgstr ""

#: ../../images/pil.rst:39
# 2de7c61abf924794a962fea462a63928
msgid "Then you can install PIL with JPEG support."
msgstr ""

#: ../../images/pil.rst:42
# 1020686c3eb240178064894cb36def56
msgid "Pillow"
msgstr ""

#: ../../images/pil.rst:44
# 8e28d515218c4f9d8d8f3eba4cc9227d
msgid "In late 2010, a packaging fork called `Pillow`_ was created to offer better multi-OS installation support. Specifically it offers:"
msgstr ""

#: ../../images/pil.rst:46
# d0ca382f0d3643299ebc76581d5400c6
msgid "Setuptools compatibility"
msgstr ""

#: ../../images/pil.rst:47
# 607cabcbd7d9498da20bd488aa4252b9
msgid "Hosting (and mirroring) by PyPI (vs. off site)"
msgstr ""

#: ../../images/pil.rst:48
# e4c64a84954549c283394af8ccfb01d7
msgid "Windows eggs"
msgstr ""

#: ../../images/pil.rst:49
# 385e132c11c44839942bab6dd29355c6
msgid "Bug fixes (many of which simply add vendor-specific library directories to the compiler's search path.)"
msgstr ""

#: ../../images/pil.rst:51
# c18e0edbc7bc4e1599cade05c3b12bde
msgid "As a result, PIL can now be installed on many more systems simply by using the \"Pillow\" package name. E.g.::"
msgstr ""

#: ../../images/pil.rst:55
# 57d24fee06824d85a2631d6d9c6168e8
msgid "Or::"
msgstr ""

#: ../../images/pil.rst:59
# 098837ee96dd4e6b8be67a522e2fd619
msgid "Or add to the list of eggs in your Buildout."
msgstr ""

#: ../../images/templates.rst:3
# ba01e782dd8d4279aa28a9c6f5c54057
msgid "Images in page templates"
msgstr ""

#: ../../images/templates.rst:7
# 203407baeff24c91a02c4d4e456b44ee
msgid "How to link to images in page templates in Plone."
msgstr ""

#: ../../images/templates.rst:12
# 0a66c1347d674a189af97a33a623a8c9
msgid "Putting a static image into a page template"
msgstr ""

#: ../../images/templates.rst:14
# b0d6d2b0a6874e8880539a86f7db0f70
msgid "Here is an example how to create an ``<img>`` tag in a ``.pt`` file:"
msgstr ""

#: ../../images/templates.rst:20
# a743d216393544f8bfb3d48835d32933
msgid "Let's break this down:"
msgstr ""

#: ../../images/templates.rst:22
#: ../../images/templates.rst:31
# 674149abe07747df973026ba05259a34
# f640e3190d2c4feab6e043db726393aa
msgid "Obviously we are rendering an ``<img>`` tag."
msgstr ""

#: ../../images/templates.rst:24
#: ../../images/templates.rst:33
# 366e2d91ef9744f1bc9a3f6aa186fcd8
# eb6655880ac64bef88a1484b61b410f7
msgid "The ``src`` attribute is dynamically generated using a :term:`TALES` expression."
msgstr ""

#: ../../images/templates.rst:27
# f515f15f0ee142e29c0a9b15dd7a4cca
msgid "We use *string comprehension* to create the ``src`` attribute. Alternatively we could use e.g. the ``python:`` :term:`TALES` expression type and embed one line python of code to generate the attribute value."
msgstr ""

#: ../../images/templates.rst:35
# a963820445bb46ae86fe2098e8a4f087
msgid "We use a *string comprehension* to create the ``src`` attribute. Alternatively, we could for example use the ``python:`` protocol and embed one line of python code to generate the attribute value."
msgstr ""

#: ../../images/templates.rst:39
# b8dacb0acd5a4c0cb8f88a3593b07982
msgid "We look up a helper view called :doc:`plone_portal_state </misc/context>`. This is a ``BrowserView`` shipped with Plone. Its purpose is to expose different helper methods to page templates and Python code."
msgstr ""

#: ../../images/templates.rst:43
# b2f7dc24aa41456f980edfb27db3ab90
msgid "We call ``plone_portal_state``'s ``portal_url()`` method. This will return the root URL of our site. Note that this is not necessary the domain's top-level URL, as Plone sites can be nested in folders, or served on a path among unrelated web properties."
msgstr ""

#: ../../images/templates.rst:49
# 924437aac7634edcaf95475ad2efbf3b
msgid "We append our Zope 3 resource path to our site root URL (see below). This maps to some static media folder in our add-on files on the disk."
msgstr ""

#: ../../images/templates.rst:52
# a3e8c69fc89c4c0a85616663a13119e7
msgid "There we point to ``close-icon.png`` image file."
msgstr ""

#: ../../images/templates.rst:54
# 538e82cd55a44de69e0e4aba4a84c8e0
msgid "We also add the ``alt`` attribute of the ``<img>`` tag normally. It is not dynamically generated."
msgstr ""

#: ../../images/templates.rst:57
# 3a62f83cd8784a8ea8e130f37d469db3
msgid "When the page template is generated, the following snippet could look like, for example:"
msgstr ""

#: ../../images/templates.rst:64
# 763f26167625492788260e6e44e622dd
msgid "... or:"
msgstr ""

#: ../../images/templates.rst:70
# 67baf2490cd34a0a8823ea7b450d2fc9
msgid "... depending on the site virtual hosting configuration."
msgstr ""

#: ../../images/templates.rst:73
# 4f2fd502983a4f03a1d49d0afab0240e
msgid "Relative image look-ups"
msgstr ""

#: ../../images/templates.rst:77
# d8a5709f53614b76a7f0a3a69fc11980
msgid "Never create relative image look-ups without prefixing the image source URL with the site root."
msgstr ""

#: ../../images/templates.rst:80
# 5660bb4b68064d288b8e3ea920ebc412
msgid "Hardcoded relative image path might seem to work:"
msgstr ""

#: ../../images/templates.rst:86
# 96e4b934586a4ffb86e8cce654349d9c
msgid "... but this causes a different image *base URL* to be used on every page. The image URLs, from the browser point of view, would be:"
msgstr ""

#: ../../images/templates.rst:93
# 3d699cdb24044e46860bd1cbe9b1d2b7
msgid "... and then in another folder:"
msgstr ""

#: ../../images/templates.rst:99
# 25670040f72349d1b9a190ff5df50580
msgid "... which **prevents the browser from caching the image**."
msgstr ""

#: ../../images/templates.rst:102
# e212bdac70704a0c9c2ab1d4f5fd3bfd
msgid "Registering static media folders in your add-on product"
msgstr ""

#: ../../images/templates.rst:105
# d7c0a5d16cb34b43a2aff5ee89f26c56
msgid "Zope 3 resource directory"
msgstr ""

#: ../../images/templates.rst:107
# b701cb7604994365b34aaf50bbd9800e
msgid "The right way to put in a static image is to use a Zope 3 resource directory."
msgstr ""

#: ../../images/templates.rst:110
# adacf4d8dc0947a984474fafbcc5d252
msgid "Create folder ``yourcompany.product/yourcompany/product/browser/static``."
msgstr ""

#: ../../images/templates.rst:112
# b4ede7f2d2554d34af5b3edb2beb1a07
msgid "Add the following :term:`ZCML` to ``yourcompany.product/yourcompany/product/browser/configure.zcml``."
msgstr ""

#: ../../images/templates.rst:123
# 8b94fdcb4cf5493593511268d3129cf1
msgid "This will be picked up at the ``++resource++yourcompany.product/`` static media path."
msgstr ""

#: ../../images/templates.rst:126
# 3f6eec2b78754e3f8c0c6adb92e355d2
msgid "Layer is optional: the static media path is available only when your add-on product is installed if the :doc:`layer </views/layers>` is specified."
msgstr ""

#: ../../images/templates.rst:131
# ca772eb240c0478daf356ffd95779e0f
msgid "Grok static media folder"
msgstr ""

#: ../../images/templates.rst:133
# abcb41a768984aada49c2230378b03b9
msgid "This applies for add-on products using :doc:`five.grok </components/grok>` API."
msgstr ""

#: ../../images/templates.rst:135
# ea1c66f2a4f2456990585236f92ce7af
msgid "Create folder ``yourcompany.product/yourcompany/product/static``"
msgstr ""

#: ../../images/templates.rst:137
# 8b899dcade4d40afbfd00fa9609b3d89
msgid "This will be automatically picked up as ``++resource++yourcompany.product/`` static media path when a Grok'ed add-on is launched."
msgstr ""

#: ../../images/templates.rst:142
# 206c526c24bd40feb261042e5aa43ce5
msgid "Rendering Image content items"
msgstr ""

#: ../../images/templates.rst:144
# 0122ec4395f34970b76a80e2d6aead55
msgid "You can refer to ``ATImage`` object's content data download by adding ``/image`` to the URL:"
msgstr ""

#: ../../images/templates.rst:151
# e6c8e8619d0c42e2b75f5bf4327b1e7e
msgid "The magic is done in the ``__bobo_traverse__`` method of ``ATImage`` by providing traversable hooks to access image download:"
msgstr ""

#: ../../images/templates.rst:157
# 344ca7b84fd246d2a5575be28d8d60b1
msgid "Rendering ``ImageField``"
msgstr ""

#: ../../images/templates.rst:159
# 8a704a55da7d4d19b714bd81897331a1
msgid "Archetypes's ``ImageField`` maps its data to the content object at attribute which is the field's name. If you have a field ``campaignVideoThumbnail`` you can generate an image tag as follows:"
msgstr ""

#: ../../images/templates.rst:168
# 8f735213653b47049d39fb828c350b9c
msgid "If you need more complex ``<img>`` output, create a helper function in your ``BrowserView`` and use Python code to perform the ``ImageField`` manipulation."
msgstr ""

#: ../../images/templates.rst:172
# 4b3a6ea7b4f44ddc9654ca78ff2493e9
msgid "See ``ImageField`` for more information:"
msgstr ""

#: ../../images/templates.rst:177
# 1ec0a428ed90441dba7c5cc9057441f8
msgid "``tag()`` method"
msgstr ""

#: ../../images/templates.rst:181
# b2dffc74661c4e908129ec3adf171418
msgid "Using ``tag()`` is discouraged. Create your image tags manually."
msgstr ""

#: ../../images/templates.rst:183
# 16aa4066aefd47c4bb40e4b88b1a1fcb
msgid "Some content provides a handy ``tag()`` method to generate ``<img src=\"\" />`` tags with different image sizes."
msgstr ""

#: ../../images/templates.rst:187
# 12d5956faf2649d5825810383247a3fe
msgid "``tag()`` is available on"
msgstr ""

#: ../../images/templates.rst:189
# 61e2aa24a43e4d388de9f1d40092f0a8
msgid "Archetypes ``ImageField``"
msgstr ""

#: ../../images/templates.rst:191
# 4570b4dcc96944f08798d835ba5ec27d
msgid "``ATNewsItem``"
msgstr ""

#: ../../images/templates.rst:193
# 1d62ae1bc5324d26bc9668d4c32af690
msgid "``ATImage``"
msgstr ""

#: ../../images/templates.rst:195
# ae46a2c18a3743a8ad37c73e64371af6
msgid "``FSImage`` (Zope 2 image object on the file-system)"
msgstr ""

#: ../../images/templates.rst:197
# a8617c6c2dba416cb1e141846a9a11e2
msgid "``tag()`` is defined in `OFS.Image <http://svn.zope.org/Zope/trunk/src/OFS/Image.py?rev=96262&view=auto>`_."
msgstr ""

#: ../../images/templates.rst:200
# 68a7856c9c3b479aaa75a1f2199fb9ec
msgid "Scaling images"
msgstr ""

#: ../../images/templates.rst:202
# 0b2ea432737f4a9aafd26e06f805e0c1
msgid "``tag()`` supports scaling. Scale sizes are predefined. When an ``ATImage`` is uploaded, various scaled versions of it are stored in the database."
msgstr ""

#: ../../images/templates.rst:206
# 7219361c58d14430802f9961b27d9ac3
msgid "Displaying a version of the image using the \"preview\" scale::"
msgstr ""

#: ../../images/templates.rst:210
# a85af16529344b1c91fc4d38fa1a0048
msgid "This will generate:"
msgstr ""

#: ../../images/templates.rst:218
# 5f23813b2fca4a5d9236fc4d111bafb7
msgid "If you are not using the ``alt`` attribute, you should set it to an empty string: ``alt=\"\"``. Otherwise screen readers will read the ``src`` attribute of the ``<img>`` tag aloud."
msgstr ""

#: ../../images/templates.rst:222
# 4f13dcbb2faa45258dcebaaa178b4a2a
msgid "In order to simplify accessing these image scales, use `archetypes.fieldtraverser <http://pypi.python.org/pypi/archetypes.fieldtraverser>`_. This package allows you to traverse to the stored image scales while still using ``AnnotationStorage`` and is a lot simpler to get going (in the author's humble opinion :)."
msgstr ""

#: ../../images/templates.rst:228
# c645ca01f8cf43d6bf0ac0000ff8586d
msgid "Default scale names and sizes are defined in ``ImageField`` declaration for custom ``ImageField``\\s. For ``ATImage``, those are in `Products.ATContentTypes.content.image <http://svn.plone.org/svn/collective/Products.ATContentTypes/trunk/Products/ATContentTypes/content/image.py>`_."
msgstr ""

#: ../../images/templates.rst:235
# ded9386d62434044be9d5b3daa42f32c
msgid "Lightbox style image pop-ups"
msgstr ""

#: ../../images/templates.rst:237
# ef71e07d653443b9883911d48380acce
msgid "Plone comes with `plone.app.jquerytools <http://pypi.python.org/pypi/plone.app.jquerytools>`_ which offers easy integration for lightbox style image pop-ups."
msgstr ""

#: ../../images/templates.rst:240
# 914db4061cee4de0acb2b2d42160705a
msgid "You can use Plone standard image content type, defining scales using `plone.app.imaging <https://github.com/plone/plone.app.imaging/>`_ or you can define image fields in your schema."
msgstr ""

#: ../../images/templates.rst:243
# 52b4f58bbb864a71b7a218d3eeba29ea
msgid "In the example below we define custom image fields in Archetypes schema."
msgstr ""

#: ../../images/templates.rst:245
# efdf0dc17eba40798a24925babdf97c5
msgid "contenttype.py::"
msgstr ""

#: ../../images/templates.rst:273
# 91a800ba19df4cbfa49dc0915706668a
msgid "Related view page template file"
msgstr ""

#: ../../images/templates.rst:285
# 4bc5382ef4ae43008f9e0d4dd7c17a1a
msgid "And then we activate all this in a Javascript using ``prepOverlay()`` from ``plone.app.jquerytools``"
msgstr ""

#: ../../images/templates.rst:317
# b7a7dccd118446a3837d233a8e7f9586
msgid "Rotating banners"
msgstr ""

#: ../../images/templates.rst:319
# eaf84d26de4e42bd957d622170f79259
msgid "Simple rotating banneres can be done with `jQuery Cycle plug-in (lite) <http://jquery.malsup.com/cycle/>`_."
msgstr ""

#: ../../images/templates.rst:321
# 6e74c8d7f9af4266ac1c1f8ee791f492
msgid "Example TAL code... render list of content items and extract one image from each of them"
msgstr ""

#: ../../images/templates.rst:335
# 6475e123ba354735939539dd4be8cc5c
msgid "Then use the the following Javascript to boostrap the cycling"
msgstr ""

#: ../../images/templates.rst:353
# cd1d341757dc49338035d0c5e07c9ef2
msgid "You need to have this snippet and ``jquery.cycle.light.js`` in your portal_javascripts registry."
msgstr ""

#: ../../images/templates.rst:355
# db56e671a3124a47866315b5d20244af
msgid "You also may need to set pixel height for ``cycle`` elements, as they use absolute positioning making the element take otherwise 0 pixel of height."
msgstr ""

