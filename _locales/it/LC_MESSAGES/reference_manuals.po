# 
msgid ""
msgstr ""
"Project-Id-Version: Plone Developer Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-09 14:17+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference_manuals/active/deployment/backup.rst:3
#: ../../reference_manuals/active/deployment/copy.rst:3
msgid "Backing up your Plone deployment"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:5
#: ../../reference_manuals/active/deployment/copy.rst:5
#: ../../reference_manuals/active/deployment/index.rst:5
#: ../../reference_manuals/active/helloworld/environment/index.rst:5
#: ../../reference_manuals/active/helloworld/environment/plone.rst:5
#: ../../reference_manuals/active/helloworld/environment/python.rst:5
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:5
#: ../../reference_manuals/active/helloworld/extend/addon.rst:5
#: ../../reference_manuals/active/helloworld/extend/content.rst:5
#: ../../reference_manuals/active/helloworld/extend/files.rst:5
#: ../../reference_manuals/active/helloworld/extend/form.rst:5
#: ../../reference_manuals/active/helloworld/extend/index.rst:5
#: ../../reference_manuals/active/helloworld/extend/view.rst:5
#: ../../reference_manuals/active/helloworld/index.rst:5
#: ../../reference_manuals/active/helloworld/intro.rst:5
#: ../../reference_manuals/active/helloworld/todo.rst:5
#: ../../reference_manuals/active/ploneformgen/captcha.rst:5
#: ../../reference_manuals/active/ploneformgen/creating_content.rst:5
#: ../../reference_manuals/active/ploneformgen/creating_content.rst:24
#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:5
#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:5
#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:5
#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:5
#: ../../reference_manuals/active/ploneformgen/embedding.rst:5
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:5
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:44
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:80
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:170
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:186
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:201
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:252
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:288
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:334
#: ../../reference_manuals/active/ploneformgen/gpg.rst:5
#: ../../reference_manuals/active/ploneformgen/index.rst:5
#: ../../reference_manuals/active/ploneformgen/installation.rst:5
#: ../../reference_manuals/active/ploneformgen/javascript.rst:5
#: ../../reference_manuals/active/ploneformgen/multipage.rst:5
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:5
#: ../../reference_manuals/active/ploneformgen/request.rst:5
#: ../../reference_manuals/active/ploneformgen/restyle.rst:5
#: ../../reference_manuals/active/ploneformgen/select_mail.rst:5
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:5
#: ../../reference_manuals/active/writing/crosslinking.rst:5
#: ../../reference_manuals/active/writing/developermanual.rst:5
#: ../../reference_manuals/active/writing/nursinghome.rst:5
#: ../../reference_manuals/active/writing/writing.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/index.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:5
#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:5
#: ../../reference_manuals/old/archetypes/appendix.rst:5
#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:5
#: ../../reference_manuals/old/archetypes/display_menu.rst:5
#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:5
#: ../../reference_manuals/old/archetypes/fields/fields_reference.rst:5
#: ../../reference_manuals/old/archetypes/fields/index.rst:5
#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:5
#: ../../reference_manuals/old/archetypes/fields/widgets_reference.rst:5
#: ../../reference_manuals/old/archetypes/index.rst:5
#: ../../reference_manuals/old/archetypes/introduction.rst:8
#: ../../reference_manuals/old/archetypes/introduction.rst:40
#: ../../reference_manuals/old/archetypes/introduction.rst:130
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:5
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:12
#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:5
#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:5
#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/index.rst:5
#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:7
#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/index.rst:5
#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:7
#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:7
#: ../../reference_manuals/old/archgenxml/index.rst:5
#: ../../reference_manuals/old/archgenxml/recipes-and-tips/index.rst:5
#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:7
#: ../../reference_manuals/old/archgenxml/reference/index.rst:5
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:7
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:7
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:9
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/index.rst:5
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/index.rst:5
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:7
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:7
#: ../../reference_manuals/old/buildout/additional.rst:5
#: ../../reference_manuals/old/buildout/buildoutcfg.rst:5
#: ../../reference_manuals/old/buildout/creating.rst:5
#: ../../reference_manuals/old/buildout/creatingpackage.rst:5
#: ../../reference_manuals/old/buildout/defaults.rst:6
#: ../../reference_manuals/old/buildout/deployment.rst:5
#: ../../reference_manuals/old/buildout/index.rst:5
#: ../../reference_manuals/old/buildout/introduction.rst:5
#: ../../reference_manuals/old/buildout/packages.rst:5
#: ../../reference_manuals/old/buildout/prerequisites.rst:5
#: ../../reference_manuals/old/buildout/recipes.rst:5
#: ../../reference_manuals/old/buildout/subversion.rst:5
#: ../../reference_manuals/old/buildout/thirdparty.rst:5
#: ../../reference_manuals/old/formlib/customtemplate.rst:5
#: ../../reference_manuals/old/formlib/index.rst:5
#: ../../reference_manuals/old/formlib/simple.rst:5
#: ../../reference_manuals/old/formlib/validation.rst:6
#: ../../reference_manuals/old/formlib/why.rst:5
#: ../../reference_manuals/old/forms/index.rst:5
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:4
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:4
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:4
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:4
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:4
#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/index.rst:5
#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/index.rst:5
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/index.rst:5
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/index.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:9
#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:7
#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:7
#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:5
#: ../../reference_manuals/old/portlets/appendix/moving.rst:5
#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:5
#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:5
#: ../../reference_manuals/old/portlets/architecture.rst:5
#: ../../reference_manuals/old/portlets/assignments.rst:5
#: ../../reference_manuals/old/portlets/blacklisting.rst:5
#: ../../reference_manuals/old/portlets/rendered.rst:5
#: ../../reference_manuals/old/portlets/testing.rst:5
#: ../../reference_manuals/old/portlets/tips.rst:5
#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:5
#: ../../reference_manuals/old/testing/index.rst:5
#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:5
#: ../../reference_manuals/old/zope_secrets/hooks.rst:5
#: ../../reference_manuals/old/zope_secrets/request.rst:5
#: ../../reference_manuals/old/zope_secrets/security.rst:5
#: ../../reference_manuals/old/zope_secrets/startup.rst:5
msgid "Description"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:7
#: ../../reference_manuals/active/deployment/copy.rst:7
msgid "Strategies for backing up operating Plone installations."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:11
#: ../../reference_manuals/active/deployment/copy.rst:11
msgid ""
"A guide to determining what to back up and how to back it up and restore it "
"safely."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:15
#: ../../reference_manuals/active/deployment/copy.rst:15
#: ../../reference_manuals/active/deployment/intro.rst:3
#: ../../reference_manuals/active/helloworld/intro.rst:3
#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:10
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:12
#: ../../reference_manuals/active/ploneformgen/index.rst:10
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:12
#: ../../reference_manuals/active/schema-driven-forms/intro.rst:2
#: ../../reference_manuals/active/writing/crosslinking.rst:13
#: ../../reference_manuals/active/writing/developermanual.rst:15
#: ../../reference_manuals/active/writing/writing.rst:12
#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:3
#: ../../reference_manuals/old/archetypes/appendix.rst:350
#: ../../reference_manuals/old/archetypes/create_event_hook.rst:6
#: ../../reference_manuals/old/archetypes/introduction.rst:3
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:3
#: ../../reference_manuals/old/buildout/introduction.rst:3
#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:2
#: ../../reference_manuals/old/plone_3_theming/index.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:3
#: ../../reference_manuals/old/portlets/tips.rst:13
#: ../../reference_manuals/old/testing/introduction.rst:2
msgid "Introduction"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:17
#: ../../reference_manuals/active/deployment/copy.rst:17
msgid "The key rules of backing up a working system are probably:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:19
#: ../../reference_manuals/active/deployment/copy.rst:19
msgid "Back up everything"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:21
#: ../../reference_manuals/active/deployment/copy.rst:21
msgid "Maintain multiple generations of backup"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:23
#: ../../reference_manuals/active/deployment/copy.rst:23
msgid "Test restoring your backups"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:27
#: ../../reference_manuals/active/deployment/copy.rst:27
msgid ""
"This guide assumes that you are already doing this for your system as a "
"whole, and will only cover the considerations specific to Plone. When we say"
" we are assuming you're already doing this for the system as a whole, what "
"we mean is that your system backup mechanisms — rsync, bakula, whatever — "
"are already backing up the directories into which you've installed Plone."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:34
#: ../../reference_manuals/active/deployment/copy.rst:34
msgid ""
"So, your buildout and buildout caches are already backed up, and you've "
"tested the restore process. So, your remaining consideration is making sure "
"that Plone's database files are adequately backed up and recoverable."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:39
#: ../../reference_manuals/active/deployment/copy.rst:39
msgid "Objects in motion"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:41
#: ../../reference_manuals/active/deployment/copy.rst:41
msgid ""
"Objects in motion tend to remain in motion. Objects that are in motion are "
"difficult or impossible to back up accurately."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:44
#: ../../reference_manuals/active/deployment/copy.rst:44
msgid ""
"Translation: Plone is a long-lived process that is constantly changing its "
"content database. The largest of these files, the Data.fs filestorage which "
"contains everything except Binary Large OBjects (BLOBs), is always open for "
"writing. The BLOB storage, a potentially very complex file hierarchy, is "
"constantly changing and must be referentially synchronized to the "
"filestorage."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:50
#: ../../reference_manuals/active/deployment/copy.rst:50
msgid ""
"This means that most system backup schemes are incapable of making useful "
"backups of the content database while it's in use. We assume you don't want "
"to stop your Plone site just to backup, so you need to add procedures to "
"make sure you have useful backups of Plone's data. (We assume that you know "
"that the same thing is true of your relational database storage. If not, get"
" to studying!)"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:58
#: ../../reference_manuals/active/deployment/copy.rst:58
msgid "Where's my data?"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:60
#: ../../reference_manuals/active/deployment/copy.rst:60
msgid ""
"Your Plone instance installation will contain a ./var directory (in the same"
" directory as buildout.cfg) that contains the frequently changing data files"
" for the instance. Much of what's in ./var, though, is not your actual "
"content database. Rather, it's log, process id, and socket files."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:65
#: ../../reference_manuals/active/deployment/copy.rst:65
msgid "The directories that actually contain content data are:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:67
#: ../../reference_manuals/active/deployment/copy.rst:67
msgid "./var/filestorage"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:69
#: ../../reference_manuals/active/deployment/copy.rst:69
msgid ""
"This is where Zope Object Database filestorage is maintained. Unless you've "
"multiple storages or have changed the name, the key file is Data.fs. It's "
"typically a large file and contains everything except BLOBS."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:74
#: ../../reference_manuals/active/deployment/copy.rst:74
msgid ""
"The other files in filestorage, with extensions like .index, .lock, .old, "
".tmp are ephemeral, and will be recreated by Zope if they're absent."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:77
#: ../../reference_manuals/active/deployment/copy.rst:77
msgid "./var/blobstorage"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:79
#: ../../reference_manuals/active/deployment/copy.rst:79
msgid ""
"This directory contains a very deeply nested directory hierarchy that, in "
"turn, contains the BLOBs of your database: PDFs, image files, office "
"automation files and such."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:83
#: ../../reference_manuals/active/deployment/copy.rst:83
msgid ""
"The key thing to know about filestorage and blobstorage is that they are "
"maintained synchronously. The filestorage has references to BLOBs in the "
"blobstorage. If the two storages are not perfectly synchronized, you'll get "
"errors."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:89
#: ../../reference_manuals/active/deployment/copy.rst:89
msgid "collective.recipe.backup"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:91
#: ../../reference_manuals/active/deployment/copy.rst:91
msgid ""
"`collective.recipe.backup "
"<http://pypi.python.org/pypi/collective.recipe.backup>`_ is a well-"
"maintained and well-supported recipe for solving the \"objects in motion\" "
"problem for a live Plone database. It makes it easy to both back up and "
"restore the object database. The recipe is basically a sophisticated wrapper"
" around ``repozo`, a Zope database backup tool, and ``rsync``, the common "
"file synchronization tool."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:100
#: ../../reference_manuals/active/deployment/copy.rst:100
msgid ""
"Big thanks to Reinout van Rees, Maurits van Rees and community helpers for "
"creating and maintaining collective.recipe.backup. We all owe them drinks of"
" their choice."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:104
#: ../../reference_manuals/active/deployment/copy.rst:104
msgid ""
"If you're using any of Plone's installation kits, collective.recipe.backup "
"is included in your install. If not, you may add it to your buildout by "
"adding a ``backup`` part:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:119
#: ../../reference_manuals/active/deployment/copy.rst:119
msgid ""
"There are several useful option settings for the recipe, all set by adding "
"configuration information. All are documented on `the PyPI page "
"<http://pypi.python.org/pypi/collective.recipe.backup>`_. Perhaps the most "
"useful is the ``location`` option, which sets the destination for backup "
"files:"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:132
#: ../../reference_manuals/active/deployment/copy.rst:132
msgid ""
"If this is unspecified, the backup destination is the buildout var "
"directory. The backup destination, though, may be any reliably attached "
"location — including another partition, drive or network storage."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:137
#: ../../reference_manuals/active/deployment/copy.rst:137
msgid "Operation"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:139
#: ../../reference_manuals/active/deployment/copy.rst:139
msgid ""
"Once you've run buildout, you'll have ``bin/backup`` and ``bin/restore`` "
"scripts in your buildout. Since all options are set via buildout, there are "
"few command-line options, and operation is generally as simple as using the "
"bare commands. ``bin/restore`` will accept a date-time argument if you're "
"keeping multiple backups. See the docs for details."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:145
#: ../../reference_manuals/active/deployment/copy.rst:145
msgid ""
"Backup operations may be run without stopping Plone. Restore operations "
"require that you stop Plone, then restart after the restore is complete."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:148
#: ../../reference_manuals/active/deployment/copy.rst:148
msgid ""
"``bin/backup`` is commonly included in a cron table for regular operation. "
"Make sure you test backup/restore before relying on it."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:152
#: ../../reference_manuals/active/deployment/copy.rst:152
msgid "Incremental backups"
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:154
#: ../../reference_manuals/active/deployment/copy.rst:154
msgid ""
"collective.recipe.backup offers both incremental and full backup and will "
"maintain multiple generations of backups. Tune these to meet your needs."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:157
#: ../../reference_manuals/active/deployment/copy.rst:157
msgid ""
"When incremental backup is enabled, doing a database packing operation will "
"automatically cause the next backup to be a full backup."
msgstr ""

#: ../../reference_manuals/active/deployment/backup.rst:160
#: ../../reference_manuals/active/deployment/copy.rst:160
msgid ""
"If your backup continuity needs are extreme, your incremental backup may be "
"equally extreme. There are Plone installations where incremental backups are"
" run every few minutes."
msgstr ""

#: ../../reference_manuals/active/deployment/index.rst:3
msgid "Guide to deploying and installing Plone in production"
msgstr ""

#: ../../reference_manuals/active/deployment/index.rst:7
msgid ""
"A guide to the Plone deployment stack, including load balancing, proxy "
"caching, server preparation, backups, log rotation, and process control."
msgstr ""

#: ../../reference_manuals/active/deployment/index.rst:11
msgid ""
"This guide particularly focuses on `Unix-like <https://en.wikipedia.org/wiki"
"/Unix-like>`_ environments, though the stack discussion may be useful to "
"everyone."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:6
msgid "The purpose of this guide; its audience and assumptions"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:8
msgid ""
"This guide is an overview of how to set up Plone and its supporting software"
" stack for production purposes on one of the popular Unix work-alike "
"operating systems."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:12
msgid ""
"We’ll cover platform preparation and basic considerations for installation "
"of Plone itself. We’ll also go into common setups of the other parts of the "
"deployment stack needed for real-life deployment:"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:16
msgid ""
"A general-purpose web server to handle URL rewriting and integration with "
"other web components;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:18
msgid "Load balancing;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:19
msgid "Server-side caching;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:20
msgid "Backup;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:21
msgid "Log rotation;"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:22
#: ../../reference_manuals/active/deployment/packing.rst:2
msgid "Database packing"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:24
msgid ""
"We won't cover the details of installation or actual tool setup. Those are "
"better covered in the :doc:`Installation </getstarted/installation>` and "
"other :doc:`Hosting </hosting/index>` guides."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:29
msgid "And, what about Windows?"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:31
msgid ""
"Production deployment for Windows is typically very different from that on "
"Unix-like systems. While some parts of the common open-source stack are "
"available on Windows (Apache, for example), it's more common to integrate "
"using tools like IIS that are often already in use in the enterprise. If "
"your shop is committed to a Microsoft stack, this document won't be of much "
"use to you. However, if you're on a Windows server, but open to using the "
"(very often superior) open-source alternatives to non-Microsoft application "
"components, the stack and tools discussion here may be very useful."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:41
msgid "Audience"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:43
msgid ""
"There is one audience for this document: system administrators who wish to "
"deploy Plone for a production server. We assume that you know how to install"
" and configure your operating system, including its package manager or port "
"collection, file system, user permissions, firewalls, backup and logging "
"mechanisms."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:49
msgid ""
"You should be able to use the command-line shell and able to translate "
"between the file paths and hostnames used in examples and the ones you’ll be"
" using on your deployed server."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:53
msgid ""
"You’ll need root access (or sudo privileges) adequate to install packages, "
"create users and set up cron jobs."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:56
msgid ""
"The instructions below have been tested with clean OS platforms created on "
"commodity cloud servers."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:60
#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:28
msgid "Assumptions"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:62
msgid ""
"We’ll be describing base-level production deployments that will meet many, "
"but not all needs. And we’ll be using the most commonly used and widely "
"supported tools for the stack. Tools like Apache, Nginx, haproxy and rsync."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:66
msgid ""
"You may have other needs (like integration with LDAP or a relational "
"database) or wish to use other tools (Apache Traffic Server, Varnish, squid "
"…). That’s fine, and there are many good documents elsewhere in the "
"plone.org documentation section that cover these needs and tools."
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:72
msgid "Security considerations"
msgstr ""

#: ../../reference_manuals/active/deployment/intro.rst:74
msgid ""
"The approaches we describe here are practical for many Internet and Intranet"
" servers. However, they should be considered a baseline and may not meet "
"your security needs. Plone can be deployed in chroot jails or OpenSolaris "
"zones or with much more compartmentalized process and file ownership if your"
" application requires a greater degree of protection."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:2
msgid "Logs and log rotation"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:4
msgid ""
"Plone and Zope maintain a variety of log files. As with all log files, you "
"need to rotate your logs or your server will die from lack of storage. Log "
"rotation is a process of maintaining a set of historical log files while "
"periodically starting the current log file anew."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:10
msgid "Log types and locations"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:12
msgid ""
"The buildout recipes that set up ZEO server and client components allow you "
"to set the names and location of your log files. We'll describe below the "
"common names and locations. If this doesn't match your situation, check your"
" buildout's zeoserver and zope2instance sections."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:18
msgid "ZEO server log"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:20
msgid ""
"A ZEO server only maintains one log file, which records starts, stops and "
"client connections. Unless you are having difficulties with ZEO client "
"connections, this file is uninformative. It also typically grows very slowly"
" — so slowly that you may never need to rotate it."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:25
msgid ""
"The ZEO server log for a cluster will typically be found under your buildout"
" directory at var/zeoserver/zeoserver.log."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:29
msgid "Client logs"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:31
msgid ""
"Client logs are much more interesting and grow more rapidly. There are two "
"kinds of client logs, and each of your clients will maintain both:"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:34
msgid "Access logs"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:36
msgid ""
"A record of HTTP, WebDAV, and — if it's turned on — ftp accesses to the "
"client. This resembles traditional web-server log files. Typical location of"
" a client's access log is var/client#/Z2.log."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:40
msgid "Event logs"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:42
msgid ""
"Startup, shutdown and error messages. Event logs need attention so that "
"errors are quickly discovered. Typical location of a client's event log is "
"var/client#/event.log."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:47
msgid "Log levels"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:49
msgid ""
"You may set the verbosity level of access and event logs via the "
"zope2instance sections for your clients. This isn't very useful for event "
"logs, but can be very useful for access logs. The default verbosity level "
"for access logs — WARN — creates an entry for every HTTP access. If you are "
"recording HTTP accesses via your proxy server, you may change the access "
"logging level to \"ERROR\" and dramatically slow the rate at which your "
"access logs grow::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:62
msgid ""
"Don't turn down the access log level until you've had a chance to tune up "
"your proxy cache. Seeing which requests make it through to the ZEO client is"
" very useful information when checking caching and load balancing."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:67
msgid "Client log rotation"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:69
msgid ""
"The basic option here is between using the ZEO client log rotation "
"mechanisms built into Zope and using external mechanisms — such as the log-"
"rotation facilities available on your server."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:74
msgid "Plone 4.2.2+"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:76
msgid ""
"Plone 4.2.2+ allows you to set a simple size-based mechanism for client log "
"rotation."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:79
msgid ""
"The mechanism actually is built into Zope 2.12+ (used in Plone 4.0+), but "
"there was no easy way to use it in a buildout until release 4.2.5 of "
"plone.recipe.zope2instance. That recipe version ships with Plone 4.2.2+. "
"We'll describe later a not-as easy mechanism for earlier 4.x series releases"
" of Plone."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:85
msgid ""
"For Plone 4.2.2+, just add configuration settings like these to your "
"buildout's zope2instance sections::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:96
msgid ""
"This will maintain five generations of event logs of maximum five megabytes "
"in size and 10 generations of 20 megabyte access logs."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:99
msgid ""
"For earlier versions of Plone in the 4.x series, you may use a custom log "
"setup command to pass parameters to Zope::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:117
msgid "Other log rotation mechanisms"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:119
msgid ""
"Unix-ish systems have several log rotation mechanisms available. Two common "
"ones are ``newsyslog`` and ``logrotate``. Both are well-documented. The "
"critical thing you need to know for each is how to signal Zope that a log "
"rotation has occurred, forcing it to reopen the log file. Zope will do this "
"if you send the client process a USR2 signal."
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:125
msgid ""
"For example, with logrotate, you can rotate a client's logs with a "
"configuration like::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:140
msgid "Error alerts"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:142
msgid ""
"Zope can email access log error messages. As with other logging "
"instructions, this is done with an addition to client zope2instance sections"
" of your buildout::"
msgstr ""

#: ../../reference_manuals/active/deployment/logs.rst:159
msgid ""
"For complete detail on configuration, see the `mailinglogger documentation "
"<http://packages.python.org/mailinglogger/mailinglogger.html>`_."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:4
msgid "Packing is a vital regular maintenance procedure"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:6
msgid ""
"The Plone database does not automatically prune deleted content. You must "
"periodically pack the database to reclaim space."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:9
msgid ""
"Zope's object database does not immediately remove objects when they are "
"deleted. Instead, they are just marked inactive. This has advantages: it "
"supplies a knowledgeable administrator with the ability to undo transactions"
" on an emergency basis. However, this means that the disk space consumed by "
"your object database will grow with every transaction."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:15
msgid ""
"*Packing* the database reclaims the space previously consumed by deleted "
"objects. You *must* periodically pack your database, or it will eventually "
"consume all available disk space. Fortunately, packing is an easy and "
"reliable operation. It also may be done while the system is live."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:21
msgid "Setting up packing"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:23
msgid ""
"On a development or testing installation, packing will be an infrequent "
"need. You may initiate a packing operation via the Zope Management Interface"
" Control Panel. It will allow you to set the number of days of transactions "
"you wish to keep in the undo stack."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:28
msgid ""
"On a production system, you should pack the database via a command-line "
"utility: bin/zeopack in your buildout directory."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:31
msgid ""
"*zeopack* is installed automatically by the plone.recipe.zeoserver recipe "
"that generates the zeoserver (database server component)."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:34
msgid ""
"You may set packing options for zeopack by setting attributes in the "
"zeoserver part of your buildout. For example::"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:42
msgid ""
"Will (after buildout is run), cause bin/zeopack to conserve three days of "
"undo history during the pack operation."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:45
msgid "Other options include:"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:47
msgid "pack-gc"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:49
msgid ""
"Can be set to false to disable garbage collection as part of the pack. "
"Defaults to true."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:52
msgid "pack-keep-old"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:54
msgid ""
"Can be set to false to disable the creation of \\*.fs.old files before the "
"pack is run. Defaults to true."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:57
msgid "pack-user"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:59
msgid ""
"If the ZEO server uses authentication, this is the username used by the "
"zeopack script to connect to the ZEO server."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:62
msgid "pack-password"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:64
msgid ""
"If the ZEO server uses authentication, this is the password used by the "
"zeopack script to connect to the ZEO server."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:68
msgid "The packing operation"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:70
msgid ""
"Expect the packing operation to be time-consuming and for the time to grow "
"on a linear basis with the size of your object database."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:74
msgid "Disk-space considerations"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:76
msgid ""
"The packing operation will (unless you force this off) copy the existing "
"database before it begins packing. This means that a packing operation will "
"consume up-to twice the space currently occupied by your object database. "
"(Pre-existing .old files are overwritten, so at least it doesn't get worse.)"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:82
msgid "Regular scheduling of packing operations"
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:84
msgid ""
"Database packing is typically run as an automated (cron) job. The cron job "
"may be set up in the system cron table, or in the Plone users."
msgstr ""

#: ../../reference_manuals/active/deployment/packing.rst:87
msgid ""
"Disk packing is an extremely disk-intensive operation. It is best to "
"schedule it to occur when your monitoring indicates that disk usage is "
"usually low."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:2
msgid "Preparing the Server"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:5
msgid "Preparing to install Plone"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:7
msgid ""
"Plone and Zope are generally not available via platform package or port "
"systems. So, you can’t say “apt-get install plone” to add it to a Debian "
"server. (There are packages and ports out there, if you search hard enough "
"to find them. But don’t do it: they’ve generally had a poor record for "
"maintenance.)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:13
msgid ""
"This means that you typically need to build Plone (compiling source code to "
"binary components) on your target server. Binary installers for Plone are "
"available for Windows and OS X, but not for Linux and BSD systems. And, the "
"OS X binary installer isn’t really meant for production use — though it’s "
"great for theme and add-on development and testing."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:19
msgid "A build environment for Plone requires two sets of components:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:21
msgid "The GNU compiler kit and supporting components"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:22
msgid "The development versions of system libraries required by Plone. The"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:23
msgid ""
"libraries themselves are in common use, and often included in standard "
"distributions. But, we need the development header files."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:26
msgid ""
"It's generally best to install as many of these components as you can via "
"platform packages or ports. That way, you'll be able to use your platform's "
"automated mechanisms to keep these up-to-date, particularly with security "
"fixes."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:32
msgid "System python?"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:34
msgid ""
"Plone's Unified Installer will install a suitable Python for you. However, "
"you may wish to use your system's Python if it meets Plone's requirements. "
"Plone 4.0 and 4.1 require Python 2.6. Plone 4.2+ will work with Python 2.6 "
"or 2.7."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:39
msgid ""
"If you choose to use the system Python, you'll want to use virtualenv to "
"create a virtual Python environment to isolate the Zope/Plone install from "
"system Python packages. The Unified Installer will automatically do this for"
" you. If you're not using the Unified Installer, learn to use virtualenv."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:45
msgid "Basic build components"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:47
msgid ""
"All installs will require the basic GNU build and archive tools: gcc, g++, "
"gmake, gnu tar, gunzip, bunzip2 and patch."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:50
msgid ""
"On Debian/Ubuntu systems, this requirement will be taken care of by "
"installing build-essential. On RPM systems (RedHat, Fedora, CentOS), you'll "
"need the gcc-c++ (installs most everything needed as a dependency) and patch"
" RPMs."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:55
msgid ""
"On Arch Linux you'll need base-devel (installs most everything needed as a "
"dependency)."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:59
msgid "System Python"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:61
msgid ""
"If you're using your system's Python, you will need to install the Python "
"development headers so that you'll be able to build new Python components. "
"On Debian/Ubuntu systems, this is usually the python-dev package. Port "
"installs will automatically include the required python.h requirement as "
"part of their build process."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:67
msgid ""
"If you're using your system Python, you will not need the readline and "
"libssl development packages mentioned below. The required libraries should "
"already be linked to your Python."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:72
msgid "System libraries"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:74
msgid "For any install, the development versions of:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:76
msgid "libssl"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:77
msgid "libz"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:78
msgid "libjpeg"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:79
msgid "readline"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:80
msgid "libxml2/libxslt"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:82
msgid "If you're using the System Python, add:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:84
msgid "build-essential (gcc/make tools)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:85
#: ../../reference_manuals/active/deployment/preparing.rst:119
msgid "python-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:87
msgid "Without the system Python (Unified Installer builds Python):"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:89
msgid "build-essential (gcc/make)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:92
msgid "Optional libraries"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:94
msgid ""
"If Plone can find utilities that convert various document formats to text, "
"it will include them in the site index. To get PDFs and common office "
"automation formats indexed, add:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:98
msgid "poppler-utils (PDFs)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:99
msgid "wv (office docs)"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:101
msgid "Development versions are not needed for these."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:105
msgid "Platform notes"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:108
msgid "Debian/Ubuntu"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:110
msgid "Use ``apt-get install``. The matching package names are:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:112
msgid "build-essential"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:113
msgid "libssl-def"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:114
msgid "libz-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:115
msgid "libjpeg-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:116
msgid "readline-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:117
msgid "libxml2-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:118
msgid "libxslt-dev"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:122
msgid "Fedora/CentOS"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:124
msgid "Using ``yum install``:"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:126
msgid ""
"gcc-c++ patch openssl-devel libjpeg-devel libxslt-devel readline-devel make "
"which"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:136
msgid "OpenSUSE"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:138
msgid "Using ``zypper in``"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:140
msgid "gcc-c++"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:141
msgid "make"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:142
msgid "readline-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:143
msgid "libjpeg-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:144
msgid "zlib-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:145
msgid "patch"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:146
msgid "openssl-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:147
msgid "expat-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:148
msgid "man"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:150
msgid ""
"--build-python will be needed as the system Python 2.7 is missing many "
"standard modules."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:154
msgid "Arch Linux"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:156
msgid "Using ``pacman -S``"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:158
msgid "base-devel"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:159
msgid "libxml2"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:160
msgid "libxslt"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:161
msgid "libjpeg-turbo"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:162
msgid "openssl"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:165
msgid "OS X"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:167
msgid ""
"Installing XCode and activating the optional command-line utilities will "
"give you the basic GNU tools environment you need to install Plone with the "
"Unified Installer. You may also use MacPorts (the BSD ports mechanism, "
"tailored to OS X) to install libjpeg, libxslt and readline. If you do, "
"remember to keep your ports up-to-date, as Apple's updates won't do it for "
"you."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:175
msgid "Creating a Plone user"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:177
msgid ""
"While testing or developing for Plone, you may have just used an "
"installation in a home directory, owned by yourself. That is not suitable "
"for a production environment. Plone's security record is generally "
"excellent, however there have been — and probably will be again in the "
"future — vulnerabilities that allow an attacker to execute arbitrary "
"commands with the privileges of the process owner. To reduce this kind of "
"risk, Plone — and all other processes that allow Internet connections — "
"should be run with user identities that have the minimum privileges "
"necessary to maintain their data and write logs."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:186
msgid ""
"In a Unix-workalike environment, the most common way of accomplishing this "
"is to create a special user identity under which you will run Plone/Zope. "
"That user identity should ideally have no shell, no login rights, and write "
"permissions adequate only to change files in its ./var directory."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:191
msgid ""
"The ideal is hard to achieve, but it's a good start to create an "
"unprivileged \"plone\" user, then use \"sudo -u plone command\" to install "
"Plone and run buildout. This is basically what the Unified Installer will do"
" for you if you run its install program via sudo. The installer uses root "
"privileges to create a \"plone\" user (if one doesn't exist), then drops "
"them before running buildout."
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:198
msgid "Don't run buildout as root!"
msgstr ""

#: ../../reference_manuals/active/deployment/preparing.rst:200
msgid ""
"Don't use bare \"sudo\" or a root login to run buildout. Buildout fetches "
"components from the Python Package Index and other repositories. As part of "
"package installation, it necessarily executes code in the setup.py file of "
"each package."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:2
msgid "Starting, stopping and restarting"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:4
msgid ""
"If you're using a stand-alone Zope/Plone installation (not a ZEO cluster), "
"starting and stopping Plone is easy. A production ZEO cluster deployment "
"adds some complexity because you'll now be controlling several process: a "
"ZEO server and several ZEO clients."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:9
msgid ""
"If you check the \"bin\" directory of your buildout after building a "
"cluster, you'll find control commands for the server and each client. "
"They're typically named zeoserver, client1, client2, client#. You can do a "
"quick start with the command sequence::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:20
msgid ""
"If you've set all this up with the Unified Installer, you'll have a "
"convenience controller script named \"plonectl\" that will start all your "
"components with one command::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:27
msgid ""
"Each \"start\" command will run the program in \"daemon\" mode: after a few "
"startup messages, the program will disconnect from the console and run in "
"the background."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:31
msgid ""
"The daemon mode start will write a process ID (pid) file in your buildout's "
"\"var\" directory; that pid may be used to control the background process. "
"It's automatically used by \"stop\" and \"restart\" commands."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:36
msgid "Starting and stopping Plone with the server"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:38
msgid ""
"You can start and stop Plone with your server by adding and init.d (Linux "
"and other sys v heritage systems) or rc.d (BSD heritage) script that accepts"
" start and stop commands."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:42
msgid ""
"The Unified Installer has an init_scripts directory that contains sample "
"initialization/stop scripts for several platforms. If you didn't use that "
"installer, you may find the scripts on `github <https://github.com/plone"
"/Installers-UnifiedInstaller/tree/master/init_scripts>`_."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:48
msgid "Process control with Supervisor"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:50
msgid ""
"A much better alternative to custom init scripts is to use a process-control"
" system like `Supervisor <http://supervisord.org/>`_. Supervisor is well-"
"known by the Plone community, and you should have no trouble getting "
"community support for it. It's available as a package or port on most Linux "
"and BSD systems (look for supervisor, supervisord or supervisor-python). "
"Installing the port or package will typically activate supervisor. You then "
"just add the Zope/Plone commands to the supervisor configuration file."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:58
msgid ""
"Process-control system's like supervisor typically require the controlled "
"application to run in foreground or console mode. Don't confuse this with "
"the Zope/Plone \"fg\" command, which runs the application in debug mode "
"(which is *very* slow). Instead, use \"console\" for clients. Use \"fg\" for"
" the zeoserver; it doesn't have the \"console\" command, but its performance"
" is unhindered."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:65
msgid ""
"Here's a sample program-configuration stanza for supervisor, controlling "
"both a ZEO server and client::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:80
msgid ""
"Note the \"stopwaitsecs\" setting. When trying to stop a program, supervisor"
" will ordinarily wait 10 seconds before trying aggressive measures to "
"terminate the process. Since it's entirely possible for a ZEO client to take"
" longer than this to stop gracefully, we increase the grace period."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:85
msgid ""
"When running a ZEO cluster through a process-control system such as "
"supervisor, you should always use the system's own control mechanisms "
"(supervisorctl for supervisor) to start, stop, and status-check cluster "
"components."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:91
msgid "Cluster restarts"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:93
msgid ""
"Using multiple ZEO clients and a load balancer makes it possible to "
"eliminate downtime due to ZEO client restarts. There are many reasons why "
"you might need to restart clients, the most common being that you have added"
" or updated an add-on product. (You should, of course, have tested the new "
"or updated package on a staging server.)"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:99
msgid ""
"The basic procedure is simple: just restart your clients one at a time with "
"a pause between each restart. This is usually scripted."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:102
msgid ""
"Load balancers, however, may raise issues. If your load balancer does not "
"automatically handle temporary node downtime, you'll need to add to your "
"client restart recipe a mechanism to mark clients as in down or maintenance "
"mode, then mark them \"up\" again after a delay."
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:107
msgid ""
"If your load balancer does handle client downtime, you may still need to "
"make sure that it doesn't decide the client is \"up\" too early. Zope "
"instances have a \"fast listen\" mode that causes them to accept HTTP "
"requests very early in the startup process -- many seconds before they can "
"actually furnish a response. This may lead your load balancer to diagnose "
"the client as \"up\" and include it in the cluster. This can lead to some "
"very slow responses. To improve the situation, turn off the \"fast listen\" "
"mode in your client setup::"
msgstr ""

#: ../../reference_manuals/active/deployment/processes.rst:122
msgid ""
"If you are unable to tolerate slow responses during restarts, even this may "
"not be good enough. Even after a Zope client is able to respond to requests,"
" its first few page renderings will be slow while client database caches are"
" primed. When speed sensitivity is this important, you'll want to add to "
"your restart script a command-line request (via wget or curl) for a few "
"sample pages. Do this after client restart and before marking the client "
"\"up\" in the cluster. This is not commonly required."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:2
msgid "Background: the stack"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:4
msgid ""
"Many integrators arrive at Plone after previously working with PHP "
"applications. They are used to using Apache with modPHP and an SQL server. "
"This common application-server software stack is often deployed from the "
"start on a pre-configured server, and installation of a PHP application may "
"require little more than unpacking a set of files to a particular point in "
"the file system."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:11
msgid ""
"The Plone application is a different animal. It runs on its own application "
"server (Zope), and in common installations uses the Zope Object Database "
"(ZODB) rather than an SQL database. It is nearly always deployed in "
"conjunction with other tools, like web servers (e.g., Apache or Nginx), load"
" balancers (like haproxy), and reverse-proxy caches (like varnish or squid)."
" This is what we’ll be discussing in this guide."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:18
msgid ""
"It is actually possible to deploy Plone/Zope as a stand-alone web server. If"
" you do a simple “standalone” installation of Plone, you will end up with a "
"working web server answering requests on port 8080 (which may be changed)."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:26
msgid ""
"While there are production servers doing just this (typically changing the "
"listening port from 8080 to 80), it’s uncommon. It’s much more common to put"
" a general-purpose web server like Apache or Nginx between Plone and the "
"Internet:"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:35
msgid ""
"In this stack, it’s the general-purpose web server that is connected to "
"well-known Internet ports. Apache or Nginx answers those request and "
"forwards them to Plone. It does so by proxying the requests."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:39
msgid "If Plone/Zope has a built-in web server, why do you need another?"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:41
msgid ""
"You may wish to use Zope and Plone as part of a hybrid system with other "
"best of breed components providing parts of your web site. For example, "
"Plone is not really meant for the kind of database applications that require"
" a relational solution. A good, general-purpose web server like Apache or "
"Nginx serves as a great mechanism for dispatching different requests to "
"different, best-of-breed components. They’re also great for quickly serving "
"static resources."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:49
msgid ""
"Even in the simplest installation, it’s usually desirable to do some URL "
"rewriting to map URLs to data in different ways. This is nearly mandatory "
"when building a hybrid system."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:53
msgid ""
"Plone does not have built-in SSL support. A general-purpose web server will "
"have a hardened SSL layer and a mechanism for handling certificates."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:56
msgid ""
"You may wish to solve authentication and logging problems at a shared, "
"higher level."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:63
msgid "Zope + Web Server + Web Apps"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:66
msgid "Load balancing"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:68
msgid ""
"The deployment above may meet your needs for light-traffic sites. Its "
"principle limitation is that it will make use of only a single processor and"
" file system to render Plone pages."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:72
msgid ""
"The Zope application server allows us to divide the chores of rendering web "
"pages (very CPU-intensive) from those of maintaining the file-system "
"database. Further, we may have as many page rendering clients as we wish, "
"all using a single database server."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:77
msgid "The components of this mechanism, Zope Enterprise Objects (ZEO) are:"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:82
msgid "ZEO Clients"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:80
msgid ""
"Web servers in themselves, which answer requests for pages, gather page "
"component objects from the database server, render pages and return them to "
"the requestor."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:86
msgid "ZEO Server"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:85
msgid ""
"Handles read/write requests for the object database from ZEO Clients. Not "
"HTTP servers, and not meant to be visible to the Internet."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:92
msgid "ZEO Cluster"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:94
msgid ""
"It is typical in a high-demand server situation to deploy as many ZEO "
"clients as you have CPU cores available. More is not useful (except for a "
"spare, debug client). ZEO clients are generally CPU/RAM-intensive. The ZEO "
"server is a heavy disk-system user."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:99
msgid ""
"For multiple ZEO clients to be actually useful, you need a load-balancing "
"front-end to distribute requests among the clients. The load balancer "
"receives http requests and proxies them among a pool of ZEO clients."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:107
msgid "ZEO Cluster with Load Balancer"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:109
msgid ""
"Apache and Nginx have built-in load-management capabilities, which can allow"
" you to combine those two layers of the stack. A dedicated load balancer "
"like `haproxy <http://haproxy.1wt.eu/>`_ offers better features for "
"distributing load among clients and for checking and maintaining status."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:115
msgid "How many ZEO clients, how much memory?"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:117
msgid ""
"It's typical to allocate roughly one ZEO client for every processor core you"
" have available. However, there are lots of trade-offs, and many clients "
"will eat RAM rapidly. :doc:`About Instances, Threads and RAM consumption "
"</performance/instancesthreads>` is a good guide to the issues involved."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:123
msgid "Sticky sessions"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:125
msgid ""
"As a rule of thumb, you'll tend to get better performance if you can direct "
"requests from the same browser client to the same Zope instance (ZEO "
"client). That's because the memory cache of the ZEO-client is more likely to"
" be loaded with information useful for rendering requests from that source. "
"The effect can be particularly strong for logged-in users."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:131
msgid ""
"This is not a firm rule, though. The more memory allocated to ZEO client "
"caches, the smaller the effect. Also, if a large portion of your traffic is "
"from search engines, benefits will be negligible. (In extreme cases, it may "
"even be desirable to direct all your search engine traffic to the same ZEO "
"client so that their atypical behavior doesn't spoil limited cache memory "
"with infrequently requested pages.)"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:138
msgid ""
"Most load balancers have some sort of mechanism for causing traffic from a "
"single source to stick to a single ZEO client. The simplest schemes use IP "
"addresses; cookies may also be used."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:143
msgid "Connections and queues"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:145
msgid ""
"A versatile load balancer like haproxy will give you fine-grained control "
"over the queuing of connections to ZEO client back-end servers. A factor to "
"take into account is that ZEO clients will always accept connections — even "
"when all threads are busy. Given that requests take dramatically different "
"amount of times to render and return, this may result in some clients having"
" queued connections when other clients are free."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:152
msgid ""
"The general solution for this is to set the maximum connections per back-end"
" ZEO client to roughly the number of threads they serve. For haproxy, this "
"is the maxconn setting for the listen directive. This is only a rule of "
"thumb. ZEO clients actually spawn threads as needed to return blobs, and are"
" very efficient at that. So, how severely you limit connections per client "
"should depend on your balance of page to blob serves."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:160
msgid "Server-side HTTP caching"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:162
msgid ""
"When a web browser requests and receives a web resource, it silently saves "
"the page or graphic in a local disk cache in case it may be needed later. "
"This saves the expense of downloading the resource again."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:166
msgid ""
"A server-side HTTP cache does much the same thing. After Plone renders a "
"resource, which may be a very expensive process, it saves the rendered "
"resource in case it should be requested again soon."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:170
msgid "With a caching reverse proxy in place, our delivery stack looks like:"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:176
msgid "ZEO Cluster with Server-Side Caching"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:178
msgid ""
"As with load balancing, Apache and Nginx have built-in proxy caching "
"abilities. If those are inadequate, Varnish or Squid are often used."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:181
msgid ""
"Nothing is simple about caching. There is always a trade off between "
"currency of delivered data and the performance of the cache layer. Cache "
"tuning for truly busy sites requires extensive measurement and "
"experimentation, often with business decisions about the expense of currency"
" loss vs enhanced servers."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:188
msgid "Caching setup in Plone"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:190
msgid ""
"In their basic outlines, browser and server-side caching work the same way. "
"The browser or the server caches resources against the possibility that they"
" may be needed again soon. But, how does the caching agent make the decision"
" about how long to store a resource? Or, if it should be stored at all?"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:195
msgid ""
"Generally, these decisions are made on the basis of caching hints that are "
"in the HTTP response headers. The web server, or Plone, may indicate that a "
"resource should not be cached at all, that it may be safely cached for a "
"certain period of time, or that the caching agent should revalidate the "
"resource by asking the server if it's changed."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:201
msgid ""
"Out of the box, Plone is very conservative. It assumes that currency is "
"critical, and only tells the caching agent to store resources like icons. "
"You may tune this up considerably by installing the *HTTP Caching* add on "
"via the Plone control panel, then using the * caching* configlet to set "
"cache rules."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:207
msgid ""
"The *HTTP Caching* add on is shipped with Plone, but not activated. So, you "
"don't need to add it to your buildout packages. Just activate it and go. By "
"the way, the package that does the work is ``plone.app.caching``, and that's"
" how it's often discussed."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:213
msgid "Caching settings"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:215
msgid "**Import settings**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:217
msgid ""
"This is actually the place to start if you're new to cache settings. Set a "
"basic profile by making a choice from this menu. Then use ``Change "
"settings`` to refine it to your needs."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:222
msgid "**Global settings:**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:227
msgid "Enable caching"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:225
msgid ""
"Turn this on, and you'll get some immediate improvement in cache efficacy --"
" including browser caches. Tune it up for your particular needs with the "
"other panes in this configuration panel."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:239
msgid "Enable GZip compression"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:230
msgid ""
"GZip compression is one of those rare total wins. Turning it on will cause "
"Plone to compress most text resources before transmitting them. All modern "
"browsers know how to uncompress them. You'll save bandwidth and speed up "
"your effective page delivery for a tiny hit on CPU load."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:235
msgid ""
"Why wouldn't you turn on Gzip compression? The best reason is because you "
"may wish to instead handle this via your web server (nginx/Apache) or "
"reverse proxy. Threading issues tend to be much better handled by a good "
"proxy than by Zope/Plone. Also, the same gzip settings can handle Zope/Plone"
" and other web apps."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:241
msgid "**Caching Proxies**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:243
msgid ""
"Think of this as the Varnish/Squid settings page, as it's mainly concerned "
"with cache purging, which is typically not supported by web server proxy "
"caches."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:247
msgid ""
"Cache purging is when an application server sends a message to a proxy cache"
" to tell it that a resource needs refreshing. Cache purging is generally "
"only desirable when you're using more aggressive caching rules. If you are "
"not setting rules to cache pages and other dynamic content, you don't need "
"to worry about cache purging."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:253
msgid ""
"Caching dynamic resources like pages and trying to purge them on change is "
"the dark, difficult side of caching. It's safest for items like files and "
"images; hardest for the kind of complex, composite pages that are Plone's "
"specialty."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:258
msgid ""
"Turn purging off and avoid aggressive caching unless you're prepared to "
"monitor, experiment and measure."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:261
msgid "Purge settings are extremely dependent on your proxy cache setup."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:263
msgid "**In-memory cache**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:265
msgid ""
"Here you are offered a simple tradeoff. Memory for speed. Allocate more "
"memory to the in-memory cache and pages are served faster. Allocate less and"
" they're rendered more frequently. Just don't cache so much that your server"
" starts using swap space for Zope processes."
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:270
msgid "**Caching operations / Detailed settings**"
msgstr ""

#: ../../reference_manuals/active/deployment/stack.rst:272
msgid ""
"This is where you attach caching rules to resource types, and refine the "
"caching rules. In general, stick with one of the profile settings (from "
"**Import settings**) unless you're prepared to immerse yourself in caching "
"detail."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:2
msgid "Adding five.grok as a dependency"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:4
msgid "**How to install the five.grok package safely**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:6
msgid ""
"Assuming you already have a suitable package and a `buildout`_, using "
"*five.grok* should be as simple as depending on it in your *setup.py* file:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:17
msgid ""
"As shown on the previous page, you probably also want this as a minimum in "
"your *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:31
msgid ""
"However, if you are using Zope 2.10, you may also need to pin certain eggs "
"in your *buildout.cfg*. If you are using Dexterity, there are already part "
"of the “known good set” of packages. Otherwise, see the `five.grok "
"installation instructions`_ for details."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/adding-five-grok-as-a-dependency.rst:36
msgid ""
"Naturally, you will need to re-run buildout after editing *setup.py* and/or "
"*buildout.cfg*."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/index.rst:2
msgid "Background"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/index.rst:4
msgid "**What is five.grok all about?**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:2
msgid "The Zope Component Architecture"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:4
msgid ""
"**A high level overview of the basic concepts of the Zope Component "
"Architecture**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:7
msgid ""
"The Zope Component Architecture underpins much of the advanced functionality"
" in Zope and Plone. By mastering a few core concepts, you will be able to "
"understand, extend and customise a wide range of Zope technologies. These "
"concepts include:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:12
msgid ""
"Using interfaces formalise a contract for and document a given component"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:14
msgid "Implementing the singleton pattern with unnamed utilities"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:15
msgid "Using named utilities to build a registry of homogenous objects"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:16
msgid ""
"Using adapters to implement generic functionality that can work with "
"heterogeneous objects"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:18
msgid ""
"Customising behaviour with the concept of a more-specific adapter or multi-"
"adapter"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:20
msgid "Event subscribers and event notification"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:21
msgid ""
"Display components, including browser views, viewlets and resource "
"directories"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:24
msgid ""
"This tutorial will explain these concepts using simple examples, and "
"illustrate how to use convention-over-configuration with the *five.grok* "
"package to quickly and easily employ adapters, utilities, event subscribers "
"and browser components in your own code."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:30
msgid "Conventions used in this manual"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:32
msgid ""
"The examples in this manual are sometimes shortened for readability, and you"
" may find that certain details of implementation are not shown to keep the "
"examples short and focused."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:36
msgid ""
"You will find two kinds of code listings here. A code block illustrating "
"code you may write in your own files is shown verbatim like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:49
#: ../../reference_manuals/active/writing/writing.rst:383
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:10
msgid "Note:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:51
msgid ""
"Code snippets may refer to code defined earlier on the same page. In this "
"case, import statements for this code are not shown."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:53
msgid "An ellipsis is sometimes used to abbreviate code listings."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:55
msgid ""
"Sometimes, we will also show how a component or function can be used in "
"client code. Here, “client code” means any code that is making use of the "
"features implemented with the components illustrated. These are shown using "
"Python interpreter (aka doctest) conventions, like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/the-zope-component-architecture.rst:68
msgid ""
"Lines starting with *>>>* indicate executable Python code, be that in a "
"test, in the interactive interpreter, or in the body of a function or method"
" somewhere. Return values and output are shown underneath without the three-"
"chevron prefix."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:2
msgid "What is Grok and five.grok?"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:4
msgid "**Heritage and anthropology**"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:6
msgid ""
"This manual is about using *five.grok* to configure components in the Zope "
"Component Architecture. But what is *five.grok*?"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:9
msgid ""
"`Grok`_ is a web development framework built on top of Zope 3 (aka Zope "
"Toolkit, or ZTK). One of the main aims of the Grok project is to make it "
"easier to get started with Zope development by employing “convention-over-"
"configuration” techniques. Whereas in a “plain Zope” a developer would "
"typically write a component in Python code and then register it in ZCML (an "
"XML syntax, normally found in a file called *configure.zcml)*, a Grok "
"developer uses base classes and inline code directives to achieve the same "
"thing. The advantage is that the “wiring” of a component is maintained right"
" next to its code, making it easier to understand what registrations are in "
"effect, and reducing the need for context-switching between different files "
"and syntaxes."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:21
msgid ""
"It is important to realise that, for the purposes of this manual at least, "
"the Grok concepts are just an alternate way to configure the Zope Component "
"Archiecture. Everything that can be done with Grok configuration can also be"
" done with “plain Zope” and ZCML. The grok syntax is merely a more "
"convenient, compact and opinionated way to achieve the same thing."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:28
msgid ""
"Opinionated? That’s right. In part, the design of the various Grok "
"directives and base classes aims to steer developers towards good practice, "
"well-organised code and shared standards. That’s not to say you can’t go "
"your own way if you really need to, but it is usually best to follow the "
"conventions and standards used by everybody else, unless you have good "
"reason to do otherwise."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:36
msgid "Example"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:38
msgid ""
"Let’s take a look at an example. Here is a simple adapter registration in "
"vanilla Zope. First, the adapter factory, a Python class:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:62
msgid "Then, the registration in *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:76
msgid ""
"(note: in this case we could omit the *for* and *provides* lines, but this "
"is the full syntax)"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:79
msgid ""
"With Grok convention-over-configuration, you can do it all in one file, like"
" this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:99
msgid ""
"For this to work, the package needs to be “grokked”. This is done with a "
"single statement in *configure.zcml*, which then grokks all modules in the "
"package:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:113
msgid ""
"The *<include />* statement ensures that the grok directive is available. "
"Once these two lines are in *configure.zcml*, we should not need to add any "
"more registrations to this file, no matter how many grokked components we "
"added to modules inside this package."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:118
msgid ""
"When the configuration is loaded (at “grok time”), various “grokkers” will "
"analyse the code in the package, typically looking for special base classes "
"(like *grok.Adapter* above), *directives*(like the *grok.provides()* and "
"*grok.implements()* lines above), module-level function calls, directories "
"and files (e.g. page templates), and configure components based on these "
"conventions."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:126
msgid "Grok vs. five.grok vs. grokcore"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:128
msgid ""
"Grok started life as a monolithic framework, but the nice cavemen of the "
"Grok project decided to factor out the various grokkers into multiple "
"smaller packages. Thus, we have packages like `martian`_, the toolkit used "
"to write grokkers, `grokcore.component`_, which contains grokkers for basic "
"component architecture primitives such as adapters and utilities, "
"`grokcore.security`_, which provides for permissions and security "
"declarations, `grokcore.view`_, which provides support for browser views, "
"`grokcore.viewlet`_, which provides support for viewlets, and so on."
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:138
msgid ""
"`five.grok`_ is an integration package for Zope 2 which brings these "
"directives to Zope 2 applications such as Plone. In most Grok documentation,"
" you will see a line like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:146
msgid ""
"This is using the standalone Grok framework. The *five.grok* equivalent is:"
msgstr ""

#: ../../reference_manuals/active/five-grok/background/what-is-grok-and-five-grok.rst:153
msgid ""
"As far as possible, the *five.grok* project aims to make the conventions and"
" syntax used in standalone Grok work identically in Zope 2. If you come "
"across a piece of Grok documentation, chances are you can get it to work in "
"Zope 2 by switching the \"*import grok*\" line to \"*from five import "
"grok*\", although there are situations where this is not the case. In "
"particular, we tend to use Plone content types instead of Grok ”models\" and"
" standard add/edit forms instead of the formlib-based forms from Grok."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/index.rst:2
msgid "Browser components"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/index.rst:4
msgid "**Using five.grok to create views, viewlets and resource directories**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:2
msgid "Resource directories"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:4
msgid "**Exposing static resources such as CSS, JavaScript and image files.**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:6
msgid ""
"So far, we have seen how to create views and viewlets. Using views with a "
"custom *render()* method that sets the *Content-Type* header, we were able "
"to create files on the fly. We could even use this for binary data."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:10
msgid ""
"In may cases, however, we simply want to expose some static files, such as "
"CSS and JavaScript files, or images and use them in our dynamic views. "
"Luckily, *five.grok* makes this easy."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:14
msgid ""
"When a package is grokked, a grokker will look for a directory inside the "
"package with the name *static*. This is then available under the prefix "
"*++resource++<packagename>*, where *<packagename>* is the dotted name to the"
" package in which the *static* directory is located."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:19
msgid ""
"For example, let’s say we had a package called *example.messaging*. The "
"*static*directory would then be found in *example/messaging/static*, "
"alongside the Python modules and sub-packages in this package. If this "
"directory in turn contained a file called *messaging.css*, it would be "
"accessible on a URL like "
"*http://example.org/site/++resource++example.messaging/messaging.css.*"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:27
msgid ""
"If you need to register additional directories, you can do so using the "
"*<browser:resourceDirectory />* ZCML directive in *configure.zcml*. This "
"requires two attributes: *name* is the name that appears after the "
"*++resource++***namespace; *directory* is a relative path to the directory "
"containing resources."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:34
msgid "Importing CSS and JavaScript files in templates"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:36
msgid ""
"One common use of static resources is to add a static CSS or JavaScript file"
" to a specific template. We can do this by filling the *style\\_slot* or "
"*javascript\\_slot* in Plone’s *main\\_template* in our own view template "
"and using an appropriate resource link."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:41
msgid ""
"For example, we could add the following in a view using *main\\_template*. "
"Note that this would go outside the block filling the *master* macro."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:65
msgid ""
"Always create the resource URL relative to the navigation root as shown "
"here, so that the URL is the same for all content objects using this view. "
"This allows for efficient resource caching."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:69
msgid ""
"Of course, we could use the same technique anywhere else in any other page "
"template, but the head slots are a good place for CSS and JavaScript "
"resources."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:74
msgid "Registering resources with Plone’s resource registries"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:76
msgid ""
"Sometimes it is more appropriate to register a stylesheet with Plone’s "
"*portal\\_css* registry (or a JavaScript file with *portal\\_javascripts*), "
"rather than add the registration on a per-template basis. This ensures that "
"the resource is available site-wide."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:83
msgid ""
"It may seem wasteful to include a resource that is not be used on all pages "
"in the global registry. Remember, however, that *portal\\_css* and "
"*portal\\_javascripts* will merge and compress resources, and set caching "
"headers such that browsers and caching proxies can cache resources well. It "
"is often more effective to have one slightly larger file that caches well, "
"than to have a variable number of files that may need to be loaded at "
"different times."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:91
msgid ""
"To add a static resource file, you can use the GenericSetup "
"*cssregistry.xml* or *jsregistry.xml* import steps in the *profiles/default*"
" directory. For example, an import step to add the *conference.css* file "
"site-wide may involve a *cssregistry.xml* file that looks like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:107
msgid ""
"Similarly, a JavaScript resource could be imported with a *jsregistry.xml* "
"like:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:120
msgid "Image resources"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/resource-directories.rst:122
msgid ""
"Images can be added to resource directories just like any other type of "
"resource. To use the image in a view, you can construct an *<img />* tag "
"like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:2
msgid "Viewlets"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:4
msgid "**Dynamic snippets with viewlets**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:6
msgid ""
"Viewlets, as their name suggests, are “little views” - snippets of HTML that"
" are rendered at defined location in a view. Behind the scenes, a viewlet is"
" a named browser component that is registered for a context and a request "
"(like a view), as well as for a view and a viewlet manager."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:12
msgid "In a page template, you may see something this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:18
msgid ""
"This tells Zope to look up and render the *content provider* with the name "
"*plone.belowtitle*. The most common type of content provider is a *viewlet "
"manager*. When the viewlet manager is rendered, it will look up any viewlets"
" which are registered for that viewlet manager, and which are applicable to "
"the current context (content object), request (browser layer), and view (the"
" same provider expression can be used in multiple templates, but sometimes "
"we only want a viewlet to show up for a particular view). These are then "
"rendered into the page template."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:27
msgid ""
"Plone comes with a number of standard viewlet managers, covering various "
"areas of the page which you may want to plug viewlets into. The standard "
"viewlet managers are all defined in the package *plone.app.layout.viewlets*."
" In its *configure.zcml*, you will see a number of sections like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:42
msgid ""
"This shows that we have a viewlet manager with the name *plone.htmlhead*, "
"identifiable via the interface "
"*plone.app.layout.viewlets.interfaces.IHtmlHead*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:46
msgid ""
"Another way to find viewlet managers is to use the *@@manage-viewlets* view:"
" simply append */@@manage-viewlets* to the end of the URL of a content item "
"in Plone, and you will see the viewlet managers and viewlets that make up "
"various parts of the page. You can find the various viewlet manager names "
"and interfaces on this screen as well."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:53
msgid "Registering a viewlet"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:55
msgid ""
"With five.grok, we can register a viewlet using the *grok.Viewlet* base "
"class:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:77
#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:115
#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:187
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:117
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:219
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:337
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:432
#: ../../reference_manuals/active/five-grok/browser-components/views.rst:488
#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:173
#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:400
#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:30
#: ../../reference_manuals/active/five-grok/core-components/events.rst:91
#: ../../reference_manuals/active/five-grok/core-components/events.rst:174
#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:87
#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:124
#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:156
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:6
msgid "Notes:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:79
msgid ""
"We use *grok.name()* to give the viewlet a name. If this were omitted, the "
"name would be taken from the class name, in all lowercase. The name is "
"primarily useful for overriding the viewlet for a more specific context or "
"layer later, but it must be unique, so it is a good idea to use a dotted "
"name based on the package name."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:84
msgid ""
"We use *grok.context()* to limit this viewlet to a particular content type, "
"described by the *IDocument* interface from earlier examples (not shown). We"
" could omit this, in which case the viewlet would be shown for any type of "
"context where the viewlet manager is rendered."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:88
msgid ""
"As with a view, we have to specify a permission required to see the viewlet,"
" using *grok.require()*. If the user does not have the required permission, "
"the viewlet will simply be omitted."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:91
msgid ""
"We override the *update()* method to prepare some data for the template, "
"much like we did for the view in the previous section. We could also define "
"additional properties or methods on the viewlet class."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:95
msgid "We specify the viewlet manager using *grok.viewletmanager()*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:96
msgid ""
"As with a view, the context is available as *self.context* and the request "
"as *self.request*. In addition, there is *self.view*, the current view, and "
"*self.viewletmanager*, the viewlet manager."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:100
msgid ""
"To render the viewlet, we could either override the *render()* method and "
"return a string, or use a page template. A page template will be "
"automatically associated using the rules that apply views. Thus, if the "
"viewlet was defined in *browser.py*, the template would be found in "
"*browser\\_templates/messageviewlet.pt*. In the template, the variable "
"*view* refers to the current view, and the variable *viewlet* refers to an "
"instance of the viewlet class. For example:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:117
msgid ""
"Viewlet templates tend to be short, and never include the full *<html />* "
"wrapper."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:119
msgid ""
"For the page template to be valid, there must be exactly one root node, a "
"*<div />* in this case."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:121
msgid ""
"It is a good idea to apply a CSS class to the outer element of the viewlet, "
"so that it can be styled easily."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:123
msgid ""
"The *viewlet*variable refers to an instance of the viewlet class. There is "
"also *view*, the current view; *context*, the context content object; and "
"*request*, the current request."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:128
msgid "Viewlet ordering"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:130
msgid ""
"By default, the order of viewlets in a viewlet manager is arbitrary. Plone’s"
" viewlet managers, however, add ordering support, as well as the ability to "
"temporarily hide particular viewlets. You can control the order through-the-"
"web using the *@@manage-viewlets* view described above."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:136
msgid ""
"A more robust and repeatable option, however, is to configure ordering at "
"product installation time using Generic Setup, by adding a *viewlets.xml* to"
" your *profiles/default* directory."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:140
msgid ""
"For example, to ensure that our new viewlet appeared first in the "
"*plone.abovecontent* manager, we could use a *viewlets.xml* file like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:154
msgid ""
"See `this tutorial <http://plone.org/documentation/kb/customizing-main-"
"template-viewlets>`_ for more detail about the syntax of this file."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:157
msgid "Overriding an existing viewlet"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:159
msgid ""
"Just like a view, a viewlet with a particular name can be overridden based "
"on the type of context, using the *grok.context()* directive, or a browser "
"layer, using the *grok.layer()* directive."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:163
msgid "Here is an example using a more-specific context override:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:189
msgid ""
"The viewlet name and manager are the same as those used in the original "
"registration, allowing this viewlet to act as an override for the one "
"defined previously."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:192
msgid ""
"Here, the viewlet is registered for a more-specific context, using "
"*grok.context()*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:194
msgid ""
"In this case, there is no page template. Instead, we return an empty string "
"from *render()*. This has the effect of hiding the viewlet for documents "
"providing *IImpotantDocument*(from the examples earlier in the manual, this "
"is a marker interface that can be applied to *IDocument* instances). We "
"could of course have used a template as well, as shown above."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:202
msgid "Restricting a viewlet to the canonical view"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:204
msgid ""
"A viewlet may be registered to appear only when a particular type of view is"
" being rendered, using the *grok.view()* directive. You can pass either the "
"view class itself, or an interface it implements, to this directive. One "
"common example of this is the *IViewView* marker interface, which Plone "
"applies to the canonical view (i.e. the one you get when clicking the *View*"
" tab) of a content object."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:211
msgid ""
"Here is a refined version of our original viewlet, applied to the canonical "
"view only (template not shown again):"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:219
msgid ""
"this will cause an error if the viewlet manager is not available for the "
"current context and view."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:222
msgid ""
"We need to register some viewlets before this would actually display "
"anything. Previously, we used an interface provided by the viewlet manager "
"to register a viewlet for that manager. We could define such an interface "
"and use *grok.implements()* on the viewlet manager class to associate it "
"with the manager class. However, we can also use the viewlet manager class "
"directly:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/viewlets.rst:239
msgid ""
"It would of course be better to use a page template, but this would be "
"enough for a quick test."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:2
msgid "Views"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:4
msgid "**Browser views with and without templates**"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:7
msgid ""
"Browser views (or just “views”) are the most common form of display "
"technology in Zope. When you view a web page in Plone, chances are it was "
"rendered by a view\\ :sup:`[1]`\\ ."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:11
msgid ""
"At the most basic level, a view is a component (in fact, a named multi-"
"adapter) that is looked up during traversal (i.e. when Zope interpreters a "
"URL) and then called by the Zope publisher to obtain a string of HTML to "
"return to the browser. That normally involves a page template, although it "
"is possible to construct the response in code as well. Sometimes, the view "
"may not return anything. One reason may be that it results in a redirect. "
"Furthermore, some views are not designed to be invoked from URL traversal, "
"instead containing utility methods which are looked up from other views or "
"components."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:22
#: ../../reference_manuals/old/archetypes/appendix.rst:3520
msgid "Views with templates"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:24
msgid ""
"The most common type of view involves a Python class and an associated page "
"template. The Python class is used to register the view. An instance of the "
"class is also available in the template, under the name *view*. This "
"provides a natural home for “display logic” - calculations or preparation of"
" data intended only for the view."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:31
msgid ""
"As a rule of thumb, try to keep the page template free from complex "
"expressions. Python code is much easier to debug and test."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:34
msgid ""
"Here is an example of a view class which registers a view and provides some "
"helper methods and attributes. It also prepares some variables for the view "
"in the *update()* method, which is called just before the view is rendered. "
"Obviously, we could have omitted these things if they were not necessary, in"
" which case the Python class would serve only as a place to hang the view’s "
"registration."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:41
msgid ""
"This class could go in any Python module. For generic views, *browser.py* is"
" a good choice."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:64
msgid ""
"The automatically associated template is shown below. If the Python module "
"was *browser.py*, this would be found in a directory "
"*browser\\_templates/asmessage.pt* in the same package. The directory name "
"is taken from the module name (with *\\_templates* appended); the filename "
"is taken from the class name (in all lowercase, with a *.pt* extension)."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:111
msgid ""
"If we now had a content object providing *IDocument* reachable at "
"*http://example.org/my-document*, we would be able to invoke this view using"
" a URL like *http://example.org/my-document/@@as-message*. See the "
"`Dexterity Developer Manual`_ for more information about how to register "
"default and alternative views for content items."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:119
msgid ""
"The class will grokked as a view because it derives from *grok.View*. This "
"in turn defines a constructor which saves the context content object as "
"*self.context* and the request as *self.request*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:122
msgid ""
"We register the view for a specific type of content object using "
"*grok.context()*, which we have already seen in the context of adapters. "
"Here, we have used the *IDocument* interface from earlier in this manual. If"
" there is a module-level context, this can be omitted."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:127
msgid ""
"We give the view a name using *grok.name()*. This corresponds to the path "
"segment in the URL. This directive is optional. The default view name is the"
" name of the class in all lowercase, e.g. *“asmessage”* in this case."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:131
msgid ""
"We specify a permission required to access the view using *grok.require()*. "
"This directive is required. You can pass *“zope2.Public”* to indicate that "
"the view does not require any permissions at all. Other common permissions "
"include *zope2.View*, *cmf.ModifyPortalContent* and *cmf.ManagePortal*. See "
"the `Dexterity Developer Manual`_ for more information about permissions and"
" workflow."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:138
msgid ""
"We override the *update()* method, which is called by the base class before "
"the view is rendered. This is a good place to pre-calculate values used in "
"the template and process any request variables (see the section on forms "
"below). Since views are transient objects instantiated on the fly, we can "
"safely store values on the view object itself. Here, we have looked up an "
"*IMessage*adapter (from the adapter examples earlier in this manual) and "
"stored it in *self.message*. This is available in the template as "
"*view/message*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:146
msgid ""
"In the *update()* method, we use the *aq\\_inner()* function on "
"*self.context* to avoid possible problems with the view being part of the "
"acquisition chain of *self.context*. If that didn’t make any sense, better "
"not to worry about why this is necessary. Nine times of out ten, you won’t "
"have a problem if you just use *self.context* directly, but since the tenth "
"time is quite hard to debug, it’s a good habit to get into."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:153
msgid ""
"We have also defined a custom method, which we use in the template via a TAL"
" expression."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:155
msgid ""
"In the template, we use the *master* macro of Plone’s *main\\_template* to "
"get the standard Plone look-and-feel, and include a number of standard "
"viewlet managers (see the section on viewlets later in this manual) to "
"provide standard UI elements."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:159
msgid ""
"We use a number of TAL expressions to render information from the context "
"(the *IDocument* object) and the view instance (in particular, the "
"*view.message* object we set in the *update()* method). See the `ZPT "
"reference`_ for more details on the TAL syntax."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:165
#: ../../reference_manuals/old/archetypes/appendix.rst:3638
msgid "Views without templates"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:167
msgid ""
"Sometimes, we do not need a template. In this case, we can override the "
"*render()* method of the *grok.View* base class to return a string, which is"
" then returned to the browser as the response body."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:171
msgid ""
"Below is an example that builds a CSV file of the recipients of the message "
"representation of the context. By setting appropriate response headers, this"
" view ensures that the browser will attempt to download that generated file,"
" rather than display a plain text response."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:221
msgid "We use the Python *csv* module to build the output string."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:222
msgid "We return a string, which represents the response body."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:223
msgid ""
"We set the *Content-Type* repsonse header to indicate to the browser that "
"the return value should be opened as a spreadsheet."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:225
msgid ""
"We set the *Content-Disposition* response header to indicate that the return"
" value should be treated as a separate file rather than opened in the "
"browser, and suggest a filename for the download."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:230
msgid "Implementing simple forms"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:232
msgid ""
"Dexterity uses the powerful `z3c.form`_ library to provide forms based on "
"schemata defined in Python or through-the-web, including validation and "
"standardised widgets. Sometimes, though, we just want a simple HTML form and"
" a bit of logic to process request parameters. One common way to implement "
"this is with a view that defines a form, which submits back to itself. The "
"form is processed in the *update()* method of the view class."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:240
msgid ""
"The example below shows a simple form which allows users to subscribe to a "
"content object with an email address. The list of subscribers is stored in "
"an annotation (as described earlier in this manual)."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:283
msgid ""
"Here is the form template. Assuming the view was put in a module "
"*subscription.py*, the template would be in "
"*subscription\\_templates/subscribe.pt*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:330
msgid ""
"To make the example more realistic, we would obviously also need to write "
"some code to help manage the list of subscribers, allowing users to un-"
"subscribe and so on, as well as some functionality to actually use the list."
" These could potentially be created as other views in the same module. Their"
" templates would then also go in the *subscription\\_templates* directory."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:339
msgid ""
"We’ve omitted the *grok.name()* directive, so the view name will be "
"*@@subscribe*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:341
msgid ""
"We register the form for a generic interface so that it can be used on any "
"annotatable context."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:343
msgid ""
"We use a redirect if the form is successfully submitted. The *grok.View* "
"base class is smart enough to avoid invoking any associated template or "
"overridden *render()* method if a redirect takes place."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:347
msgid ""
"We use *self.request.form* to inspect the submitted form. This dictionary "
"contains form values submitted via a POST request. For a GET request, use "
"*self.request.get()* to obtain parameters."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:350
msgid ""
"We use an *OOSet* as an efficient persistent storage of subscription email "
"addresses."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:354
msgid "Utility views"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:356
msgid ""
"Not all views are meant to be rendered. Sometimes, a view provides utility "
"methods that may be used from other views. Plone has a few such views in the"
" *plone.app.layout.globals* package:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:360
msgid ""
"*plone\\_portal\\_state*, which gives access to site-wide information, such "
"as the URL of the navigation root."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:362
msgid ""
"*plone\\_context\\_state*, which gives access to context-specific "
"information, such as an item’s URL or title."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:364
msgid ""
"*plone\\_tools*, which gives access to common tools, such as "
"*portal\\_membership* or *portal\\_catalog*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:367
msgid ""
"See the *interfaces.py* module in *plone.app.layout.globals* for details. In"
" a template, we would look up these with a TAL expression like:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:378
msgid ""
"In code, we could perform the same lookup like so (note that we need a "
"context object and the request; in a view, we’d normally get these from "
"*self.context* and *self.request*):"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:388
msgid ""
"A utility view is registered like any other view. If you are using "
"*grok.View* to register one, you should return an empty string from the "
"*render()* method. You also should not use *update()*, since it may not be "
"called for you. Instead, define methods and attributes that can be accessed "
"independently. Here is an example:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:434
msgid "We have implemented an empty *render()* method to satisfy *grok.View*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:436
msgid ""
"We have used `plone.memoize`_ to lazily cache variables. The *@view.memoize*"
" decorator will cache each value for the duration of the request. See "
"*plone.memoize*’s *interfaces.py* for more details."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:439
msgid ""
"We’re being defensive and returning *None* in the cases where the *IMessage*"
" adapter cannot be looked up."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:443
msgid "Overriding views"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:445
msgid ""
"Recall that views are implemented behind the scenes as named multi-adapters."
" One consequence if this is that it is possible to override a view with a "
"given name by using the more-specific adapter concept. You can:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:450
msgid ""
"Register a view with the same name as an existing view, specifying a more "
"specific context interface with *grok.context()*"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:452
msgid ""
"Register a view with the same name as an existing view, specifying a more "
"specific type of request with *grok.layer()*."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:455
msgid ""
"The term “layer” here relates to the concept of a “browser layer”. Upon "
"traversal, the request may be marked with one or more marker interfaces. In "
"Plone, this normally happens in one of two ways:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:459
msgid ""
"A browser layer can be automatically associated with the currently active "
"Plone theme. This magic is performed using the `plone.theme`_ package."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:462
msgid ""
"One or more browser layers can be activated when a particular product is "
"installed in a Plone site. The `plone.browserlayer`_ package supports this "
"via the *browserlayer.xml* GenericSetup syntax. See the `Dexterity Developer"
" Manual`_ for more information about creating a GenericSetup profile."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:468
msgid ""
"For example, the following class (view implementation and template not "
"shown) could be used to override a view for a specific layer:"
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:490
msgid ""
"The *grok.layer()* directive takes an interface as its only argument. This "
"should be a layer marker interface. In this case, we have assumed that we "
"have an *IMessageOverrides* layer."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:493
msgid ""
"We’ve used the same name and context as the default implementation of the "
"view."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:495
msgid ""
"We’ve also used the same permission. It is possible to change the "
"permission, but in most cases this would just be confusing."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:497
msgid ""
"We will also sometimes use layers not to override an existing view, but to "
"ensure that the view is not available until a package has been installed "
"into a Plone site (in the case of a layer registered with "
"*browserlayer.xml*) or a given theme is active (in the case of a theme-"
"specific layer)."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:504
msgid ""
"You can use five.grok to override any browser view, not just those "
"registered with five.grok. For a simpler way to override templates (but not "
"Python logic), you may also want to look into `z3c.jbot`_."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:508
msgid ""
"For more details on this topic, see the `Customization for Developers`_ "
"tutorial."
msgstr ""

#: ../../reference_manuals/active/five-grok/browser-components/views.rst:511
msgid ""
"[1] As of Plone 3, that’s not entirely true: an older technology known as "
"skin layer templates are used for many of the standard pages, but the "
"principles behind them are the same."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:1073
msgid "Adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:4
msgid ""
"**Adapting from one interface to another with simple adapters and multi-"
"adapters**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:7
msgid ""
"Adapters are one of the most powerful concepts of the Zope Component "
"Architecture. They underpin a huge amount of the functionality - and "
"“pluggability” - of Zope and Plone. You will often see documentation (or "
"interfaces) that describe how a customisation can be applied by writing an "
"adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:13
msgid ""
"As the name suggests, adapters implement the “adapter” software design "
"pattern. In the simplest terms, an adapter is a component that knows how to "
"use an object providing one interface to implement another interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:17
msgid ""
"The usual analogy is that of international power plugs: a European plug has "
"two prongs and a UK plug has three, but for the most part they do the same "
"job and use the same (or nearly the same) voltage. If you have a UK "
"appliance and you are in a country that has European sockets, you can "
"(re-)use your appliance (and avoid buying a new one) by employing an adapter"
" that makes the UK plug fit into the European socket. (If you’ve ever lived "
"in the UK, you’ll understand why “European” is not a superset of “UK” in the"
" preceding paragraph)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:27
msgid ""
"If you prefer duck metaphors, there is an awesome talk by Brandon Craig "
"Rhodes about the concept of an adapter for your viewing pleasure `here "
"<http://plone.org/events/conferences/2008-washington-dc/agenda/using-grok-"
"to-walk-like-a-duck>`_. It even has sound effects."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:32
msgid ""
"In software terms, it is much the same. Let’s say that we were writing a "
"Twitter-to-email gateway (because Gmail has lots of storage space and it’s "
"important to know when some man in Kuala Lumpur got out of bed). Suppose we "
"have a function that can send an email, expecting an *IMessage* object. "
"Unfortunately, our input is a tweet, conforming to the *ITweet* interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:65
msgid "What we need is a way to *adapt* our *ITweet* object to an *IMessage*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:67
msgid ""
"The basic approach is to write a class that *implements* the attributes and "
"methods of *IMessage* by delegating to an *adapted* context object that "
"*provides* the *ITweet* interface. And a simple adapter would be just that: "
"a class that we instantiated directly, being passing a tweet in its "
"constructor, and then behaving like an *IMessage*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:73
msgid ""
"Doing this, however, would tie us down to a specific implementation of the "
"adapter. The ZCA gives us a more powerful alternative by maintaining a "
"registry of adapters. We simply ask for an adapter *from* the object we "
"have, *to* the interface we want, and the ZCA searches the registry for the "
"most appropriate one. In code, it looks like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:88
msgid "We could call this function with a tweet like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:95
msgid ""
"Here, we have assumed that the incoming object is an *ITweet*, but in "
"reality it could be anything that was *adaptable* to *IMessage.* Suddenly, "
"our *sendAsEmail()* function can be used for Identi.ca messages and those "
"really irritating Facebook status updates as well. All we have to do is "
"register an appropriate adapter from the source type to *IMessage*, and "
"we’re done."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:103
msgid ""
"As you may imagine, this technique is very useful in a content management "
"scenario where you may have any number of different content types and you "
"want to implement some common functionality that works across a number of "
"objects."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:108
msgid ""
"The syntax we used here is to “call” the interface. This is the most "
"convenient way to look up a simple (unnamed, non-multi) adapter. If no "
"adapter can be found, the ZCA will raise a *TypeError*. That normally "
"indicates a programming error, so we don’t mind, but if you are unsure "
"whether the adapter has been registered, you can fall back to a default "
"value (e.g. *None*) like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:120
msgid "Registering classes as adapter factories"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:122
msgid ""
"Now that we have seen what adapters do and how to look them up, let’s "
"actually write and register one."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:125
msgid ""
"When we register adapters, we are actually registering an "
"**adapter****factory.** This is a callable that takes as an argument the "
"object being adapted, and returns an object providing the desired interface."
" Each time an adapter is looked up, the ZCA calls the adapter factory to "
"obtain a new adapter instance. (Compare this to utilities, which are "
"instantiated once and shared.)"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:132
msgid ""
"In most cases, adapter factories are classes implementing a given interface "
"and taking a single parameter in their constructor. (A Python class object "
"is a callable which takes the arguments of the class’ *\\_\\_init\\_\\_()* "
"method and returns an instance of the class). The *grok.Adapter* base class "
"relies on this convention. It even defines the constructor (although you can"
" override it) and stores the adapted object in the variable *self.context*, "
"as is the convention."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:140
msgid ""
"An adapter factory for adapting *ITweet* s to *IMessage* s could thus look "
"like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:170
msgid ""
"Assuming the package is being grokked, this is all it takes to register an "
"adapter with *five.grok*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:175
msgid ""
"The adapted object is available as *self.context* when using the default "
"constructor."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:177
msgid ""
"If you are writing your own constructor, use a signature like *\"**def "
"\\_\\_init\\_\\_(self, context):*\"** and store the *context* argument as "
"*self.context*. This is not strictly necessary, but it is an almost "
"universal convention. Since the constructor is called when the adapter is "
"looked up, it is best to avoid any resource-intensive operations there. If "
"an error is raised in the constructor, the adaptation will fail with a "
"“could not adapt” *TypeError*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:184
msgid ""
"The *grok.provides()* directive indicates the interface that will be "
"provided by the adapter. If the adapter factory implements a single "
"interface (via *grok.implements()* or inherited from a base class), this is "
"optional."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:188
msgid ""
"The *grok.context()* directive indicates what is being adapted. This is "
"usually an interface, but it can also be a class, in which case the adapter "
"is specific to instances of that class (or a subclass). This directive can "
"sometimes be omitted if there is an unambiguous module-level context. This "
"is an instance providing the *IContext* interface from "
"*grokcore.component.interfaces*, and will typically be something like a "
"content object. If in doubt, it is always safest to provide an explicit "
"context using the *grok.context()* directive."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:198
msgid "Modelling aspects as adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:200
msgid ""
"In the example above, we used an adapter to make an object providing one "
"interface conform to another. In this case, the objects were similar in "
"purpose, they just happened to have incompatible interfaces. However, "
"adapters are also frequently used in situations where we are trying to model"
" different aspects of an object as independent components, without having to"
" support every possible feature in a single class."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:207
msgid ""
"Consider our message interface again. Let’s say that we wanted to be able to"
" email any content object as a message. Is our content object a message? Not"
" at all, but we can provide an adapter to the *IMessage* interface which "
"models the “messaging” aspect of the content object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:212
msgid ""
"Such an adapter may look something like this (*IDocument*and implementation "
"not shown, but assume it supports the properties *title*and *text*):"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:239
msgid ""
"This is relatively straightforward, and we could imagine having a number of "
"such adapters to represent any number of different content types as "
"messages."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:243
msgid "Now consider the alternatives:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:245
msgid ""
"we could write a bespoke email-sending function for each type of content and"
" use if-statements or lookup tables to find the correct one; or"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:248
msgid ""
"we could demand that every content type that supported being sent as an "
"email inherited from a mix-in class that provided the required properties."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:252
msgid ""
"The latter is the usual approach in the world of object oriented "
"programming, and is fine for small, closed systems. In an open-ended system "
"such as Plone, however, we don’t always have the option of mixing new "
"functionality into old code, and classes with “fat” interfaces can become "
"unwieldy and difficult to work with."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:259
msgid "Customisation with more-specific adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:261
msgid ""
"So far, we have limited ourselves to having only one adapter per type of "
"context. The ZCA allows us to have multiple possible adapters, leaving it to"
" pick the most appropriate one. Here, “most appropriate” really means “most "
"specific”, according to the following rules:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:266
msgid ""
"An adapter registered for a class is more specific than an adapter "
"registered for an interface"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:268
msgid ""
"An adapter registered for an interface directly provided by an instance is "
"more specific than an adapter registered for an interface implemented by "
"that object’s class"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:271
msgid ""
"An adapter registered for an interface listed earlier in the *implements()* "
"directive is more specific than an adapter registered for an interface "
"listed later"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:274
msgid ""
"An adapter registered for an interface implemented by a given class is more "
"specific than an adapter registered for an interface implemented by a base "
"class"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:277
msgid ""
"An adapter registered for a given interface provided by an object is more "
"specific than an adapter registered for a base-interface of that interface"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:280
msgid ""
"In the case of a multi-adapter (see below), the specificity of the adapter "
"to the first adapted object is more important than the specificity to "
"subsequent adapted objects"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:284
msgid ""
"These rules are known as “interface resolution order” and are basically "
"equivalent to the “method resolution order” used to determine which method "
"takes precedence in the case of multiple inheritance. Most of the time, this"
" works as you would expect, so you do not need to worry too much about the "
"detail of the rules."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:290
msgid ""
"The power of the “more-specific adapter” concept is that we can create a "
"generic adapter for a generic interface, and then provide an override for a "
"more specific interface. Let’s say that we had the following hierarchy of "
"interfaces, implemented by different types of content objects (not shown):"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:319
msgid ""
"We could now register a generic adapter from *IContent* to *IMessage*, which"
" would be usable for any content item providing this interface, including "
"file content, or some future type of content we haven’t even thought of yet."
" Then, we could register a *more specific* adapter for IDocument, like the "
"one we saw above, to provide more specific behaviour for the document type."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:326
msgid ""
"But why stop there? Perhaps we want to be able to mark certain documents as "
"important and have the message subject change? One way to do that is with a "
"marker interface on the instance:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:336
msgid ""
"We would apply this selectively to instances using *alsoProvides()* (perhaps"
" in an event handler):"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:344
msgid ""
"We could then register an adapter for this. We can even re-use our previous "
"adapter factory by subclassing it and overriding only the properties or "
"methods we care about:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:358
msgid ""
"Note: This factory class is grokked as an adapter because it derives from "
"*DocumentMessage* which in turn derives from *grok.Adapter*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:362
msgid ""
"If you have a class that derives from one of the special Grok base classes "
"(like *grok.Adapter* or *grok.GlobalUtility*), but you do not want it to be "
"grokked, e.g. because it is used only as a base class for other classes, you"
" can use the *grok.baseclass()* directive with no arguments to disable "
"grokking."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:369
msgid "Using a function as an adapter factory"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:371
msgid ""
"Remember we said that an adapter factory is a “callable” that returns an "
"object providing the appropriate interface? Classes are one type of "
"callable, but the most common callable, of course, is a function. It can be "
"useful to register a function as an adapter factory in situations when you "
"are not actually (or always) instantiating a class to provide the adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:378
msgid ""
"As an example, let’s say that we wanted to keep a cache of the adapter "
"instances, perhaps because they are resource intensive. In this case, we may"
" either create a new adapter object, or re-use an existing one (in general, "
"we wouldn’t do this of course, due to thread safety and state management "
"issues, but it’s a useful example). We can’t do that in the "
"*\\_\\_init\\_\\_()* method of a class, because that is not called until "
"after the class has been instantiated. Instead, we could use a function as "
"the adapter factory:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:402
msgid ""
"The *@implementer* decorator specifies the interface(s) which will be "
"provided by the returned objects. In the case of an adapter factory, you "
"should pass a single interface, although the decorator can take multiple "
"arguments."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:406
msgid ""
"The *@adapter* decorator actually registers the adapter. For a single "
"adapter, pass a single interface. For a multi-adapter (see below), you can "
"pass multiple arguments. For a named adapter (see below) you can pass a "
"*name=u“name”* keyword argument."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:412
msgid "Using an instance as an adapter factory"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:414
msgid ""
"In addition to classes and functions, an instance of a class that has a "
"*\\_\\_call\\_\\_()* method may be used as an adapter factory callable. To "
"register such an object as an adapter factory, we can’t use the "
"*grok.Adapter* base class (since that would register the *class* as the "
"adapter factory and we want to register the *object)* or the *@adapter* "
"decorator. Instead, we use the *global\\_adapter()* function."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:421
msgid ""
"This is much less common, but can be useful in certain circumstances. Here "
"is an example from the `z3c.form`_ library:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:440
msgid ""
"The *StaticWidgetAttribute()* function returns a callable object that is "
"intended to be registered as an adapter factory. The *global\\_adapter()* "
"function takes care of this for us at “grok time”. In this case, we have "
"passed the instance and a name (see named adapters, below) because the "
"object provides a single interface and has an “adapts” declaration. If this "
"was not the case, we could use the full syntax:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:451
msgid ""
"Note: The adapted interfaces are passed as a tuple to support multi-adapters"
" (see below)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:455
msgid "Named adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:457
msgid ""
"As we have seen above, adapters - like utilities - can be registered with a "
"name:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:460
msgid ""
"By using the *grok.name()* directive in the class body of an adapter factory"
" deriving from *grok.Adapter*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:462
msgid ""
"By using the *name*keyword argument to the *@adapter* function decorator"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:464
msgid "By using the *name*argument to the *global\\_adapter()* function"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:466
msgid ""
"Named adapters are a lot less common than named utilities, but can be useful"
" in a few circumstances:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:469
msgid ""
"You want the user to choose among a number of different implementations at "
"runtime. In this case, you could translate the user’s input (or some other "
"external runtime state) to the name of an adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:473
msgid ""
"You want to allow third-party packages to plug in any number of adapters, "
"which you will iterate over and use as appropriate, but you also want to "
"allow an individual named adapter to be overridden for a more specific "
"interface (see also subscription adapters below)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:477
msgid ""
"Most browser components (views, viewlets, resource directories) are in fact "
"implemented as named (multi-)adapters. For a view, the name is the path "
"segment that appears in the URL."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:481
msgid ""
"If you want to get a simple (non-multi) adapter by name, use the "
"*getAdapter()* function:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:489
msgid ""
"This will raise a *ComponentLookupError* if no adapter can be found. There "
"is also a *queryAdapter()* function which returns *None* as a fallback "
"instead."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:493
msgid ""
"If you want to iterate over all the named adapters that provide a given "
"interface, you can do:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:502
msgid ""
"Note that this function takes a tuple of objects as the context, because it "
"is also used for multi-adapters."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:506
msgid "Multi-adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:508
msgid ""
"So far, our adapters have all adapted a single context. A multi-adapter is "
"an adapter that adapts more than one thing. There are a few reasons to want "
"to do this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:512
msgid ""
"If you have written an adapter and you find that you need to pass an object "
"to (almost) every one of its methods, you could use a multi-adapter to allow"
" the adapter to be initialised with more than one object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:516
msgid ""
"The rules of “more specific” adapters applies to each adapted context of "
"multi-adapters. Thus, if you want to allow a component to be swapped out "
"(customised) along multiple dimensions, you could look it up as a multi-"
"adapter."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:521
msgid ""
"Multi-adapters are frequently used in browser components (such as views and "
"viewlets), which adapt a context object and the request. This allows "
"multiple views to be registered with the same name, with different "
"implementations based on the type of context (i.e. the \"*index*\" view for "
"an *IDocument* is different to the view of an *IFile*) or the type of "
"request (i.e. an HTTP request results in a different response to an XML-RPC "
"request). Furthermore, the request may be marked with marker interfaces "
"(known as “browser layers”) upon traversal, allowing you to register a "
"different view depending on which layer is in effect."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:531
msgid ""
"Browser components are registered using specific grokkers which also take "
"care of things like security and template binding. We will cover those "
"later. For a simple example, however, consider the following:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:561
msgid "We could imagine looking up a multi-adapter like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:570
msgid ""
"This will raise a *ComponentLookupError* if no suitable adapter can be "
"found. There is also *queryMultiAdapter()*, which will return *None* as a "
"fallback."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:574
msgid ""
"Like other adapters, a multi-adapter is registered with a callable that acts"
" as the adapter factory. The callable must take one argument for each "
"adapted object (two, in this case). We can register multi-adapters with the "
"*@adapter* function decorator or the *grok.global\\_adapter()* function, as "
"indicated above. More commonly, however, we will use the *grok.MultiAdapter*"
" base class, like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:609
msgid ""
"Here, we have registered two multi-adapters, the second more specific than "
"the first. Notice how we have to define a constructor: the base class can’t "
"do it for us, since it doesn’t know how many things we will adapt or what we"
" may want to call the variables where they are stored."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:615
msgid "Subscription adapters"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/adapters.rst:617
msgid ""
"There is one final type of adapter known as a *subscription adapter*. These "
"can be used when you always want to look up and iterate over *all* available"
" adapters to a specific interface, as opposed to finding the most specific "
"one. However, it is not possible to override or disable a subscription "
"adapter without removing its registration directly, so most people prefer to"
" use named adapters instead, which allow an adapter with a given name to be "
"overridden for a more specific interface. Like event handlers (which are in "
"fact implemented using subscription adapters), subscription adapters are "
"registered with the *<subscriber />* ZCML directive. There is currently no "
"way to register one using Grok conventions."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:1662
msgid "Annotations"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:4
msgid "**Using the zope.annotation package**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:7
msgid ""
"Annotations are a convenient feature used throughout Zope and Plone. They "
"also serve as a useful real-world example of adapters."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:10
msgid ""
"The `zope.annotation`_ package defines an interface *IAnnotations*. By "
"adapting an object (often a content item) to this interface, you can get and"
" set values using a dict-like API. These values are then persisted against "
"the context object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:15
msgid ""
"Remember that we often use adapters to model different aspects of an object."
" A content object may have a basic schema - its content data model - but "
"there may be any number of adapters providing functionality which in turn "
"may need to persist other information. The annotations API provides a simple"
" and consistent storage abstraction for such information."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:22
msgid "The basic syntax for using an annotation is:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:32
msgid ""
"Since annotations can be used by any number of packages, we tend to use "
"dotted names as keys, to reduce the risk of colissions when two packages are"
" writing annotations onto the same object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:35
msgid ""
"The values stored in annotation must be persitable. Primitives are fine, as "
"are objects deriving from *persistence.Persistent*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:37
msgid ""
"The *IAnnotations*interface promises all the usual methods of a Python "
"dictionary. For example, you can use *setdefault()* to set a default value "
"if you are not sure that it has been created yet."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:41
msgid ""
"But where are annotations stored? As users of the *IAnnotations* interface "
"we don’t care: that logic is implemented by the *IAnnotations* adapter. We "
"could implement our own such adapter, but we normally don’t: the "
"*zope.annotation* package comes with an adapter providing *IAnnotations* and"
" adapting a marker interface *IAttributeAnnotations*. This stores the values"
" in an efficient, persistent *BTree* structure. (That BTree happens to be "
"stored as an attribute of the content object called "
"*\\_\\_annotations\\_\\_*, although we don’t ever access that directly.)"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:51
msgid ""
"Most content objects and the request object in Zope and Plone provide this "
"marker interface, making them “annotatable”. If you are working on a simpler"
" object, you can declare support for *IAttributeAnnotations* with a "
"directive like:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:67
msgid ""
"Let’s now show a more complete example of using annotations. Recall the "
"following interface, which we used to implement a multi-adapter in the "
"previous section:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:81
msgid ""
"Let’s say that we wanted to count the number of messages sent against each "
"each content object. Here is an implementation of the multi-adapter that "
"uses annotations to do that:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/annotations.rst:113
msgid ""
"This code is defensive in that we gracefully handle the case where the "
"context is not annotatable. When it is, we get the current counter (if set),"
" increment it, and then save it back again, before printing the value."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:2
msgid "Events"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:4
msgid "**Registering event handlers and sending events**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:6
msgid ""
"Zope provides an events system. Various components (e.g the standard add and"
" edit forms) *notify* any number of *event subscribers* (also known as "
"*event handlers*) of a particular event. The subscribers are then executed."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:11
#: ../../reference_manuals/old/buildout/thirdparty.rst:85
msgid "Note that:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:13
msgid "Event subscribers are executed in arbitrary order"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:14
msgid ""
"Events are executed *synchronously*: The code which notifies of the event "
"will block until all event handlers have returned"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:18
msgid ""
"Each type of event is described by an interface. The implementation of this "
"interface will typically carry some information about the event, which may "
"be useful to event subscribers."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:22
msgid ""
"Some events are known as **object events**. These have an *object* "
"attribute, giving access to the (content) object that the event relates to. "
"Object events allow event handlers to be registered for a specific type of "
"object as well as a specific type of event."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:27
msgid ""
"Some of the most commonly used event types in Plone are shown below. They "
"are all object events (i.e. they derive from "
"*zope.component.interfaces.IObjectEvent)*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:31
msgid ""
"*zope.lifecycleevent.interfaces.IObjectCreatedEvent*, fired by the standard "
"add form just after an object has been created, but before it has been added"
" on the container. Note that it is often easier to write a handler for "
"*IObjectAddedEvent* (see below), because at this point the object has a "
"proper acquisition context. This makes it possible to look up tools using "
"*getToolByName()*, for example."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:37
msgid ""
"*zope.lifecycleevent.interfaces.IObjectModifiedEvent*, fired by the standard"
" edit form when an object has been modified"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:39
msgid ""
"*zope.lifecycleevent.interfaces.IObjectAddedEvent*, fired when an object has"
" been added to its container. The container is available as the *newParent* "
"attribute, and the name the new item holds in the container is available as "
"*newName*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:43
msgid ""
"*zope.lifecycleevent.interfaces.IObjectRemovedEvent*, fired when an object "
"has been removed from its container. The container is available as the "
"*oldParent* attribute, and the name the item held in the container is "
"available as *oldName*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:47
msgid ""
"*zope.lifecycleevent.interfaces.IObjectMovedEvent*, fired when an object is "
"added to, removed from, renamed in, or moved between containers. This event "
"is a super-type of *IObjectAddedEvent* and*IObjectRemovedEvent*, shown "
"above, so an event handler registered for this interface will be invoked for"
" the ‘added’ and ‘removed’ cases as well. When an object is moved or "
"renamed, all of *oldParent*, *newParent*, *oldName* and *newName* will be "
"set."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:54
msgid ""
"*Products.CMFCore.interfaces.IActionSucceededEvent*, fired when a workflow "
"event has completed. The *workflow* attribute holds the workflow instance "
"involved, and the *action* attribute holds the action (transition) invoked."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:59
msgid ""
"Of course, you can create your own event types as well. However, for "
"standard CRUD type operations (create, read, update, delete), it is best to "
"use the standard event types with a custom object type rather than creating "
"an object-specific event type."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:65
msgid "Registering an event subscriber"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:67
msgid ""
"Event subscribers can be registered using the *subscribe()* decorator. This "
"takes at least one argument: the type (interface) of event to subscribe to. "
"For object events, it can take two parameters: the type of object, and the "
"type of event. This allows us to limit an event handler to a particular type"
" of context object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:73
msgid ""
"Here is an example, printing a message every time a CMF content object is "
"added to a folder:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:87
msgid ""
"Provided the module is grokked, this is all we have to do to register a new "
"event subscriber. Although this example is trivial, there is no limit to "
"what you can do within an event handler."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:93
msgid ""
"The two arguments to the function correspond to the two arguments to the "
"*subscribe()* decorator. For object events, the first is the object that the"
" event relates to (which will be the same as *event.object* in most cases). "
"The second is the event instance."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:97
msgid ""
"Obviously, we could use a more specific content type interface if we wanted "
"to be more specific."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:99
msgid ""
"Unlike adapters, you cannot override an event subscriber by using a more "
"specific interface. Each and every applicable event subscriber will be "
"executed when an event is fired."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:104
msgid "Creating a custom event type"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:106
msgid ""
"Creating a new type of event is not much more difficult. Here is an example "
"that involves the sample message broadcasting service we saw in the previous"
" sections:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:110
msgid ""
"First, we define an object event type. This would typically be in an "
"*interfaces.py* module:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:123
msgid ""
"The event implementation itself is simple too. The *object* attribute is "
"mandated by the *IObjectEvent* interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:139
msgid ""
"Here is another implementation of the messaging service, this time "
"broadcasting an event:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:176
msgid ""
"We use the *notify()* function from the *zope.event* package to broadcast "
"the event."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:178
msgid ""
"The call to *notify()* will not return until every event subscriber has been"
" executed."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/events.rst:181
msgid ""
"As before, we could now register an event subscriber for this event. Since "
"it is an object event, we can use the two-argument version of the "
"*subscribe* decorator as shown above. However, we could also have a more "
"general event handler that executes for any type of object. Here is one that"
" simply logs that a message has been sent:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:2
msgid "Further details"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:4
msgid "**Where to find more information about the core components**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:6
msgid ""
"In this section, we have described how to use *five.grok* to configure "
"standard Zope Component Architecture components. In fact, the functionality "
"for this can be found in the `grokcore.component`_ package, and does not "
"strictly require the use of *five.grok*: you could use *grokcore.component* "
"directly. This may be useful if you are trying to create a package that "
"should work with other frameworks using the Zope Toolkit / Zope 3, such as "
"Grok itself."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:14
msgid ""
"grokcore.component contains a few other grokkers and helper functions which "
"we have not described here. You are encouraged to read its `documentation`_ "
"for details."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:18
msgid ""
"If you need to introspect the interfaces of your components, you should also"
" take a look at the *zope.interface* API, which for example provides "
"functions for enumerating the interfaces implemented by a class or provided "
"by an object."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:23
msgid ""
"If you need to introspect the component architecture itself, look up the "
"*zope.component* API, where you will find methods for enumerating, querying,"
" registering and removing adapters, utilities and event subscribers."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/further-details.rst:28
msgid ""
"Both of these packages have interfaces containing copious internal "
"documentation."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/index.rst:2
msgid "Core components"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/index.rst:4
msgid ""
"**Using five.grok to configure adapters, utilities and event subscribers**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:953
msgid "Interfaces"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:4
msgid "**Describing functionality with interfaces**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:6
msgid ""
"There is nothing Grok-specific about interfaces, but they are important "
"because they used in various directives for describing or registering "
"components."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:10
msgid ""
"Zope interfaces are implemented in the *zope.interface* package. In "
"addition, *zope.schema* contains various classes that can be used to "
"describe the type of attributes on an interface (the `Dexterity developer "
"manual`_ contains a reference)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:15
msgid ""
"Interfaces are typically found in an *interfaces.py* module, although you "
"will sometimes see schema interfaces kept in the same module as other code "
"(e.g. content classes, event handlers) related to the content type described"
" by that schema."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:20
msgid ""
"The simplest interface is a **marker** interface. This is used as a flag "
"which can either be applied or not to a particular object. A marker "
"interface may look like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:32
msgid ""
"Notice how we have a docstring on the interface. Interfaces are useful as "
"documentation, and you should endeavour to describe their purpose and "
"behaviour in docstrings on the interface and on any attributes or methods "
"(see below)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:37
msgid ""
"Also note that although an interface is created using the *class*keyword, "
"they are in fact instances of type *InterfaceClass*. For the most part, you "
"don’t need to worry about this."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:41
msgid ""
"Interfaces are said to be **implemented** by classes, in which case "
"instances of that class is said to **provide** the interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:53
msgid ""
"Note: The *grok.implements()* directive is just a convenience alias for the "
"*implements()* directive from *zope.interface*."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:56
msgid "Adherence to a given interface can be tested like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:66
msgid ""
"Again, note that we perform an “implements” check against the class and a "
"“provides” check against an instance."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:69
msgid ""
"It is also possible to apply an interface directly to an instance. This is "
"mostly relevant to marker interfaces, since other interfaces promise "
"attributes and methods that you usually cannot guarantee that the object "
"will provide."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:79
msgid ""
"Let’s now take a look at a non-marker interface. This one promises several "
"attributes and methods. Typing and constraints for attributes are described "
"by *zope.schema* fields."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:102
msgid ""
"Again notice the use of docstrings for methods and titles and descriptions "
"for fields. Also notice how the method does not take the *self* parameter. "
"If the implementation is a class (as it is likely to be), its methods will "
"of course take the *self* parameter, but as far as the user of the interface"
" is concerned, this is an implementation detail, and so does not belong in "
"the interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:109
msgid "Here is a class implementing this interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:123
msgid ""
"Like classes, interfaces may inherit one another. The derived interface "
"inherits all the attributes and methods of the parent interface. Objects "
"providing the derived interface must provide all attributes and methods of "
"both interfaces."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:148
msgid ""
"A class may implement more than one interface. In addition, a class "
"automatically implements all interfaces from its base classes (unless you "
"use the *implementsOnly()* directive from *zope.interface*)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:165
msgid ""
"Here, we have implemented *text* as a property delegating to the *body* "
"field from the *IMessage* interface. We inherited the implementation of "
"*body* from the *Message*base class, from which we have also indicated the "
"*implements()* specification for the *IMessage* interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/interfaces.rst:184
msgid ""
"There are a few other things you can do with interfaces, such as specifying "
"interfaces provided by modules (used to specify an API for that module) or "
"classes (e.g. in the case of class objects acting as factories), looping "
"through the interfaces provided by an instance, or adding or removing marker"
" interfaces. None of these is terribly common. See the documentation for "
"`zope.interface`_ (including its interfaces) for details."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:2
#: ../../reference_manuals/old/archetypes/appendix.rst:1422
msgid "Utilities"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:4
msgid "**Singletons and registries with utilities**"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:6
msgid ""
"Utilities are simple components which may be looked up by interface and "
"optionally name. They are used for two purposes:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:9
msgid ""
"To implement a “singleton” - an object which is created in memory once and "
"shared by all clients."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:11
msgid ""
"To implement a registry of objects all providing the same interface. In this"
" case, each object is a named utility."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:14
msgid ""
"As with all components, utilities can be local or global. A local utility is"
" installed as a persistent object in a “local component site” (such as a "
"Plone site). Sometimes, we use local utilities as singletons storing "
"persistent objects, although there are better solutions (such as "
"`plone.app.registry`_ / `plone.registry`_) for that. More commonly, a local "
"utility is simply used to override a global utility with of same interface "
"(and optionally name)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:22
msgid ""
"In Plone, local components can be installed using the "
"*componentregistry.xml* GenericSetup import step. See the `GenericSetup "
"documentation`_ for more details. The techniques mentioned in this manual "
"pertain to global utilities only."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:27
msgid ""
"Global utilities can be registered in one of two ways using *five.grok*:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:29
msgid ""
"By writing a class deriving from *GlobalUtility*. The class will be used as "
"a utility factory. It will be instantiated once (its constructor must be "
"callable with no arguments), on startup, and registered according to the "
"directives used on the class."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:33
msgid ""
"By calling the *global\\_utility()* function on an already-instantiated "
"object. This allows you to configure the instance in code before registering"
" it."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:37
msgid "To illustate both of these techniques, we will create two interfaces:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:65
msgid ""
"Before we implement these utilities, let’s consider how we may use these two"
" interfaces from client code which does not care about their implementation."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:69
msgid "To look up the currently preferred language, we could do:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:79
msgid ""
"Languages are looked up as named utilities. Thus, we could get a language "
"like this:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:89
msgid ""
"*getUtility()* will return the default utility for the given interface if no"
" name is passed (in fact, the default utility has a name of *u“”*, i.e. an "
"empty string)."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:92
msgid "If no utility can be found, a *ComponentLookupError* will be raised."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:93
msgid ""
"We can use *queryUtility()* instead to fall back on another value (*None*, "
"by default) instead of raising an error if the utility is not found."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:96
msgid ""
"Each time we call *getUtility()* with the same arguments, we get the same "
"object back. This may lead to thread-safety issues in multi-threaded "
"environments (such as Zope), so be careful if your utility can be modified "
"after startup."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:101
msgid ""
"Let’s now show how these utilities could be registered. First, we will "
"create a class to encapsulate languages, instantiate a objects of this "
"class, and register each as a named utility providing the *ILanguage* "
"interface:"
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:126
msgid ""
"The *provides* argument can be omitted if (as is the case here) the object "
"provides exactly one interface. Otherwise, it is required."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:128
msgid ""
"Name *name*parameter defaults to *u“”* and so can be omitted if you are "
"registered an unnamed utility."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:130
msgid ""
"The *direct=True* argument indicates that the utility instance is being "
"passed as the first argument. The argument should be *False* if a class or "
"factory is being passed."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:134
msgid ""
"Next, we will define the preferred language utility. This time, we will "
"create a utility class and ask *five.grok* to register an instance of it for"
" us."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:158
msgid ""
"The class is recognised as a factory for a global utility from its base "
"class."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:160
msgid ""
"The class does not have a constructor. If it did, it would need to be "
"callable with no arguments."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:162
msgid ""
"The utility’s interface is given with the *grok.provides()* directive. We "
"could also have used *grok.implements()*, but bear in mind that the class "
"can implement multiple interfaces whilst a utility can provide only one. "
"*grok.provides()* can only be used once per class and can only be passed a "
"single interface."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:167
msgid ""
"Here, we are registering an unnamed utility. We could have used the "
"*grok.name()* directive to give the utility a name."
msgstr ""

#: ../../reference_manuals/active/five-grok/core-components/utilities.rst:170
msgid ""
"Provided the package is grokked, this is all it takes to register one "
"unnamed and three named global utilities with *five.grok*."
msgstr ""

#: ../../reference_manuals/active/five-grok/index.rst:2
msgid "Zope Component Architecture basics with five.grok"
msgstr ""

#: ../../reference_manuals/active/five-grok/index.rst:4
msgid ""
"**This manual describes the basics of the Zope Component Architecture using "
"five.grok, which brings convention-over-configuration to Zope 2 and Plone.**"
msgstr ""

#: ../../reference_manuals/active/five-grok/index.rst:7
msgid ""
"It will be useful to developers who want to learn how to configure Zope "
"components using grok-style configuration instead of ZCML."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:2
msgid "Other five.grok functionality"
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:4
msgid "**What we haven't covered**"
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:6
msgid ""
"Grok and *five.grok* provide some functionality we deliberately haven’t "
"discussed in this manual. This includes:"
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:9
msgid ""
"Annotation factories. Annotations are very useful, but the pattern of using "
"a persistent object as the adapter implementation instead of just using the "
"*IAnnotations* from *zope.annotation* and its dict-like API to store "
"primitives can lead to problems when code is moved or uninstalled. See "
"`grokcore.annotation`_ for an example of this functionality."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:15
msgid ""
"Defining permissions with *grok.Permission*. We prefer to define permissions"
" in configuration files, rather than code. See `grokcore.security`_ if you "
"hate XML so much that you don’t mind using Python as a configuration "
"language. See the `Dexterity developer manual`_ for more details on creating"
" custom permissions."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:20
msgid ""
"Defining resource directories (other than the implicit *static* directory) "
"using *grok.DirectoryResource* instead of the *<browser:resourceDirectory "
"/>* directive, for the same reasons. See `grokcore.view`_."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:24
msgid ""
"Defining local component sites and local utilities using `grokcore.site`_. "
"In Plone, we use the *componentregistry.xml* GenericSetup import step for "
"this purpose."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:27
msgid ""
"Creating browser layers with the *grok.skin()* directive. In Plone, we use "
"the *browserlayer.xml* GenericSetup import step and/or the `plone.theme`_ "
"package for this purpose."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:30
msgid ""
"Forms using `grokcore.formlib`_. For Dexterity development, we use "
"`z3c.form`_ instead."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:32
msgid ""
"Model objects using *grok.Model*. We use Dexterity content objects instead."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:34
msgid ""
"The *grok.order()* directive, used to order viewlets based on an integer "
"weighting. We use the base class for *plone.app.viewletmanager* instead, "
"which supports explicit ordering as part of a theme. See `grokcore.viewlet`_"
" for details on how *grok.order()* works."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:39
msgid ""
"The *view/static* variable. This allows access to static resources in the "
"*static* directory using TAL expressions like *tal:attributes=“href "
"view/static/stylesheet.css”*. Unfortunately, the link this results in will "
"always be relative to the context, rather than relative to the site "
"navigation root, which means that it will not cache well. Therefore, we "
"construct the URL manually instead. See `grokcore.view`_ for more details."
msgstr ""

#: ../../reference_manuals/active/five-grok/other-functionality.rst:47
msgid ""
"Some of this reflects the Dexterity developers’ preferences and views. You "
"are allowed to disagree."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:3
msgid "Build development environment"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:7
#: ../../reference_manuals/active/helloworld/environment/plone.rst:7
#: ../../reference_manuals/active/helloworld/environment/python.rst:7
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:7
#: ../../reference_manuals/active/helloworld/extend/addon.rst:7
#: ../../reference_manuals/active/helloworld/extend/content.rst:7
#: ../../reference_manuals/active/helloworld/extend/files.rst:7
#: ../../reference_manuals/active/helloworld/extend/form.rst:7
#: ../../reference_manuals/active/helloworld/extend/index.rst:7
#: ../../reference_manuals/active/helloworld/extend/view.rst:7
#: ../../reference_manuals/active/helloworld/index.rst:7
#: ../../reference_manuals/active/helloworld/intro.rst:7
#: ../../reference_manuals/active/helloworld/todo.rst:7
msgid "A simple tutorial introducing the basics of Plone development."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:16
msgid ""
"In this tutorial, we build a Python development environment suitable for "
"Plone. The environment should also be useful for any other Python "
"development projects you have."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:18
msgid ""
"In these examples, the **python_dev** directory contains our entire "
"development environment. This makes the examples easier, but may not work "
"for everyone. You may need to adapt these examples to fit your situation."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:20
msgid ""
"There are 3 main steps in building our development environment; build Python"
" 2.7, create a virtual_env, and install Plone. These correspond to 3 "
"directories in our development environment:"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:22
msgid ""
"**buildout.python** sits inside *python_dev*. It contains our build of "
"Python 2.7"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:23
msgid "**env-27** sits inside *python_dev*. It is our virtual_env."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:24
msgid "**hello_world** is our Plone installation. It sits inside *env-27*."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/index.rst:26
msgid ""
"The *python_dev* directory can sit anywhere on your filesystem that makes "
"sense."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:3
msgid "Install Plone"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:11
msgid ""
"Now that we have a virtual_env, we can move on the to third step of our "
"process; installing Plone. First, we need to install ZopeSkel."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:14
msgid "Install ZopeSkel"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:16
msgid "ZopeSkel simplifies the process of setting up Plone development."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:18
msgid ""
"The Plone community is transitioning between ZopeSkel 2.21.2 and a major "
"rewrite currently at 3.0b3. Currently, the Plone installers use version "
"2.21.2. (August 2012) For more information about ZopeSkel see the "
":doc:`Bootstrapping Plone add-on development </getstarted/paste>` section of"
" this manual."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:20
msgid ""
"We will install ZopeSkel 2.21.2 in our virtual_env and and use it to install"
" Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:22
msgid "Install ZopeSkel 2.21.2.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:28
msgid "This adds some files to the bin directory, including **zopeskel**.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:50
msgid "Install Plone using ZopeSkel"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:52
msgid ""
"ZopeSkel uses templates to build structure for Python, Zope and Plone "
"projects. Here, we use the **plone4_buildout** template to create a Plone 4 "
"buildout in the **hello_world** directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:54
msgid "Create the Plone 4 buildout with zopeskel.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:58
msgid ""
"ZopeSkel displays some information and then asks what version of Plone we "
"want to install. We want 4.2.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:62
msgid ""
"The tutorial sometimes refers to the hello_world directory as the **buildout"
" directory**. It contains the **buildout.cfg** file.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:79
msgid "Bootstrap the system with the Python included in our virtual_env.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:85
msgid ""
"The bootstrap process creates some directories and adds a buildout script to"
" the bin directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:102
msgid "Run buildout to install Plone. This can take a while.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:106
msgid ""
"Buildout uses **recipes** that tell it what to install. These recipes can "
"specify the versions of modules they need. Buildout picks a version when one"
" is not specified. It keeps track of these **picked versions** and displays "
"them when it is finished. You can add these to the [versions] section of "
"buildout.cfg to pin them. This gives you a known good set you can work from,"
" allowing you to rerun buildout in the future or on a different machine, and"
" know you have the same environment.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:123
msgid ""
"Notice that the Plone buildout installed ZopeSkel 3.0b3 for us. It is "
"installed in the bin directory. We now have access to both versions of "
"ZopeSkel; 2.21.2 in our virtual_env, and 3.0b3 in our Plone installation.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:136
msgid ""
"Also notice the script named **instance**. Use this script to start, stop "
"and restart Plone.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:142
msgid ""
"You can also start Plone in foreground mode. This prints log messages to "
"your terminal which is nice during development.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:146
msgid ""
"You can always look at the event log directly. It should be located at "
"*var/log/instance.log*. You can watch it using the tail command.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:150
msgid "You can access the Plone site in your browser at::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:154
msgid ""
"The first time you access the site, you will need to click on the *Create a "
"new Plone site* button to perform some initialization."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:158
msgid ""
"You'll be presented with a form titled **Create a Plone site**. Keep the "
"defaults for now, and click on the *Create Plone Site* button at the bottom."
" After a few moments, you should see the Home page of your site."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:165
msgid "Quick Review"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:167
msgid ""
"Before moving on, lets review what our directory structure lools like. "
"Inside the *python_dev* directory we have *buildout.python* and *env-27*."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:169
msgid ""
"Inside *env-27* we have the **hello_world** directory, our Plone "
"installation. Called the **buildout_directory**, it has the **buildout.cfg**"
" file, and a script in the bin directory named **instance** used to start "
"and stop Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:176
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:55
msgid ""
"Now that we have our virtual_env, we won't use *buildout.python* again for "
"these examples. However, you can return there later to create new virtual "
"environments for other Python projects.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/plone.rst:181
#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:60
msgid ""
"You can also build the versions of Python that we skipped in the Build "
"Python section above, and then use them to build new Python virtual_envs.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:3
msgid "Build Python"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:12
msgid "The first thing we need to do is build Python."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:14
msgid ""
"**Buildout** is a tool to manage a software build. It uses configurations so"
" you can always reproduce the same environment. In these examples, we use it"
" to manage both our Python and Plone builds."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:16
msgid ""
"For our buildout configuration, we will use **buildout.python**. It is a "
"project on github that maintains configurations for building different "
"versions of Python. We will use it to build Python 2.7."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:18
msgid ""
"Create a directory for your development environment if you don't already "
"have one, and make it your working directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:23
msgid "Get buildout.python from github."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:25
msgid "If you have git, you can clone the buildout.python repository.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:29
msgid ""
"You can also download buildout.python from their web interface. Open "
"https://github.com/collective/buildout.python in your browser, and click on "
"the **Downloads** link on the right hand side."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:33
msgid ""
"On the next page, click on **Download as zip** or **Download as tar.gz** to "
"download the buildout files. When the download is complete, uncompress the "
"file and rename the resulting directory to **buildout.python**."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:35
msgid ""
"Whether you cloned with git or downloaded from the webiste, you should end "
"up with a directory named **buildout.python** that contains these items.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:47
msgid "Bootstrap buildout.python with your system Python.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:53
msgid ""
"This creates the *bin*, *parts*, *eggs*, and *develop-eggs* directories and "
"adds the *buildout* binary to the bin directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:72
msgid ""
"The current version of buildout.python builds Python 2.4, 2.5, 2.6, 2.7, 3.2"
" and 3.3. This can take a long time. We only need Python 2.7."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:74
msgid ""
"We can keep buildout from building the other versions by commenting them out"
" in the buildout.cfg file. We do this by adding a **#** to the beginning of "
"a line we want buildout to ignore."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:76
msgid ""
"To only build Python 2.7, open the **buildout.cfg** file in a text editor,  "
"comment out the other versions in both extends and parts sections, and save "
"your changes.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:104
msgid "Run buildout to build Python.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:108
msgid ""
"This creates a new python-2.7 directory containing it's own binaries, "
"libraries and include files.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:150
msgid ""
"Buildout also creates the **virtualenv-2.7** script in the bin directory. We"
" will use the *virtualenv-2.7* script in the next tutorial.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:161
msgid ""
"You can build any of the other versions of Python by uncommenting their "
"lines in the *buidout.cfg* file,::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:188
msgid "and rerunning buildout.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:192
msgid "It just takes a while."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/python.rst:197
msgid ""
"If you have trouble running buildout, you may need to run the bootstrap step"
" above with the 1.4.4 version.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:3
msgid "Create a virtual_env"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:11
msgid ""
"Now that we have a clean install of Python 2.7 we can move on to the second "
"step in our process, creating the virtual_env."
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:13
msgid ""
"Use the virtualenv script from the Build Python section above, create our "
"virtual_env directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:19
msgid "This creates the env-27 directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:26
msgid "The virtual_env has its own Python bin, include and lib directories.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:34
msgid ""
"In the bin directory, the virtual_env has 2 copies of Python 2.7; **python**"
" and **python2.7**. It also has easy_install and pip, to install Python "
"packages.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:51
msgid ""
"The bin directory also has an **activate** script you can use to isolate "
"your commands within your virtual_env. It modifies your $PATH so its first "
"entry is the virtualenv's bin/ directory"
msgstr ""

#: ../../reference_manuals/active/helloworld/environment/virtualenv.rst:65
msgid ""
"For more information about virtualenv, see the `virtualenv documentation "
"<http://www.virtualenv.org/en/latest/index.html>`_ ."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:3
msgid "Create an add-on package"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:11
msgid ""
"Before extending Plone, we need to create an add-on package to hold our "
"changes. It's possible you would have more than one add-on package. One "
"popular approach is to have a theme product and a product containing your "
"business logic."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:13
msgid ""
"We will use ZopeSkel to create a skeleton template for the project. For more"
" information on ZopeSkel, see the section on :doc:`Bootstrapping Plone add-"
"on development </getstarted/paste>`."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:15
msgid "Put your projects in the src directory of your buildout directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:17
msgid "Change your working directory to the src directory of your buildout.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:23
msgid ""
"Create a project using ZopeSkel 2.21.2 from our virtual_env. Here, we create"
" an archetypes based project in a directory named example.helloworld.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:27
msgid ""
"ZopeSkel will ask you a series of questions. For now, you can use the "
"defaults for Expert Mode and Version. Use *Hello World* for the Project "
"Title. We will reference it in another step below.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:34
msgid ""
"The zopeskel command creates a directory in the src directory named "
"**example.helloworld**.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:41
msgid ""
"Before we move one, lets examine our directory structure. We have "
"**env-27**, our virtual_env. It contains **hello_world**, our Plone "
"installation. We also call this the **buildout directory**. The *buildout "
"directory* contains the **buildout.cfg** file. It also contains the **src** "
"directory, which contains our project **example.helloworld**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:46
msgid ""
"Looking further into *example.helloworld*, we have the **example** directory"
" which contains the **helloworld** directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:48
msgid ""
"In the examples below, we sometimes refer to the *helloworld* directory as "
"the **product directory**. It contains the **browser** directory. Most of "
"the changes we make take place in the *browser* directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:50
msgid "Here it is from the command-line.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:88
msgid ""
"To use the code in your project, you'll need to reference it in your "
"buildout.cfg file."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:90
msgid "Edit the *buildout.cfg* file."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:92
msgid "Add *example.helloworld* to the *eggs* section.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:99
msgid "Add *src/example.helloworld* to the *develop* section.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:104
msgid "Then save your changes."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:106
msgid "You need to rerun buildout for the changes to take effect.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:111
msgid "Then start or restart your Plone instance.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:118
msgid "Note::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:124
msgid ""
"Now you can install your product from the **Add-ons** are of **Site Setup**."
" You can access Site Setup from the **admin** menu in the top right corner "
"of your Plone site."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:128
msgid "You can also access Site Setup using an url like"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:130
msgid "*http://localhost:8080/Plone/plone_control_panel*"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:132
msgid ""
"Select *Add-ons* from the *Site Setup* page. On the Add-ons page, select the"
" *Hello World* add-on and click on *Activate*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/addon.rst:136
msgid ""
"Now that you created and installed an add-on package, you can use it to "
"extend Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:3
msgid "Add a content-type"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:11
msgid "In this tutorial we add a custom content-type."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:13
msgid ""
"Plone comes with built-in content-types like Collection, Event, File, "
"Folder, Image, Link, News Item, and Page. If you need a custom content-type,"
" you can extend an existing content-type, or create your own from scratch. "
"In this example, we'll create a simple archetypes based content-type from "
"scratch."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:17
msgid "Install code template with ZopeSkel"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:19
msgid ""
"First, we'll change our working directory to the project we created above.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:24
msgid ""
"Use paster to create a content-type skeleton. Paster is included with "
"ZopeSkel.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:28
msgid ""
"Again, you'll be asked a series of questions. Use *Person* for the "
"contenttype_name.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:36
msgid ""
"This creates a few files, and edits some others. For our purposes, the most "
"important one is **person.py** contained in the "
"**src/example.helloworld/example/helloworld/content/** directory. Open this "
"file in your text editor."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:40
msgid "Build the content-type"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:42
msgid "Edit PersonSchema inside *person.py* so it looks like this.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:60
msgid ""
"This adds a new field to our schema named **hello_name**. It is a string "
"filed, and is required. It is visible on both the view and edit pages."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:62
msgid "Restart your instance to have access to the new content-type.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:69
msgid "Add content to the site"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:71
msgid ""
"To create a new object using the new content-type, select *Person* from the "
"*Add new...* menu of your Plone site. This brings up the *edit* view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:75
msgid "Fill in the fields and click *Save*. This brings up the *view* view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:79
msgid ""
"You should see an *info* message telling you your changes were saved, and a "
"new tab in the navigation bar with the title of your object."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:81
msgid ""
"Notice the **State** menu on the right hand side of the green bar. It tells "
"you your content is **Private**, meaning only you can see it. You need to "
"select **Publish** from the *State* menu."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:83
msgid ""
"Also notice the url of the page. It is based on the Title of the object, "
"with two main differences. The letters are all lower case, and spaces are "
"turned into dashes.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/content.rst:87
msgid ""
"For more information about content in Plone, see the :doc:`Content "
"management </content/index>` section of this manual. For more information "
"about content types, see :doc:`Content Types </content/types>`."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/files.rst:3
msgid "Files and Directories"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/files.rst:11
msgid ""
"Before we start writing code, I want to review some important files and "
"directories. In the examples above, we created the **hello_world** directory"
" that contains our Plone installation. We sometimes refer to it as the "
"**buildout** directory. It contains the **buildout.cfg** file."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/files.rst:13
msgid ""
"We also created an add-on package named **example.helloworld**. It contains "
"the **example** directory which contains the **helloworld** directory. We "
"also call the *helloworld* directory the **product directory**. Among other "
"things, the *product directory* contains the **browser** directory. Many of "
"the changes in our examples happen in the *browser* directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:3
msgid "Add a simple form"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:11
msgid "In this tutorial we add a simple form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:13
msgid ""
"There are many ways to add a form to Plone. In this tutorial, we use "
"z3c.form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:15
msgid ""
"There are two steps to building a simple z3c.form form; registering the form"
" in **configure.zcml**, and writing the Python code to handle the form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:19
msgid "Register the form"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:21
msgid "To register our form, we need to add an entry in configure.zcml."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:23
#: ../../reference_manuals/active/helloworld/extend/view.rst:21
msgid ""
"Edit the **configure.zcml** file in the **browser** directory. Open "
"*configure.zcml* in your editor and add this just before the closing "
"</configure> tag.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:34
msgid "We use the **name** attribute to access the form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:35
#: ../../reference_manuals/active/helloworld/extend/view.rst:33
msgid ""
"The **for** attribute allows us to limit context to a particular interface. "
"With the asterisk, we are not limiting access."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:36
#: ../../reference_manuals/active/helloworld/extend/view.rst:34
msgid ""
"The **permission** attribute allows us to limit access with a permission. In"
" this case, we have a wide open permission."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:37
msgid ""
"The **class** attribute points to our Python class. Here, we have a "
"**HelloWorldFormView** class in a file named **hello_world_form.py**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:40
msgid ""
"Our entry uses the **browser** prefix, so we need to define it in "
"configure.zcml before we can use it."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:42
msgid ""
"Add **xmlns:browser=\"http://namespaces.zope.org/browser\"** at the top of "
"configure.zcml so it looks something like::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:49
msgid "When we are done, configure.zcml should look something like this.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:71
msgid "Python code"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:73
msgid "Now we need to create the code to handle our form."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:75
msgid "create the file *hello_world_form.py* in the *browser* directory.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:79
msgid ""
"Open the *hello_world_form.py* file in your editor and add the following "
"code."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:81
msgid "Define our form field in an interface."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:83
#: ../../reference_manuals/active/helloworld/extend/form.rst:105
msgid "The imports::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:90
msgid "The interface::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:100
msgid ""
"This defines a TextLine field with an id of **hello_world_name**. The title "
"and description will show up on the form. It is not a required field."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:103
msgid "Create a class for our logic. This is used when our view is accessed."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:111
msgid "The class::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:148
msgid "We first import the field from our interface above."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:149
msgid ""
"The **ignoreContext** directive means this form is not meant to be called in"
" the context of an object."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:150
msgid ""
"We define **updateWidgets** to the same method belonging to our parent."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:151
msgid "We create 2 button handlers."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:153
msgid ""
"The fun parts here are the two button handlers; **handleSave** and "
"**handleCancel**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:155
msgid ""
"At the bottom of *hello_world_form.py* we need to use **wrap_form** on our "
"class. This wraps our form in the standard Plone layout, placing our form in"
" the content area. This also creates the view **HelloWorldFormView** "
"referenced in *configure.zcml*.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:162
msgid "Access the form"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:164
msgid "You can access the form with an url like::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/form.rst:174
msgid "Type in a name and click *Save*, or just click *Cancel*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/index.rst:3
msgid "Extend Plone"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/index.rst:18
msgid ""
"In these examples the tutorial extends Plone. First, we create an add-on "
"package on the filesystem to put our code. Then within that package, we add "
"a simple form, a content-type, and a custom view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:3
msgid "Add a custom view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:11
msgid ""
"In this tutorial we add a browser view. Plone uses views to display dynamic "
"content."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:13
msgid ""
"There are now two ways to add views to Plone; Zope 3 and Grok. This tutorial"
" covers the Zope 3 method. For more information about views, see the "
":doc:`Views and viewlets </views/index>` section of the developer manual."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:15
msgid ""
"There are 3 parts to our view; a Python class, a page template, and a ZCML "
"registration. We will add the two files and edit configure.zcml in the "
"**browser** directory."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:19
msgid "Register the view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:32
msgid "We use the **name** attribute to access the view."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:35
msgid ""
"The **class** attribute points to our Python class. Here, we have a "
"**HelloWorldView** class in a file named **hello_world_view.py**."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:37
msgid ""
"If you have not already done so, you need to define the browser namespace in"
" configure.zcml by adding this to the configure tag.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:41
msgid ""
"If you also went through the simple form tutorial, then *configure.zcml* "
"should look something like this when you are done.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:72
msgid "Create Python class"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:74
msgid ""
"We need to create our Python class. In the **browser directory**, create a "
"file named **hello_world_view.py** and add the following code.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:90
msgid ""
"Our BrowserView class is a Python callable. The __call__() method is the "
"entry point. In it, we add a **hello_name** attribute to the view. Our page "
"template will use the value of hello_name when the page is rendered."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:92
msgid ""
"The logic in our class is pretty simple. If our context has a hello_name "
"attribute, then we use its value in our view. If not, we use the string "
"'World'."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:94
msgid ""
"In the class, we also define our page template **hello_world_view.pt** and "
"save it in the **template** attribute."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:98
msgid "Create page template"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:100
msgid "The third part of our view is the page template."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:102
msgid ""
"In the browser directory, create a file named **hello_world_view.pt** and "
"add the following::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:119
msgid ""
"Plone uses Zope Page Templates (ZPT). For great documentation on ZPT and the"
" TAL, TALES, and METAL languages, see the :doc:`TAL page templates "
"</templates_css_and_javascripts/template_basics>` section of the developer "
"manual, and the `TAL/TALES & METAL Reference Guide "
"<http://www.owlfish.com/software/simpleTAL/tal-guide.html/>`_"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:122
msgid ""
"In the above code, we define some xml namespaces; **metal** and **tal** that"
" we use in our template.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:127
msgid ""
"The **metal:use-macro** statement tells ZPT to use **main_template** to draw"
" our page.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:131
msgid ""
"The master template *main_template* contains predefined **slots**, or areas "
"on the page, that we can fill with content from our template."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:133
msgid "Anything in our code, between the::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:137
msgid "and::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:141
msgid ""
"gets put in the **content-core** area of main_template and is displayed on "
"our page."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:143
msgid ""
"We also have access to our view class using the **view** namespace. In our "
"case, we are interested in **view/hello_name**.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:147
msgid ""
"In our Python class, we defined a *hello_name* attribute. This code says "
"take the value of the *view/hello_name* attribute and use it as the content "
"for the span tag. So, the string \"this gets replaced\" gets replaced with "
"the value of *view/hello_name*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:152
msgid "Access the view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:154
msgid ""
"To access the view, restart your instance to have access to the new view"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:156
msgid ""
"Then, add @@hello_world_view to the end of an object url in your plone "
"site.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:160
msgid ""
"Since our object has a *hello_name* attribute, the value is displayed along "
"with the word *Hello*."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:164
msgid "We can also call our view on the root of the site.::"
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:168
msgid ""
"The root of the site does not have a *hello_name* attribute, so *Hello "
"World* is displayed."
msgstr ""

#: ../../reference_manuals/active/helloworld/extend/view.rst:172
msgid ""
"For a more in depth explanation of views, see the :doc:`Views and viewlets "
"</views/index>` section of this manual."
msgstr ""

#: ../../reference_manuals/active/helloworld/index.rst:3
msgid "Hello World Tutorial"
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:11
msgid ""
"This tutorial uses simple examples to introduce Plone development. The "
"examples cover a basic form, custom content-type, and dynamic view."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:13
msgid ""
"It also has detailed sections on building a development environment, "
"installing Plone, and creating an add-on package for your development code."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:17
msgid "There are many ways to install Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:19
msgid ""
"In the examples, we build a new version of Python 2.7 and create a "
"virtual_env using the new Python. We then install Plone within the "
"virtual_env using ZopeSkel 2.21.2."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:21
msgid ""
"This can be a lot of work, just to try some hello world examples in Plone."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:23
msgid ""
"You don't have to do it this way. You can create a similar environment using"
" the `Plone 4 installers <http://plone.org/products/plone/releases/4.2>`_. "
"The examples should all work with little or no adjustment."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:25
msgid ""
"There are benefits to managing your own Python development environment. The "
"choice is up to you."
msgstr ""

#: ../../reference_manuals/active/helloworld/intro.rst:27
msgid ""
"This tutorial is only an introduction to Plone development. Other areas of "
"the developer manual have more detailed information. We link to some of "
"those areas in the examples below."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:3
msgid "Ideas for improvement"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:10
msgid "Ideas for improving the tutorial"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:12
msgid "Add more information about universal installer."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:13
msgid "Add section on Dexterity content-type."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:14
msgid "Put example code on Github as collective.hello_world."
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:16
msgid "General editing"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:16
msgid "allow individual sections to stand on their own"
msgstr ""

#: ../../reference_manuals/active/helloworld/todo.rst:17
msgid "better narrative if read beginning to end"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:3
msgid "Adding CAPTCHA Support"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:7
msgid ""
"PloneFormGen has built-in support for Re-Captcha. This howto-tells you how "
"to enable it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:10
msgid "PloneFormGen and CAPTCHA Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:12
msgid ""
"When PFG is installed in a Plone instance via add/remove products, it will "
"look for evidence that either collective.captcha or collective.recaptcha are"
" available. If that's found, the CAPTCHA Field will be added to the "
"available field list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:14
msgid ""
"If you are using collective.recaptcha, you need to take the additional step "
"of setting your public/private keypair. You get these by setting up an "
"account at recaptcha.net. The account is free. You may specify your keypair "
"in the PFG configlet in your site settings."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:18
msgid ""
"If you add a captcha facility *after* installing PFG, you will need to "
"reinstall PFG (via add/remove products) to enable captcha support."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:21
msgid "Installing collective.recaptcha"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:23
msgid ""
"Add the following code to your buildout.cfg to install collective.recaptcha "
"and Products.PloneformGen together:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:36
msgid "Re-run bin/buildout and relaunch your zope/plone instance."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:37
msgid ""
"Open the PortalQuickinstaller or plone control panel and install (or "
"reinstall if already installed) PloneFornGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/captcha.rst:38
msgid ""
"Open the PloneFormGen configlet in the Plone control Panel and fill in the "
"fields with your Public and Private Keys of your ReCaptcha Account. Obtain "
"keys from `reCaptcha.net <http://www.google.com/recaptcha/whyrecaptcha>`_."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:3
msgid "Creating content from PFG"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:7
msgid ""
"This how-to covers simple creation of portal content from PloneFormGen. "
"We'll create web pages from sample form submissions."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:9
msgid ""
"A question that's come up frequently on IRC and the Plone users' mailing "
"list is \"How do I create an event, news item, page, or some other content "
"item from PloneFormGen? It's common that there's some security need or extra"
" content needed that prevents just using Plone's \"add item.\""
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:11
msgid ""
"This is actually very easy if you know a little Python and are willing to "
"learn something about the content items you want to create."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:13
msgid ""
"Please note that I'm not going to show you how to create new content types "
"here. Just how to use PFG to create content objects from existing types. If "
"you want to create new content types, learn to use Archetypes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:15
msgid ""
"Your first step should be to determine the attributes you want to set in the"
" new content item and how they'll map from your form fields."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:17
msgid ""
"In this case, we're going to use the sample contact form created when you "
"first create a form folder to create a page (Document)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:19
msgid "Our mapping of form fields to content attributes will look like this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:21
msgid "Form Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:22
msgid "Document Attribute"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:23
msgid "Your E-Mail Address (replyto)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:25
msgid "Subject (topic)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:26
msgid "Title"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:28
msgid "Comments (comments)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:28
msgid "Body text"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:30
msgid ""
"Note that for each form field, we've determined its ID in the form. We'll "
"use those to look up the field in the form submission."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:32
msgid ""
"Next, we need to learn the methods that are used to set our attributes on a "
"Document object. How do you learn these? It's always nice to read the "
"source, but when I'm working fast, I usually just use DocFinderTab and look "
"for \"set*\" methods matching the attributes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:34
msgid ""
"Now, determine where you want to put the new content. That's your target "
"folder. It's convenient to locate that folder in a parent folder of the form"
" object, as you may then use the magic of acquisition to find it without "
"learning how to traverse the object database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:36
msgid ""
"Now, in the form folder, we add a \"Custom Script Adapter\" — which is just "
"a very convenient form of Python script. Then, just customize the script to "
"look something like the following:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:72
msgid "That's it. This will really work."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:75
#: ../../reference_manuals/old/zope_secrets/security.rst:3
msgid "Security"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:77
msgid ""
"At the moment, the person that submits your form will need to be logged in "
"as a user that has the right to add pages to the target folder, then change "
"their attributes. You may need to allow other users (even anonymous ones) to"
" submit the form. That's where the Proxy role setting of the custom script "
"adapter comes in. You may change this setting to Manager, and the script "
"will run as if the user has the manager role — even if they're anonymous."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:79
msgid ""
"I hope it's obvious that you want to be very, very careful writing a script "
"that will run with the Manager role. Review it, and review it again to make "
"sure it will do only what you want. Never trust unchecked form input to "
"determine target or content ids."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:81
msgid ""
"If I'm doing this trick with a form that will be exposed to the public, I "
"often will use a Python script rather than the custom script adapter, as it "
"allows me to determine the proxy role for the script more precisely than "
"choosing between None and Manager. I may even create a new role with minimal"
" privileges, and those only in the target folder. Credit!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/creating_content.rst:87
msgid ""
"A big thank's to Mikko Ohtamaa for contributing the Custom Script Adapter to"
" PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:3
msgid "Adding Custom Fields, Action Adapters or Thanks Pages"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:7
msgid ""
"You may add custom fields, action adapters and thanks pages to PloneFormGen."
" By far the easiest way to do this is to derive a subclass from one of the "
"field types in fieldsBase or an action adapter from "
"actionAdapter.FormActionAdapter."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:12
msgid ""
"When PFG is installed, or reinstalled, it will automatically add to its "
"available fields, adapters and thanks pages list any installed Archetypes "
"content type that implements one of:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:16
msgid ""
"Products.PloneFormGen.interfaces.actionAdapter.IPloneFormGenActionAdapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:18
msgid "Products.PloneFormGen.interfaces.field.IPloneFormGenField"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:20
msgid "Products.PloneFormGen.interfaces.thanksPage.IPloneFormGenThanksPage"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_addons.rst:22
msgid ""
"Also, the Archetypes class *must* specify a meta_type in the class "
"definition that matches the meta_type defined in its GS type declaration. "
"Otherwise, it won't be found."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:3
msgid "Custom mailer script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:7
msgid "Customizing email output from PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:12
msgid ""
"Below is an email script example to customize how PloneFormGen generates the"
" email output."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:15
msgid "Installation instructions"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:17
msgid "Go to form, on the contents tab remove the existing Mailer item."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:19
msgid "Choose create new... Custom script adapter. Pick any name."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:21
msgid "For the script, set Proxy role: Manager."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:23
msgid "Fix the email addresses in the script below."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:25
msgid "Paste the code to the script body field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:27
msgid "Save."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:29
msgid "Test."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_mailer.rst:32
msgid "Example script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:3
msgid "Customizing an individual thanks page"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:7
msgid ""
"It's not hard to customize the thanks page for an individual form. This "
"trick is particularly useful for purposes like adding 'pay now' buttons."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:9
msgid ""
"If you can tolerate a little work in the Zope Management Interface, you'll "
"find it very easy to customize the Thanks Page for an individual form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:11
msgid "The steps:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:14
msgid "Create your form;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:16
msgid ""
"Bring up the Zope Management Interface; navigate to "
"portal_skins/PloneFormGen;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:18
msgid ""
"Open the fp_thankspage_view template; push the Customize button; this puts "
"an editable copy of the thanks page template in your custom skin folder."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:20
msgid ""
"Step back to the Custom folder listing (still in the ZMI); cut the "
"fp_thankspage_view template;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:22
msgid "Navigate to your form folder; paste it there."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:24
msgid ""
"Edit the template to insert your Pay/Donate Now form and button code, or "
"whatever other custom code you might need just for this form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_thanks.rst:28
msgid ""
"Note: If there is already an fp_thankspage_view template in your custom skin"
" folder (perhaps because you've already customized the template for the "
"site), you'll be cutting and pasting a new copy."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:3
msgid "Creating custom validators"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:7
msgid ""
"PloneFormGen allows you to create a custom field-input validator by "
"specifying a TALES expression that will be used to validate input when it's "
"submitted. This how-to explains what that means, and offers a few examples."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:9
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:11
msgid ""
"`Template Attribute Language Expression Syntax` (TALES) is a simple notation"
" that allows determination of a value via path (as in path/to/object), "
"string or Python expressions. It is used in `Zope's Template Attribute "
"Language` (TAL), and is ubiquitous in Plone templates. This how-to does not "
"teach you TALES; for that, try the `Zope Page Templates Reference "
"<http://www.plope.com/Books/2_7Edition/AppendixC.stx#1-10>`_."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:13
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:15
msgid ""
"Please note that it's easy to make a mistake when working with TALES fields "
"that will cause an error when you try to display your form. Stay calm! Take "
"note of the error message, and return to the field edit form to fix it. "
"Don't be scared of this kind of error."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:15
msgid "The rules for writing a validator are:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:17
msgid ""
"You should validate against the the variable value, which will contain the "
"field input. Note that -- for simple fields -- value will be a string. But, "
"for a lines field, the contents of value will be a list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:19
msgid "Return False or zero if you wish to accept the input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:21
msgid ""
"Return a string containing a user-feedback message if you don't wish to "
"accept the input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:23
msgid "Don't change the value variable. It won't do you any good."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:26
msgid "A simple example"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:28
msgid ""
"Let's say that you are operating a restaurant that serves only dishes "
"containing spam. You may wish to check to make sure that the input to a "
"string or text field contains \"spam\". You may do that with by setting a "
"custom validator that reads::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:32
msgid ""
"The odd logic comes from the need to return `False` for valid input. Look at"
" a couple of examples of validation in action with literal strings. "
"Remember, we want to force spam on the user:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:43
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:44
msgid "The name space"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:45
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:46
msgid "Here are the objects available when your expression is evaluated."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:48
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:49
msgid "TALES context"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:50
msgid "value"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:51
msgid "The field input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:52
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:51
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:159
msgid "here"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:53
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:52
msgid ""
"The current object. A bit dangerous since this varies depending on context."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:54
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:53
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:69
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:248
msgid "folder"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:55
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:54
msgid "This will be your form folder."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:56
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:55
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:19
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:109
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:113
msgid "portal"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:57
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:56
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:20
msgid "The portal object."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:58
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:57
#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:178
#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:76
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:168
#: ../../reference_manuals/old/portlets/architecture.rst:134
msgid "request"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:59
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:58
msgid "The REQUEST object. Note that request/form contains form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:60
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:59
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:23
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:155
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:159
msgid "member"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:61
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:60
msgid "The authenticated user's member data -- if any."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:62
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:61
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:139
msgid "nothing"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:63
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:62
msgid "Equivalent to Python None."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:64
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:63
msgid "folder_url"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:65
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:64
msgid "URL of the form folder."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:66
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:65
msgid "portal_url"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:67
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:66
msgid "URL of the site."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:69
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:68
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:171
msgid "modules"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:69
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:68
msgid "Module importer."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:73
#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:72
msgid ""
"Some of these identifiers are supplied by PloneFormGen and are not available"
" in other contexts."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:76
msgid "Using a Python script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:78
msgid ""
"You'll be frustrated fast if you try to do anything smart in a single TALES "
"expression. If you need to do something more complicated, add a Python "
"Script to your form folder and call it via TALES. For example, if you added "
"a script with the id includesSpam, you could call it with the expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:82
msgid ""
"Make sure your script returns False if you wish to accept the input, or an "
"error string otherwise."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:84
msgid "Here's what a validator script to check for spam might look like::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:91
msgid ""
"Make sure your script parameter list includes value. (Alternatively, you may"
" check the request.form dictionary, which will include form input.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/custom_validators.rst:96
msgid ""
"Python scripts are not the same as the Custom Script Adapter. The latter is "
"meant to make it easy to add a custom adapter that's processed in the same "
"way as the mail or save-data adapter. Python scripts are just simple Python "
"code fragments that act like functions. They are added via the Zope "
"Management Interface"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:3
msgid "Embedding PloneFormGen forms"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:7
msgid ""
"PloneFormGen forms may be rendered from other templates, viewlets, and "
"portlets."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:11
msgid ""
"This feature requires Plone 3.0 or later to work out of the box.  You can "
"make it work in Plone 2.5 by turning on the PLONE_25_PUBLISHER_MONKEYPATCH "
"config option, which applies a monkey patch to the Zope publisher exception "
"hook based on some code included in Plone 3."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:16
msgid ""
"*Caveat*: This feature should be considered beta quality.  I've written code"
" that takes advantage of it, and you shouldn't be afraid of it, but take "
"care to test thoroughly.  There may be certain types of contexts for "
"rendering the form with implications that I haven't taken into "
"consideration."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:21
msgid ""
"To insert the form into an arbitrary template, use the 'embedded' browser "
"view::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:25
msgid ""
"If you are including the form on a page that features another form, you'll "
"probably need to set a prefix on the 'embedded' view to disambiguate "
"submissions::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:32
msgid "Or if you are using a view class, you could define a method like::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:41
msgid ""
"(Note that restrictedTraverse expects a path relative to the object you are "
"calling it on, with no initial slash.)  And then in the associated "
"template::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:46
msgid ""
"By default the embedded form uses the current URL as the form's 'action' "
"parameter. When the form is rendered upon submission, it will perform "
"validation, run the normal action adapters, and redirect to the success page"
" as normal.  If you want to submit to the form's real location or somewhere "
"else, you can override the action by setting the 'action' attribute on the "
"'embedded' view."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/embedding.rst:52
msgid ""
"*Known limitation*: Embedded forms have no way of injecting javascript or "
"CSS into the page head like their standalone counterparts."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:2
msgid "Fail-safe email sending"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:4
msgid ""
"By default if SMTP server rejects the message send by PloneFormGen the page "
"will crash with an exception. Possible reasons for SMTP failure are"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:7
msgid "SMTP server is down"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:9
msgid "SMTP server is overloaded"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:11
msgid ""
"SMTP server spam protection is giving false positives for your email sending"
" attempts"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:13
msgid ""
"If you have a situation where gathering the data is critical the following "
"process is appropriate"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:16
msgid "Use save data adapter to save results"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:18
msgid ""
"Use a custom email sender script adapter to send email and even if this step"
" fails then the data is saved and no exception is given to the user"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/failsafe_email.rst:21
msgid "Example PloneFormGen script adapter (using proxy role Manager)::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:3
msgid "Frequently Asked Questions"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:8
msgid "Q. How can I make a date/time field default to current time?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:10
msgid "In the field's \"overrides\" fieldset, specify as Default Expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:14
msgid ""
"Note that you may do some simple date arithmetic. To set the default a week "
"after server time, use::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:20
msgid ""
"Q. I've made an error in a TALES expression, and now I can't view or edit my"
" form!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:22
msgid ""
"An error in a TALES override may prevent you from viewing the form, but it "
"shouldn't stop you from editing it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:24
msgid "To edit, navigate to the form (you'll see your error)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:26
msgid ""
"If the error is in a form override, add \"/atct_edit\" to the end of the URL"
" to reach the editor. That will allow you to reach the form editor; now go "
"to the overrides fieldset and fix the problem."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:27
msgid ""
"If the error is in a field override, add \"/folder_contents\" to the end of "
"the URL to reach the folder contents. Click on the troubled field; you'll "
"again get an error. Now, add \"/atct_edit\" to the end of the URL to reach "
"the editor."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:30
msgid "Q. How do I make a field default to the member's name/address/id?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:32
msgid "In the field's override fieldset, set the Default Expression to::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:36
msgid ""
"memberEmail is a method of the form folder which will return a member's "
"e-mail address, if one is available, and an empty string otherwise."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:38
msgid ""
"You may also use \"here/memberFullName\" to get the member's name, and "
"\"here/memberId\" to get the login id."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:42
msgid ""
"memberEmail, memberFullName and memberId are just a convenience facility of "
"PloneFormGen. They are not part of the Plone API."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:45
msgid "Q. Where is the encryption option?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:47
msgid ""
"I understood PFG could GPG encrypt mail, but can't find the option to do it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:49
msgid ""
"Navigate to your mail adapter and edit it. Look in the fieldset list (the "
"list of bracketed sub-forms at the top of the form). Do you see an "
"encryption field set title? If so, you've found the option. If not, it means"
" that PFG was unable to find the gpg binary when it started. Read the "
"README_GPG.txt file in the PFG product folder for details on how to solve "
"this problem."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:52
msgid ""
"Don't forget that after you install GnuPG, you'll need to restart Zope or "
"refresh your PFG product. Where is the save-data adapter?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:56
msgid ""
"Q. I've just added a form folder, and the action adapter list only includes "
"\"None\" and \"Mailer\". Where is the save-data adapter?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:58
msgid "You need to add it to the folder via the add-item drop-down."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:60
msgid ""
"A mailer adapter is in the \"sample\" form created when you add a form "
"folder because it's probably the most common use. Other adapters need to be "
"added."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:63
msgid ""
"Q. Why are these action adapters content types? Why aren't they just built "
"into the form folder?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:65
msgid ""
"There are several reasons. One is that doing it this way makes it easy to "
"copy configured action adapters from one form to another. How do I specify a"
" recipient e-mail address?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:69
msgid ""
"Q. When I attempt to submit a form, I get an AssertionError \"You must "
"specify a recipient e-mail address in the mail adapter.\""
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:71
msgid ""
"The error is occurring because PloneFormGen doesn't have a recipient address"
" to which to mail the form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:73
msgid ""
"To fix this, choose the contents tab of your PFG form folder. Navigate to "
"the mailer and use its edit tab. Choose the \"addressing\" fieldset and "
"specify a recipient address."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:75
msgid ""
"By the way, if the recipient address isn't specified, PFG tries to use the "
"e-mail address of the form folder's owner. So, you'll only see this error if"
" you've failed to set an e-mail address in personal preferences."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:78
msgid "PloneFormGen missing from Add list?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:80
msgid ""
"I installed the release of PloneFormGen in my Products directory in Plone "
"2.5.x, and neither the ZMI (/Control_Panel/Products) nor Plone (Quick "
"Installer) seemed to recognize it after restarting my Zope."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:82
msgid ""
"Zope has probably encountered an error in the course of loading the product."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:84
msgid ""
"Try checking your event.log for related error messages. You may wish to try "
"starting Zope in foreground mode (bin/zopectl fg for a standalone zope) for "
"more diagnostics."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:87
msgid "How do I add a hidden field with the username?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:89
msgid "Create a string field and mark it hidden."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:91
msgid "On the overrides tab, set \"here/memberId\" for the Default Expression."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:95
msgid ""
"To follow this recipe, you'll need to have permission to edit TALES fields."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:98
msgid "Q. Dynamically populate selection fields?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:100
msgid ""
"Can I dynamically populate selection and/or multi-selection fields in "
"PloneFormGen?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:102
msgid ""
"Yes, just use the [overrides] panel of the field's edit view to set an "
"Options Vocabulary."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:104
msgid ""
"It should be a TALES expression that evaluates as a list of value/label "
"lists (tuples are also OK)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:106
msgid ""
"For example, let's say that we wanted a selection field populated with "
"option values '1', '2', '3', '4' and matching visible labels 'one', 'two', "
"three', 'four'. The TALES code for this would be::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:110
msgid ""
"It's unlikely, though, that you'll be able to do what you need in a single "
"line of TALES. So, a more typical use would be to create a python script "
"that returns a sequence of value/label sequences. If you put that script in "
"your form folder, you can just fill in::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:114
msgid "in your Options Vocabulary field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:117
msgid "Q. Could a selection field in a FormFolder be used to redirect?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:119
msgid ""
"I have created a custom FormFolder, using PloneFormGen. Within the "
"FormFolder, I have created a page and added a selection field with "
"value/label pairs equivalent to: path (url) | company department -->i.e. "
"http://Plone/reports/accounting|Accounting I am wondering if it is possible "
"to create an action override that would 'redirect_to' the 'selected' value "
"in the selection field, something like: 'redirect_to:string: ' If so, how "
"might I access the value from the selection field?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:121
msgid "For the redirection, just put something like::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:125
msgid ""
"in the Custom Success Action field on the form folder's [override] panel."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:127
msgid ""
"If you need to do something more complicated, you can use the \"Custom "
"Script Adapter\" in the 1.1 alpha and end your code with::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:133
msgid "Use a \"From\" address other than the site address?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:135
msgid ""
"One stock-field is called replyto and contains a valid email address. I want"
" this address to be in the From: line - not just in Reply-To:. So I could "
"fill in a TALES expression to overwrite the default sender-address. But "
"what's the correct TALES expression for that?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:137
msgid ""
"By default, PloneFormGen's mailer sends mail with the \"From\" address set "
"to the site's global \"From\" address (specified in site setup / Portal "
"Settings). That's the standard return address for portal-generated mail, but"
" you may wish to use another."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:139
msgid "In the mailer's overrides sub-form, set the Sender Expression to::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:143
msgid "to use the address filled in for the \"replyto\" form field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:145
msgid "You could also specify a literal::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:149
msgid ""
"Be cautious about using user-submitted addresses for the \"From\" address. "
"It's important that the \"From\" address be a real one, owned by a "
"responsible person."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:152
msgid "Q. Can I integrate my favorite field/widget?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:154
msgid ""
"I'd like to integrate a new field/widget into PloneFormGen so that it will "
"be useful as a form field in a PFG form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:156
msgid ""
"PFG is designed to allow this, but it's going to take some programming by "
"you or the field developer. See the PFG \"examples\" directory for a heavily"
" commented, really working, example of integrating a third-party field into "
"PloneFormGen without touching the PFG or field code. How do I save the "
"uploaded file from \"file field\"?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:160
msgid "Q. Captcha field is not accessible?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:162
msgid ""
"Or, not always readable for some people with low vision, or using mobile "
"this type of control is strongly blocking"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:164
msgid ""
"To effectively replace a Captcha, just add a text field mandatory (must "
"match the size of two char. Max.) That can be called eg 'Filter' as help "
"text with the following question: \"to avoid spam can you answer this "
"question: 7+2-1 = ?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/faq.rst:166
msgid ""
"Next, modify the object and choose the menu 'overrides' and fill in the "
"\"custom validator\" by this expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:3
msgid "Getting Started with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:7
msgid "Learn the basics of creating web forms with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:14
msgid ""
":doc:`Please read general PloneFormGen information first "
"</reference_manuals/active/ploneformgen/index>`"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:17
#: ../../reference_manuals/old/archgenxml/getting-started/index.rst:3
msgid "Getting Started"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:21
msgid "The best place to start for non-technical Plone users."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:23
msgid ""
"To get started building a custom form using PloneFormGen, you must first "
"create a **Form Folder**. A form folder is a lot like a normal Plone folder "
"- you use it to organize and hold other types of content. The Form Folder "
"also has some settings of its own that will control the behavior and "
"appearance of the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:25
msgid "Click *Add Item* and choose Form Folder from the drop-down menu."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:31
msgid "Create the form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:33
msgid ""
"Provide a *Title* and *Description* for the form. You can also change the "
"wording of the *Submit* or *Reset* button if you wish."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:35
msgid ""
"Ignore the rest of this edit screen for the time being and just click *Save*"
" at the bottom."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:42
msgid "Form Folder Settings"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:46
msgid "Learn how to configure your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:48
msgid ""
"You now have a basic form to work with. By default, a form starts with "
"*E-Mail Address*, *Subject* and *Comments*. These are fields you get "
"automatically, every time you create a new form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:54
msgid "Adding text to the form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:56
msgid ""
"Before you learn how to add new fields, or change existing ones, let's look "
"at how you can add some simple text above and below the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:58
msgid ""
"You may want to include instructions to your site visitor about how to fill "
"out your form, or what the purpose of the form is supposed to be. You can "
"add that descriptive text as follows:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:60
msgid "Edit the Form Folder by clicking on Edit in the taskbar"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:62
msgid ""
"Now you'll see two Body Text areas called Form Prologue and FormEpilogue "
"(which means before and after). Use the text editor to format your content, "
"include links, and even pictures. Click Save when you're all done."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:68
msgid "Overrides"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:70
msgid ""
"When in the *Edit* mode on the Form Folder, notice the *Overrides* tab on "
"the right-hand side of the page properties tabs. Form submission behaviors "
"can be customized in this tab."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:72
msgid ""
"Read the on-screen help to give you an idea what sort of customizations are "
"possible here. Depending on what you need to do, you may need to learn how "
"to write some basic TALES or Python code. Don't be afraid though!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:78
msgid "Overview of Field Types"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:82
msgid "Learn about the commonly used field types in PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:84
msgid ""
"By now you've seen how to create a new form. The next step is to learn how "
"to add new fields to the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:86
msgid ""
"There are a lot of different types of fields that one can employ. You've "
"probably seen many of those types of fields around on the Internet like a "
"text box, a list you can choose from, a checkbox, radio buttons, and so on."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:88
msgid ""
"Some of the field types that are included with PloneFormGen will not be "
"discussed here as they are used more for advanced applications than for "
"basic web forms. The field types discussed here should be all you need to "
"create useful forms in Plone."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:91
msgid "Common field types"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:93
msgid ""
"Navigate to your Form Folder and push the Add Item button. You should see a "
"long drop-down menu appear. There's a lot of choices, but we've chosen the "
"four most common to focus on for this tutorial."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:96
msgid "String Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:96
msgid ""
"This is probably the most commonly used field. It's a simple, one-line text "
"box for gathering info like name, address, e-mail, phone number and so on."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:99
#: ../../reference_manuals/active/ploneformgen/getting_started.rst:184
msgid "Text Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:99
msgid ""
"A large text box for gathering things like comments or other long-form text "
"responses."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:102
msgid "Selection Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:102
msgid ""
"This field type is to gather one choice from a list of selections. The list "
"can be checkboxes, radio buttons, or a text list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:106
msgid "Multi-Select Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:105
msgid ""
"Use this field type if you want to let your site visitor select multiple "
"items from a list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:108
msgid ""
"You'll notice that there is a special icon for each field type. It's a good "
"idea to get familiar with how each one looks so you'll be able to recognize "
"the different field types at a glance."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:110
msgid ""
"In the next section, you'll see how to add and configure a string field; the"
" most common type of form field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:113
msgid "Adding a String Field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:115
msgid "Steps to adding a single text line field called a String."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:117
msgid ""
"Navigate to your Form Folder and click Add Item. Select String Field from "
"the drop-down menu."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:120
msgid ""
"The string field creates a simple one-line text box. Some common uses for "
"this field type are:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:122
msgid "First Name"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:123
msgid "Last Name"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:124
msgid "Email"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:125
msgid "Street Address"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:126
msgid "Lots more!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:129
msgid "Basic field info"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:131
msgid ""
"Many field types have the same information on their edit screen. Here's an "
"explanation of each of these:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:133
msgid "Field label"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:134
msgid "The title of the field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:135
msgid "Field help"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:136
msgid ""
"Some text you can provide to the form submitter to help them figure out what"
" you're asking for."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:137
msgid "Required"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:138
msgid "Is this a required field?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:139
msgid "Hidden"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:140
msgid ""
"Is this a hidden field? This is useful for passing data back to yourself."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:142
msgid "Default"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:142
msgid ""
"You can supply a defult value that the form submitter can change if they "
"wish."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:144
msgid ""
"Other types of information can be defined for other field types, and we will"
" cover those as they come up. Since we're talking about the string field, "
"let's take a moment to talk about validation."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:147
msgid "Validators"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:149
msgid ""
"Validation is a feature common to many web forms. A validator checks that "
"the input being provided conforms to a particular format. For example the "
"\"email address\" validator simply checks that the input contains an @ sign "
"(i.e. contact@groundwire.org). There are a set of standard validators "
"available for string fields such as: Valid US phone number and Valid zip "
"code."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:151
msgid ""
"In practice validators can be helpful, but in some cases they may be too "
"restrictive. If your site visitors are from outside the US, they mey become "
"frustrated with trying to get past US-centric form validators!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:154
msgid "PloneFormGen editing environment"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:156
msgid ""
"Note that PloneFormGen has both an *Edit* tab and a *QuickEdit* tab on the "
"taskbar. The *Edit* mode mainly allows you to edit major settings for the "
"entire form. The *QuickEdit* mode allows you to interactively edit the form."
" It's much a much easier way to add, edit, delete and reorder fields."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:158
msgid ""
"In *QuickEdit* mode, you may add fields by dragging them from the toolkit at"
" the right side of the page and dropping it into the target position in the "
"form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:160
msgid ""
"If you want to see the form the way that your site visitors would, you can "
"click on View in the taskbar. Likewise you can get to the editing "
"environment from the normal view, by clicking the *QuickEdit* tab in the "
"taskbar."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:162
msgid ""
"Note that you cannot complete or submit the form when working in the editing"
" environment. You will need to return to the normal form view first."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:168
msgid "Changing the Order of the Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:172
msgid "How to rearrange fields in your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:174
msgid ""
"By now you're probably wondering how to change the order that fields appear "
"on your form. By default, when you create a new field, it will appear at the"
" bottom of your form. Often, this isn't the result you wanted to see."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:176
msgid ""
"Navigate to your Form Folder and click on the *QuickEdit* tab on the taskbar"
" to enter the form editing environment."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:178
msgid ""
"Notice that the column on the far left called Order. You can move the "
"position of each field by clicking and dragging each field around if you "
"hover your mouse pointer in the Order column. Continue to rearrange fields "
"until you have the layout you want."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:180
msgid ""
"To see the results, you need to click on the View tab to see your form the "
"way your site visitors will."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:188
msgid "How to add a text box for collecting comments or other text."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:190
msgid ""
"A *Text field* is like a string field except that it's a large box instead "
"of a single line. You can change the size of the field by adjusting theRows "
"and Max Lengthparameters."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:192
msgid ""
"Rows controls the vertical height of the text box. Max Length controls the "
"number of characters the site visitor can input at a time. If you want to "
"limit a Comments text box to short comments, you might choose 500 characters"
" as the limit."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:194
msgid ""
"The *Default* field can be used if you want to suggest some content to the "
"site visitor or wish to show an example of the sort of information you want "
"from them."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:196
msgid ""
"You can also *Reject Text with Links* to discourage people from adding links"
" to your text area field. One reason why you might choose to do this would "
"be if you're asking someone to enter some information and you don't want "
"them to simply link to a blog entry or other online content."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:199
msgid "Selection and Multi Select"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:203
msgid ""
"How to create menus and checkboxes for selecting items from a list within "
"your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:205
msgid ""
"In addition to text boxes and the string field, *selection* and *multi-"
"select* are commonly used field types. They allow site visitors to choose a "
"selection from a list, drop-down menu, radio buttons or checkboxes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:208
msgid "Selection field"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:210
msgid ""
"As before, you must be in your Form Folder to add additional fields. Choose "
"*Selection Field* from the list in the Add New drop-down menu or the "
"QuickEdit toolkit."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:212
msgid ""
"In addition to the regulars like *Field Label* and *Field Help*, there is "
"*Options* and *Presentation Widget* to consider."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:215
msgid "Options"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:217
msgid ""
"Options is for establishing what the options in the field are going to be. "
"Each option should be separated with a line break."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:220
msgid "Presentation widget"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:222
msgid ""
"The *Presentation Widget* is the kind of graphic used for gathering the "
"input: you can choose either Radio Button or Selection List (a drop-down "
"menu). The option Flexible simply means that you leave it up to PloneFormGen"
" to decide which widget is most appropriate. Basically, if you have more "
"than three choices it will use the selection list. Less than three will "
"appear as radio buttons."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:225
msgid "Value|label"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:227
msgid ""
"Entering Options can be done in one of two ways. Either \"one line per "
"option\" or the \"Value|Label format\". One line per option is described "
"above, but what about *Value|Label*?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:229
msgid ""
"Let's say you want to present some choices, but the actual value recorded by"
" the form is different than what the form submitter sees on the screen. For "
"example, let's say that you want to ask a site visitor what county they live"
" in, but in your program work you classify counties into regions like "
"\"Northwest\" and \"Southeast\". Instead of asking the visitor to identify "
"which region they live in (which some might get wrong or misunderstand) you "
"could present them a list of counties."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:231
msgid "In the above example you would format Options like this::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:240
msgid ""
"In this example, if a visitor selects \"Jefferson\" as their county, the "
"form would record the entry as \"Northwest\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:243
msgid "Multi-select"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:245
msgid ""
"Multi-select is very similar to a Selection Field except that you have an "
"additional widget (the checkbox) and your site visitors can choose many "
"options from one list."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:247
msgid ""
"If you plan to use the Selection List widget for a multi-select field, it is"
" helpful to include a note about the Control key in Field Help. In order to "
"actually choose more than one option in the list, you must hold down the "
"control key (CRTL) on your keyboard and then click to select/de-select "
"options. Because of this, it is most often the best choice to use the "
"Checkbox widget instead of Selection List for a multi-select field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:250
msgid "The Thank You Page"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:254
msgid ""
"How to customize the page a site visitor sees after submitted the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:256
msgid ""
"After a site visitor has filled out your form and clicks submit, they will "
"see a page thanking them for their input. Look in your Form Folder and you "
"should already see a Thank You page in the contents."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:258
msgid ""
"It doesn't matter where the Thank You page appears in your Form Folder "
"contents. It will always work the same, no matter its folder position."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:260
msgid ""
"By default, the thank you page only lists a summary of what the site visitor"
" put into the form. Here's an example of what that looks like, to the right."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:262
msgid ""
"Note: You will only see this result if you fill out the form and submit it. "
"Otherwise, if you try to navigate or link to the thank you page directly, "
"you get a message that says something like \"no input was received\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:265
msgid "Add content to the thank you page"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:267
msgid ""
"The above example is decent, but there will be times that you may want to "
"say something more, or even provide a few links for your site visitor to "
"follow. Edit the Thank You page in your list of Form Folder contents. You "
"should now see the familiar Title and Description fields, but you'll also "
"see:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:269
msgid "Thanks Prologue"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:270
msgid "Thanks Epilogue"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:271
msgid "No Submit Message"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:273
msgid ""
"If you've chosen to display any field results the Prologue content will "
"appear before those results and the Epilogue content will appear after. If "
"you aren't going to display field results, just use the Prologue."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:275
msgid ""
"Should you wish to change the No Submit Message (remember, if you just hit "
"submit on your form without filling out any fields, you'll see this message)"
" you can do so here. You have the full power of Plone's text editor so feel "
"free to include links and formatted text here."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:278
#: ../../reference_manuals/old/archetypes/fields/index.rst:3
msgid "Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:280
msgid "thanks-fields.gif"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:282
msgid ""
"When editing the Thank You page, notice the Fields tabnext to Default. "
"Here's where you can control which field results to display or which ones to"
" take out. Simply uncheck Show All Fields if you don't want to display any "
"results on the Thank You Page."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:286
msgid "The Mailer Adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:290
msgid ""
"Learn to configure the adapter which sends an email after the form is "
"submitted."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:293
#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:12
#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:12
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:2
#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:2
#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:2
msgid "Overview"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:295
msgid ""
"Adapters control what happens to the form data that your site visitors "
"submit the form. The Mailer Adapter will send form data to an email address "
"or addresses of your choosing. The Save Data Adapter will save the results "
"in your Form Folder so that you can export any time you wish. You can even "
"use adapters concurrently to get the functionality of both."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:298
msgid "Configuring the mailer adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:300
msgid ""
"The *Mailer Adapter* is probably the more complex of the two adapters "
"covered in this tutorial. As such, we won't go through and explain all the "
"options present in the Mailer Adapter. However, we will cover the most "
"important options available."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:302
msgid ""
"Go ahead and edit the Mailer Adapter in the form editing environment. The "
"first screen you see look like this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:304
msgid "From here you can do three things:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:306
msgid ""
"Change the Title of your Mailer Adapter (really no reason to unless you have"
" more than one)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:307
msgid "Choose a recipient name"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:308
msgid "Choose a recipient email address"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:311
msgid "Addressing"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:313
msgid ""
"Now notice the tabs [default] [addressing] and so on. Click on [addressing]."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:315
msgid ""
"The *Addressing* screen allows you to make selections about other recipients"
" any dynamically populate the *From* and *Reply-to* fields directly from "
"form data."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:318
msgid "Message"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:320
msgid "The Message tab allows you to configure the:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:322
msgid "Subject Line"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:323
msgid "Email body content"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:324
msgid "Form field data that appears in the email message"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:327
msgid "Template, encryption, & overrides"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:329
msgid ""
"These options are beyond the scope of this tutorial as they require a "
"discussion of HTML, TALES and Python programming languages as well as an "
"understanding of mail server configuration."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:332
msgid "The Save Data Adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:336
msgid ""
"Collect and save answers from each from submission with the Save Data "
"Adapter."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:338
msgid ""
"Unlike the Mailer Adapter, the *Save Data Adapter* isn't automatically "
"created when you build a new Form Folder. As such, you must add it yourself "
"by clicking Add New (when you're in your Form Folder) and selecting the "
"*Save Data Adapter* from the drop-down menu. Or, drag and drop it from the "
"toolbox in QuickEdit mode."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:340
msgid "The first thing you'll see is a screen like the one to the right."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:343
msgid "Configure the adapter"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:345
msgid ""
"Enter in a Title that sounds good to you (*My Saved Form Data*, for "
"example). Your site visitors won't see this title at all, so anything will "
"do."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:347
msgid ""
"Next, you can select some *Extra Data* to store if you wish. Most of these "
"choices are for fairly esoteric things, but Posting Date/Time could be "
"helpful if you want to know when someone filled out your form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:349
msgid ""
"*Download Format* depends on what your preferences are, but *Comma-Separated"
" Values* is probably the most common. It really depends on if you are going "
"to plug the info into a database, and what type of file is most appropriate "
"for that. If the info is for human eyes only, then it doesn't really matter "
"what you pick here. Europeans: you may choose to use a colon rather than a "
"comma for CSV on the PloneFormGen config panel in site setup."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:351
msgid ""
"Now click on *Save* to finish. You do not need to put anything into the "
"Saved Form Input box. If your Save Data Adapter had any data in it, it would"
" appear in that box."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:353
msgid ""
"That's all there is to it. Sit back and wait for the data to come pouring "
"in!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:356
msgid "Retrieving your data"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:358
msgid ""
"Once your form has been filled out a few times by site visitors, you can "
"start retrieving the form data. You need to navigate to your Form Folder and"
" click on the Contentstab to get a view of all contents."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:360
msgid ""
"Now click on your *Save Data Adapter*. You should then see a screen like "
"this one at the right."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:362
msgid ""
"You can download the form data as many times as you want. The data will "
"always be there as long as you don't delete the *Save Data Adapter*. If you "
"click *Clear Saved Input* all data will be erased as well."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:365
msgid "Safety Net"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:367
msgid ""
"A common way of saving important data is to use two *save data* adapters in "
"your form. Use one to occasionally harvest new data and clear it. Use the "
"other to save all your history."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/getting_started.rst:372
msgid ""
"This document was originally written by Sam Knox for Groundwire. Thanks to "
"both Sam and Groundwire for passing it on to the Plone Foundation."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:3
msgid "Using GnuPG encryption"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:7
msgid ""
"The Gnu Privacy Guard may be used to encrypt emails sent by PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:11
msgid ""
"Encryption is serious business, and this how-to does not teach you about it "
"or about the Gnu Privacy Guard. You should develop expertise with both of "
"these before attempting to enable PFG encryption."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:13
msgid "Using GPG encryption with PloneFormGen requires:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:15
msgid ""
"1) That gpg be installed on your system and available on the search path or "
"in a common location (e.g., /usr/bin);"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:18
msgid ""
"2) That gpg, when executed as a subprocess of Zope/Plone, be able to find a "
"public keyring;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:21
msgid ""
"3) That gpg, when executed as a subprocess of Zope/Plone, have the rights to"
" read the public keyring;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:24
msgid ""
"4) That you, as administrator, understand how gpg works, and be able to "
"maintain the public keyring."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:27
msgid ""
"PloneFormGen tries to find the gpg binary when it's installed, when the "
"product code is refreshed, and when you restart Zope. If it finds it you "
"will see an \"encryption\" field set in the mailer adapter form. If you "
"don't see the \"encryption\" fieldset, it means PloneFormGen didn't find a "
"gpg binary. Fix this by adding the path to the gpg binary to the PATH "
"environment variable when you start Zope."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:34
msgid ""
"gpg will typically look for a public keyring in the current user's home "
"directory, .gnupg subdirectory. If it's not finding it, consider the "
"possibility that the user id you're using to maintain your keys isn't the "
"same one that you're using to run Zope. You may need to use the GNUPGHOME "
"environment variable to point to your .gnupg directory. Make sure your Zope "
"process can open the directory and read the file!"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:41
msgid "Windows"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/gpg.rst:43
msgid ""
"gpg can work in a Windows environment, but you'll need to have a command-"
"line gpg. http://www.cygwin.com/ is a good, free source."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:3
msgid "Creating forms without programming: PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:7
msgid ""
"PloneFormGen allows you to build and maintain convenience forms through "
"Plone edit interface."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:12
msgid ""
"*PloneFormGen* is a Plone add-on Product that provides a generic Plone form "
"generator using fields, widgets and validators from Archetypes. Use it to "
"build simple, one-of-a-kind, web forms that save or mail form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:14
msgid ""
"To build a web form, create a form folder, then add form fields as contents."
" Individual fields can display and validate themselves for testing purposes."
" The form folder creates a form from all the contained field content "
"objects."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:16
msgid ""
"Final disposition of form input is handled via plug-in action products. "
"Action adapters included with this release include a mailer, a save-data "
"adapter that saves input in tab-separated format for later download, and a "
"custom-script adapter that makes it possible to script simple actions "
"without recourse to the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:18
msgid ""
"To make it easy to get started, newly created form folders are pre-populated"
" to act as a simple e-mail response form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:20
msgid "`PloneFormGen product page <http://plone.org/products/ploneformgen>`_"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:23
msgid "Getting started with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:31
msgid "PloneFormGen topics"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/index.rst:49
msgid "Advanced topics"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:3
msgid "Installing PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:7
msgid ""
"PloneFormGen is a Plone add-on product, and is not included with Plone. "
"Fortunately, it's easy to install."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:9
msgid ""
"PFG installs just like most other Plone add ons. Edit the buildout.cfg file "
"at the top of your Plone instance and look for the ``eggs =`` section that "
"specified Python Packages that you with to include. Add PloneFormGen:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:18
msgid ""
"Run bin/buildout and restart your Plone instance. Dependencies will be "
"loaded automatically."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/installation.rst:20
msgid ""
"After restarting Plone, visit your site-setup page and use the \"add on\" "
"configuration page to activate PloneFormGen."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:3
msgid "Adding a JavaScript event handler to a form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:7
msgid "Need to make your PFG forms more dynamic? It's easy to add JavaScript."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:9
msgid "There are two basic steps to injecting JavaScript into a PFG form:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:11
msgid ""
"Use the Zope Management Interface to create a text file (object type: file; "
"mimetype: text/plain) either inside the form folder or in a skin folder;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:13
msgid ""
"Use the form folder's edit / overrides pane, header injection field to tell "
"PFG to inject it into the form."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:16
msgid "Injection"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:18
msgid ""
"Let's look at the second step first. Let's say that your JavaScript file is "
"named form_js. Then just specify::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:22
msgid "in the header injections override field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:25
msgid "The JavaScript"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:27
msgid "There are a couple of considerations here:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:29
msgid ""
"Since this is a header injection, you'll need to supply the ``SCRIPT`` tags;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:31
msgid ""
"You'll nearly certainly want to use jQuery to attach the event handler, "
"since jQuery is part of Plone."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:44
msgid ""
"This code fragment shows off both, and attaches an alert to every input in "
"the ``mqy-questions`` field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:46
msgid "Note the use of the common jQuery idiom:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:54
msgid ""
"This accomplishes a couple of things: 1) it sets the code up to run once the"
" page is loaded; 2) it aliases \"jQuery\" to \"$\" so that we may use common"
" jQuery shorthand."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:57
msgid "An alternative injection"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:59
msgid ""
"If you want to use a separate JavaScript file that is actual JS (no "
"``script`` tags) and will be shared among forms, just use the header "
"injection override like this::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:63
msgid ""
"assuming your script is named ``form_scripts.js``. You may make it a little "
"more sophisticated if you need an absolute URL::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/javascript.rst:67
msgid "using TALES string interpolation."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:3
msgid "Creating a Multi-Page Form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:7
msgid "You can create a multi-page form as a chain of form folders."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:9
msgid ""
"Creating a multi-page form is probably much simpler than you might suppose. "
"You may do it by just creating a sequence of form folders that each link to "
"the next. The basic procedure is:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:12
msgid ""
"Create your sequence of form folders, typically all in the same normal Plone"
" folder;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:13
msgid ""
"On all but the last form folder, turn off all action adapters and set the "
"Custom Success Action override to \"traverse_to:string:id-of-next-form-"
"folder\";"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:14
msgid ""
"On all but the last form folder, set the Submit Button Label to something "
"like \"Next\" and turn off the cancel button."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:15
msgid ""
"On all but the first form folder, set the Exclude From Navigation flag in "
"the properties tab;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:16
msgid ""
"In each form folder, create a set of hidden form fields matching all the "
"fields in all the previous forms;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:17
msgid "In the last form, turn on your real action adapter(s)."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:19
msgid ""
"As your user moves from form page to page, input will be automatically saved"
" in the hidden fields of subsequent pages."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:23
msgid ""
"A Note on Hidden Fields: The hidden flag is not available for all form field"
" types, but you don't need it. String, Text and Lines fields are adequate to"
" carry all the basic data. Use a hidden Lines field to hold multiple "
"selection field input, string or text for the rest."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:25
msgid "An added bonus"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:27
msgid ""
"If you want to create a sequence of forms, where the answers on form_A could"
" lead to a form_B or form_C, you can use a traverse_to override."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:29
msgid "Create a selection field in form_A, which could be called 'formnext';"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:30
msgid ""
"As values in the selection field, put the paths to the next forms in the "
"sequence;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:31
msgid "Then, in the form overrides -> custom success action use"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:33
msgid "traverse_to:request/form/formnext"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/multipage.rst:36
msgid ""
"use traverse_to as opposed to a redirect_to as this will preserve the form "
"object in the request."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:3
msgid "Overriding field defaults dynamically"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:7
msgid ""
"PloneFormGen allows you to supply dynamic field defaults by specifying a "
"TALES expression in the Default Expression field of the overrides fieldset "
"(sub-form). This how-to explains what that means, and offers a few examples."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:9
msgid ""
"Creating a dynamic field default means to have a form field's initial value "
"change with context. We might, for example, wish to use a member's e-mail "
"address, which would vary with the user. Or, we might be looking up some "
"data via a catalog or RDBMS query, and wish to supply that to the user for "
"correction."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:18
msgid "A quick example"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:20
msgid ""
"Let's say you wish to put the member's id in a string field default. You may"
" do that with the TALES expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:24
msgid ""
"This is a path expression. \"id\" is found in the \"member\" object and "
"returned."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:26
msgid ""
"There's a gotcha here. What if the form is viewed by an anonymous visitor? "
"They'll receive an error message. We can avoid that with the expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:30
msgid ""
"The vertical bar (|) marks alternate expression that is used if the left-"
"hand expression is empty or can't be evaluated. Here we're saying to show "
"nothing if member/id can't be evaluated. Using Python"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:33
msgid "You may also use Python expressions::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:37
msgid "would supply a value of 8. This is trivial, but what about::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:41
msgid "This would supply the current date/time plus seven days."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:74
msgid ""
"When you compose your TALES expression, keep in mind that it will need to "
"return different types of data for different types of fields. For simple "
"field defaults, return a string value; for the lines field, return a list or"
" tuple."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:77
msgid "Calling a Python script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:79
msgid ""
"You'll be frustrated fast if you try to do anything smart in a single TALES "
"expression. If you need to do something more complicated, add a Python "
"Script to your form folder and call it via TALES. For example, if you added "
"a script with the id getEmail, you could call it with the expression::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:83
msgid ""
"Make sure your script returns the value you wish to use as a field default, "
"in the appropriate format. Setting Many Defaults With One Script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:86
msgid ""
"If you need to dynamically set several fields, you may do it with one "
"script. Call the script by specifying it in the Form Setup Script field of "
"the form folder's overrides fieldset."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:88
msgid ""
"Set the form fields by putting them in the request/form dictionary. Make "
"sure you don't overwrite anything that's already in the dictionary, as that "
"is probably previously submitted input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:90
msgid ""
"For example, we could create a Python Script (using the ZMI) in the form "
"folder:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:98
msgid "If the script id was setTopicDefault, we'd call it by putting::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/override_defaults.rst:102
msgid ""
"in the `Form Setup Script` field of the form folder's overrides fieldset."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:3
msgid "What's in a Request"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:7
msgid ""
"If you're trying to use PloneFormGen overrides, you're going to need to use "
"the request object. Here's a quick trick for exploring it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:9
msgid ""
"As a page is assembled by Zope and Plone following a browser request, "
"information about that request is bundled into a non-persistent, pseudo-"
"global request object. This object is available in the scripts, templates "
"and TALES expressions you may use in creating PloneFormGen overrides. It "
"will contain the form input submitted by the user."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:11
msgid ""
"To effectively write more complex overrides, you're going to need to know "
"how to get information out of the request object."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:15
msgid ""
"The Request class itself is well-documented in the Zope help system (API "
"section) and in the source at "
"Products.OFSP-2.13.2-py2.X/Products/OFSP/help/Request.py."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:17
msgid ""
"Here's a quick recipe that will help you examine the form input contained in"
" the request."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:19
msgid ""
"Jump into the ZMI and navigate to your PFG Form Folder. Inside it, create a "
"Page Template named showrequest. Now, just before </body>, add::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:23
msgid ""
"Note: when the request object is called, it renders a readable, HTML version"
" of the data. We use \"structure\" to prevent escaping the HTML."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:25
msgid "Give your template a title and save it away."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:27
msgid ""
"Return to Plone and your form folder. Edit it, and on the form's [overrides]"
" pane, set a Custom Success Action of::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:31
msgid ""
"Note that this will override any thanks page you've specified. Just clear it"
" when you're done developing."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/request.rst:33
msgid ""
"Now, just fill out your form, and submit it. You should see the contents of "
"the request object. Take a particular look at the form section. That's a "
"dictionary available as request.form when you're composing an override."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:3
msgid "Restyle a form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:7
msgid ""
"How to inject CSS into a form page to turn a label green ... or pretty much "
"anything else."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:9
msgid "The general answer to \"how do I restyle a form\" questions is: use CSS."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:11
msgid ""
"The underlying Archetypes form generator surrounds every form element with a"
" <div> with a distinct ID. For example, a sample form with a textarea "
"contents field has the generated XHTML:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:27
msgid ""
"That's more than enough ID and Class selectors to do pretty much anything in"
" the way of visual formatting."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:29
msgid ""
"So, how do we get the CSS into the form's page. You could add it to the "
"site's css, but there's a much easier way. Using the ZMI, create an object "
"of type File inside your form folder. Set its Content Type to \"text/plain\""
" and give it the ID \"newstyle\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:31
msgid ""
"Let's turn the label for the comments field green. Just fill in the big text"
" field on your file with:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:41
msgid ""
"Now, just save it, return to the Plone UI and edit your form folder. Specify"
" \"here/newstyle\" for the Header Injection field of the ``overrides`` pane."
" Now, enjoy your green label."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:44
msgid "Putting checkboxes in a row"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:46
msgid ""
"Now, for a more useful example. It's a common requirement to want to put a "
"set of checkbox fields on a single line."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:48
msgid ""
"The easiest way to set this up is to create the list of checkboxes as a "
"multi-selection field with \"checkboxes\" designated for display. That's "
"going to generate markup that will look something like this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:71
msgid ""
"Note that each checkbox/label pair is in a ``DIV`` with the class "
"\"ArchetypesMultiSelectionValue\". The basic CSS couldn't be simpler:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:82
msgid ""
"Of course, you'll need to do some more styling. First of all, you'll need to"
" set a ``clear: left`` on the following control. And, you'll need to do some"
" padding."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:85
msgid "Putting string fields in a row"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:87
msgid ""
"Making string fields display horizontally is a little different than the "
"solution for checkboxes.  There is no div wrapping the string fields like "
"there is with check boxes.  To get around this, add a fieldset and put the "
"fields in the fieldset.  This also lets you isolate the horizontal fields "
"from other vertical fields.  Here, two fields are required, one is not.  The"
" markup will look similar to this:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:114
msgid "Here is the CSS:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:142
msgid "An alternative way to inject CSS"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:144
msgid ""
"Let's say you've got a lot of CSS. You may want to use an external style "
"sheet file rather than inject the whole bundle into the header with every "
"form display."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:146
msgid ""
"Let's say the CSS resource is named ``form_styles.css``. Then, just put the "
"following in your overrides / header injection field::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:151
msgid ""
"We can get a little fancier to generate absolute URLs for the style file::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:156
msgid "using the string interpolation feature of TALES."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/restyle.rst:161
msgid ""
"Need to do something more sophisticated? You can use a Python script to "
"generate dynamic CSS or JavaScript."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:3
msgid "Using a selection field to pick mail destination"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:7
msgid ""
"You may allow form users to use a selection field to choose a destination "
"address for their form input."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:9
msgid ""
"I'm trying to use a PloneFormGen form as a support center for my project and"
" I would like to have the mail sent to different email addresses based on a "
"choice from a selection field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:11
msgid "How can I do it?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:14
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:183
msgid "The form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:16
msgid "First, create a selection field in your form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:18
msgid ""
"In the Options field, specify your set of possible destination addresses in "
"a \"value|label\" format where the e-mail address is the value and its "
"readable name the label. For example::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:23
msgid ""
"Then, pick the address (the actual e-mail address value,  not the label) you"
" wish selected by default. Put it in the Default field. Make sure the "
"Required checkbox is selected."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:25
msgid "Save the form field."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:28
msgid "Configuring the mailer"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:30
msgid ""
"Now, edit the mail adapter for your form. (Navigate to the form folder, "
"click on contents, find your mail adapter and follow the link; select the "
"edit tab.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/select_mail.rst:32
msgid ""
"Choose the `[addressing]` sub-form and find the Extract Recipient From "
"field. You should see a None choice and a list of all of the selection "
"fields in your form. Select the field you just created and save your "
"changes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:3
msgid "Simple SQL CRUD with PloneFormGen"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:7
msgid ""
"A step-by-step lesson in using PloneFormGen to read, insert and update rows "
"in a single SQL table."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:14
msgid ""
"One of the goals of PloneFormGen is that it should be useful for simple "
"update operations on an external database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:16
msgid ""
"This tutorial covers the use of PloneFormGen to update and insert rows in a "
"single-table SQL database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:18
msgid ""
"The simple application we'll develop here would need quite a bit of "
"polishing before you'd wish to expose it to the public, but it will "
"demonstrate the basic techniques."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:20
msgid "Skills required to understand this tutorial include:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:22
msgid ""
"The ability to add an SQL database connection and Z SQL Methods via the Zope"
" Management Interface and to understand what they do. If you've never read "
"the Relational Database Connectivity chapter of the Zope Book, take some "
"time now to do it; it's fundamental."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:24
msgid ""
"Simple Python scripting via the ZMI. Read the python-based scripts portions "
"of the Advanced Zope Scripting chapter of the Zope Book if you're new to "
"this vital Zope/Plone development skill."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:26
msgid "Our basic steps will be to:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:28
msgid ""
"Add a database and table to our SQL database and create a matching form in "
"PloneFormGen;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:30
msgid ""
"Add a Z SQL Method to insert rows into the database and show how it can be "
"used in PFG;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:32
msgid ""
"Add a Z SQL Method to read a row, write a Python script wrapper and use it "
"to fill out the fields of our form;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:34
msgid ""
"Add a Z SQL Method to update a row, write a Python wrapper for it and the "
"insert method and use it as a form action;"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:36
msgid ""
"Consider the security implications of the fact that the SQL access methods "
"we just created are not part of the Plone workflow."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:38
msgid "By the way, we'll be skipping the \"D\" in CRUD. Deletion is up to you. :)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:42
msgid ""
"This tutorial uses *Z SQL Methods* because they're easy to teach quickly. If"
" you're doing any significant database work with any Python application, "
"`SQLAlchemy <http://www.sqlalchemy.org>`_ is a much more scalable way to use"
" a relational database from Plone."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:45
msgid "Database table & form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:47
msgid ""
"In this step, we create a simple database table and a matching form. The "
"database"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:50
msgid ""
"Hope you're not feeling too ambitious at the moment, because this is going "
"to be a very simple demonstration table. It's going to have just three "
"columns:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:53
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:81
msgid "uid"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:53
msgid ""
"A unique ID that's the primary key for the table. We'll make it auto-"
"increment so that our SQL server (MySQL in this case) will do the work of "
"keeping it unique."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:56
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:84
msgid "string1"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:56
msgid "A simple string."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:60
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:87
msgid "string2"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:59
msgid "Another simple string."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:62
msgid "(I told you this was simple!)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:64
msgid ""
"Create a test database and then the table. In MySQL, the CREATE code to set "
"up the table is:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:75
msgid ""
"Now, set up an SQL user with privileges adequate to select, insert and "
"update the table. Use that user identity to set up an SQL database "
"connection object via the ZMI. (If you're using MySQL, this would be a Z "
"MySQL Database Connection.) The connection must be in a place where it will "
"be visible to the form you'll be creating. The form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:78
msgid "Now, create a PloneFormGen form with three fields:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:81
msgid ""
"An string field with id uid, marked hidden, with a default value of \"-1\". "
"Later in the tutorial, we'll use the \"-1\" as a marker value to indicate a "
"new record."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:84
msgid "A string field with id string1."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:87
msgid "A string field with id string2."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:89
msgid ""
"Note that the form field ids must exactly match our column ids. You can "
"script your way around this requirement, but it's a lot easier this way."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:91
msgid ""
"While you're at it, turn off or delete the mailer action adapter. It's "
"harmless, but it would be a distraction."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:93
msgid "That's it. We now have a form that matches our database table."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:96
msgid "Inserting rows"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:98
msgid ""
"In this step, we create a method to insert a row, and show how to make "
"simple use of it."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:100
msgid ""
"Now, inside the Zope Management Interface, in your form folder, create a Z "
"SQL Method with the id *testCreateRow*."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:102
msgid "Set the parameters:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:104
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:131
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:208
msgid "Connection ID"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:105
msgid ""
"This should be the database connection you set up to allow access to your "
"test database."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:107
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:134
#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:211
msgid "Arguments"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:107
msgid ""
"On separate lines, specify \"string1\" and \"string2\". (Leave off the "
"quotes.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:109
msgid "Then, in the big text area, specify the code:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:119
msgid ""
"Note: always use <dtml-sqlvar ...> to insert your variables. It protects you"
" against SQL-injection attacks by SQL quoting the values."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:121
msgid ""
"Now for a little magic: Z SQL Methods can pick up their arguments from "
"REQUEST.form, which is exactly where Zope is putting your form variables "
"when you submit a form. That means that you can just go to the [overrides] "
"pane of your Form Folder and set ``here/testCreateRow`` as your After "
"Validation Script."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:123
msgid ""
"Your form will now store its input into your SQL table! Add a few rows to "
"check it out. Reading a Row, Filling in the Fields"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:126
msgid ""
"If we want to update records, we're going to have to get rows from our SQL "
"table and use the columns to populate our form fields. The SQL"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:129
msgid ""
"Now, use the ZMI to create, inside your form folder, a Z SQL Method named "
"testReadRow. Set up the following parameters:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:132
msgid "Choose your test database adapter."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:134
msgid "Just \"uid\""
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:136
msgid "Then, add the SQL Code:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:143
msgid ""
"The <dtml-sqltest ...> operator is a safe way to use user input for an SQL "
"\"where\" test. The default test is \"=\". The Script"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:146
msgid ""
"Let's wrap this method in a simple Python script that will selectively use "
"it. Create a Python Script with the id formSetup and the Python:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:160
msgid "Let's deconstruct this code."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:162
msgid "The if test:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:168
msgid ""
"will make sure that this code does nothing if the form has already been "
"submitted (we don't want to overwrite values the user just input). It also "
"won't do anything if we don't have a \"uid\" variable in the form "
"dictionary. (form.submitted is a hidden input that's part of every PFG "
"form.)"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:170
msgid ""
"If we have a uid variable and we won't be overwriting user input, then we "
"call our SQL read method:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:176
msgid ""
"This will return the results of our SQL query in the form of a list of "
"dictionaries. The dictionary entries will be in the form columnid:value."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:178
msgid ""
"Note that the uid value is being passed via the request variable, and "
"doesn't need to be specified."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:180
msgid ""
"The rest of the code checks to make sure that we got one result, and throws "
"all of its key:value pairs into the form dictionary -- just where our form "
"will expect them."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:185
msgid ""
"Now, just go to the [override] pane of your form folder, and specify "
"``here/formSetup`` for your Form Setup Script."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:188
msgid "Calling The Form"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:190
msgid ""
"Hopefully, you've got a few rows in your table. Now, try calling your form "
"with the URL::"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:194
msgid ""
"Everything up to the question mark (the query string marker) should be the "
"URL of your form folder. The \"?uid=1\" specifies that we want to use the "
"data from the row where the uid is \"1\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:196
msgid ""
"How would you actually get your users to such a URL? Typically, you'd have "
"some sort of drill-down search that offered them a list of links constructed"
" in this fashion."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:198
msgid "Creating a drill-down template is left as an exercise for the reader."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:201
msgid "Updating or inserting as necessary"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:203
msgid ""
"In this step, we'll create an update SQL method and show how to selectively "
"update or insert data."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:205
msgid ""
"Using the ZMI, create a Z SQL Method inside your form folder with the id "
"testUpdateRow. For its parameters, set:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:209
msgid "Choose your test database connection."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:211
msgid "Add \"uid\", \"string1\" and \"string2\" on separate lines, without quotes."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:213
msgid "Then, specify the SQL code:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:223
msgid ""
"Notice the use <dtml-sqltest ...> for the SQL set id=value lines. This is "
"just a hack that uses sqltest where we could have instead written lines like"
" \"string1=<dtml-sqlvar string1 type=string>\"."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:225
msgid ""
"Now, we've got to solve a simple problem. How do we update our table under "
"some circumstances, and insert new values under others?"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:227
msgid ""
"Remember how we set \"-1\" as the default value of our hidden \"uid\" form "
"field? If we've read a record, uid will have changed to match a real row. If"
" it's \"-1\", that means that we started with a clean form rather than "
"values read from a table row."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:229
msgid ""
"Let's use that knowledge in a simple switchboard script with the id "
"doUpdateInsert:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:242
msgid ""
"Now, go to the [overrides] pane of your form folder and set "
"``here/doUpdateInsert`` as the *AfterValidationScript*."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:244
msgid "Believe it or not ... you're done."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:246
msgid ""
"Time to go back and repeat the process with your own table. Don't forget to "
"add lots of sanity-checking code along the way."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:249
msgid "A note on security"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:251
msgid "It takes extra steps to secure a database connection and SQL methods."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:253
msgid ""
"If this is the first time you've worked with a Zope database connection, "
"there's an important security point you may not have considered:"
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:257
msgid ""
"Zope Database Connections and Z SQL Methods are not part of the Plone "
"workflow."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:259
msgid ""
"This means that you may not depend on the Plone content workflow to provide "
"security for these connections and methods. You must use the Zope security "
"mechanisms directly to control access."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:261
msgid ""
"This is also true of Python scripts and other Zope-level objects you might "
"create via the ZMI. But Zope provides a safety net of security for most of "
"those. There is no such automatic safety net for external RDBMS access "
"methods."
msgstr ""

#: ../../reference_manuals/active/ploneformgen/sql_crud.rst:263
msgid ""
"The easiest way to do this is to use the ZMI to visit the top-most folder of"
" your form and use the Security tab to customize security. Look in "
"particular for the Use Database Methods permission, and make sure it is not "
"extended to any user role that should not have a right to read or update "
"your external database."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:2
msgid "Creating a package"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:4
msgid "**Giving our forms a home**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:6
msgid ""
"For the purposes of this tutorial, we will create a simple package that adds"
" the necessary dependencies. If you have an existing package that requires a"
" form, you should be able to add the same dependencies. If you have read the"
" Dexterity manual, most of this should be familiar."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:11
msgid ""
"For details about creating new packages, see `Bootstrapping Plone add-on "
"development <http://developer.plone.org/getstarted/paste.html>`_."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:14
msgid "First, we create a new package:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:20
msgid ""
"After answering the relevant questions, we edit *setup.py* to add "
"*plone.app.z3cform* and *plone.directives.form* as dependencies. This will "
"pull in the other pre-requisites, including *plone.z3cform* and *z3c.form* "
"itself. We have also removed the *ZopeSkel* local command support, which we "
"will not need, although there is no harm in keeping it in. Finally, we have "
"added a *tests* extra to pull in *collective.testcaselayer* for our "
"integration tests."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:68
msgid "Next, we edit *configure.zcml* to add some boilerplate:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:91
msgid "This will:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:93
msgid ""
"Include the configuration of the packages we have listed in the "
"*install\\_requires* line in *setup.py*. This saves us from manually "
"including them with individual ZCML *<include />* statements."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:96
msgid ""
"“Grok” the package, to configure the forms we will add. See the `five.grok "
"manual`_ for more details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:98
msgid ""
"Create an installation profile that will install this package and its "
"dependencies."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:101
msgid ""
"The installation profile contains the instructions to install our package’s "
"dependencies into the Plone site. We create a *profiles/default* directory, "
"and add to it a *metadata.xml*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:115
msgid ""
"We need to install *plone.app.z3cform* to ensure that our forms have the "
"proper widgets and templates available."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:118
msgid ""
"Next, we add a *message factory* to allow the titles and descriptions in our"
" form to be translated. We’ll do this in a module *interfaces.py* at the "
"root of our package:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:127
msgid "The name of the factory should normally be the name of the package."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:129
msgid ""
"Finally, we add this package to our *buildout.cfg* and re-run "
"*bin/buildout*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:151
msgid ""
"Obviously, we have omitted large parts of the buildout configuration here. "
"The important things to note are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:154
msgid ""
"We have included the known good set (KGS) of package versions for the latest"
" 4.x release of Plone."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:156
msgid ""
"We list the new egg as a develop egg, and make sure it is in an eggs list "
"that gets used for the Zope instance."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:158
msgid ""
"We use the [*tests]* extra when listing the testable eggs in the tests "
"section. This ensures that *collective.testcaselayer* is installed for the "
"testrunner."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:2
msgid "Creating a schema"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:4
msgid "**The starting point for our form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:6
msgid ""
"With the form package created and installed, we can create our form schema. "
"Whilst it is strictly not necessary yet, we will use the *Schema* interface "
"base from *plone.autoform.* This lets us use schema directives (as seen in "
"Dexterity content type schemata) to configure custom widgets, set up hidden "
"fields and so on. Later in this manual, we will cover in more detail how you"
" can perform these operations imperatively in Python code."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:14
msgid ""
"The example we’ll use for this form is a pizza ordering form. We’ll build on"
" this form over the coming sections, so if you look at the example source "
"code, you may find a few extra bits. However, the basics are simple enough."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:19
msgid ""
"We’ll create a module called *order.py* inside our package "
"(*example/dexterityforms/order.py)*, and add the following code to it:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:65
msgid ""
"For now, this form is quite simple. The list of pizzas is hard-coded, and we"
" can only choose one of each type. We will make it (a little) more realistic"
" later by adding a better vocabulary, creating a custom widget for the pizza"
" order part, and improving the look and feel with a custom template."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:71
msgid ""
"At the top, we have included a number of imports. Some of these pertain to "
"the form view, which will be described next. Other than that, we have simply"
" defined a schema that describes the form’s fields. The *title* and "
"*description* of each field are used as label and help text, respectively. "
"The *required* attribute can be set to *False* for optional fields. For a "
"full field and widgets reference, see the `Dexterity manual`_. (It is no "
"accident that the Dexterity content type fields and widgets are defined in "
"the same manner as those of a standalone form!)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:81
msgid ""
"Also notice how all the user-facing strings are wrapped in the message "
"factory to make them translatable. The message factory is imported as *\\_*,"
" which helps tools like *gettext* extract strings for translation. If you "
"are sure your form will never need to be translated, you can skip the "
"message factory in *interfaces.py* and use plain unicode strings, i.e. "
"*u“Postcode”* instead of *\\_(u“Postcode”)*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:88
msgid ""
"We are almost done with our most basic form. Before we can use the form, "
"however, we need to create a form view and define some actions (buttons). "
"That is the subject of the next section."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:2
msgid "Creating the form view"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:4
msgid "**Using our schema in a form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:6
msgid ""
"To render our form, we need to create a view that uses a *z3c.form* base "
"class. The view is registered like any other, either in ZCML or, as we will "
"show here, by using convention-over-configuration ala `five.grok`_. It is "
"then configured with the schema to use for form fields, the label (page "
"title) and description (lead-in text) to show, and actions to render as "
"buttons."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:13
msgid "Still in *order.py*, we add the following:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:72
msgid "Let’s go through this in some detail:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:74
msgid ""
"We derive our form view from one of the standard base classes in "
"*plone.directives.form*. The *SchemaForm* is a *plone.autoform*-based form "
"(so it configures the form fields from the schema automatically and takes "
"schema hints into account), without any of the standard actions that can be "
"found on more specialised base classes such as *SchemaAddForm* or "
"*SchemaEditForm*. It basically mirrors the *z3c.form.form.Form* base class."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:81
msgid ""
"We then use the standard *five.grok* view directives to register the view: "
"*grok.name()* gives it a friendly name (used as a path segment in the URL); "
"*grok.context()* sets the type of context where the form is available (here,"
" we make it available on the Plone site root, though any interface or class "
"may be passed; to make the form available on any context, use "
"*zope.interface.Interface* as the context); *grok.require()* specifies a "
"permission which the user must have to be able to view the form (here, we "
"use the standard *zope2.View* permission). See the views section in the "
"`five.grok manual`_ for more detail."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:91
msgid ""
"Next, we specify the schema via the *schema* attribute. This is the "
"equivalent of assigning the *fields* attribute to a *field.Fields()* "
"instance, as you may have seen in documentation for “plain” *z3c.form. (*In "
"fact, the \"*fields = field.Fields(ISchema)*\" pattern of working is "
"supported if you use *plone.directives.form.Form* as a base class instead of"
" *SchemaForm*, but you will then be unable to use form schema hints in the "
"schema itself - more on this later.)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:98
msgid ""
"We set *ignoreContext* to *True*. This tells *z3c.form* not to attempt to "
"read the current value of any of the form fields from the context. The "
"default behaviour is to attempt to adapt the context (the Plone site root in"
" this case) to the schema interface and read the schema attribute value from"
" this adapter when first populating the form. This makes sense for edit "
"forms and things like control panels, but not for a standalone form like "
"this."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:105
msgid ""
"We then set a *label* and *description* for the form. In the standard form "
"template, these are rendered as a page header and lead-in text, "
"respectively."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:108
msgid ""
"We override the *update()* method to set the *disable\\_border* request "
"variable. This hides the editable border when rendering the form. We then "
"call the base class version of *update()*. This is crucial for the form to "
"work! *update()* is a good place to perform any pre-work before the form "
"machinery kicks in (before calling the base class version) or post-"
"processing afterwards (after calling the base class version). See the "
"section on the form rendering lifecycle later in this manual for the gory "
"details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:116
msgid ""
"Finally, we define two actions, using the *@button.buttonAndHandler()* "
"decorator. Each action is rendered as a button (in order). The argument is a"
" (translated) string that will be used as a button label. The decorated "
"handler function will be called when the button is clicked."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:122
msgid ""
"For the purposes of this test, the actual work we do with the main handler "
"is relatively contrived. However, the patterns are generally applicable."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:126
msgid ""
"The second button (cancel) is the simpler of the two. It performs no "
"validation and simply redirects to the context’s default view, i.e. the "
"portal front page in this case."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:130
msgid ""
"The first button actually extracts the data from the form, using "
"*self.extractData()*. This returns a tuple of the form data, which has been "
"converted to the field’s underlying type by each widget (thus, the value "
"corresponding to the *Set* field contains a *set*) and any errors. If there "
"are errors, we abort, setting *self.status* to confer an error message at "
"the top of the page. Otherwise, we use the form data (here just printing the"
" output to the console - you need to run Zope in foreground mode to see "
"these messages), add a cookie-tracked status message (so that it can appear "
"on the next page) and redirect the user to the context’s default view. In "
"this case, that means the portal front page."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/index.rst:2
msgid "Creating a simple form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:2
msgid "Testing the form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:4
msgid "**Seeing the form in action**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:6
msgid ""
"The schema and (grokked) form view is all that’s needed to create the first "
"iteration of the form. We can now install our new package and test the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:10
msgid ""
"First, we make sure that we have run *bin/buildout* so that the new package "
"is available to the Zope instance script. We then start up Zope in "
"foreground mode:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:18
msgid ""
"Next, we create or go to a Plone site, and install the new *Example forms* "
"product via the new Plone site creation form or the Add-ons control panel. "
"This should also install the product called *Plone z3c.form support* (from "
"the *plone.app.z3cform* package) as a dependency."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:24
msgid ""
"We haven’t created any links to the form yet (though you could easily do so "
"in a content item or portlet by inserting a manually-entered URL), but the "
"form can be visited by going to the *@@order-pizza* view on the Plone site "
"root, e.g.:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:29
msgid "*http://localhost:8080/Plone/@@order-pizza*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:31
msgid "It should look something like this:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:37
msgid ""
"Try to fill in the form and use the two buttons. You should see the "
"validation (both on-the-fly and after submit if you ignore the on-the-fly "
"warnings), as well a message printed to the console if a valid form is "
"submitted when clicking the *Order* button."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:2
msgid "Actions (buttons)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:4
msgid "**Defining form buttons and executing code when they are clicked**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:6
msgid ""
"*z3c.form* defines a rich framework for defining, processing and executing "
"*actions*, an abstraction of the “outcome” of a form. Actions are not "
"necessarily related to form buttons, but for the vast majority of use cases,"
" we can think of forms buttons as a special type of widget that represents "
"an underlying action. Such “button actions” are usually the only type of "
"action we will ever use. Actions are nearly always associated with a handler"
" method, which will be called by the framework when a form was submitted in "
"response to a click of a particular button."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:15
msgid ""
"The usual way to define actions and buttons is to use the "
"*@button.buttonAndHandler()* decorator. This takes as a minimum the button "
"title as an argument. We have already seen two examples of this in our pizza"
" order form:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:30
msgid ""
"The name of the method is not particularly important, so long as it is "
"unique. The body of the handler function may react to the button however is "
"appropriate for the form’s use case. It may perform a redirect or update "
"form properties prior to re-rendering of the form. It should not return "
"anything. Use the *self.extractData()* helper to return a tuple of the "
"form’s submitted data and any errors, as shown in the preceding examples."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:38
msgid ""
"The *action* argument is the action that was executed. We normally ignore "
"this, but it may be introspected to find out more about the action. The "
"*isExecuted()* method can be used to determine if the corresponding button "
"was indeed clicked, and would normally be *True* within any action handler "
"that is called by the framework. The *title* attribute contains the button "
"title as shown to the user."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:46
msgid "Access keys"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:48
msgid ""
"To define a HTML access key for a button, use the *accessKey* keyword "
"argument:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:58
msgid "Conditional actions"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:60
msgid ""
"If a button should only be shown in some cases, we can use the *condition* "
"keyword argument, passing a function that takes as its only parameter the "
"form to which the button belongs. If this does not return *True*, the button"
" will be omitted from the form:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:85
msgid "Updating button properties"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:87
msgid ""
"As with regular widgets, it is sometimes useful to set properties on buttons"
" after they have been instantiated by *z3c.form*. One common requirement is "
"to add a CSS class to the button. The standard edit form "
"in*plone.directives.form* does this, for example, to add Plone’s standard "
"CSS classes. The usual approach is to override *updateActions()*, which is "
"called during the form update cycle:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:101
msgid ""
"Notice how we call the base class version first to ensure the actions have "
"been properly set up. Also bear in mind that if a button is conditional, it "
"may not be in *self.actions* at all."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/actions.rst:105
msgid ""
"Buttons are really just HTML input widgets, so you can set other properties "
"too, including attributes like onclick or ondblclick to install client-side "
"JavaScript event handlers."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:2
msgid "Fieldsets"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:4
msgid "**Breaking forms into multiple fieldsets**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:6
msgid ""
"*z3c.form* supports the grouping of form fields into what is known as "
"*groups*. A form class may mix in *z3c.form.group.GroupForm* to gain support"
" for groups, setting the *groups* variable to a list of *Group* subclasses. "
"The *Group* base class behaves much like the *Form* base class, but is used "
"only for grouping fields, and cannot have actions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:12
msgid ""
"In Plone, groups are represented as fieldsets. The standard templates make "
"these look like dynamic tabs, much like those we can find in the edit forms "
"for most Plone content. For this reason, *plone.supermodel* provides a "
"directive called *model.fieldset()*, which can be used to create fieldsets."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:20
msgid ""
"The *z3c.form* *Group* idiom is still supported, and can be mixed with the "
"more declarative *model.fieldset()* approach. However, the latter is usually"
" easier to use."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:25
msgid ""
"To illustrate fieldsets, let’s give customers the option to leave feedback "
"on our pizza ordering form. To keep our main form short, we will put this in"
" a separate fieldset. Note that there is still only one set of submit "
"buttons, i.e. all fieldsets are submitted at once. This is purely for "
"aesthetic effect."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:106
msgid ""
"Since this approach uses form schema hints, the schema must derive from "
"*model.Schema* and the form base class must extend "
"*plone.autoform.AutoExtensibleForm*. In our example, we are using "
"*SchemaForm*, a subclass of AutoExtensibleForm."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:110
msgid ""
"Above, we have declared a single fieldset, and listed the fields within it. "
"Those fields not explicitly associated with a fieldset end up in the "
"“default” fieldset. We also set a fieldset name and label. The label is "
"optional."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/fieldsets.rst:115
msgid ""
"It is possible to use the same fieldset name multiple times in the same "
"form. This is often the case when we use the *additional\\_schemata* "
"property to set secondary schemata for our form. In this case, the *label* "
"from the first *fieldset* directive encountered will be used."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/index.rst:2
msgid "Customising form behaviour"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:2
msgid "Validation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:4
msgid "**How to validate a form prior to processing**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:6
msgid ""
"All forms apply some form of validation. In *z3c.form,* validators can be "
"executed in action handlers. If the validation fails, the action handler can"
" choose how to proceed. For “submit” type buttons, that typically means "
"showing error messages next to the relevant form fields. For “cancel” type "
"buttons, the validation is normally skipped entirely."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:12
msgid ""
"Form validation takes two forms: field-level validation, pertaining to the "
"value of an individual field, and form-level validation, pertaining to the "
"form as a whole. Form-level validation is less common, but can be useful if "
"fields have complex inter-dependencies."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:18
msgid "Field-level validation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:20
msgid ""
"The simplest field-level validation is managed by the fields themselves. All"
" fields support a *required* attribute, defaulting to *True*. The default "
"field validator will return an error if a required field is not filled in. "
"Some fields also support more specific properties that affect validation:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:26
msgid ""
"Text fields like *Bytes, BytesLine, ASCII, ASCIILine, Text*and *TextLine*, "
"as well as sequence fields like *Tuple, List, Set,**Frozenset* and *Dict* "
"all support two properties, *min\\_length* and *max\\_length*, which can be "
"set to control the minimum and maximum allowable length of the field’s "
"value."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:31
msgid ""
"Numeric fields like *Int, Float* and *Decimal*, as well as temporal fields "
"like *Date*, *Datetime* and *Timedelta* all support two properties, *min* "
"and *max*, setting minimum and maximum (inclusive) allowable values. In this"
" case, the min/max value needs to be of the same type as field, so for an "
"*Int* field, the value of this property is an integer, whereas for a "
"*Datetime* field, it is a Python *datetime* object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:38
msgid ""
"A *Choice* field only allows values in a particular vocabulary. We will "
"cover vocabularies in the next section."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:42
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:37
msgid "Constraints"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:44
msgid ""
"If you require more specific validation, and you have control over the "
"schema, you can specify a *constraint* function. This will be passed the "
"submitted value (which is converted to a value appropriate for the field, so"
" that e.g. a *List* field is passed a list). If the value is acceptable, the"
" function should return *True*. If not, it should raise a "
"*zope.schema.Invalid* exception or a derivative (returning *False* will also"
" result in an error, but one without a meaningful error message)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:52
msgid ""
"Here is the order form schema again, this time with a constraint function:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:106
msgid ""
"Notice how the *postcodeConstraint()*function is passed a value (a unicode "
"string in this case, since the field is a *TextLine*), which we validate. If"
" we consider the value to be invalid, we raise an *Invalid* exception, with "
"the error message passed as the exception argument. Otherwise, we return "
"*True*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:113
msgid "Field widget validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:115
msgid ""
"Constraints are relatively easy to write, but they have two potential "
"drawbacks: First of all, they require that we change the underlying "
"interface. This is no problem if the interface exists only for the form, but"
" could be a problem if it is used in other contexts as well. Second, if we "
"want to re-use a validator for multiple forms, we would need to modify "
"multiple schemata."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:122
msgid ""
"z3c.form’s field widget validators address these shortcomings. These are "
"specific to the form; by contrast, constraints are a feature of "
"*zope.interface* interfaces and apply in other scenarios where interfaces "
"are used as well. *plone.directives.form* provides a convenience decorator "
"for creating simple field validators."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:128
#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:273
msgid "For example:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:164
msgid ""
"The *@form.validator()* decorator registers a validator adapter. When the "
"validation is invoked, the decorated function will be called with the "
"field’s value as an argument and given an opportunity to raise a validation "
"error, much like the constraint above. Again like the constraint, the "
"default validator is called first, so things like the required flag and "
"indeed any custom constraint are processed first."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:171
msgid ""
"The *@form.validator()* decorator can take keyword arguments to make the "
"validator more specific or more generic. The valid values are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:175
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:157
#: ../../reference_manuals/old/portlets/architecture.rst:132
msgid "context"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:175
msgid ""
"The form’s context, typically an interface. This allows a validator to be "
"invoked only on a particular type of content object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:178
msgid "The form’s request. Normally, this is used to specify a browser layer."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:182
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:174
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:196
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:760
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1072
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:176
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:29
#: ../../reference_manuals/old/portlets/architecture.rst:139
msgid "view"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:181
msgid ""
"The form view itself. This allows a validator to be invoked for a particular"
" type of form. As with the other options, we can pass either a class or an "
"interface."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:185
#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:82
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:63
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:52
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:430
msgid "field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:185
msgid ""
"A field instance, as illustrated above, or a field *type*, e.g. an interface"
" like *zope.schema.IInt*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:188
#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:78
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:144
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:217
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1081
msgid "widget"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:188
msgid "The widget being used for the field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:190
msgid ""
"It is important to realise that if we don’t specify the *field* "
"discriminator, or if we pass a field type instead of an instance, the "
"validator will be used for all fields in the form (of the given type). Also "
"note how we had to define the constraint function before the form schema "
"interface (since it was referenced in the schema itself), but we define this"
" validator after the schema and form, since here we need the interface to "
"have been defined before we use it."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:199
msgid "Advanced field widget validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:201
msgid ""
"z3c.form validators are in fact a little more powerful than what we have "
"seen above. A validator is registered as a multi-adapter providing "
"*z3c.form.interfaces.IValidator* and adapting the objects *(context, "
"request, view, field, widget)*, corresponding to the discriminants seen "
"above. You may wish to register an adapter directly instead of using the "
"*@form.validator()* decorator if you:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:208
msgid ""
"want to skip the default validation of field properties like *required* or "
"*min*/*max*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:210
msgid ""
"need to access the context, request, form, field and/or widget instances to "
"validate the value"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:213
msgid ""
"We won’t show a full example here, but as an outline, consider the following"
" code snippet:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:236
msgid ""
"This registers an adapter, extending the SimpleFieldValidator base class, "
"and calling the superclass version of validate() to gain the default "
"validation logic. In the validate() method, we can use variables like "
"self.context, self.request, self.view, self.field and self.widget to access "
"the adapted objects. The WidgetValidatorDiscriminators class takes care of "
"preparing the adapter discriminators. It takes the same keyword arguments as"
" @form.validator() seen above."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:245
msgid "Form-level validation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:247
msgid ""
"Form level validation is less common than field-level validation, but is "
"useful if your fields are inter-dependent in any ways. As with field-level "
"validation, there are two options:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:251
msgid ""
"Invariants are specified at the interface level. As such, they are analogous"
" to constraints."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:253
msgid ""
"Widget manager validators are standalone adapters that are specific to "
"*z3c.form*. As such, they are analogous to field widget validators."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:258
msgid "Invariants"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:260
msgid ""
"Invariants work much like constraints, in that they are called during the "
"form validation cycle and may raise *Invalid* exceptions to indicate a "
"validation problem. Because they are not tied to fields specifically, an "
"error resulting from an invariant check is displayed at the top of the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:266
msgid ""
"Invariants are written as functions inside the interface definition, "
"decorated with the *zope.interface.invariant* decorator. They are passed a "
"data object that provides the schema interface. In the case of a *z3c.form* "
"form, this is actually a special object that provides the values submitted "
"in the request being validated, rather than an actual persistent object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:327
msgid ""
"Here we have defined a single invariant, although there is no limit to the "
"number of invariants that you can use."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:331
msgid "Widget manager validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:333
msgid ""
"Invariants have most of the same benefits and draw-backs as constraints: "
"they are easy to write, but require modifications to the schema interface, "
"and cannot be generalised beyond the interface. Not surprisingly therefore, "
"*z3c.form* provides another option, in the form of a widget manager "
"validator. This is a multi-adapter for *(context, request, view, schema, "
"widget manager*) providing *z3c.form.interfaces.IManagerValidator*. The "
"default simply checks invariants, although you can register your own "
"override."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:342
msgid ""
"That said, overriding the widget manager validator is not particularly "
"common, because if you need full-form validation and you don’t want to use "
"invariants, it is normally easier to place validation in the action handler,"
" as we will see next."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:348
msgid "Invoking validators"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:350
msgid ""
"Unlike some of the earlier form libraries, *z3c.form* does not automatically"
" invoke validators on every form submit. This is actually a good thing, "
"because it makes it much easier to decide when validation makes sense (e.g. "
"there is no need to validate a “cancel” button)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:355
msgid ""
"We have already seen the most common pattern for invoking validation in our "
"handler for the “order” button:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:373
msgid ""
"Notice how we call *extractData()*, which returns both a dictionary of the "
"submitted data (for valid fields, converted to the underlying field value "
"type) and a dictionary of errors (which is empty if all fields are valid)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:379
msgid "Validating in action handlers"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:381
msgid ""
"Sometimes, it may be useful to perform additional validation in the action "
"handler itself. We can inspect the *data* dictionary, as well as any other "
"aspect of the environment (like *self.context*, the context content object, "
"or *self.request*, the request), to perform validation."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:386
msgid "To signal an error, we use one of two exception types:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:388
msgid ""
"*z3c.form.interfaces.ActionExecutionError*, for generic, form-wide errors"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:390
msgid ""
"*z3c.form.interfaces.WidgetActionExecutionError*, for field/widget-specific "
"errors"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:393
msgid ""
"In both cases, these exceptions wrap an *Invalid* exception. Let’s add two "
"examples to our action handler."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/validation.rst:437
msgid ""
"Notice how we perform the check after the *extractData()* call, but before "
"the possible premature return in case of validation errors. This is to "
"ensure all relevant errors are displayed to the user. Also note that whilst "
"the invariant is passed an object providing the schema interface, the *data*"
" dictionary is just that - a dictionary. Hence, we use “dot notation” "
"(*data.address1*) to access the value of a field in the invariant, but "
"“index notation” (*data[‘address1’]*)**to access the value of a field in the"
" handler."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:2
msgid "Vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:4
msgid "**Static and dynamic lists of valid values**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:6
msgid ""
"The term “vocabulary” here refers to a list of values that are allowable by "
"a given field. In most cases, that implies a field using a selection widget,"
" like a multi-select list box or a drop-down."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:10
msgid ""
"Selection fields use the *Choice* field type. To allow the user to select a "
"single value, use a *Choice* field directly:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:21
msgid ""
"For a multi-select field, use a *List*, *Tuple, Set* or *Frozenset* with a "
"*Choice* as the *value\\_type*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:35
msgid ""
"The *Choice* field must be passed one of the following arguments, specifying"
" its vocabulary:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:38
msgid "*values* can be used to give a list of static values"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:39
msgid ""
"*source* can be used to refer to an *IContextSourceBinder* or *ISource* "
"instance"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:41
msgid ""
"*vocabulary* can be used to refer to an *IVocabulary* instance or (more "
"commonly) a string giving the name of an *IVocabularyFactory* named utility."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:45
msgid ""
"We’ll now explore various ways in which we can improve on the *orderItems* "
"list."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:49
msgid "Static vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:51
msgid ""
"Up until now, we have been using a static vocabulary, passing the list of "
"allowable values as the *values* parameters to the *Choice* field. This is "
"simple, but has a few draw-backs:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:55
msgid "If the vocabulary changes, we have to change the interface code."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:56
msgid ""
"There is no way to separate the label that the user sees in the selection "
"widget from the value that is extracted."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:60
msgid "Dynamic vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:62
msgid ""
"To implement a more dynamic vocabulary, we can use a source. Before we do "
"that, though, let’s consider where our data will come from."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:65
msgid ""
"We want to make the “order items” list more dynamic, and allow the list of "
"available pizza types to be managed through the web. There are various ways "
"to do this, including modelling pizzas as content items and creating a "
"source that performs a catalog query to find them all. To manage a simple "
"list, however, we can use *plone.app.registry* and install the list with our"
" product’s extension profile. An administrator could then use the registry "
"control panel to change the list. We won’t go into *plone.app.registry* in "
"detail here, but you can read its `documentation`_ to get a full "
"understanding of what it is and how it works."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:76
msgid ""
"First, we need to add *plone.app.registry* as a dependency in *setup.py*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:88
msgid ""
"We also want to configure it when our product is installed in Plone, so we "
"edit *profiles/default/metadata.xml* as follows:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:101
msgid "Next, we create a registry.xml containing the following:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:121
msgid "After re-running buildout and (re-)installing our product in the"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:124
#: ../../reference_manuals/old/buildout/packages.rst:10
msgid "Terminology"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:126
msgid ""
"When working with dynamic vocabularies, we come across some terminology that"
" is worth explaining:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:129
msgid ""
"A *term* is an entry in the vocabulary. The term has a value. Most terms are"
" *tokenised* terms which also have a token, and some terms are *titled*, "
"meaning they have a title that is different to the token."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:133
msgid ""
"The *token* must be an ASCII string. It is the value passed with the request"
" when the form is submitted. A token must uniquely identify a term."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:136
msgid ""
"The *value* is the actual value stored on the object. This is not passed to "
"the browser or used in the form. The value is often a unicode string, but "
"can be any type of object."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:139
msgid ""
"The *title* is a unicode string or translatable message. It is used in the "
"form and displayed to the user."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:143
msgid "One-off sources with a context source binder"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:145
msgid ""
"We can make a one-off dynamic vocabulary using a context source binder. This"
" is simply a callable (usually a function or an object with a "
"*\\_\\_call\\_\\_* method) that provides the *IContextSourceBinder* "
"interface and takes a *context* parameter. The *context* argument is the "
"context of the form view. The callable should return a vocabulary, which is "
"most easily achieved by using the *SimpleVocabulary* class from "
"*zope.schema*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:153
msgid "Here is an example that returns our pizza types:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:186
msgid ""
"Here, we have defined a function acting as the*IContextSourceBinder*, as "
"specified via the @*grok.provider()* decorator. This looks up the registry "
"and looks for the record we created with *registry.xml* above (remember to "
"re-install the product in the Add-on control panel or the "
"*portal\\_quickinstaller* tool if you modify this file). We then use the "
"*SimpleVocabulary* helper class to create the actual vocabulary."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:193
msgid ""
"The *SimpleVocabulary* class additionally contains two class methods that "
"can be used to create vocabularies from lists:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:196
msgid ""
"*fromValues()* takes a simple list of values and returns a tokenised "
"vocabulary where the values are the items in the list, and the tokens are "
"created by calling *str()* on the values."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:199
msgid ""
"*fromItems()* takes a list of *(token, value)* tuples and creates a "
"tokenised vocabulary with the token and value specified."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:202
msgid ""
"We can also instantiate a *SimpleVocabulary* directly and pass a list of "
"terms in the initialiser as we have done above. The *createTerm()* class "
"method can be used to create a term from a *value*, *token* and *title*. "
"Only the value is required."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:207
msgid ""
"To use this context source binder, we use the *source* argument to the "
"*Choice* constructor:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:222
msgid "Parameterised sources"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:224
msgid ""
"Sometimes, it is useful to parameterise the source. For example, we could "
"generalise the pizza source to work with any registry value containing a "
"sequence, by passing the registry key as an argument. This would allow us to"
" create many similar vocabularies and call upon them in code easily."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:230
msgid ""
"This degree of generalisation is probably overkill for our use case, but to "
"illustrate the point, we’ll outline the solution below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:233
msgid ""
"First, we turn our *IContextSourceBinder* into a class that is initialised "
"with the registry key"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:254
msgid ""
"Notice how in our first implementation, the function *provided* the "
"*IContextSourceBinder*interface, but the class here *implements* it. This is"
" because the function was the context source binder callable itself. "
"Conversely, the class is a factory that creates *IContextSourceBinder* "
"objects, which in turn are callable."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:260
msgid ""
"Again, the source is set using the *source* argument to the *Choice* "
"constructor."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:270
msgid ""
"When the schema is initialised on startup, the a *RegistrySource* object is "
"instantiated, storing the desired registry key in an instance variable. Each"
" time the vocabulary is needed, this object will be called (i.e. the "
"*\\_\\_call\\_\\_()* method is invoked) with the context as an argument, and"
" is expected to return an appropriate vocabulary."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:277
msgid "Named vocabularies"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:279
msgid ""
"Context source binders are great for simple dynamic vocabularies. They are "
"also re-usable, since we can import the source from a single location and "
"use it in multiple instances. However, we may want to provide an additional "
"level of decoupling, by locating a vocabulary by name, not necessarily "
"caring where or how it is implemented."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:285
msgid ""
"Named vocabularies are similar to context source binders, but are components"
" registered as named utilities, referenced in the schema by name only. This "
"allows local overrides of the vocabulary via the Component Architecture, and"
" makes it easier to distribute vocabularies in third party packages."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:292
msgid ""
"Named vocabularies cannot be parameterised in the way as we did with the "
"context source binder above, since they are looked up by name only."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:296
msgid ""
"We can turn our first dynamic vocabulary into a named vocabulary by creating"
" a named utility providing *IVocabularyFactory*, like so:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:327
msgid ""
"By convention, the vocabulary name is prefixed with the package name, to "
"ensure uniqueness."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:330
msgid ""
"We can make use of this vocabulary in any schema by passing its name to the "
"*vocabulary* argument of the *Choice* field constructor:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/vocabularies.rst:340
msgid ""
"As you might expect, there are a number of standard vocabularies that come "
"with Plone and third party packages, most of which are named vocabularies. "
"Many of these can be found in the *plone.app.vocabularies* package, and add-"
"ons such as *plone.principalsource*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:2
#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:3
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:118
#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:44
msgid "Widgets"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:4
msgid "**Changing the widget used to render a field**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:6
msgid ""
"Like most form libraries, *z3c.form* separates a field – a representation of"
" the value being provided by the form – from its widget – a UI component "
"that renders the field in the form. In most cases, the widget is rendered as"
" a simple HTML *<input />* element, although more complex widgets may use "
"more complex markup."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:12
msgid ""
"The simplest widgets in *z3c.form* are field-agnostic. However, we nearly "
"always work with *field widgets*, which make use of field attributes (e.g. "
"constraints or default values) and optionally the current value of the field"
" (in edit forms) during form rendering."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:17
msgid ""
"Most of the time, we don’t worry too much about widgets: each of the "
"standard fields has a default field widget, which is normally sufficient. If"
" we need to, however, we can override the widget for a given field with a "
"new one."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:23
msgid "Selecting a custom widget using form directives"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:25
msgid ""
"*plone.directives.form* provides a convenient way to specify a custom widget"
" for a field, using the *form.widget()* directive:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:51
msgid ""
"The argument can be either a field widget factory, as shown here, or the "
"full dotted name to one (*plone.app.z3cform.wysiwyg.WysiwygFieldWidget* in "
"this case)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:56
msgid "Updating widget settings"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:58
msgid ""
"All widgets expose properties that control how they are rendered. You can "
"set these properties by passing them to the widget directive:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:74
msgid ""
"Support for specifying widget properties was added in plone.autoform 1.4."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:76
msgid ""
"Some of the more useful properties are shown below. These generally apply to"
" the widget’s *<input />* element."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:79
msgid "*klass*, a string, can be set to a CSS class."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:80
msgid "*style*, a string, can be set to a CSS style string"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:81
msgid ""
"*title*, a string, can be used to set the HTML attribute with the same name"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:83
msgid ""
"*onclick*, *ondblclick*, etc can be used to associate JavaScript code with "
"the corresponding events"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:85
msgid "*disabled* can be set to True to disable input into the field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:87
msgid ""
"Other widgets also have attributes that correspond to the HTML elements they"
" render. For example, the default widget for a *Text* field renders a "
"*<textarea />* , and has attributes like *rows* and *cols*. For a "
"*TextLine*, the widget renders an *<input type=“text” />*, which supports a "
"*size* attribute, among others."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:93
msgid ""
"Take a look at *z3c.form*’s *browser/interfaces.py* for a full list of "
"attributes that are used."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:98
msgid "Supplying a widget factory"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:100
msgid ""
"Later in this manual, we will learn how to set up the *fields* attribute of "
"a form manually, as is done in “plain” *z3c.form*, instead of using the "
"*schema* shortcut that is provided by *plone.autoform*. If you are using "
"this style of configuration (or simply looking at the basic *z3c.form* "
"documentation), the syntax for setting a widget factory is:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:117
msgid "Widget reference"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:119
msgid ""
"You can find the default widgets in the *browser* package in *z3c.form*. The"
" *z3c.form* `documentation`_ contains a `listing`_ of all the default "
"widgets that shows the HTML output of each."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-behaviour/widgets.rst:123
msgid ""
"In addition, the Dexterity manual contains `an overview of common custom "
"widgets "
"<http://developer.plone.org/reference_manuals/external/plone.app.dexterity/reference/widgets.html>`_."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:2
msgid "Error snippets"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:4
msgid "**Customising error messages**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:6
msgid ""
"When creating custom validators, as shown earlier in this manual, it is easy"
" to tailor an error message. However, *zope.schema* and *z3c.form* already "
"perform a fair amount of validation for us, which results in generic error "
"messages. For example, if a required field is not completed, a rather bland "
"error message (“Required input is missing”) will be shown. Sometimes, we may"
" want to change these messages."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:13
msgid ""
"*z3c.form* allows error messages to be customised at various levels of "
"detail. For example, it is possible to register a custom "
"*z3c.form.interfaces.IErrorViewSnippet* adapter, which behaves like a mini-"
"view and can output arbitrary HTML. However, in most cases, we only want to "
"update the output text string. For this, we use what’s known as a “value "
"adapter”. This is simply an adapter which *z3c.form*’s default "
"*IErrorViewSnippet* implementations will look up to determine which message "
"to show."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:22
msgid ""
"The easiest way to create an error message value adapter is to use the "
"*@form.error\\_message()* decorator from *plone.directives.form*. This "
"decorator should be applied to a function that takes as its only argument "
"the (invalid) value that was submitted, and return a unicode string or "
"message indicating the error. To illustrate this, we will add a new function"
" to *order.py*, just after the interface definition:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:65
msgid ""
"As with the *@form.validator()* decorator, the *@form.error\\_message()* "
"validator takes a number of keyword arguments, used to control where the "
"error message is applied. The allowable arguments are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:72
msgid "error"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:70
msgid ""
"The type of error, which is normally represented by an exception class. The "
"most general type will usually be a "
"*zope.schema.interfaces.ValidationError*. See below for a list of other "
"common exception types."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:75
msgid ""
"The current request. This is normally used to supply a browser layer marker "
"interface. This is a good way to ensure a general error message is only in "
"force when our product is installed."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:79
msgid "The widget which was used to render the field."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:81
msgid ""
"The field to which the error message applies. If this is omitted, the "
"message would apply to all fields on the form (provided *form* is supplied) "
"of the given error (provided *error* is applied)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:87
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:168
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:190
msgid "form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:85
msgid ""
"The form class. We can use this either to apply a single message to a given "
"error across multiple fields in one form (in which case *field* would be "
"omitted), or to customise an error message for a particular form only if a "
"schema is used in more than one form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:90
msgid "content"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:90
msgid "The content item (context) on which the form is being rendered."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:93
msgid ""
"In almost all cases, you will want to supply both *field* and *error* at a "
"minimum, although if you have multiple fields that may raise a particular "
"error, and you want to create a message for all instances of that error, you"
" can omit *field* and use *form* instead. If you supply just *error*, the "
"validator will apply to all instances of that error, on all forms, site-"
"wide, which is probably not a good idea if you intend your code to be-"
"usable. At the very least, you should use the *request* field to specify a "
"browser layer in this case, and install that layer with *browserlayer.xml* "
"in your product’s installation profile."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:103
msgid ""
"The exception types which may be used for the *error* discriminator are "
"field-specific. The standard fields as defined in *zope.schema* use the "
"following exceptions, all of which can be imported from "
"*zope.schema.interfaces*:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:108
msgid ""
"*RequiredMissing*, used when a required field is submitted without a value"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:110
msgid "*WrongType*, used when a field is passed a value of an invalid type"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:111
msgid ""
"*TooBig* and *TooSmall*, used when a value is outside the *min* and/or *max*"
" range specified for ordered fields (e.g. numeric or date fields)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:114
msgid ""
"*TooLong* and *TooShort*, used when a value is outside the *min\\_length* "
"and/or *max\\_length* range specified for length-aware fields (e.g. text or "
"sequence fields)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:117
msgid ""
"*InvalidValue*, used when a value is invalid, e.g. a non-ASCII character "
"passed to an ASCII field"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:119
msgid ""
"*ConstraintNotSatisfied*, used when a *constraint* method returns *False*"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:121
msgid ""
"*WrongContainedType*, used if an object of an invalid type is added to a "
"sequence (i.e. the type does not conform to the field’s *value\\_type*)"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:124
msgid "*NotUnique*, used if a uniqueness constraint is violated"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:125
msgid "*InvalidURI*, used for *URI* fields if the value is not a valid URI"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:126
msgid "*InvalidId*, used for *Id* fields if the value is not a valid id"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/error-snippets.rst:127
msgid ""
"*InvalidDottedName*, used for *DottedName* fields if the value is not a "
"valid dotted name"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/index.rst:2
msgid "Customising form presentation"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:2
msgid "Layout templates"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:4
msgid "**Creating a custom layout for our form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:6
msgid ""
"So far, we have relied on Plone (in fact, *plone.app.z3cform*) to supply a "
"default template for our forms. This uses the default Plone form markup, "
"which is consistent with that used in other forms in Plone. For many forms, "
"this is all we need. However, it is sometimes useful to create a custom "
"template."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:12
msgid ""
"Custom templates are normally needed for one of two reasons: Either, to "
"insert some additional markup around or inside the form itself; or to "
"radically change the form markup itself. The former is more common, since "
"changing the form look-and-feel is normally done better with CSS. For that "
"reason, *plone.app.z3cform* registers a view called *@@ploneform-macros*, "
"which provides useful macros for rendering forms using the standard markup. "
"We will illustrate how to use this below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:20
msgid ""
"The easiest way to associate a template with a form is to use the default "
"grokked template association. Our form is called *OrderForm* and lives a "
"module called *order.py*, so the grokker will look for a template in "
"*order\\_templates/orderform.pt*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:26
msgid ""
"With the exception of *DisplayForms*, there is always a default template for"
" forms extending the grokked base classes in *plone.directives.form*. "
"Therefore, the template is optional. Unlike *grok.View* views, there is no "
"need to override *render()* if the template is omitted."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:31
msgid ""
"As an example, let’s create such a template and add some content before the "
"form tag:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:57
msgid ""
"Notice how the *@@ploneform-macros* view does most of the work. This "
"contains a number of useful macros:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:60
msgid "*form* is a full page form, including the label"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:61
msgid ""
"*titlelessform* includes the form *status* at the top, the *<form />* "
"element, and the contents of the *fields* and *actions* macros. It also "
"defines three slots: *formtop*, just inside the *<form>* opening tag; "
"*formbottom*, just before the *</form>* closing tag; and *beforeactions*, "
"just before the form actions (buttons) are output."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:66
msgid ""
"*fields* iterates over all widgets in the form and renders each, using the "
"contents of the *field* macro."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:68
msgid ""
"*field* renders a single field. It expects the variable *widget* to be "
"defined in the TAL scope, referring to a *z3c.form* widget instance. It will"
" output an error message if there is a field validation error, a label, a "
"marker to say whether the field is required, the field description, and the "
"widget itself (normally just an *<input />* element)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:74
msgid ""
"*actions* renders all actions on the form. This normally results in a row of"
" *<input type=“submit” … />* elements."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:78
msgid ""
"If you require more control, you can always create your form from scratch. "
"Take a look at *macros.pt* in *plone.app.z3cform* for inspiration."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:82
msgid ""
"If you don’t require tabbed fieldsets or “inline” field validation, the "
"template can be simplified substantially. See *macros.pt* in *plone.z3cform*"
" for a cleaner example."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:86
msgid "The most important variables used in the template are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:88
msgid "*view.id*, a unique id for the form"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:89
msgid "*view.enctype*, the form’s *enctype* attribute"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:90
msgid "*view.label*, the form’s title"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:91
msgid "*view.description*, the forms’ description"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:92
msgid "*view.status*, a status message that is often set in action handlers."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:93
msgid ""
"*view.groups,* a list of fieldsets (groups), as represented by *Group* "
"instances."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:95
msgid ""
"*view.widgets*, which contains all widgets. *view.widgets.errors* contains a"
" list of error snippet views. Otherwise, *widgets* behaves like an ordered "
"dictionary. Iterating over its *values()* will yield all widgets in order. "
"The widgets have been updated, and can be output using their *render()* "
"method."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/customising-form-presentation/layout-templates.rst:100
msgid ""
"*view.actions,* contains an ordered dictionary of actions (buttons). "
"Iterating over its *values()* will yield all actions in order. The actions "
"have been updated, and can be output using their *render()* method."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:2
msgid "Add forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:4
msgid "**Forms to create new content objects**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:6
msgid ""
"An add form, as its name implies, is used to add content to a container. Add"
" forms are usually registered as views on a container. For generic CMF or "
"Plone content, the *IFolderish* interface is normally a good candidate. The "
"fields in an add form usually represent the fields in the type that is being"
" added."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:13
msgid ""
"If you are using Dexterity or Archetypes, these frameworks have their own "
"add form factories, which you probably want to use instead of the more basic"
" version described here."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:17
msgid ""
"Add forms derive from *z3c.form.form.AddForm*, which is extended by "
"*plone.directives.form.AddForm* and *plone.directives.form.SchemaAddForm*, "
"adding grok support and standard Plone semantics."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:22
msgid ""
"To use an add form, you must implement two methods - *create()* and *add()*."
" The form then takes care of emitting the proper events and directing the "
"user to the newly added content item. You can also set the "
"*immediate\\_view* property to the URL of a page to visit after adding the "
"content item."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:62
msgid ""
"*create()* is called after validation, and is passed a dictionary of "
"marshalled form fields. It should construct and return the object being "
"added. That object is then passed to *add()* (after an object-created event "
"has been fired), which should add it, normally to *self.context* (the "
"container)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/add-forms.rst:68
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:53
msgid "A non-schema version would look like this:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:2
msgid "Base forms and schema forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:4
msgid "**Understanding the two types of forms work with in this manual**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:6
msgid ""
"*z3c.form* comes with a few base classes for forms, covering common use "
"cases including page forms, edit forms, add forms and display forms. In this"
" manual, we are actually using some intermediary base classes from "
"*plone.directives.form*, which serve two purposes: they allow the forms to "
"be “grokked”, for example to associate a page template or register the form "
"as a view using directives like *grok.context()* and *grok.name()*; some of "
"them also provide a hook for *schema forms*, which use form hints supplied "
"in directives (like *form.widget()* as we saw in the previous section) that "
"are interpreted by *plone.autoform* to configure the form’s fields. Whilst "
"we can do everything in code using the plain *z3c.form* API, many people may"
" prefer the more declarative style of configuration that comes with "
"*plone.autoform* and *plone.directives.form*, because it involves less code "
"and keeps the field-specific form configuration closer to the field "
"definitions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:21
msgid ""
"Over the next several sections, we will discuss the various form base "
"classes. A brief overview follows."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:34
msgid "**z3c.form.form.BaseForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:25
msgid ""
"This base class is not to be used directly, but is the ancestor of all "
"*z3c.form* forms. It defines attributes like *label* (the form’s title), "
"*mode* (the default mode for the form’s fields, usually *‘input’* in regular"
" forms and *‘display’* in display forms), *ignoreContext*, *ignoreRequest* "
"(see below) and *ignoreReadonly* (which omits readonly fields from the "
"form). It also defines the basic *update()* and *render()* methods that are "
"the basis of the form rendering cycle, which we will explain towards the end"
" of this manual, and the *getContent()* helper method which can be used to "
"tell the form about an alternative context - see below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:38
msgid "**plone.directives.form.Form (extending z3c.form.form.Form)**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:37
msgid ""
"A basic full-page form. It supports actions (buttons), and will by default "
"read field values from the request (unless *ignoreRequest* is *True*) or the"
" context (unless *ignoreContext* is *True*)."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:43
msgid "**plone.directives.form.SchemaForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:41
msgid ""
"This is identical to *Form*, except that it will construct its fields "
"*plone.autoform* schema hints. The *schema* attribute is required, and must "
"be a schema interface. The *additional\\_schemata* attribute may be set to a"
" tuple of additional schemata - see below."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:48
msgid "**plone.directives.form.AddForm (extending z3c.form.form.AddForm)**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:46
msgid ""
"A basic content add form with two actions - save and cancel. This implements"
" default Plone semantics for adding content. Note that if you are using "
"Dexterity, you should use the Dexterity add form instead. See the Dexterity "
"documentation for details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:50
msgid "**plone.directives.form.SchemaAddForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:51
msgid "The schema form equivalent of *AddForm*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:59
msgid "**plone.directives.form.EditForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:53
msgid ""
"A basic edit form with two actions - save and cancel. This operates on the "
"context returned by the *getContent()* helper method. By default, that’s the"
" context of the form view (*self.context*), but we can override "
"*getContent()* to operate on something else. In particular, it is possible "
"to operate on a dictionary. See the section on edit forms shortly. Note that"
" if you are using Dexterity, you should use the Dexterity edit form instead."
" See the Dexterity documentation for details."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:61
msgid "**plone.directives.form.SchemaEditForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:62
msgid "The schema form equivalent of *EditForm*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:69
msgid "**plone.directives.dexterity.DisplayForm**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:64
msgid ""
"This is a display form view based on the *WidgetsView* base class from "
"*plone.autoform*. You can use this much like *grok.View*, except that it "
"must be initialised with a *schema*, and optionally a tuple of "
"*additional\\_schemata*. There are several helper variables set during the "
"*update()* cycle which provide easy access to the form’s widgets in display "
"mode."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:72
msgid "Context and request"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:74
msgid ""
"When a form is first rendered, it will attempt to fill fields based on the "
"following rules:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:77
msgid ""
"If *ignoreRequest* is *False* (as is the default for all forms bar display "
"forms), and a value corresponding to the field is in the request, this will "
"be used. This normally means that the form was submitted, but that some "
"validation failed, sending the user back to the form to correct their "
"mistake."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:82
msgid ""
"If no request value was found and *ignoreContext* is *False* (as is the "
"default for all forms bar add forms), the form will look for an associated "
"interface for each widget. This is normally the schema interface of the "
"field that the widget is rendering. It will then attempt to adapt the "
"context to that interface (if the context provides the interface directly, "
"as is often the case for edit and display forms, the context is used as-is)."
" If no such adapter exists, form setup will fail. If this happens, you can "
"either set *ignoreContext = True* (which is normally appropriate for free-"
"standing forms like the examples earlier in this manual), supply an adapter "
"(which is normally appropriate for forms that edit some aspect of the "
"context), or override *getContent()* to return a content that is adaptable "
"to the schema interface."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:95
msgid ""
"If no request or context value was found and the field has a default value, "
"this will be used."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:99
msgid "Primary and additional schemata in schema forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:101
msgid ""
"When using a schema form, it is possible to set two form properties "
"supplying schemata for the form:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:104
msgid ""
"*schema* is required for all schema forms, and must point to a schema "
"interface. This is known as the default or primary schema for the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:107
msgid ""
"*additional\\_schemata* is optional, and can be set to a tuple or list of "
"schema interfaces. These will also be included in the form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:111
msgid ""
"If you want to make the schema dynamic, you can implement these as read-only"
" properties. this is how Dexterity’s add and edit forms work, for example - "
"they look up the primary schema from the type information in "
"*portal\\_types*, and additional schemata from behaviours."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:116
msgid ""
"Later in this manual, we will learn about creating tabbed fieldsets, also "
"known as groups. The schema forms support a property *autoGroups* which "
"default to *False*. When set to *True*, the primary schema will be used as "
"the primary fieldset, and each schema in *additional\\_schemata* will become"
" its own fieldset. The schema name will become the fieldset name, and its "
"docstring will become its description. This is obviously somewhat "
"inflexible, but can be useful for certain forms where the fieldsets need to "
"be dynamically looked up."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:2
msgid "Display forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:4
msgid "**Using widgets in display mode**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:6
msgid ""
"Both forms and widgets support the concept of a “mode”. The form’s mode acts"
" as a default for its widgets. The most commonly used mode is *‘input’*, as "
"indicated by the constant *z3c.form.interfaces.INPUT\\_MODE*, but there is "
"also *‘hidden’* (*HIDDEN\\_MODE*) and *‘display’* (*DISPLAY\\_MODE*). The "
"latter is the form mode for *display forms*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:13
msgid ""
"Display forms derive from *z3c.form.display.DisplayForm*, which is extended "
"by *plone.directives.dexterity.DisplayForm*. This also mixes in "
"*plone.autoform.view.WidgetsView*, which provides various conveniences for "
"dealing with display mode widgets and fieldsets (groups). Note that this is "
"a “schema form”, i.e. we must set the *schema* property (and optionally "
"*additional\\_schemata*) to a schema deriving from *form.Schema*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:22
msgid ""
"If you require a grokked alternative that is not a schema form, you can "
"derive from *z3c.form.form.DisplayForm* and "
"*plone.directives.form.form.GrokkedForm*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:26
msgid ""
"Display forms are not very common outside framework code. In most cases, it "
"is easier to just create a standard view that renders the context. In a "
"framework such as Dexterity, display forms are used as the default views of "
"content items. The main reason to use display forms for anything bespoke is "
"to use a complex widget that has a display mode rendering that is difficult "
"to replicate in a custom template."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:33
msgid ""
"It is also possible to put some widgets into *input* mode (by setting the "
"*mode* attribute in the *updateWidgets()* hook), thus placing a widget into "
"a form that is otherwise not managed by *z3c.form*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:37
msgid "Display forms are used much like standard views. For example:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:56
msgid ""
"There would typically also be a template associated with this class. This "
"uses standard five.grok view semantics. If the display form above was in a "
"module called *display.py*, a template may be found in "
"*display\\_templates/mydisplayform.pt*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:61
msgid ""
"The *DisplayForm* base class in *plone.directives.form* makes the following "
"view attributes available to the template:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:64
msgid ""
"*view.w* is a dictionary of all the display widgets, keyed by field names. "
"This includes widgets from alternative fieldsets."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:66
msgid ""
"*view.widgets* contains a list of widgets in schema order for the default "
"fieldset."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:68
msgid "*view.groups* contains a list of fieldsets in fieldset order."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:69
msgid "*view.fieldsets* contains a dict mapping fieldset name to fieldset"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:70
msgid ""
"On a fieldset (group), you can access a *widgets* list to get widgets in "
"that fieldset"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/display-forms.rst:73
msgid ""
"The *w* dict is the mostly commonly used. To render a widget named *foo* in "
"the template, we could do:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:2
msgid "Edit forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:4
msgid "**Forms that edit something**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:6
msgid ""
"Edit forms, unsurprisingly, are used to edit content objects or other "
"contexts. They derive from *z3c.form.form.EditForm*, which is extended by "
"*plone.directives.form.EditForm* and *plone.directives.form.SchemaEditForm*,"
" adding grok support and Plone semantics. The edit form takes care of firing"
" object-modified events, and implements default save and cancel actions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:14
msgid ""
"As with add forms, frameworks like Archetypes and Dexterity provide their "
"own default edit forms, which should use for editing content objects built "
"with those frameworks."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:18
msgid ""
"The schema of an edit form is normally a content object schema, which "
"normally also describes the context of the form view. That is, the edit form"
" is normally a view on the object that is being edited"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:22
msgid ""
"That said, we can implement *getContent()* to supply a different context. "
"This would normally provide the schema interface, but it does not need to. "
"As with any form, the context need only be adaptable to the interface(s) "
"associated with its fields."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:27
msgid ""
"A simple edit form in a view called *@@edit* that edits a content object "
"providing *IMyType* would look like this:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:53
msgid ""
"There is no need to define any actions or implement any methods. The default"
" save button handler will adapt the context to *IMyType* and then set each "
"field in the interface with the submitted form values."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:57
msgid "A non-schema example would look like:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:82
msgid ""
"As a slightly ore interesting example, here is one adapted from "
"*plone.app.registry*’s control panel form base class:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/edit-forms.rst:125
msgid ""
"The idea here is that *IMySettings*, which is set as the schema for this "
"schema edit form, is installed in the registry as a set of records. The "
"*forInterace()* method on the *IRegistry* utility returns a so-called "
"records proxy object, which implements the interface, but reads/writes "
"values from/to the configuration registry. The form view is registered on "
"the site root, but we override *getContent()* to return the records proxy. "
"Hence, the initial form values is read from the proxy, and when the form is "
"successfully submitted, the proxy (and hence the registry) is automatically "
"updated."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/index.rst:2
msgid "Form types"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:2
msgid "Page forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:4
msgid "**The most basic type of form**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:6
msgid ""
"A page form, or simply “form”, is a basic, “standalone” form. The pizza "
"order example in this manual is a page form."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:9
msgid ""
"Page forms derive from *z3c.form.form.Form*, which is extended by "
"*plone.directives.form.Form* and *plone.directives.form.SchemaForm* as "
"described in this manual. They will typically have actions, and be "
"registered as a view for some context. For a completely standalone form, the"
" site root is often good choice."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:93
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:169
msgid ""
"Many “standalone” page forms will set *ignoreContext = True*. If it is "
"*False* (the default), the form will read the current value of each field "
"from the context, by attempting to adapt it to the form schema, as described"
" in the previous section."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:98
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:174
msgid ""
"Sometimes, we want to populate the form with initial values that are not "
"attributes of the context (or an adapter thereof). *z3c.form* allows us to "
"change the object from which the form’s data is read, by overriding the "
"*getContent()* method. We can return another object that provides or is "
"adaptable to the schema interface(s) associated with the form’s fields, but "
"we can also return a dictionary with keys that match the names of the fields"
" in the form schema. This is usually easier than creating an adapter on some"
" arbitrary context (e.g. the site root) solely for the purpose of pre-"
"populating form values. It also makes it easy to construct the form’s "
"initial values dynamically."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:158
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:234
msgid ""
"Note how the fields in the *data* dictionary returned by *getContent()* "
"correspond to the fields of the schema interface from which the form’s "
"fields are built. If we had fields from multiple interfaces (e.g. using the "
"*additional\\_schemata* tuple), we would need to populate keys based on the "
"fields from all interfaces."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:164
#: ../../reference_manuals/active/schema-driven-forms/form-types/page-forms.rst:240
msgid ""
"Also note that the values in the dictionary must be valid for the fields. "
"Here, we have used *TextLine* fields, which expect unicode string values. We"
" would likely get an error if the value was a byte string or integer, say."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:2
msgid "Further reading"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:4
msgid "**Where to find more information**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:6
msgid ""
"To find out more about *z3c.form* and its uses in Plone, consult the "
"following references:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:9
msgid ""
"The `z3c.form`_ documentation. This provides a detailed guide to "
"*z3c.form*’s inner workings."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:11
msgid ""
"The `plone.z3cform`_ documentation. Describes how to use “raw” *z3c.form* "
"forms in Zope 2, and documents the Zope 2-specific extensions provided by "
"this package."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:14
msgid ""
"The `plone.app.z3cform`_ documentation. Describes how to use “raw” "
"*z3c.form* forms in Plone."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:16
msgid ""
"The `plone.autoform`_ documentation. Explains the raw behaviour of the "
"*plone.autoform* library and its directives."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:18
msgid ""
"The `plone.directives.form`_ documentation. Lists the form base classes."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:19
msgid ""
"The `five.grok`_ manual. Explains the concepts of grokkers, the Zope "
"Component Architecture, and view component registrations."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/further-reading.rst:21
msgid ""
"The `Dexterity manual`_. Illustrates in various sections how *z3c.form* is "
"used in Dexterity."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/index.rst:2
msgid "Schema-driven forms"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/index.rst:4
msgid ""
"**This tutorial covers how to build schema-driven forms, using the z3c.form "
"and plone.autoform libraries.**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:4
msgid "**What is z3c.form all about?**"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:6
msgid ""
"HTML forms are the cornerstone of modern web applications. When you interact"
" with Plone, you use forms all the time - to search the content store, to "
"edit content items, to fill in your personal details. You will notice that "
"most of these forms use the same layout and conventions, and that they all "
"rely on common patterns such as server-side validation and different buttons"
" resulting in different actions."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:13
msgid ""
"Over the years, several approaches have evolved to deal with forms. A few of"
" the most important ones are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:16
msgid ""
"Creating a simple view with an HTML form that submits to itself (or another "
"view), where the request is validated and processed in custom Python code. "
"This is very flexible and requires little learning, but can also be fairly "
"cumbersome, and it is harder to maintain a common look and feel and "
"behaviour across all forms. See the `five.grok view documentation`_ for some"
" hints on one way to build such views."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:22
msgid ""
"Using the *CMFFormController* library. This relies on special page objects "
"known as “controller page templates” that submit to “controller python "
"scripts”. The form controller takes care of the flow between forms and "
"actions, and can invoke validator scripts. This only superficially addresses"
" the creation of standard form layouts and widgets, however. It is largely "
"deprecated, although Plone still uses it internally in places."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:29
msgid ""
"Using *zope.formlib*. This is a library which ships with Zope. It is based "
"on the principle that a *schema interface* defines a number of form fields, "
"constraints and so on. Special views are then used to render these using a "
"standard set of widgets. Formlib takes care of page flow, validation and the"
" invocation of *actions* - methods that correspond to buttons on the form. "
"Formlib is used for Plone’s control panels and portlets. However, it can be "
"cumbersome to use, especially when it comes to creating custom widgets or "
"more dynamic forms."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:38
msgid ""
"Using *`z3c.form`_*. This is a newer library, inspired by formlib, but more "
"flexible and modern."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:41
msgid ""
"This manual will show you how to use *z3c.form* in a Plone context. It will "
"use tools and patterns that are consistent with those used for Dexterity "
"development, as shown in the `Dexterity manual`_, but the information "
"contained herein is not Dexterity specific. Note that Dexterity’s standard "
"add and edit forms are all based on *z3c.form*."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:48
#: ../../reference_manuals/old/plone_3_theming/index.rst:56
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:307
msgid "Tools"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:50
msgid ""
"As a library, *z3c.form* has spawned a number of add-on modules, ranging "
"from new field types and widgets, to extensions that add functionality to "
"the forms built using the framework. We will refer to a number of packages "
"in this tutorial. The most important packages are:"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:55
msgid ""
"`z3c.form`_ itself, the basic form library. This defines the standard form "
"view base classes, as well the default widgets. The *z3c.form* "
"`documentation <http://docs.zope.org/z3c.form>`_ applies to the forms "
"created here, but some of the packages below simplify or enhance the "
"integration experience."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:59
msgid ""
"`plone.z3cform`_ makes *z3c.form* usable in Zope 2. It also adds a number of"
" features useful in Zope 2 applications, notably a mechanism to extend or "
"modify the fields in forms on the fly."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:62
msgid ""
"`plone.app.z3cform`_ configures *z3c.form* to use Plone-looking templates by"
" default, and adds few services, such as a widget to use Plone’s visual "
"editor and “inline” on-the-fly validation of forms. This package must be "
"installed for *z3c.form*-based forms to work in Plone."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:67
msgid ""
"`plone.autoform`_ improves *z3c.form*’s ability to create a form from a "
"schema interface. By using the base classes in this package, schemata can be"
" more self-describing, for example specifying a custom widget, or specifying"
" relative field ordering. We will use *plone.autoform* in this tutorial to "
"simplify form setup."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:72
msgid ""
"`plone.directives.form`_ provides tools for registering forms using "
"convention-over-configuration instead of ZCML. It depends on `five.grok`_ "
"and adds support for the patterns that apply to the *grok.View* base class, "
"including automatic template association. We will use "
"*plone.directives.form* to configure our forms in this manual. You can read "
"more about this in the `five.grok manual`_. We will register all our forms "
"using *plone.directives.form* in this tutorial."
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:82
msgid "A note about versions"
msgstr ""

#: ../../reference_manuals/active/schema-driven-forms/intro.rst:84
msgid "This manual is targeted at Plone 4.1 and above (Zope 2.13)."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:3
msgid "Embedded external manuals"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:7
msgid "How to get your Plone package documentation into collective-docs."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:15
msgid ""
"The audience of this documentation are Plone developers who are writing "
"Plone core Python packages."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:18
msgid "collective.developermanual has a section *Reference manuals*"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:20
msgid "You can pull in manuals to this section from external packages"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:22
msgid "Then these manuals can be cross-references in the other documentation"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:24
msgid ""
"All documentation is one place to be found for the fellow peer developers"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:26
msgid "Manuals will be hosted under *developer.plone.org* domain"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:29
msgid "Benefits of having the documentation in developer.plone.org"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:31
msgid ""
"The main benefit of having your manual in *developer.plone.org* instead of a"
" custom readthedocs.org account include"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:34
msgid ""
"Better co-developer user experience (all manuals in one place searchable). "
"Your manual can be cross-referenced from collective-docs."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:37
msgid ""
"Unified documentation theme with usability features like edit backlinks"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:40
msgid ""
"Documentation team can keep an eye on you: *#plone-docs* IRC channel will "
"get Travis CI notifications on Sphinx syntax failures (please join in on the"
" channel)"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:44
msgid ""
"*Plone AI team* has shared rtd.org account in the case we have a person "
"missing-in-action"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:47
msgid "Disadvantages include"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:49
msgid ""
"*readthedocs.org* does not notice changes in your documentation and thus "
"builds must be triggered manualy. However collective-docs is build "
"frequently so the lag should be maximum of 24 hours or so"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:53
msgid ""
"More complex Sphinx ``conf.py`` with all sort of trickery to pull this all "
"together"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:57
msgid "Steps to embed a reference manual in collective-docs"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:59
msgid ""
"Add your egg to ``[sources]`` and ``auto-checkout`` in ``buildout.cfg``."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:61
msgid ""
"Add directory mapping the Sphinx documentation inside that egg at the top of"
" ``conf.py``."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:63
msgid ""
"Add a reference in ``source/index.rst`` to point your master ``index.rst``."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:65
msgid "Then run Sphinx::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:70
msgid "See Sphinx ouput for warnings and errors."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:72
msgid "See that your manual gets correctly added in the index::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:76
msgid ""
"``conf.py`` creates symlinks in ``source/reference_manuals/external``. If "
"you manage to mess them reset the situation with the command::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:82
msgid "developer.plone.org builds"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:84
msgid ""
"``developer.plone.org`` documentation builds are done on *deus2.plone.org* "
"machine in ``/var/www/developer.plone.org`` folder. They are done by running"
" `doc-holliday.sh update script "
"<https://github.com/collective/collective.developermanual/blob/master/doc-"
"holliday.sh>`_ in a crontab created by *deployment.cfg*."
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:90
msgid "Update"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:92
msgid "Do run the build by hand and see what's going wrong::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:99
msgid ""
"Something like this is occasionally needed to clear up things changed in "
"external packages::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:105
msgid "Setup"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:107
msgid "The deployment is done as following::"
msgstr ""

#: ../../reference_manuals/active/writing/crosslinking.rst:120
msgid ""
"The folder where final static HTML files lie is "
"``/var/www/developer.plone.org/var/public_html``."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:3
msgid "How to update and maintain collective.developermanual"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:7
msgid ""
"This document explains how collective.developermanual package is maintained "
"and how changes are pushed."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:17
msgid "This document concerns those who:"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:19
msgid "wish to generate a HTML version of Plone Developer Documentation"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:21
msgid ""
"need to edit templates or styles of Plone Developer Documentation, or "
"otherwise customize Sphinx process"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:25
msgid "collective.developermanual"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:27
msgid ""
"collective.developermanual_ is open-for-anyone-to-edit documentation for "
"Plone development in `Sphinx documentation format "
"<http://sphinx.pocoo.org/>`_, living on `Github "
"<https://github.com/collective/collective.developermanual>`_. Anyone can "
"provide patches through Github through-the-web editor and Pull request "
"mechanisms."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:33
msgid "The ``collective.developermanual`` *git clone* contains buildout to:"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:35
msgid "Install Sphinx"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:37
msgid ""
"Install and clone necessary Plone packages referred by documentation (API "
"docs)"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:39
msgid "Compile the documentation to HTML"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:42
msgid "Setting up software for manual compilation"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:44
msgid ""
"First you need to install Git for your operating system to be able to "
"retrieve the necessary source code::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:49
msgid "or::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:55
msgid ""
"You must not have Sphinx installed in your Python environment (this will be "
"the case if you installed it using ``easy_install``, for example). Remove "
"it, as it will clash with the version created by buildout.  Use "
"``virtualenv`` if you need to have Sphinx around for other projects."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:60
msgid "Then clone ``collective.developermanual`` from GitHub::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:64
msgid "Run buildout to install Sphinx. First step: bootstrap::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:70
msgid ""
"This will always report an error, but the ``bin/`` folder is created and "
"populated with the required scripts.  Now you need to checkout all the "
"source code using the *mr.developer* tool::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:76
msgid "Run buildout again::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:2
msgid "Analytics"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:83
msgid ""
"developer.plone.org pages have the Google Analytics script installed. Please"
" ask on the #plone.org IRC channel for data access."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:87
msgid "Building static HTML with Sphinx"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:89
msgid ""
"This creates the ``docs/html`` folder from the source documents in the "
"``source`` folder, by compiling all the ``collective.developermanual`` "
"pages, using the ``sphinx-build`` command from buildout::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:95
msgid ""
"If you want to build everything from the scratch, to see all warnings::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:104
msgid "Editing CSS styles"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:106
msgid ""
"When ``sphinx-build`` is run it copies stylesheets from *sources* to "
"*build*."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:109
msgid "For live editing of CSS styles you might want to do::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:113
msgid "Then copy back::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:119
msgid ""
"Firefox does not follow symlinks on file:// protocol, and cannot load CSS "
"files from them."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:122
#: ../../reference_manuals/old/buildout/additional.rst:175
#: ../../reference_manuals/old/portlets/tips.rst:482
#: ../../reference_manuals/old/portlets/tips.rst:893
msgid "More info"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:124
msgid "http://sphinx.pocoo.org/templating.html"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:126
msgid ""
"https://bitbucket.org/birkenfeld/sphinx/src/65e4c29a24e4/sphinx/themes/basic"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:130
msgid "Compiling the HTML manual"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:132
msgid "Use the Sphinx makefile::"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:141
msgid "Setting up CSS for http://plone.org"
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:143
msgid ""
"An example ``sphinx.css`` is provided with ``collective.developermanual``."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:145
msgid ""
"It sets up CSS for default Sphinx styles (notices, warning, other "
"admonition)."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:147
msgid "It sets up CSS for syntax highlighting."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:148
msgid ""
"It resolves some CSS class conflicts between Sphinx and the plone.org theme."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:151
msgid ""
"``sphinx.css`` assumes that a special Sphinx ``page.html`` template is used."
" This template is modified to wrap everything which Sphinx outputs in the "
"``sphinx-content`` CSS class, so we can nicely separate them from standard "
"Plone styles."
msgstr ""

#: ../../reference_manuals/active/writing/developermanual.rst:156
msgid "``page.html`` can be found at ``sources/_templates/page.html``."
msgstr ""

#: ../../reference_manuals/active/writing/index.rst:3
msgid "Documentation maintenance guide"
msgstr ""

#: ../../reference_manuals/active/writing/index.rst:17
msgid "Presentations"
msgstr ""

#: ../../reference_manuals/active/writing/index.rst:19
msgid "http://www.slideshare.net/miohtama/test-lol"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:3
msgid "Joining doc team"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:5
msgid "Plone documentation team team takes care of Plone documentation."
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:8
msgid "Discussion channel and empowerment"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:10
msgid "**IRC**: Get yourself to #plone-docs IRC channel"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:12
msgid ""
"**Mailing list**: Get yourself to `the mailing list "
"<http://plone.293351.n2.nabble.com/Documentation-Team-f293358.html>`_"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:14
msgid ""
"**Documentation role**: Get yourself documentation team role on plone.org by"
" creating an issue at the `Developer Documentation issue tracker "
"<https://github.com/collective/collective.developermanual/issues/101>`_"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:16
msgid ""
"**Collective commit rights**: Get yourself collective rights on Github to "
"commit to `collective "
"<https://github.com/collective/collective.developermanual>`_. Register on "
"github.com first. Then add yourself to the owner of "
"``collective.developermanual`` repository by `following these instructions "
"<http://collective.github.com/#how-to-get-access>`_"
msgstr ""

#: ../../reference_manuals/active/writing/join.rst:20
msgid ""
"Go to IRC to discuss what are the current pain points of the documentation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:3
msgid "Old documentation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:7
msgid "How Plone documentation team deals with old documentation."
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:10
msgid "Ancient documentation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:12
msgid ""
"Plone Developer Manual has a special section *Old reference manuals* for "
"documentation which is no longer under active maintenance."
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:15
msgid "This includes"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:17
msgid "Old content from plone.org which has been migrated to Sphinx format"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:19
msgid ""
"Content from Plone Developer Documentation where the documentation team "
"feels it no longer reflects the modern Plone versions and best practices"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:23
msgid ""
"The old documentation is moved to *reference_manual/old* section and will "
"receive a special warning label to tell the readers that the information may"
" no longer be totally coherent."
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:28
msgid "Reactivation"
msgstr ""

#: ../../reference_manuals/active/writing/nursinghome.rst:30
msgid ""
"The documentation can be moved to Reference Manual's *active* section if "
"some developer volunteers to update it to reflect best practices."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:3
#: ../../reference_manuals/old/plone_3_theming/index.rst:8
msgid "Preface"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:5
msgid ""
"Plone is an open source content management system that lets non-technical "
"people create and maintain web content from their broswer.  With a rich "
"ecosystem of add-on packages and a highly extensible layout system, Plone "
"offers a robust platform for those wishing to enhance its core "
"functionality."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:10
msgid "Plone has a number of strengths:"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:12
msgid "Plone enables complex workflows"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:13
msgid "Plone has rich support for internationalization"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:14
msgid "Plone provides clear upgrade paths"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:15
msgid ""
"Plone integrates with Active Directory, Salesforce, LDAP, SQL, Web Services,"
" Oracle (By using Add-on products)"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:17
msgid "Plone scales well"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:18
msgid ""
"Plone will grow with your expanding CMS needs. Many systems will be good for"
" simple sites, but will not be able to handle the expanding requirements you"
" are likely to encounter over time."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:21
msgid "Plone is Open Source!"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:23
msgid ""
"Plone and its accompanying technologies have evolved over the course of many"
" years. The codebase contains over 6000 modules. Given the complexity of the"
" overall system and large number of optional and included packages, very few"
" Plone developers/users know how do everything."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:28
msgid ""
"Due to Plone's longevity it has spanned and outlasted some technologies and "
"Python practices.  Thus you will see some Python usage which may not match "
"today's accepted code practices. You will also see use of Python libraries "
"which are deprecated, and/or implement code where today a standard or "
"optional Python package would be preferred."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:34
msgid "It's important to keep the following in mind:"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:36
msgid "Plone has a high level of complexity"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:37
msgid ""
"Plone has more than one way to accomplish many tasks. (Some of which are "
"deprecated)"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:38
msgid ""
"Plone doesn't always have the most complete or up to date documention for "
"all components"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:40
msgid ""
"When you encounter something you want to get accomplished, but you are "
"unable to find direct examples of how to do it, use the following procedure:"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:43
msgid ""
"Formulate your question to represent your issue in a way that makes it easy "
"for others to answer [1]_"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:44
msgid "Search via google and/or stackoverflow"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:45
msgid "Try the ``#plone`` IRC channel on freenode [2]_"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:46
msgid "Join and send email to the product-developers email list [3]_."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:47
msgid ""
"UTSL (Use The Source Luke). Plone is almost entirely Python code. You can "
"always refer to the source to figure out anything about Plone. Plone source "
"is made up of Python, ZCML, XML, Javascript and Page Template files."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:49
msgid ""
"If you ask the community for help, it may not arrive instantly. Please "
"remember that People are voluntarily helping you. If you need help "
"immediately your best option may be to find paid support for your issues "
"[4]_."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:53
msgid ""
"Be patient. Be aware that you are dealing with a complex system and you need"
" to reserve time to manage technology and minimize risks. The community is "
"very supportive and will help you if you make an effort to make it easy for "
"them to do so."
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:56
msgid "http://plone.org/documentation/kb/ask-for-help"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:57
msgid "http://plone.org/support/chat"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:58
msgid "http://plone.org/support/forums/addons"
msgstr ""

#: ../../reference_manuals/active/writing/preface.rst:59
msgid "http://plone.org/support/providers"
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:3
msgid "Automatically generated TODO list"
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:5
msgid ""
"The following list is automatically generated from ``.. TODO::`` directives "
"in the text."
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:8
msgid ""
"To help fixing the todos, please see the section on .. commented out as "
"missing resource gives sphinx error. ..:doc:`writing "
"</introduction/writing>`."
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:12
msgid "See http://sphinx.pocoo.org/ext/todo.html for details."
msgstr ""

#: ../../reference_manuals/active/writing/todos.rst:15
msgid "TODO items"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:3
msgid "Writing and updating the documentation"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:7
msgid "How to write and submit content for the Plone Developer Documentation."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:14
msgid ""
"This chapter explains the basics of editing, updating and contributing to "
"the *Plone Developer Documentation*."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:18
msgid "Reaching documentation team"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:20
msgid ""
"Plone community runs a documentation team which is responsible for keeping "
"Plone documentation coherent. To reach this team for any questions please "
"contact"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:24
msgid ""
"`Documentation team mailing list <https://plone.org/support/forums/docs>`_"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:26
msgid "*#plone-docs* IRC channel on irc.freenode.net"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:29
msgid "Editing documentation on Github"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:31
msgid ""
"You can `commit file edits through GitHub web interface "
"<https://github.com/collective/collective.developermanual>`_ using the "
"**Fork and Edit** button, followed by a pull request."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:35
msgid ""
"Alternatively, clone the repository using *git*, perform changes, and push "
"them to your fork. Then submit a pull request."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:38
msgid ""
"The Plone collective GitHub repository has open-for-all contribution access."
" If you want to contribute changes without asking the maintainers to merge "
"them, please add your GitHub username to your profile on plone.org and "
"request access `here <http://dev.plone.org/wiki/ContributeCollective>`_."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:44
msgid "Editing documentation using git"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:46
msgid ""
"This is the recommended method of editing the documentation for advanced "
"users. Please do not be afraid to commit.  If you break the documentation or"
" add invalid information, it will be cleaned up sooner or later and no one "
"is going to blame you: human errors happen all the time."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:52
msgid ""
"Learn about `Sphinx <http://sphinx.pocoo.org/>`_ and `restructured text "
"<http://sphinx.pocoo.org/rest.html>`_."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:55
msgid "Get the documentation source files:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:61
msgid ""
"Bootstrap with Python 2.5 or later. We use a version of Sphinx that has "
"dropped Python 2.4 support."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:66
msgid ""
"You do not need to bootstrap and buildout if you simply want to make a quick"
" edit the documentation. Go to the \"source\" directory to find the files. "
"Continue reading if you want to run a complete local copy."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:76
msgid ""
"Run buildout to install and configure all Python packages in your buildout "
"folder for the documentation generation"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:82
msgid "Edit the file(s) which you want to update."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:84
msgid "Check that building with Sphinx does not give warnings:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:90
msgid "Commit changes:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:99
msgid "Document page format"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:101
msgid "Here are some Sphinx coding conventions used in the documentation."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:104
msgid "Tab policy"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:106
msgid "Indentation 4 spaces"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:108
msgid "No hard tabs"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:110
msgid "No trailing whitespaces"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:113
msgid "Headings and filenames"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:115
msgid "For the headings, capitalize the first letter only"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:117
msgid "For the filenames, use_underscore_naming_style"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:120
msgid "Page structure"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:122
msgid "Each page must contain, in this order:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:124
msgid "The main heading. This will be visible in the table of contents:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:132
msgid ""
"The description of the page, which will appear in Plone's *Description* "
"Dublin Core metadata field. This created using the reST *admonition* "
"directive. A single paragraph of text consisting of 1-3 sentences is "
"recommended, so that the same text fits into the search engine results "
"(Google):"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:145
msgid ""
"The *contents* directive will cause Sphinx to generate the *Table of "
"Contents* shortcut links at the start of the page.  Using the *local* option"
" excludes the page itself and ToC title from the listing:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:153
msgid "Introduction paragraph: A brief overview:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:162
msgid "A number of paragraphs: The actual content of the document page:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:172
msgid "Section structure"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:174
msgid "Each section (folder) must contain"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:176
msgid ":file:`index.txt` with:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:178
msgid "Section heading: This will be visible in the table of contents"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:180
msgid ""
"A single paragraph summarizing what this section is all about. This will be "
"mapped to Plone folder description."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:183
msgid ""
"Sphinx toctree directive, maxdepth 2. Each ``.txt`` file in the folder "
"should be linked to this toctree."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:196
msgid "Headings style guide"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:198
msgid ""
"ReStructured text and Sphinx enable any style you would prefer for the "
"various heading level you would need. In example, underlining level 1 "
"headings with ``.``, level 2 headings with ``#`` and level 3 headings with "
"``|`` is perfect as far as ``docutils`` is concerned. But not for a human "
"documentation maintainer."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:204
msgid ""
"In order to have consistent heading styles in all files that make this great"
" document, it is recommended to follow strictly the rules stated in the "
"Sphinx manual here: http://sphinx.pocoo.org/rest.html#sections"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:208
msgid ""
"As individual files do not have so called \"parts\" or \"chapters\", the "
"headings would be underlined like this:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:227
msgid "Syntax highlighting"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:229
msgid ""
"Sphinx does syntax highlighting using the `Pygments <http://pygments.org/>`_"
" library."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:232
msgid ""
"You can specify different highlighting for a code block using the following "
"syntax::"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:243
msgid ""
"You can specify the language used for syntax highlighting by using the "
"``code-block`` directive:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:254
msgid "For example, to specify XML:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:262
msgid "... or UNIX shell:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:271
msgid "... or a buildout.cfg:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:282
msgid "... or interactive Python:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:299
msgid "Setting the highlighting mode for the whole document:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:309
msgid ""
"If syntax highlighting is not enabled for your code block, you probably have"
" a syntax error and Pygments will fail silently."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:312
msgid ""
"The full list of lexers and associated short names is here: "
"http://pygments.org/docs/lexers/"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:316
msgid "Other Sphinx and restructured text source snippets"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:318
msgid "Italics:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:324
msgid "Strong:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:330
msgid "Inline code highlighting:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:339
msgid ""
"These Python objects are rendered as hyperlinks if the symbol is mentioned "
"in a relevant directive. See http://sphinx.pocoo.org/domains.html and "
"http://sphinx.pocoo.org/ext/autodoc.html"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:344
msgid "Making an external link (note the underscore at the end):"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:350
msgid "Making an internal link:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:362
msgid "Glossary:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:368
msgid "Bullet list:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:375
msgid "Warning:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:401
msgid "Code documentation"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:403
msgid ""
"For certain kinds of documentation it is better to write the documentation "
"in parts of the Plone core code base. This can be done using the *autodoc* "
"sphinx extension."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:407
msgid "... to include a module docstring:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:413
msgid "... to include a class docstring:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:419
msgid "... or to include both a module and class docstrings:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:426
msgid ""
"Not all documentation is best kept with the code. You should use autodoc if:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:429
msgid ""
"the documentation is reasonably self-contained and relates just to that "
"module;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:431
msgid ""
"it's mainly reference material, rather than tutorial-style documentation;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:432
msgid "you think it's more likely to be maintained by the code authors."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:434
msgid "Once you write code documentation:"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:436
msgid ""
"find an appropriate place in this manual to place it. Make sure it flows and"
" makes when sense read with the documentation around it;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:438
msgid ""
"include a comment in the docstring mentioning its use in this manual so "
"those editing the code can test the manual if changes are made;"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:440
msgid ""
"add the module to the autocheckout value in the manual's ``buildout.cfg``."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:443
msgid "Some helper tools"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:445
msgid ""
"**Emacs** has a nice `rst-mode "
"<http://docutils.sourceforge.net/docs/user/emacs.html>`_. This mode comes "
"with some Emacs distros. Try ``M-x rst-mode`` in your Emacs and enjoy syntax"
" coloration, underlining a heading with ``^C ^A``"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:450
msgid ""
"**Eclipse** users can install **ReST Editor** through the Eclipse "
"Marketplace."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:453
msgid ""
"**Vim** does syntax highlighting for RST files. There is also a nice plugin "
"with enhanced functionalities called `Riv "
"<https://github.com/Rykka/riv.vim>`_."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:457
msgid "Style recommendations"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:459
msgid ""
"Use **semantic linefeeds** (http://rhodesmill.org/brandon/2012/one-sentence-"
"per-line/) when you are editing restructured text (or any other interpreted "
"rich text format) because it will greatly improve the editing and "
"maintenance of your documents."
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:466
msgid "Take this example paragraph::"
msgstr ""

#: ../../reference_manuals/active/writing/writing.rst:476
msgid ""
"Notice how it's easier to just reshuffle sentences and add stuff if, instead"
" of using your editor \"autowrap\" feature, you manually insert line breaks "
"after full stops, commas, or upon \"grammatical\" boundaries (and not merely"
" word ones)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:3
msgid "Product package layout"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:7
msgid ""
"Conventions and techniques for organizing the package for an AT product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:9
msgid ""
"Following Zope, Plone and AT’s conventions, the content of our example "
"product pakage will look like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:32
msgid "What is the purpose of these files and directories?"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:34
msgid "\\_\\_init\\_\\_.py: The usual “Python package” initialization module;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:35
msgid ""
"configure.zcml: Using Zope’s new Configuration Markup Language (ZCML), this "
"file configures the services or behaviour the Zope server needs to load at "
"startup;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:38
msgid "config.py: Provides configuration variables for the product;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:39
msgid ""
"interfaces.py: Where you define interfaces describing what the packages’ "
"classes will do;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:41
msgid ""
"content: Contains the modules providing the implementation of the content "
"types. In this case, it contains the message.py file where the "
"‘InstantMessage’ class should be defined;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:44
msgid ""
"profiles/default: Contains a set of XML files that are needed to provide the"
" settings that will be used by Plone’s Quick-Installer tool when installing "
"the product within Plone; this is what we call an *Extension Profile*, an "
"artifact of Zope CMF’s GenericSetup technology. *Note that this replaces the"
" old way of doing based on the Extensions/Install*. More precisely, since "
"Plone 3.0, you do not need that old-style technique;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:51
msgid ""
"browser: The sub-package where the developer can add specific presentation "
"code such as browser views and templates; the contained configure.zcml is "
"used to provide these components registration."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:54
msgid "tests: Contains the unit tests code for the product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:56
msgid ""
"If you have ZopeSkel installed, you can use the following command to create "
"a similar structure:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/at_product_layout.rst:63
msgid ""
"Now we will go through the files one by one and add what we need to produce "
"our application."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:3
msgid "Basic integration tests"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:7
msgid "No product is complete without tests."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:9
msgid ""
"To build high-quality software, you *must* provide automatic tests - often "
"known as “unit” tests (though tests for Archetypes products tend to be "
"“integration” tests, strictly speaking)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:13
msgid ""
"The `tutorial on testing and test-driven development`_ is essential reading "
"if you want to write high-quality software (and you don’t know the "
"techniques it advocates already). Please refer to it for details."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:17
msgid ""
"The example.archetype product contains basic tests that prove that the "
"product is properly installed, that it registers its types, and that an "
"InstantMessage object can actually be instantiated. If it contained more "
"functionality, there would have been more tests, but even simple integration"
" tests like this can be surprisingly useful - if you accidentally broke the "
"content type with some change, you’d notice that it failed to install or "
"instantiate."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:25
msgid ""
"The tests are in the “tests” directory. The file “base.py” contains some "
"base classes that are used for tests, to ensure the site is properly set up:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:71
msgid "The actual tests are in “test\\_setup.py”:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:114
msgid "To run these tests within your buildout environment:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:120
msgid "You may see output like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:126
msgid ""
"If there was an error with one or more of the tests, you’d be told here!"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/basic_integration_tests.rst:128
msgid ""
"Please refer to the `testing tutorial`_ for more about writing tests - and "
"writing *good* tests - and how to run them."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:3
msgid "The configuration module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:7
msgid "The configuration details for your content type, in config.py."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:9
msgid "First, we have to import a class from Archetypes:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:15
msgid ""
"Displaylist is a data container we use when displaying "
"pulldowns/radiobuttons/checkmarks with different choices. Let’s say we "
"wanted priorities on our instant messages, and we wanted those to be "
"``High``, ``Normal`` and ``Low``. We will specify these later in the file."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:21
msgid ""
"The next two lines set the project (Product in Zope) name, and point to the "
"skin directory. ``PROJECTNAME`` should reference the name of the package: "
"``example.archetype``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:29
msgid ""
"Now, we need to specify our ‘Priority’ pulldown. It should look like this, "
"using the DisplayList utility class that Archetypes has provided for exactly"
" that purpose:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:41
#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:39
#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:131
#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:98
msgid "**Python notes:**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:43
msgid ""
"The reason for double parantheses is that DisplayList is a class that you "
"pass a *tuple of tuples* to."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:46
msgid ""
"We also need to define the “Add” permission(s) for the content type(s):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:54
msgid ""
"We recommend using the standard way of naming permissions: ‘<ProductName>: "
"<Permission>’. This will group the related permissions together within the "
"ZMI (Security tab), and allow the Administrator to recognize which "
"permissions belong to which Product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/configuration_module.rst:59
msgid ""
"Note that, unless you have an advanced case which needs custom security "
"settings, you don’t need to define your own permissions for the “edit” and "
"“view” of the content. In this simple case you will just reuse, in the "
"modules where needed, the generic permissions defined in "
"CMFCore.permissions: “View”, “Modify portal content”…"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/index.rst:3
msgid "A Simple AT Product"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/index.rst:7
msgid "A semi-realistic example Archetypes-based content type product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:3
msgid "Installing the product"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:7
msgid ""
"Ensuring the product elements (types, browser layers, resources) are "
"correctly installed."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:10
msgid ""
"In this part, we will provide the code to be executed when the integrator "
"“adds”, i.e. installs, the InstantMessage product to the Plone site. This "
"aspect of the product code is called the “Extension Profile” (or “Setup "
"Profile”) and is managed under the hood by a machinery called GenericSetup."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:16
msgid ""
"For more about GenericSetup, its possibilities, and how a developer uses it,"
" read the `GenericSetup tutorial`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:20
msgid "The setup profile files (profiles/default)"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:22
msgid ""
"The setup profile is composed of a set of GenericSetup XML files containing "
"setup declarations."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:25
msgid "**Type declaration and definition**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:27
msgid ""
"First, we provide the files needed for adding the types to CMF’s types "
"registry (portal\\_types): ``types.xml`` and ``types/InstantMessage.xml``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:31
msgid ""
"In ``types.xml``, within the ``<object name=\"portal_types\" ... />`` "
"element, add the setup code for the type(s) you want to install:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:44
msgid ""
"The *name* property of the ``<object>`` node constitutes the called *portal "
"type* name of the content-type, a CMF concept which supports two things:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:48
msgid ""
"Dynamic typing: objects can change their content type during their lifetime."
" To do this use ``_setPortalTypeName(<type>``\\ ``)``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:50
msgid ""
"You can have arbitrarily many different content types using the same base "
"class (and having therefore the same ``meta_type``) but differing in their "
"Factory Type Information (FTI) settings."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:54
msgid ""
"The *portal type* name was formerly set in a content-type class attribute "
"called *portal\\_type*, which is no longer necessary."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:57
msgid ""
"The name of the file inside the ``profiles/default/types`` folder must match"
" the portal type name, with spaces converted to underscores whenever "
"necessary. So, in\\ `` types/InstantMessage.xml``, add the code for the "
"InstantMessage FTI object:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:72
msgid ""
"In these first lines we give the content-type a title and a description."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:74
msgid ""
"The *title* property indicates the user-friendly name of the content-type. "
"This is what’s supposed to be used in the user interface, and can be "
"accessed using the ``<fti>.title_or_id()`` or the ``Type()`` methods, which "
"both return the content-type title if it exists or the content-type id "
"otherwise. Like portal type, this property was formerly set in a the "
"content-type class attribute called ``archetype_name``, which is no longer "
"neccessary."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:91
msgid ""
"The ``meta_type`` property of the object is a Zope concept to organize "
"object classification or containment. For historical reasons, it is used in "
"CMF in some places because first versions of CMF didn’t have today’s "
"``portal_type``. Also note that Archetypes uses the content-type class name "
"as the meta\\_type value, unless given explicitly."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:97
msgid ""
"The ``content_icon`` property specifies the icon image file which will be "
"shown in the Plone UI for this content-type. This icon image file must be "
"accessible from the context of the content-type, and therefore should be "
"placed into a CMF skin layer (the CMF way) or in a browser resource "
"directory (the Zope 3 way)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:103
msgid ""
"The ``factory`` property indicates the factory function which will be used "
"to create and initialize new content objects of this type. This factory is "
"automatically generated by the Archetypes framework, when the product is "
"initialized (via the code in the startup module), and is always named ``add"
"<content-meta-type>``. The factory is also associated with a certain product"
" by means of the ``product`` property."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:117
msgid ""
"The ``global_allow`` property determines if the content-type will be "
"available to be added from anywhere in the site."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:120
msgid ""
"The ``filter_content_types`` property, paired with "
"allowed\\_content\\_types, controls what content-types will be addable "
"inside the current one."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:124
msgid ""
"With ``allow_discussion``, we specify whether or not comments will be "
"allowed by default on this content-type."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:138
msgid ""
"Here we define CMF views (templates) and aliases that map content-type "
"methods to views."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:153
msgid ""
"The ``<action>`` elements register type-specific actions for the content-"
"type. The ``object`` category makes the render as tabs in the Plone UI."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:157
msgid ""
"The ``url_expr`` is a `TALES expression`_ that defines the URL from where "
"the action will be triggered and should match one of the method aliases "
"defined above. Hence, the ``edit`` action points to "
"``string:${object_url}/edit``, which means that if you are at "
"``/path/to/object`` and click ``edit``, you will go to "
"``/path/to/object/edit``. ``/edit`` then gets recognized as a method alias, "
"which points to the page template ``atct_edit``, causing Zope to render "
"``/path/to/object/atct_edit``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:165
msgid ""
"The <permission /> element specifies a guard permission for this action. If "
"the user’s role doesn’t have this permission, the action won’t be available "
"and the corresponding action tab won’t be shown."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:168
msgid ""
"In addition to the former criteria, the ``condition_expr`` is a TALES "
"expression which will be evaluated to decide if the action is available or "
"not."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:171
msgid ""
"The ``visible`` attribute indicates wheter the action tab will be visible or"
" hidden. If it’s set to False, the tab won’t appear even when the action is "
"available, but the exposed page will still be accesible from the associated "
"URL."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:176
msgid "\\ **Notes:**\\"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:178
msgid ""
"Defining new content-type actions this way, i.e. using GenericSetup, "
"supersedes the old ``updateActions`` function from "
"``ATContentTypes.content.base``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:181
msgid ""
"Don’t worry. You don’t have to type all this XML each time you create a new "
"content-type; since most of it is boilerplate (XML is very verbose) you can "
"copy & paste an already working example (like `the CMFPlone ones`_) and "
"modify only the changing bits."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:189
msgid "**Roles - Permissions mapping**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:191
msgid ""
"For our content type(s) to be usable, we need to assign the required “Add” "
"permission to the Plone site’s default roles: Contributor, Owner, and "
"Manager. This is done using the ``rolemap.xml`` file as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:208
msgid "**Browser skin layer**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:210
msgid ""
"In order to install our browser skin layer, we also add a "
"``browserlayer.xml`` file with the following code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:222
msgid "Registering our setup profile"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:224
msgid ""
"This last step ensures everything can work. We update the package’s "
"``configure.zcml`` file with the code snippet that will load the extension "
"profile:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:251
msgid "Restarting Zope"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:253
msgid ""
"Now that you have a first version of your product ready to be tested, and "
"installed via your buildout, you need to (re)start Zope."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:257
msgid "Quick-installing the product"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:259
msgid ""
"Back in the Plone configuration (or Plone control panel), when you visit the"
" “Add/Remove Products” interface or the *portal\\_quickinstaller* tool "
"through the ZMI (at the root of the site), you can see the product show up "
"under the category of “installable products”."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/installing_and_using.rst:264
msgid ""
"Select and click the button to install the product. If everything goes fine,"
" the product should be installed, and you’re ready to start using it!"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:3
msgid "The content package and its modules"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:7
msgid ""
"Now we are ready for the core of the product, i.e. the content class "
"definition module (content/message.py)."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:10
msgid ""
"Since it provides a Python (sub)package, the ‘content’ directory contains 2 "
"modules:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:13
msgid "the usual \\_\\_init\\_\\_ module that initializes the package,"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:14
msgid ""
"the message module (message.py) where we will define the ‘InstantMessage’ "
"class."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:18
msgid "The message module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:20
msgid "**First imports we need**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:22
msgid ""
"We start the message module by adding the general Zope-related imports we "
"need, such as the ``implements`` function from the ``zope.interface`` "
"module:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:30
msgid ""
"We need to use a few classes and/or functions provided by the core of our "
"codebase, i.e. CMF/Archetypes. It is possible to have access to all the "
"classes and helper functions made publicly available by Archetypes, by "
"importing its façade or API module (``Products.Archetypes.atapi``) this way:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:40
msgid "**i18n support**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:42
msgid ""
"It is always a good idea to have an i18n-enabled application. To start using"
" Zope’s i18n support, let’s import the MessageFactory object created in the "
"product’s startup module:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:50
msgid ""
"The MessageFactory referenced with the ``_`` symbol can now be used to "
"provide i18nized labels, descriptions, and all the miscellaneous text "
"snippets that are injected in the UI, also known as “messages”. For a "
"content type implementation, this is useful for UI widgets; for example to "
"define the label of the content title field widget, we could define ``label "
"= _(u'Title')``. (See later for how we make use of this tool/practice.)"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:58
msgid "**ATContentTypes-based schema definition**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:60
msgid ""
"You can base your implementation directly on these stock Archetypes schemas."
" But you can add better support for Plone’s UI and content management "
"policies (such as the parameters that allow showing/hiding contents in the "
"navigation menu), by basing the implementation on ATContentTypes’ base "
"schema, ``ATContentTypeSchema``. To be compatible with that schema, you will"
" also need to inherit from ATContentTypes’ ATCTContent base class."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:68
msgid "Let’s add the import of modules we need for that:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:75
msgid ""
"Then, we import things internal to our product package, such as our defined "
"interface(s) and the configuration module (for access to things such as "
"``PROJECTNAME`` and ``MESSAGE_PRIORITIES``):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:85
msgid ""
"Now, we have everything we need to start building the schema, and then the "
"class that will use it. We start out by copying ATContentTypes’ "
"``ATContentTypeSchema``, and we extend it by adding our specific fields "
"and/or overriden field properties. ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:111
#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:176
msgid "**Notes:**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:113
msgid ""
"To instantiate an Archetypes schema object, you pass a tuple of field "
"objects to the ‘Schema’ class."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:116
msgid ""
"We define the body of the InstantMessage object using a RichWidget, so the "
"user can use formatting with a WYSIWYG editor."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:119
msgid ""
"The full list of out-of-the-box available Fields and Widgets can be found "
"`in the Fields section at the end of the manual`_. You can find more 3rd "
"party fields and widgets `here`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:123
msgid "**Content-type class definition**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:125
msgid ""
"The last step is to create the class for the InstantMessage content. It "
"inherits from ATContentTypes’ ATCTContent, which itself is based on AT’s "
"BaseContent, which automatically gives its ‘id’ and ‘title’ attributes, and "
"the entire Dublin Core metadata set (Title, Description, Creator, "
"CreationDate, etc):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:140
msgid ""
"The first information we add for the class definition is saying that it "
"implements the ``IInstantMessage`` interface that we have previously defined"
" (in ``interfaces.py``) and imported."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:148
msgid ""
"The next thing is assigning the reference of the Archetypes schema, using "
"the ``schema`` class attribute."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:155
msgid ""
"The content class definition is done. Now, we are ready to activate the "
"content type in Archetypes’ internal types registry. This is done using the "
"helper function called ``registerType``."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:163
msgid ""
"Congratulations! You have just created your first Archetype for Plone! It "
"allows you to handle the content of an instant message with Zope-based "
"persistent objects which:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:167
msgid "can be added within your Plone site,"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:168
msgid ""
"published by the Zope Publisher, which means you can visit them via their "
"URLs, etc…"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:170
msgid "searched since they are automatically indexed,"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:171
msgid "etc…"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:173
msgid ""
"But wait! You have some final packaging work to do to ease installation of "
"the product within your Plone site."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:178
msgid ""
"At the content class level, you could also provide the ‘actions’ attribute "
"useful for defining the settings of the type’s actions (for the "
"portal\\_actions tool). In Plone 3, this is no more needed, since this is "
"part of the FTI’s configuration details, and should be provided using "
"GenericSetup, in the types-related XML files (i.e. "
"‘profiles/default/types/InstantMessage.xml’). *Same for the aliases.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:186
msgid "The \\_\\_init\\_\\_ module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/instantmessage_module.rst:188
msgid ""
"The trick here is to simply import the message module so that all the code "
"of that module gets interpreted as soon as the Python interpreter "
"initializes the package."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:3
msgid "The interfaces module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:7
msgid ""
"The module where you define interfaces describing what your content "
"class(es) will do."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:11
msgid "Why do you need interfaces?"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:13
msgid ""
"Interfaces are useful to describe what a class will do. They are a kind of "
"contract between a class and the components that class interact with. "
"Starting a content management functionality package with writing interfaces "
"is recommended practice as it helps document your code. In addition to that,"
" Zope Component Architecture (ZCA) allows us to use interfaces as components"
" for adapting a class (which is useful as new user requirements appear) and "
"thus specializing its behaviour."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:22
msgid "The interface for the Instant Message class"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:24
msgid ""
"This is done by convention in the ``interfaces.py`` file, that you need to "
"add at the root of the package."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:27
msgid ""
"First, we need an import from Zope’s ``zope.interface`` module, which is "
"included into Zope 2’s distribution since version 2.8:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:34
msgid ""
"Following ZCA naming conventions (interface names start with an *I*), we "
"define the ``IInstantMessage`` interface we need for the ``InstantMessage`` "
"class that we will define later:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:45
msgid "That’s it!"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:47
msgid ""
"We could add attribute definitions to it using the "
"``zope.interface.Attribute`` class, but this is not mandatory. When an "
"interface is defined as above, without any function nor attribute, we call "
"it a “marker interface” meaning that it will be used simply to “mark” the "
"instances of the class that implements it."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/interfaces_module.rst:53
msgid ""
"More information about interfaces in the context of Archetypes can be found "
"in the `b-org tutorial - Interfaces section`_. For a detailed presentation "
"of interfaces and their usage patterns, read the `doctests document "
"available from Zope’s documentation site`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:7
msgid "Introducing a sample AT Product and the contents of the tutorial."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:9
msgid ""
"In this part of the manual, we discuss a sample AT Product to explain "
"CMF/Archetypes practices. We will be building a product called "
"**example.archetype**, which will implement a content type (InstantMessage) "
"that members with specific rights can use to add messages readable by other "
"members. However, as you may have guessed, this is more a learning example "
"than a usable product for a real website application."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:17
msgid ""
"What is a Product ? A product - a Zope product to be precise - is a third "
"party add-on that can be integrated to provide additional functionality. It "
"is a code package written using the Python language and conventions."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:22
msgid ""
"In order to understand this section you will need to have some prior "
"knowledge of working on the file system and programming protocols common to "
"Python and Zope."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:26
msgid ""
"The **example.archetype** product features the following CMF and Archetypes "
"capabilities:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:29
msgid "basic fields and widgets;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:31
msgid "defining and using a vocabulary for a field with a selection widget;"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:33
msgid "defining specific “Add” permissions for the contents."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/introduction.rst:35
msgid ""
"The code of the product can be downloaded here: "
"`http://plone.org/products/example.archetype/`_"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:3
msgid "The startup module"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:7
msgid ""
"The initialization module (__init__.py) provides the script that is run when"
" Zope is started."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:10
msgid ""
"Before starting the usual Zope product initialization code, we need to "
"define a Message Factory for when this product is internationalized."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:19
msgid ""
"The defined ``MessageFactory`` object will be imported with the special name"
" “\\_” in most modules, and strings like \\_(u“message”) will then be "
"extracted by i18n tools for translation."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:23
msgid ""
"Now, we import some useful stuff from the Archetypes API:\\ "
"``process_types`` is useful to get the product’s *content types*, associated"
" *constructors,* and *Factory Type Information* (FTI) data structures, while"
" ``listTypes`` can be used to list the types available in the product."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:29
msgid ""
"We also need to import the ``utils`` module from ``CMFCore`` to be able to "
"use its ``ContentInit`` class later."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:41
msgid ""
"Factory Type Information (FTI): Part of a CMF portal’s configuration, the "
"FTI for a content type is the data structure that holds the information "
"needed to expose a content type within the portal. From the integrator’s "
"perspective, the FTI is the object (Factory-based Type Information object) "
"within the portal\\_types component that tells CMF and Plone how to create a"
" content from the type and how to display it."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:49
msgid ""
"How exactly does ‘listTypes’ work: See those registerType() calls in your "
"content type modules? Notice how we also import those modules (but do "
"nothing with the import) in the ‘content’ package’s \\_\\_init\\_\\_.py. The"
" registerType() call tells AT about the type so that listTypes() can find it"
" later."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:55
msgid ""
"One of the important import steps : we import everything that is defined in "
"the content sub-package, i.e. all its modules:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:62
msgid ""
"Now, we import the configuration module, in order to have access to the "
"variables it contains, such as the “Add” permission setting:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:69
msgid ""
"Now for the real action. You define a function that is required by Zope and "
"CMF internals to initialize our content type(s):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:76
msgid ""
"The first part of the code of this function generates the *content types*, "
"the *constructors* and the *Factory-based Type Informations* (or FTIs) "
"required to make your types work with the CMF:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:86
msgid ""
"The second part instantiates an object of the class ContentInit (from "
"CMFCore), and registers your types in the CMF:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:99
msgid "**Handling several content types**"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:101
msgid ""
"There is a better way to write the code that initializes the content type "
"class with its “Add” permission and constructor, so that it still works if "
"you define several content types. This is useful if you plan to later "
"augment your product with additional types."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:106
msgid "Here is the improved code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:133
msgid ""
"We can use the “ADD\\_CONTENT\\_PERMISSIONS[atype.portal\\_type]” construct "
"because ADD\\_CONTENT\\_PERMISSIONS references a dictionary in which the "
"keys are the potential content types names."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:137
msgid ""
"The zip() function is a Python built-in that pairs up elements of two lists."
" In this case, “allTypes” will be a list of tuples containing a content type"
" from “content\\_types” and the corresponding constructor from "
"“constructors”."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/startup_module.rst:142
msgid ""
"If you have several content types, you should not forget to import each "
"content module, as is done for the message example discussed here !"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:3
#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:203
#: ../../reference_manuals/old/buildout/additional.rst:512
msgid "Troubleshooting"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:7
msgid ""
"When creating new content types, many factors can silently fail due to human"
" errors in the complex content type setup chain and security limitations. "
"The effect is that you don't see your content type in Add drop down menu. "
"Here are some tips for debugging."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:12
msgid ""
"1. Is your product broken due to Python import time errors? Check the "
"\\*Zope Management Interface (ZMI from now on) → Control Panel → "
"Products\\*. Turn on Zope debugging mode to trace import errors. To see "
"error messages directly in the console with buildout, use \\*bin/instance "
"fg\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:18
msgid ""
"2. Have you rerun the quick installer (GenericSetup) after "
"creating/modifying the content type? If not, (re)install the product from "
"the \\*Plone Control Panel → Add-on Products\\* or from the \\*ZMI → "
"portal\\_quickinstaller\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:23
msgid ""
"3. Do you have a correct Add permission for the product? Check the call of "
"the \\`\\`ContentInit()\\`\\` method inside the \\*\\_\\_init\\_\\_.py\\* "
"file. See `The startup module <http://plone.org/documentation/manual"
"/archetypes-developer-manual/a-semi-realistic-example/the-startup-module>`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:28
msgid ""
"4. Does it show up in the portal factory? Check \\*ZMI → portal\\_factory\\*"
" and \\*factorytool.xml\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:31
msgid ""
"5. Is it correctly registered as a portal type and implictly addable? Check "
"\\*ZMI → portal\\_types\\*. Check \\*default/profiles/type/yourtype.xml\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:35
msgid ""
"6. Does it have a correct product name defined? Check \\*ZMI → "
"portal\\_types\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:38
msgid ""
"7. Does it have a proper factory method? Check \\*ZMI → types\\_tool\\*. "
"Check Zope logs for \\`\\`\\_queryFactory\\`\\` and import errors."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/troubleshooting.rst:41
msgid ""
"8. Does it register itself with Archetypes? Check \\*ZMI → "
"archetypes\\_tool\\*. Make sure that you have \\`\\`ContentInit\\`\\` "
"properly run in your \\*\\_\\_init\\_\\_.py\\*. Make sure that all modules "
"having Archetypes content types defined and \\`\\`registerType()\\`\\` calls"
" are imported in \\*\\_\\_init\\_\\_py\\*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:3
msgid "Adding a custom view for the content"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:7
msgid ""
"Providing the custom presentation template for the InsantMessage, using "
"Zope's browser layer mechanism."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:11
msgid "The browser layer concept"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:13
msgid ""
"A browser layer is a concept introduced by Zope Component Architecture (Zope"
" 3), and which can be used in Plone. It is useful for registering views and "
"resources (images, CSS, JS) for the site, in a way that they can override "
"default elements (which are implicitly registered for the default browser "
"layer) or be overriden when needed, even through the ZMI. *A browser layer "
"is similar in purpose to a CMF skin layer, but is implemented differently*."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:21
msgid "To add a browser layer to your product, you need 3 steps:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:23
msgid ""
"Define the marker interface for the browser layer (for example, "
"``example.archetype.interfaces.IInstantMessageSpecific``.)"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:25
msgid ""
"Add an XML file in your extension profile named ``browserlayer.xml`` "
"providing the browser layer settings to the site. *(This step is covered "
"later as part of the various product setup details.)*"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:28
msgid "Register (using ZCML) your browser views, templates and resources."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:30
msgid "For more about browser layer techniques, check `this tutorial`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:33
msgid "Defining the browser layer interface"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:35
msgid "Add a marker interface for the browser layer (in ``interfaces.py``):"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:46
msgid "Adding and registering the browser template"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:48
msgid ""
"To provide a custom view template for your content type, you need a page "
"template called ``instantmessage.pt`` in the ``browser/`` directory, and a "
"ZCML declaration in the ``configure.zcml`` to associate the template to the "
"``IInstantMessageSpecific`` Zope 3 skin layer."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:67
msgid "Here is the example template code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:100
msgid ""
"The new methods we use on the content object (getPriority, getBody, etc), "
"called the “accessors”, are generated by Archetypes as part of its internal "
"mechanisms, based on the field definition in the content schema; so if the "
"field is called ‘priority’, there is a generated method called ‘getPriority’"
" responsible to return the stored value on the object. Note that the code of"
" the method is not available somewhere for modification ; “generated” here "
"means it is available in the server’s memory, within Archetypes engine’s "
"registries, when the Zope server has started."
msgstr ""

#: ../../reference_manuals/old/archetypes/a_simple_at_product/view_template.rst:110
msgid ""
"After the product installation step, which we still have to discuss (see "
"later), Plone should be able to find this template and use it as the content"
" object’s default view when you invoke the content’s URL."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3
#: ../../reference_manuals/old/portlets/appendix/index.rst:3
msgid "Appendix: Practicals"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:7
#: ../../reference_manuals/old/archetypes/fields/index.rst:7
msgid "Plone Developer Manual is a comprehensive guide to Plone programming."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:10
msgid "1. How-To Extend A Basic Archetype Content Type"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:12
msgid ""
"This How-To describes what to do next after you've gotten the basic "
"Archetype examples working. You can add functions, views, actions, and edit-"
"page validation."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:16
msgid ""
"Ok, so you've got the Archetype examples to work, and now you'd like to know"
" how to flesh out the basic example into something useful. (That's how I "
"started; I knew I needed to make new Content Types, but didn't know how they"
" worked. I got the examples going, then tried to figure out how to modify "
"them to do what I wanted.) I found learning Plone/Zope very frustrating "
"until I got to this point. Then, once I figured out how to make Content "
"Types do what I wanted, it all made sense."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:25
msgid ""
"**Adding Functions** This is probably one of the first things on your mind. "
"Where do I add functions to my Content Type? How do I call them? What syntax"
" do I use? Well, these were the things that I wondered about. I figured out "
"how to do them after some trial and error. I never made a real website "
"before, where I had to write scripts (a blog doesn't count). So even though "
"I had a lot of python experience, I was confused at first. [*First, know "
"that the Zope server converts a URL path into an object path, to find the "
"object that will render your page. This is covered in the Zope Developer's "
"guide. The key point you need to know is that there's a parallel between the"
" URL and your object hierarchy, but it's not exactly the same*.]"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:35
msgid ""
"To cut to the chase, Zope figures out which object/function the URL is "
"pointing to, and it takes the query string (?arg=val,arg2=val2, etc.) and "
"uses it to figure out all the right arguments for the function call. So, you"
" define your function in the ususal way, i.e.,"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:61
msgid ""
"**Adding Actions** I was confused when I saw the description of *actions* in"
" the Plone manual. Here's how I think of them: they're just the hyper-linked"
" tabs along the top of the Content Type (content actions) or horizontal site"
" navagation (site actions). The links are typically to a Content Type "
"function (that returns a page), or to a page template (I only know how to "
"make .pt and .cpt types so far). The actions for the Content Type are "
"defined (overriden) using the Factory Type Information format, and the "
"process well described in the Archetype tutorials. I'll just add that you "
"can make most of the tabs (actions) visible=True or visible=False. You can "
"append your own actions that show up as tabs for your content type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:74
msgid ""
"**Changing Page Views** You can change the various views of your content "
"type by defining new page templates to display your data. Typically, these "
"page templates (.pt) are placed within the skins/ directory of your product."
" I can't fill you in on exactly how Zope maps the URL "
"(http://.../myArchExample/my\\_view) to the my\\_view.pt, but the details "
"are taken care of (by the Install.py script?) and you should put your page "
"templates in the skins/ directory. *[This section needs updating, as soon as"
" I learn how it's done.]*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:84
msgid ""
"**Validating the Edit Form** You probably have a need to validate the data "
"that users enter on the edit page. This process is called *validation*, and "
"the scripts that implement the rules are called *validators*. There's a "
"clean way to do this in Archetypes using built-in field validators and your "
"own post\\_validation() function for the Content Type. You don't have to "
"write any (.cpt,.cpy,.vpy) form templates, or controller scripts. Of course,"
" validation is optional, so you can skip either step."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:95
msgid ""
"Use field validators on individual entries (see the validator = (,) field "
"attribute). This is the first-line of validation."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:97
msgid ""
"Define a post\\_validation() function. This allows you to validate fields in"
" the context of the entire class, and set error (re-do) flags for individual"
" fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:101
msgid ""
"After the user hits the 'submit' button on the edit page, the field "
"validators are run first. If any validators fail, the input field is "
"highlighted, and the user is sent back to the edit page to fix the errors."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:106
msgid ""
"If all the field validators pass, then your post\\_validate(self, REQUEST, "
"errors) is called. The form keys and data are passed to you in the REQUEST "
"dictionary. Your code will validate the edit form values in the REQUEST "
"dictionary. If you see errors that require fixing, you'll set them in the "
"errors dictionary (using the corresponding key in the REQUEST). For example,"
" here's a"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:127
msgid ""
"**Adding Child Members** If your content type is a folder-like object, you "
"can write functions that will add child objects. This may be useful, for "
"example, if your Content Type is a ledger, and you need to add new "
"transactions when the user hits an action. The following example code shows "
"how to do this."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:152
msgid ""
"2. Implement Archetypes ComputedField and ComputedWidget on your Product and"
" reference other Fields"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:154
msgid ""
"A simple use of ComputedField and ComputedWidget referencing other fields, "
"built-in or 3rd party, in the same Plone product"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:158
msgid "Motivation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:161
msgid "There are many reasons why this how-to exists:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:164
msgid "Almost no Archetypes examples using ComputedField and ComputedWidget"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:166
msgid ""
"We want our product to process some data on itself, but reload isn't a "
"matter of concern"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:168
msgid "We love PZP (Python-Zope-Plone)!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:171
msgid "What do we need?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:174
msgid "A Plone installation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:175
msgid "A nice text editor (my wintel box runs SciTE)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:176
msgid ""
"Some product (for real dummies like me, try "
"http://plone.org/documentation/tutorial/anonymously-adding-custom-content-"
"types-with-argouml-and-archgenxml/view)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:179
msgid "**What we are going to achieve?**"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:182
msgid "Make a page process it's own information"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:184
msgid ""
"Let's say you created a product, maybe using ArgoUML (an UML editor) and "
"ArchGenXML. One thing you might realize it's missing on creating UML's is "
"that: we create classes (Plone products), their types are also classes "
"(Archetypes' fields and widgets) and Attributes (Fields and Widgets' "
"properties) as TD's (tagged data) for Archetypes' types, but we have no "
"*methods*! But we could do more if we inserted code: classes are made of "
"attributes and methods (code). But as UML editors are not that Python "
"friendly, we do that by hand."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:195
msgid "So, how?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:197
msgid ""
"If you already have navigated the path of a product, you've stumbled on some"
" source files (.py) inside, so take some time to read their source (*Read "
"the source, Luke!*). Probably you've seen some like this (for example, "
"MyOrder.py):"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:277
msgid ""
"Aargh! I've just core dumped and almost killed 30! The above code can be "
"divided in two parts: Schema and Class (Product). We have declared 3 "
"different fields in the schema: the first is a bultin trivial Archetype "
"field; the second is imported from the Product DataGridField (you need it "
"installled on your Plone instance to work); the third is our the field we "
"want to change as someone changes values on the form."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:289
#: ../../reference_manuals/old/archetypes/appendix.rst:295
msgid ","
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:301
msgid "or"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:307
msgid ""
"We've just called something (a function, in fact) named *calculateTotal*. "
"But smart as we are, we realized that expresssions called this way must be "
"somewhere in our context scope. I mean, inside our class definition. The "
"function definition itself isn't that simple: it adds up the total and "
"returns its value. What isn't simple? Our generous DataGridField returns a "
"tuple of dictionaries like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:326
msgid ""
"The *for* loop iterates over every item on the tuple and searches for two "
"dictionary items. Other field are rather simple to retrieve data: just use "
"field's name attribute. The *widget=SomeWidget(modes='view',...)* realizes "
"the feat of showing this field only on the view mode: not when adding the "
"item and editting, nor when editting an existing item."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:334
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:224
msgid "What's next?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:337
msgid "What could we do with PhotoField (ImageWidget)?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:338
msgid "try-except is always recomended"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:339
msgid "Could this better than *mutate* ?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:340
msgid ""
"Can we make a file avaible for download with some strange mime type based on"
" the information of this product?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:344
msgid ""
"3. Making the view page of a content type use your schemata declarations"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:346
msgid ""
"How to make the schemata declarations in a Archetypes schema be used in the "
"view page of a content type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:352
msgid ""
"Declaring schematas in your Archetype schema has the nice effect of "
"displaying the fields of the different schemas on different edit pages (very"
" much like a \"wizard\" for adding a new content type instance). Often times"
" you might like to also have the view page be divided according to the "
"different schemas you have declared. This is not done automatically by "
"Archetypes so in this document I'll show you how to do it yourself. Don't "
"worry! It's really quite easy."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:362
msgid "Python class and schema"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:364
msgid ""
"I'll be using a simple article content type I have constructed for this how-"
"to to show you how the schematas can be used on your content type's view "
"page. The example type is really not very usable, but just complex enough to"
" show you how to do this. It has a schema of four fields in addition to the "
"default id and title fields: abstract, body, firstname, lastname. The "
"abstract and body fields are in a schemata named article and the firstname "
"and lastname field in a schemata named author."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:373
msgid ""
"I have also defined the title and id fields to be in schemata article. This "
"was done so I won't have an extra schemata called default and so I can use "
"the title field for the title of the article. (Remember to use "
"``BaseSchema.copy()``!)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:378
msgid ""
"The class itself has just the schema declaration and a new view action "
"definition. I have defined the view action to use a template called "
"article\\_view that we'll be getting to shortly."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:382
msgid "Here is the file in it's entirety:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:475
msgid "View template"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:477
msgid ""
"The view template article\\_view is the main part of this how-to. It has the"
" page template code to generate the different pages for the different "
"schematas."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:481
msgid ""
"First you should copy the base.pt file from the Archetypes skins folder (on "
"my Debian GNU/Linux unstable it's in "
"/usr/share/zope/Products/Archetypes:1.3/skins/archetypes) to your product's "
"skins folder. It has most of the template code you'll need ready, so you'll "
"only need to make some minor changes to make this work. Also it uses all the"
" default macros and such, so you'll view page will look like a real plone "
"page."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:489
msgid ""
"The base.pt template just goes through all the fields of your content type "
"and shows their widgets. What we want to do is to have it only go through "
"the fields of one schemata at a time and give us links to see the others. "
"This will be done using REQUEST parameters to the scripts."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:495
msgid ""
"I'll go though the changes from the top of the file downwards so you'll have"
" a easier time keeping up and making the changes to your own template."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:500
msgid "Links to the different schematas"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:502
msgid ""
"We'll want the list of different schematas to be at the top of the page, so "
"that'll go in first. Find the line that says '``<metal:main_macro define-"
"macro=\"main\">``'. This is where the body of the template starts. After "
"this line is the header with the title and the little icons for edit, print "
"and such, and I want to have my links to show up above that. So after the "
"beginning of the body and above the header add the following code:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:524
msgid ""
"This just repeats over our schematas' names (we get them with "
"``here.Schemata().keys()``) and prints all of them on one line as links, "
"each one in square brackets. The links are to the same view page, but they "
"all set a parameter in REQUEST called page that points to the schemata we "
"are linking to. This isn't very pretty so you'll probably want to make them "
"look nicer if you like. The '``schemata != 'metadata'``' part is because "
"there's a schemata called metadata created automatically for your content "
"type to support default standard metadata which can be set via the "
"properties tab and that we do not want to include here."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:536
msgid "Showing only the schemata we want"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:538
msgid ""
"In the next part we'll be diving deeper into the code. You're looking for a "
"part that says '``tal:repeat=\"field "
"python:here.Schema().filterFields(isMetadata=0)\"``'. This repeats through "
"the fields of your content type and the following parts show their widgets. "
"What we want to do here is to have it repeat through the fields of the "
"schemata we want instead of all of them. In the previous part we set a "
"parameter in REQUEST called page that points to the schemata we want to see,"
" and here we want to use that to pick which schemata's fields to loop over. "
"So just go ahead and replace the part with '``tal:repeat=\"field "
"python:here.Schemata()[here.REQUEST.get('page', "
"here.Schemata().keys()[0])].filterFields(isMetadata=0)\"``'. This just gets "
"the page parameter from REQUEST (if page is not found, ie. the template is "
"called with no parameters, then first schemata, in this case article, is "
"used) and loops through the fields of the schemata with that name."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:554
msgid "The completed article\\_view.pt looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:685
#: ../../reference_manuals/old/archetypes/appendix.rst:1587
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:2
msgid "Conclusion"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:687
msgid "So that was it. I told you it was going to be easy!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:689
msgid "Happy hacking!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:692
msgid "4. Enabling versioning on your custom content-types"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:694
msgid ""
"Plone 3 includes a robust versioning system as well as a tool for viewing "
"diffs, which allows you to easily see the changes between two revisions. "
"This document explains how to integrate versioning and diff functionality "
"with your custom Archetypes-based content-types."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:701
#: ../../reference_manuals/old/archetypes/create_event_hook.rst:15
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:28
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:13
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:17
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:19
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:16
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:12
#: ../../reference_manuals/old/buildout/prerequisites.rst:3
#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:25
#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:14
msgid "Prerequisites"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:703
msgid ""
"You'll need a Plone 3 instance and a custom product which contains at least "
"one Archetypes-based content-type on which you want to enable versioning."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:707
msgid ""
"You'll also need to have the **Working Copy Support (Iterate)** product "
"installed.  This product is part of the Plone core so to install it, all you"
" need to do it visit the **Add-on Products** section (a.k.a. Quickinstaller)"
" of the **Plone control panel** and select it for installation."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:714
msgid "Creating a setup handler script for GenericSetup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:716
msgid ""
"The integration code we'll be writing here is best run as a setup handler "
"using GenericSetup. If your product doesn't already have a GenericSetup "
"profile and a custom setup handler, `this tutorial "
"<https://plone.org/tutorial/borg/setup-using-genericsetup>`_ provides "
"instructions on how to create those."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:723
msgid "Declaring versionable types in your setup handler"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:725
msgid ""
"The portal\\_repository tool stores a list of content-types on which version"
" is enabled.  With the following code we create a list of the custom types "
"on we which we want to activate versioning and then notify the repository "
"tool to start versioning the types in this list."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:731
msgid ""
"If you copy the code below, make sure to edit the TYPES\\_TO\\_VERSION "
"setting so that it contains a list of the types on which you want to "
"activate versioning."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:756
msgid ""
"Now we call this function from the importVarious() function in our setup "
"handler script.  Make sure to pass the portal object as a parameter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:770
msgid "Enabling visual diffs on your versioned types"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:772
msgid ""
"Now that you've enabled versioning, you'll probably want to enable visual "
"diffs so you can compare the changes made between different versions of an "
"object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:776
msgid ""
"Starting in Plone 3.2 the diff tool can be configured via a GenericSetup "
"configuration file.  You'll want to create or edit the **diff\\_tool.xml** "
"file in the /profiles directory of your product.  Here's an example "
"confirmation file that enables compound diffs on the 3 content-types used in"
" the example above."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:801
msgid ""
"For Plone versions earlier than 3.2, there is not a GenericSetup handler for"
" configuring the diff tool, but you can create these settings through the "
"ZMI using the **portal\\_diff** tool.  In the **Portal Type** drop-down menu"
" select the content-type on which you want to enable diffs.  In the **Field "
"name** box type \"any\".  For the **Diff Type** select \"Compound Diff for "
"AT Types\".  Finally click the **Add Field** button.  Repeat these steps for"
" each content-type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:811
msgid "Deploying your new versioning and diffs policy"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:813
msgid ""
"To deploy these changes you'll need to re-run you product's GenericSetup "
"policy.  If your instance is not running in debug mode, you'll first need to"
" restart your Zope instance to make your new filesystem code available."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:818
msgid ""
"Assuming you've used paster to create your product package, reinstalling "
"your product in the **Add-on Products** section of the **Plone control "
"panel** should be sufficient to re-run your** GenericSetup policy** .  If "
"your product's install method does not run your GenericSetup policy, you may"
" need to visit the **portal\\_setup** tool in the ZMI and run it manually."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:826
msgid "Verifying that versioning and visual diffs are now enabled"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:828
msgid ""
"Visit an instance of one of the types on which you've enabled versioning.  "
"Make some edits to one or more of the fields save those changes.  Next, "
"visit the **history** tab for the item you just edited. You should see a "
"list showing two versions.  Click the link to compare versions you should "
"see a diff showing you what has been changed between the two revisions."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:836
msgid "5. b-org: Creating content types the Plone 2.5 way"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:838
msgid ""
"Plone 2.5 brings us closer to the promised land of Zope 3. Zope 3 brings us "
"a new way of working. This tutorial will show how to marry the old and the "
"new, to make Plone products that are more extensible, better tested and "
"easier to maintain."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:844
msgid "5.1. Introduction"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:846
msgid "What is b-org, and what will you learn here?"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:848
msgid ""
"b-org stands for \"base-organisation\". The name had nothing whatsoever to "
"do with my desire to get an svn URL of "
"`http://svn.plone.org/svn/collective/borg "
"<http://svn.plone.org/svn/collective/borg>`_. Promise. In fact, it used to "
"be called *company* , which some people rightly pointed out is a bit too "
"generic and opens up the possibility of conflicts with other people's code. "
"It just proves that naming generic components is difficult."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:856
msgid ""
"**Generic** is the key word here. Functionally, b-org provides "
"infrastructure to help you manage **Departments** , **Employees** and "
"**Projects** in a natural way. Departments are containers for employees, "
"employees are linked to projects by references. Using *membrane* , these "
"objects become sources for users and groups, so that a department is a group"
" for all the employees in it, and employees become real users of the system,"
" with usernames and passwords. Projects manage local roles, so that "
"employees that have been associated with the project are able to add and "
"modify content in it. Other users may or may not be able to view content in "
"a project, depending on its workflow state."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:868
msgid ""
"However, b-org makes no assumptions about which metadata you want to "
"associate with departments, employees or projects. For that, it expects you "
"to plug in your own content schema. It also delegates almost all its "
"functionality to smaller components, so that if you, for example, want to "
"store authentication details via LDAP or change the way in which users are "
"employees to projects, you can do so by implementing small, isolated "
"components rather than sub-classing and re-implementing large chunks of the "
"three basic content types."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:878
msgid ""
"That's all well and good, but you're probably not going to want to read a "
"lengthy tutorial just about how great b-org is. As the title promises, this "
"tutorial is about **leveraging new technologies available in Plone 2.5** to "
"write better content types and other software in Plone. Hopefully, you will "
"find the techniques described here useful whether you are writing a member "
"management module using membrane (mmmm), or other code. I for one, want to "
"go and rewrite several of my products (like Poi) to make them more "
"extensible and flexible after having adopted these techniques. Hopefully, "
"you will also learn something about the **development process** , in "
"particular **test-driven development** , that I followed, and how the future"
" of Plone is entangled in **Zope 3** ."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:892
msgid ""
"This tutorial should be viewed as complementary to, rather than superceding,"
" my earlier tutorial entitled `*RichDocument - Creating Content Types the "
"Plone 2.1 way* <https://plone.org/documentation/manual/developer-"
"manual/archetypes/appendix-practicals/richdocument>`_. The techniques of "
"RichDocument, in particular relating to extending ATContentTypes, are still "
"valid in Plone 2.5. What Plone 2.5 allows us to do, however, is to achieve "
"better separation of concerns between content storage, business logic and "
"view logic, due to the added spices of Zope 3. For RichDocument, the gain "
"wouldn't be that great since it's relatively simple (and focuses on doing as"
" little as possible by re-using as much as possible from ATContentTypes). "
"Hence, I didn't update the RichDocument tutorial, nor do I feel as compelled"
" to update RichDocument itself (yet). b-org is a more ambitious example "
"which allows us to illustrate the new techniques more fully."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:907
msgid ""
"One thing to note is that this tutorial is still centered on **Archetypes** "
", and assumes you know the basics of Archetypes development on the "
"filesystem. Archetypes is rooted in a pre-Zope 3 world, and there are times "
"when we have to accommodate it in ways that make our clean patterns a bit "
"messier - luckily, not too often. There are ways of managing content in Zope"
" 3 that can be applied to Plone, for example by way of `zope.formlib "
"<https://plone.org/documentation/manual/developer-manual/archetypes"
"/appendix-practicals/using-zope-formlib-with-plone>`_, but these are "
"generally not quite ready to replace what we can do today with Archetypes. "
"In the future, they may be, but more likely Archetypes will converge a bit "
"more with its Zope 3 equivalents and blur the lines between the two "
"approaches. The upshot is that what you know about Archetypes today "
"continues to be relevant, and is augmented by the Zope 3-inspired techniques"
" you will find here."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:923
msgid "5.2. A whirlwind tour of Zope 3"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:925
msgid ""
"Zope 3 is still fairly new. After reading this tutorial, it should hopefully"
" start to feel a bit more familiar. In this section, we will give a brief "
"overview of what is different in Zope 3 and how it fits into Plone."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:930
msgid ""
"The name Zope 3 is a lie. True - it is brought to you by many of the same "
"clever people who built Zope 2, one of the most advanced open source app "
"servers of its day. True, it is still Python, it still publishes things over"
" the web, and there are still Zope Page Templates. However, Zope 3 is about "
"small, re-usable components orchestrated into a flexible framework. It is "
"this flexibility that allows us to use Zope 3 technologies in Zope 2 "
"applications like Plone."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:939
msgid ""
"A piece of wizardry called *Five* (Zope 2 + Zope 3 = Five, geddit?) makes a "
"number of Zope 3 components directly available in Zope 2, and since Zope "
"2.8, almost all of Zope 3 has shipped with Zope 2 as a python library. Plone"
" 2.5's primary purpose was to lay the foundations for taking advantage of "
"Zope 3 technologies in Plone."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:945
msgid ""
"Zope 3 may seem a bit alien at first, because it uses strange concepts such "
"as **adapters** and **utilities** . Luckily, these are not so difficult to "
"understand, and once you do, you will find that they help you focus your "
"development on smaller and more manageable components. You will also find "
"that these basic concepts underpin most of the innovative parts of Zope 3."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:955
msgid ""
"Everything in Zope 3 starts with interfaces. Unlike Java or C#, say, Python "
"does not have a native type for an interface, so an interface in Zope 3 is "
"basically a class that contains only empty methods and attributes, and "
"inherits from *Interface* . Here is a basic example:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:980
msgid ""
"Interfaces are primarily documentation - everything has docstrings. Also "
"note that the *wear()* method lacks a body (there is not even a *pass* "
"statement - the docstring is enough to keep the syntax valid), and does not "
"take a *self* parameter. That is because you will never instantiate or use "
"an interface directly, only use it to specify the behaviour of an object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:987
msgid ""
"An object can be associated with an interface in a few different ways. The "
"most common way is via its class. We say that the class *implements* an "
"interface, and objects of that class *provide* that interface:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1005
msgid ""
"The *implements(IShoe)* line means that objects of this class will provide "
"IShoe. Further, we fulfill the interface by setting the two attributes (we "
"could have implemented them as properties or used a an \\_\\_init\\_\\_() "
"method as well). The *IShoeWearing* interface will be implemented in the "
"section on adapters below."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1011
msgid ""
"We use interfaces to model components. Interfaces are normally the **first "
"stage of design** , in that you should define clear interfaces and write "
"actual classes to fulfill those interfaces. This formalism makes for great "
"documentation - interfaces are conventionally found in an *interfaces* "
"module, and this is typically the first place you look after browsing a "
"package's documentation. It also underpins the adapter and utility system - "
"otherwise known as the Component Architecture - as described below."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1021
msgid ""
"Note that you can use common OOP techniques in designing interfaces. If one "
"interface describes a component that has an \"is-a\" or \"has-a\" "
"relationship to another component, you can let interfaces subclass or "
"reference each other. An object will provide the interfaces of its class, "
"and all its base-classes, and all base-interfaces of those interfaces. Don't"
" worry about untangling that - it works the way you would expect."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1029
msgid ""
"You can also apply interfaces directly to an object. Of course, if that "
"interface has methods and attributes, they must be provided by the object, "
"and unless you resort to crazy dynamic programming, the object will get "
"those from its class, which means that you may as well have applied the "
"interface to the class. However, some interfaces don't have methods or "
"attributes, but are used as markers to distinguish a particular feature of "
"an object. Such **marker interfaces** may be used as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1054
msgid ""
"Marker interfaces are very useful for things that change at run-time in "
"response to some event (e.g. some user action), and thus cannot be "
"determined in advance. In a moment, you see that what you will learn about "
"adapters and adapter factories below also applies to marker interfaces - it "
"is possible to alter which adapter factory is invoked by applying a "
"different marker interface."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1062
msgid ""
"It's also possible to apply interfaces directly to classes (that is the "
"*class itself* provides the interface, as opposed to the more usual case "
"where the class implements the interface so that objects of that class "
"provides it - this is useful because it allows you to group those classes "
"together and describe the *type* of class they are) and to modules (where "
"you want to describe the public methods and variables of a module). These "
"constructs are less common, so don't worry about them for now. Look at the "
"documentation and interfaces (!) in the *zope.interface* package for more."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1075
msgid ""
"The most important thing that Zope 3 promises is **separation of concerns** "
". In Zope 2, almost everything has a base class that pulls in a number of "
"mix-in classes, such as *SimpleItem* (surely, the most ironically named "
"class in Zope 2) and its plethora of base classes that include *RoleManager*"
" , *Acquisition.Implicit* and many others. This means that a class written "
"for Zope 2 is nearly impossible to re-use outside of Zope."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1083
msgid ""
"Furthermore, in Zope 2 we are tightly wedded to the *context* (aka *here* ) "
"because it is so convenient to use in page templates, workflow scripts etc. "
"For example, people often write an Archetypes class that contains a schema "
"(storage logic), methods for providing various operations (business logic) "
"and methods for preparing things to display in a page template (view logic)."
" Often, people do this simply because they can't think of a better place to "
"put things, but it does mean that re-using any part of the functionality "
"becomes impossible without importing the whole class - and its base classes,"
" which include Archetypes' BaseObject, CMF's DynamicType, and Zope's "
"SimpleItem - to name a few!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1095
msgid ""
"Think about the example above. The *Shoe* class is well-contained and only "
"concerned with one thing - storing the attributes of shoes. It can be used "
"as an abstraction of shoe anywhere, and is very lightweight. Now let's "
"consider that we may want to wear shoes as well. We can create a pair of "
"shoes easily enough:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1108
msgid "Now we want someone to wear these shoes. Let's say we have a person:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1127
msgid ""
"In a Zope 2 world, we may have required Person to mix in some "
"*ShoeWearingMixin* class that specified exactly how shoes should be worn. "
"That makes for fat interfaces that are difficult to understand. In a Zope 3 "
"world, we would more likely use an adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1133
msgid ""
"An adapter is a glue component that can adapt an object providing one "
"interface (or a particular combination of interfaces, in the case of a "
"multi-adapter) to another interface. We already have a specification for "
"something that wears shoes, in the form of *IShoeWearing* . Here is a "
"snippet of code that may use this interface:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1145
msgid ""
"The question is what to do with the '...' - how do we obtain an object that "
"provides IShoeWearing? Code like this is normally operating on some context,"
" which in this case may be a *Person* . If that Person implemented "
"IShoeWearing (or at least the *wear()*method), it would work, but then we "
"are making undue demands on Person. What we need is a way to *adapt* this "
"IPerson to something that is IShoeWearing. To do that, we need to write an "
"adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1171
msgid ""
"Here, we implement the IShoeWearing interface. Note how the *wear()* method "
"now has a *self* parameter, since this is a real object. Also note the "
"*\\_\\_init\\_\\_()* method, which takes a parameter conventionally called "
"*context* . This is *the thing that is being adapted*, in this case an "
"object providing IPerson. We store this as an instance variable and then "
"reference it later. Note that adapters are almost always transient objects "
"that are created on the fly (we will see how in a second)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1180
msgid "We could now do something like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1187
msgid ""
"However, this still requires that we know exactly which adapter to invoke "
"for the particular object (*person* in this case), effectively creating a "
"tight coupling between the adapter, the thing being adapted, and the code "
"using the adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1192
msgid ""
"Luckily, the Zope 3 Component Architecture knows how to find the right "
"adapter if you only tell it about the available adapters. We do that using "
"**ZCML** , the Zope Configuration Markup Language. This is an XML dialect "
"that is used to configure many aspects of Zope 3 code, such as permissions "
"and component registration. You can do what ZCML does in Python code as "
"well, but typically it's more convenient to use ZCML because it allows you "
"to separate your logic from your configuration."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1201
msgid ""
"ZCML directives are stored in file called *configure.zcml*, which itself may"
" include other files. A *configure.zcml* file in your product directory "
"(Products/myproduct/configure.zcml) will be picked up automatically by Five."
" Here is a snippet that will register the above adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1211
msgid "You will sometimes see a fuller form of this directive, like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1221
msgid ""
"Here, we are specifying full dotted names to interfaces in the *for* or "
"*provides* attributes. These are equivalent to the *adapts()* and "
"*implements()* calls we used when defining the adapter. Note that *adapts()*"
" did not work prior to Zope 2.9 (so the ZCML *for* attribute is mandatory), "
"and that if your adapter class for some reason implements more than one "
"interface (e.g. because it's inheriting another adapter that has its own "
"*implements()* call), you may need to specify *provides* to let Zope 3 know "
"which interface you're really adapting to."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1231
msgid ""
"Notice here that the dotted names begin with dot. This means \"relative to "
"the current package\". You can write *\"..foo.bar\"* to reference the parent"
" package as well. You could specify an absolute path instead, e.g. "
"*Products.Archetypes.interfaces.IBaseObject*or "
"*zope.app.annotation.interfaces.IAttributeAnnotatable*. Typically, you use "
"the full dotted name for things in other packages and the relative name for "
"things in your own package."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1239
msgid ""
"The *factory* attribute normally references a class. In Python, a class is "
"just a callable (taking the parameters specified in its "
"*\\_\\_init\\_\\_()*method) that returns an instance of itself. You can "
"reference another callable as well if you need to, such as a function that "
"takes the same parameters (only *context* in this case - obviously there is "
"no *self* for functions), finds or constructs and object (which must provide"
" *IShoeWearing* ) and then returns it. This is rarely used, but can be very "
"powerful (for example, it could find an object providing the given interface"
" in the adapted object's annotations - but don't worry if you don't "
"understand that for now)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1251
msgid ""
"With this wiring in place, we can now find an adapter for an IPerson to "
"IShoeWearing. The Component Architecture will ensure that we find the "
"correct adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1262
msgid ""
"We are \"calling\" the interface, which is a convenience syntax for an "
"adapter lookup. If an adapter cold not be found, you will get a "
"*ComponentLookupError* . There are plenty of functions in *zope.component* "
"to discover adapters and other components - see *zope.component.interfaces* "
"for the full story."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1268
msgid ""
"It is important to realise that the adapter lookup is essentially a search. "
"The Component Architecture will look at the interfaces provided by *person* "
"and look for a suitable adapter to IShoeWearing. As mentioned before, it's "
"possible for an object to provide many interfaces, e.g. inherited from its "
"base classes, implemented explicitly by the object (by declaring "
"*implements(IFoo, IBar)*), via ZCML or because an object directly provides "
"an interface. It is therefore possible that there are multiple adapters that"
" could be applicable. In this case, Zope 3 will use the *interface "
"resolution order* (IRO) to find the**most specific** adapter. The IRO is "
"much like you would expect of polymorphism in traditional OOP:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1282
msgid ""
"an interface directly provided by the object is more specific than one "
"provided by its class"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1284
msgid ""
"an object provided by an object's class is more specific than that provided "
"by a base class"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1286
msgid ""
"if an object has multiple base classes, interfaces are inherited in the same"
" order as methods are inherited"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1288
msgid ""
"if a class implements multiple interfaces, the first one specified is more "
"specific than the second one, and so on"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1291
msgid ""
"Remember marker interfaces? One use of marker interfaces is to imply a "
"particular adapter. Think about the case where you may have  specific "
"adapter to IShoeWearing for some marker interface IAmputee. If you mark a "
"person as an IAmputee due to some unforunate accident, the IShoeWearing "
"adapter may raise a warning rather than modify the apparel list."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1298
msgid ""
"All of this may seem a little roundabout and unfamiliar, but you'll get to "
"grips with it soon enough. Let's re-cap how we arrived at this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1303
msgid ""
"We modelled our application domain with some interfaces - IPerson, IShoe"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1305
msgid ""
"We modelled an aspect of a person (or other object) for wearing shoes - "
"IShoeWearing"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1307
msgid ""
"We wrote some simple classes that implemented the domain interfaces IPerson "
"and IShoe"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1309
msgid ""
"We wrote and registered a simple adapter that could adapt an IPerson to "
"IShoeWearing"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1312
msgid ""
"Then we showed how this could be used by some hypothetical client code. The "
"upshot is that the client code only needed to know about IPerson and "
"IShoeWearing, not how the aspect of a person that involves wearing shoes is "
"implemented. The Component Architecture will ensure that the appropriate "
"adapter is found, regardless of whether the person is a vanilla IPerson, a "
"sub-class with a more specific sub-interface, or an instance with a marker "
"interface applied."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1324
msgid "Multi-adapters, named adapters and views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1326
msgid ""
"In the example above, we used an adapter with a single context. That is the "
"most common form of adapter, but sometimes there is more than one object "
"that forms the context of an adapter. As a rule of thumb, if you find "
"yourself passing a particular parameter into every method of an adapter, it "
"should probably be a multi-adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1333
msgid ""
"The most common example of a multi-adapter that you will come across is that"
" of a *view*, which incidentally is also how Zope 3 solves the \"where do I "
"put my view logic\" code. We will cover views in detail later, but for now "
"think of them as a python class that is automatically instantiated and bound"
" to a page template when it's rendered. In the template, the variable *view*"
" refers to the view instance and can be used in TAL expressions to gain "
"things to render or loop on."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1342
msgid ""
"When dealing with a view, there are two things that make up its context - "
"the context content object (conventionally called *context* ) and the "
"current request (conventionally called *request* ). Thus, a view class is a "
"multi-adapter from the tuple *(context, request)* to IBrowserView. As it "
"happens, there are ZCML directives called *browser:page*and *browser:view* "
"that make it easier to register a view and bind a page template to it, "
"handle security etc. However, abstractly a view looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1367
msgid ""
"Notice how this adapts both IPerson and IHttpRequest, and thus takes two "
"parameters in its *\\_\\_init\\_\\_()*method. As you will learn later, views"
" typically inherit the *BrowserView* base class for convenience, but the "
"principle is the same."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1372
msgid ""
"To obtain a multi-adapter, you can't use the \"calling an interface\" syntax"
" that you use for a regular adapter. Instead, you must use the "
"*getMultiAdapter()* method:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1382
msgid ""
"You could use *queryMultiAdapter()* instead if you wanted it to return None "
"instead of raise a ComponentLookupError when it fails to find the adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1386
msgid ""
"The above code has a problem, however (apart from being an incomplete "
"example) - what if you have more than one view on the same object, say for "
"two different tabs? To resolve this ambiguity, views are actually *named "
"multi-adapters*. The names correspond to the names used as part a URL, and "
"are registered using the *name* attribute in ZCML. This is used in "
"*browser:page* and *browser:view* directives, but can also be used in the "
"standard *adapter* directive:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1399
msgid "To get this particular view, we can write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1405
msgid ""
"conventionally, we leave off the required interface when we used named "
"adapters, although you can supply it if necessary."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1408
msgid ""
"Multi-adapters are useful for other things as well. If you have an adapter "
"and find that every method takes at a common parameter, it's a good "
"candidate for a multi-adapter. Also observe that in the case above, we could"
" register a different adapter for a different type of request as well as for"
" a different type of object. Again, the Component Arhictecture will find the"
" most specific one looking at both interfaces."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1416
msgid ""
"Named adapters do not have to be multi-adapters, of course. They are "
"typically used in cases where something (e.g. the user) is making a "
"selection from a set of possible choices (such as choosing the particular "
"view among many possible views)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1424
msgid ""
"In the CMF, we have *tools*, which are essentially singletons. They contain "
"various methods and attributes and may be found using the ubiquitous "
"*getToolByName()* function. The main problem with tools is that they live in"
" content space, as objects in the ZODB, and require a lot of Zope 2 specific"
" things."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1430
msgid ""
"Let's say we had a shoe locating service (very useful when you can't find "
"your shoes):"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1449
msgid ""
"The Component Architecture contains a very flexible *utility registry*, "
"which lets you look up things by interface and possibly by name. Unlike "
"adapters, utilities do not have context, and they are instantiated only "
"once, when Zope starts up. Global utilities are not persistent (but local "
"utilities are - see below)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1456
msgid "As with adapters, we register utilities with ZCML:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1462
msgid ""
"Alternatively, you could skip the *implements()* call on the factory and set"
" it in ZCML. This may also be necessary in order to disambiguate if you have"
" more than one interface being provided by the utility component:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1474
msgid "Now you can find the utility using *getUtility()*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1483
msgid ""
"The utility registry turns out to be a very useful generic registry, because"
" like the adapter registry, it can manage *named utilities*. Let's say that "
"you had a few different shoes you wanted to keep around:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1498
msgid ""
"We can now find these utilities again using the *name* argument to "
"*getUtility()*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1505
msgid ""
"Of course, we are still using the transient global utility registry, so "
"these will diseappear when Zope is restarted. We could use local components "
"instead (see below), or we could register them using ZCML. If we had defined"
" the shoes *left* and *right* in a module *shoes.py*, we could write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1523
msgid ""
"An alternative would have been to define two classes *LeftShoe* and "
"*RightShoe* and use the *factory* attribute of the directive instead of "
"*component* (which refers to an instance, rather than a class/factory)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1529
msgid "Local components"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1531
msgid ""
"The examples above all use global, transient registries that are reloaded "
"each time Zope is restarted. That is certainly what you want for code and "
"functionality. Sometimes, you would like for utilities to be a bit more like"
" their CMF cousins and also manage persistent state. To achieve that you "
"need to use local components, which are stored in the ZODB."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1538
msgid ""
"Prior to Zope 3.3, which is included in Zope 2.10, local components were a "
"bit of a black art. Then came the *jim-adapter* branch and everything was "
"greatly simplified. The theory is still the same, the API is just much more "
"sane. Each time Zope executes a request (or if you implicitly invoke "
"*zope.component.setSite()*, for example in a test), it discovers which is "
"the nearest *site* to the context. In Plone, the site is normally the root "
"of the Plone instance, but in theory any folder could be turned into a site."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1547
msgid ""
"A *site* has a local component registry, where local utilities and adapters "
"may be defined. This means that a particular utility or adapter can be "
"specific to a particular Plone site, not affecting other Plone instances in "
"the same Zope instance. You cannot use ZCML to register local components, "
"since ZCML is inherently global (at least for now) - it does not know "
"anything about your particular sites. However, you can register them with "
"Python code, e.g. in an Install.py or a GenericSetup profile, using calls "
"like *provideUtility()* (and its equivalent, *provideAdapter()*) called on a"
" local site manager instance:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1570
msgid ""
"Unfortunately, Plone 2.5 does not run on Zope 2.10. We won't cover local "
"components here, because, well, I never learnt how to do it the Zope 2.9 "
"way, and what I saw of it scared me. I'm told it's not that bad, and there "
"is documentation in *Five* and in Zope 3 itself. Local components will "
"become more important in Plone 3.0, where Zope 2.10 or later will be "
"required and more things that use local components will be part of the core."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1578
msgid ""
"b-org does not use local components yet, and we will see how the extension "
"mechanism would benefit from local components so that you could have one "
"b-org extension installed in one Plone instance and another extension "
"installed in another Plone instance, without the two interfering. Luckily, "
"to code that *uses* adapters and utilities, it is completely transparent "
"whether they are global or local."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1589
msgid ""
"That's it! If you can master the concepts of interfaces, adapters and "
"utilities you will go far in a Zope 3 world. They will become much more "
"natural as you use them a few times, and you'll probably wonder how you ever"
" managed without them. Hopefully, that point will come before the end of "
"this tutorial, which is largely focused on showing how the principle of "
"separation of concerns can be imposed upon your Archetypes and Plone code."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1598
msgid "5.3. Overview of b-org"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1600
msgid "The big picture"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1602
msgid "To the user, b-org presents itself as three content types:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1608
msgid "Department"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1607
msgid ""
"A container for employees, and a source of groups. That is, each department "
"becomes a group, and the employees within that department become group "
"members."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1612
msgid "Employee"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1611
msgid ""
"Information about employees, and a source of users. That is, each active "
"employee object becomes a user who can log in and interact with the portal."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1618
msgid "Project"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1615
msgid ""
"A project workspace - a folder where employees can collaborate on content. "
"Content inside the project folder has a custom workflow, and employees who "
"are related to the project (by reference) have elevated permissions over "
"this content."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1620
msgid ""
"Out of the box, these are not terribly interesting, because they have only "
"the minimum of metadata required to function. The task of providing actual "
"schema fields, view templates, content type names (if Department, Employee "
"and Project are not appropriate) and other application-specific facets is "
"left up to simpler third-party products that plug into b-org. One example of"
" such a product is included, which models a hypothetical charity use case "
"and is called *charity*. This seemingly innocuous orchestration of "
"functionality is achieved by a variety of means:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1632
#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:31
msgid "Archetypes"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1632
msgid "Used to build the actual content types and their schemata."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1636
msgid "The Zope 3 Component Architecture"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1635
msgid ""
"Is used to make all this exensibility possible - you will see lots of "
"examples of interfaces, adapters and utilities."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1640
msgid "Membrane"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1639
msgid ""
"The content types are registered with *membrane* to be able to act as groups"
" and users"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1646
msgid "PAS and PlonePAS"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1643
msgid ""
"The Pluggable Authentication Service is used by membrane to actually provide"
" user sources. A custom PAS plug-in is also used to manage local roles for "
"members and managers within projects and departments."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1652
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:59
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:41
msgid "GenericSetup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1649
msgid ""
"The next-generation set-up and installation framework is used to install and"
" configure b-org. *charity* demonstrates how GenericSetup XML profiles can "
"be used directly, without depending on the actual GenericSetup import "
"mechanism."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1656
msgid "Zope 3 events"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1655
msgid ""
"Zope 3's event dispatch mechanism is used to ensure employee users actually "
"own their own Employee objects, among other things."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1659
msgid "Zope 3 views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1659
msgid "The *charity* demo uses views for its display templates."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1662
msgid "Employees' passwords are hashed and stored in an annotation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1667
msgid "Placeful workflow"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1665
msgid ""
"To let content inside projects have a different workflow to that of the rest"
" of the site, each project uses a *CMFPlacefulWorkflow* policy."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1669
msgid ""
"On the following pages, you will learn about each of these components and "
"how it fits together. Meanwhile, you can follow along the code by looking in"
" the `subversion repository "
"<http://svn.plone.org/svn/collective/borg/trunk>`_, or getting b-org from "
"its `product page <https://plone.org/documentation/manual/developer-"
"manual/products/borg>`_."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1677
msgid "5.4. To Archetype or not to Archetype"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1679
msgid ""
"Archetypes is still the most complete framework for building content types "
"quickly. With the advent of Zope 3, there is an alternative in Zope 3 "
"schemas. Here's why b-org doesn't use them."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1683
msgid ""
"There is a growing consensus that Archetypes has grown a little too "
"organically. On the one hand, Archetypes has given us a lot of flexibility, "
"and made many of us more productive than we would ever have thought possible"
" (for those who remember the heady days of plain Zope 2, and then plain CMF "
"development). On the other hand, Archetypes has become fairly monolithic. "
"The reference engine, for example, is woven tightly into the field type "
"machinery, and the way that views are composed from widgets makes these "
"almost impossible to re-use outside of Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1693
msgid ""
"In practical terms, the biggest headache that arises from Archetypes' "
"evolution is the very same problem we identified when introducing Zope 3 "
"concepts - it's hard to re-use Archetypes-based components without sub-"
"classing and repeating a large portion of a type's configuration. Take `the "
"Poi issue tracker <https://plone.org/products/poi>`_, for example - I "
"frequently get requests from people who want to add a few use-case specific "
"fields to each issue, or add some new functionality such as having private "
"issues or issues submitted on behalf of someone else. The problem is that I "
"don't want to put all this functionality in Poi itself, because this would "
"increase the complexity of the product and thus the maintenance burden and "
"probably impact the intuitiveness of the UI, when in reality not everyone "
"would benefit from such new features."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1708
msgid ""
"Ideally, someone would be able to plug in their own schema fields and add "
"some logic in well-defined places without having to re-invent all of Poi. "
"However, this is difficult, because, for example, the \"add issue\" button "
"assumes you are adding a *PoiIssue* object, which has a schema defined "
"wholly in *Products/Poi/content/PoiIssue.py*. There are custom form "
"controller scripts to handle saving of issues, and a lot of methods are "
"found in the various content classes to do things like send mail "
"notifications or perform issue searches for various lists. Again, changing "
"the logic of who gets an email notification or how a particular list of open"
" issues is calculated may involve subclassing one or all of Poi's content "
"types, re-registering view templates and other content type information, and"
" possibly customise a number of templates and scripts to reference the new "
"subclassed types. Of course, when Poi itself changes, keeping these "
"customisations up-to-date becomes difficult."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1725
msgid ""
"Zope 3 has, in keeping with its philosophy, approached these problems by "
"promising separation of concerns. In Zope 3, you would typically define an "
"interface that specifies the *schema* of a content type, and then create a "
"class that is only concerned with holding and persisting the data for this "
"schema:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1735
msgid ""
"The actual functionality for sending notifications etc would be in various "
"adapters (e.g to *INotifying*), the view logic in views. Forms can be "
"created from schema interfaces like *IIssue* above, using *zope.formlib*. "
"This can handle proper add forms (so the object is not created until the "
"form has been filled in, which is another headache with CMF content types "
"and therefore also Archetypes), validation, edit forms etc. Each form, "
"adapter and menu entry (for the \"add\" menu, say) is registered separately,"
" meaning that they can also be overridden and customised separately. Rocky "
"Burt has written an excellent tutorial on `how to use formlib in a Plone "
"context <https://plone.org/documentation/manual/developer-manual/archetypes"
"/appendix-practicals/using-zope-formlib-with-plone>`_ that may be "
"enlightening."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1748
msgid ""
"There are voices that say we should dump Archetypes entirely in favour of "
"Zope 3-style content objects. Other voices (including my own) say that this "
"may be a bit premature. Certainly, Zope 3 schemas and content objects are "
"not yet fully integrated into CMF and Plone, so you end up depending on some"
" CMF base classes at the very least. Moreover, the number and richness of "
"widgets available for Zope 3 forms does not yet match that of Archetypes. "
"Fundamentally, Archetypes has been around for a long time and has grown to "
"meet a wide variety of use cases, whereas in the context of Plone at least, "
"Zope 3 schemas are a new kid on the block."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1759
msgid ""
"The point is - Archetypes is not going to go away, not for a long time "
"anyway, and are still the right choice for many types of applications. "
"Almost all of Plone's add-on products use Archetypes, and it is well-"
"understood by our developer community. The more likely scenario is that "
"Archetypes will evolve in the same way that Zope 2 is evolving, by seeing "
"its internals refactored piecemeal and pragmatically to take advantage of "
"Zope 3 equivalents and concepts, until theoretically an Archetypes schema "
"and content object is just a different spelling for what Zope 3 is doing, "
"and Zope 3's content type story offers the same richness as Archetypes does "
"(and more)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1771
msgid ""
"In the meantime, Archetypes is the right choice for b-org (and for other "
"membrane-based systems). What we will try to do, however, is to alleviate "
"the aforementioned problems by making use of Zope 3 design techniques, in "
"order to make b-org extensible and flexible."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1777
msgid "5.5. The extension story"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1779
msgid ""
"One of the main drivers behind the componentisation of b-org is that it "
"should be easy to extend and customise for third party developers. We'll "
"take a look at how such customisations may look, before considering how we "
"made it possible."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1784
msgid ""
"b-org ships with an example called *charity*, found in the "
"*examples/charity* directory, which demonstrates one use-case specific "
"implementation of b-org. This is quite simple, consisting of the following "
"top-level files and directories:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1792
#: ../../reference_manuals/old/archetypes/appendix.rst:2106
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:82
msgid "configure.zcml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1792
msgid ""
"Registers the schema extension adapters (see below) and references the "
"browser package"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1797
msgid "Extensions/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1795
msgid ""
"Contains an *Install.py* script that configures the Factory Type Information"
" for the Department, Employee and Project content types. It does so by using"
" GenericSetup XML files, but invokes the import handlers explicitly rather "
"than through a GenericSetup profile."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1801
msgid "Â browser/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1800
msgid ""
"Contains Zope 3 views for the charity department, employee and project "
"content types, and a *configure.zcml* to register these. More on views in a "
"later section."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1807
msgid "schema/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1804
msgid ""
"Contains adapters that extend the schemas for Departments, Employees and "
"Projects with use-case specific fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1809
msgid ""
"To use *charity* you should copy or symlink it from "
"*Products/borg/examples/charity*to *Products/charity*. It can be installed "
"as normal, but you must install b-org first. See *borg/README.txt* for the "
"full install instructions!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1814
msgid ""
"A key aim is to make it possible to meaningfully extend b-org without "
"needing to subclass all its types. Of course, you *can* do that, but in most"
" cases it's not necessary. Unfortunately, the mechanisms and techniques "
"described here will be \"global\" in nature. That is, you will not be able "
"to have two different modes of customisation for two different Plone "
"instances in the same Zope instance. This is because prior to Zope 2.10 "
"(which Plone 2.5 does not support - it wasn't out until several months after"
" Plone 2.5 was released), the \"local\" components story in Zope 3 was not "
"fully developed. There is also a specific problem with the way the schema "
"extension mechanism works which makes it inherently global."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1826
msgid ""
"When Plone 3.0 rolls around, it will support local components much better, "
"and Archetypes 1.5, in conjunction with a third-party product called "
"ContentFlavors (or possibly another similar tool), will enable the kind of "
"extension story described here to work on almost any type. At that point, "
"the forerunner you see in b-org now will be obsolete."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1833
msgid ""
"Of course, if you don't need two different b-org customisations for two "
"different Plone sites in the same Zope instance (which I suspect most people"
" can work around - having two separate Zope instances of course isolates you"
" from all of this), you should be fine."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1840
msgid "The schemas extenders"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1842
msgid ""
"If you look at *charity/configure.zcml* you will see the following "
"registrations:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1851
msgid ""
"These schema extenders are adapters that hook into a specific part of b-org."
" We will describe this in more detail later, but here is how they look from "
"the point of view of the extending product:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1859
msgid ""
"This example is *employee.py*. The other extensions are simpler, and work on"
" the exact same principle. When calculating the schema of a content type, "
"the b-org types (by virtue of "
"*Products.borg.content.schema.ExtensibleSchemaSupport*, a mix-in class that "
"all the b-org types uses, and which the aforementioned changes to Archetypes"
" should make obsolete) will look up an adapter from the content object "
"(which is marked with *IEmployeeContent*, in this case), to "
"*ISchemaExtender*. This will be given the chance to extend (and modify) the "
"schema of the type."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1869
msgid ""
"The returned value is cached (to avoid an expensive re-calculation each time"
" the schema is used). This cache can be invalidated upon an event, which you"
" will see in *charity/Extensions/Install.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1884
msgid ""
"The event is an instance of a class that implements "
"*ISchemaInvalidatedEvent*, and takes a class as an argument to know which "
"class the schema is being invalidated for."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1889
msgid "Defining new views and type information"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1891
msgid ""
"We have now managed to add new schema fields to Department, Employee and "
"Project. The auto-generated edit form will pick these up for editing, but we"
" probably also want some custom views. We may also want to change other "
"aspects of the Factory Type Information (FTI) which controls how the type is"
" presented within Plone's UI (an FTI is an object in *portal\\_types*). "
"First, we define some views in the *browser* package. These are described in"
" a later section, but lookin at *charity/configure.zcml*, you will see:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1905
msgid ""
"This will bring in *charity/browser/configure.zcml*, which contains several "
"directives like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1918
msgid ""
"This, along with the class "
"*Products.charity.browser.employee.EmployeeView*and the "
"template*charity/browser/employee.pt* will make a view "
"*@@charity\\_employee\\_view* (the @@ is optional, but serves to "
"disambiguate views from content objects, for example) available on any "
"employee (or rather, any object providing *IEmployeeContent*). We then need "
"to tell Plone that this view should be invoked when you view an Employee "
"object or click its 'View' tab. This is done by setting the *(Default)* and "
"*view* method aliases for the Employee type. See `this page of the "
"RichDocument tutorial <https://plone.org/documentation/tutorial/richdocument"
"/actions-and-aliases>`_ for some background. To achieve this, we could "
"modify *portal\\_types/Employee* in Python during the *Install.py* script. "
"However, to make it easier to define the FTI, we use a GenericSetup XML file"
" instead. Take a look at *charity/Extensions/setup/types/Employee.py*, for "
"example:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1977
msgid ""
"To learn more about HTML Tidy see http://tidy.sourceforge.net Please fill "
"bug reports and queries using the \"tracker\" on the Tidy web site. "
"Additionally, questions can be sent to html-tidy@w3.org HTML and CSS "
"specifications are available from http://www.w3.org/ Lobby your company to "
"join W3C, see http://www.w3.org/Consortium"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1983
msgid ""
"This defines the various aspects of the FTI, and is basically a modified "
"copy of the equivalent file from the b-org extension profile. You'll learn "
"more about these in the section on GenericSetup, but for now observe that we"
" invoke this explicitly in Install.py, via some boilerplate utility code: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1992
msgid ""
"This will update the FTIs by examing "
"*Products/charity/Extensions/setup/types*. Each file there is named "
"corresponding to the name of the FTI it modifies."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1997
msgid "Adding new functionality"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:1999
msgid ""
"Extending the schema and modifying the FTI to support different views is "
"probably enough for a large number of use cases. If you find yourself "
"thinking \"I wish I could add a method to the Employee class to support "
"...\", take your left hand, hold it out, raise you right hand and slap your "
"left wrist sternly, then read the section on adapters again. For example, "
"let's say you wanted to send an email to administrators when a particular "
"button in the view was clicked. You could do that in an adapter. For "
"examples, in your *interfaces* module, you could could have: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2013
msgid "Then, an adapter from IEmployee in module *nag.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2019
msgid "And finally, in your *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2025
msgid ""
"Then, in the form handler that is about to nag the employee, you would do:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2032
msgid ""
"Obviously, this is a somewhat contrived example, but hopefully you get the "
"gist."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2036
msgid "Modifying workflow and other configuration"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2038
msgid ""
"The b-org workflows are not special. In your Install.py, you could modify "
"them or change the workflow assignments as you would any other content type."
" You can also use *CMFPlacefulWorkflow* to assign different workflows "
"depending on context, if need be."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2043
msgid ""
"Similarly, if you need to modify the behaviour of the Department, Employee "
"and Project types in other ways, for example by modifying settings in "
"*portal\\_properties*, you are of course free to do so. The intended pattern"
" is that your b-org customisation product encapsulates the various settings "
"and extensions that describe your use case."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2051
msgid "Changing fundamental b-org behaviour"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2053
msgid ""
"Lastly, as you learn about b-org you will see how it uses adapters to hook "
"into membrane. If you need to override its behaviour, you can add an "
"*overrides.zcml* to your product, which is otherwise identical to a "
"*configure.zcml* in format, but is able to override earlier registrations "
"(such s those in b-org). For example, you could override the adapter from "
"*IEmployeeContent* to *IUseRelated* to change the way in which user ids is "
"assigned, or the adapter to *IUserAuthentication* to change the way in which"
" authentication is performed."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2064
msgid "5.6. Filesystem organisation"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2066
msgid ""
"b-org attempts to adhere to modern ideal about how code should be laid out "
"on the filesystem."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2069
msgid ""
"In the Zope 3 world, the *Products* pseudo-namespace is frowned upon. In "
"Zope 2, every extension module lives in the Products/ folder. This raises "
"some obvious namespace clash concerns, but also separates Zope modules "
"further from plain-Python modules. In Zope 3, you can install a module "
"anywhere in your *PYTHONPATH*. For example, in Plone 3.0, there will be a "
"module called *plone.portlets*, normally installed in "
"*lib/python/plone/portlets*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2078
msgid ""
"For modules that need to act like Zope products (i.e. they need an "
"*initialize()* method, they install content types, they register a "
"GenericSetup profile or CMF skins or use an *Extensions/Install.py* method, "
"say), this works in Zope 2.10 and later. It can also be made to work in "
"earlier version of Zope using a product (ironically) called "
"*pythonproducts*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2085
msgid ""
"For the purposes of borg, we stick with the traditional *Products/* "
"installation. It's nice to have imports like *from borg import ...*, but "
"fundamentally, b-org is very closely tied to Zope (2) and Plone, so the re-"
"use argument goes away, and that nice import syntax is not really worth the "
"extra dependency and configuration."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2092
msgid ""
"One thing you may notice, though, is that the *borg* product is named in "
"lowercase, in keeping with Zope 3 and Python naming conventions. Looking "
"inside it, you will see the following key files and directories:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2101
msgid "\\_\\_init\\_\\_.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2100
msgid ""
"Initialises the Zope 2 product machinery, registers content types, the skin "
"layer and the GenericSetup extension profile that is used to install b-org."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2103
msgid "config.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2104
msgid "Holds various constants"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2106
msgid ""
"Starts the Zope 3 snowball going. This references other packages with their "
"own *configure.zcml* files."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2112
msgid "content/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2109
msgid ""
"Contains the Archetypes content types for Department, Employee and Project. "
"Also contains some utilities, like *EmployeeLocator*, an adapter to find "
"employees, two utilities used to provide vocabularies *AddableTypesProvider*"
" and *ValidRolesProvider*, and the the schema extension mechanism in "
"*schema.py*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2117
msgid "events/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2115
msgid ""
"Contains event subscribers which modify ownership of an Employee object so "
"that the employee user owns it (and can thus edit their own profiles, for "
"example), as well as to set up the local workflow when a Project is created."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2123
msgid "interfaces/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2120
msgid ""
"Contains all the interfaces that b-org defines, in various sub-modules like "
"*interfaces/employee.py* for the Employee-related interfaces. All of these "
"are imported into *interfaces/\\_\\_init\\_\\_.py*, so that you can write "
"*from Products.borg.interfaces import ...*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2126
msgid "membership/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2126
msgid ""
"Contains various adapters for plugging into membrane which enable b-orgs "
"user-and-group functionality."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2129
msgid "pas/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2129
msgid ""
"Contains a custom PAS plug-in which is used to manage the local roles for "
"Project members"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2133
msgid "permissions.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2132
msgid ""
"Contains custom add-content permissions, so that the ability to add "
"Department, Employee and Project content objects can be controlled by "
"different permissions."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2136
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:72
msgid "profiles/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2136
msgid ""
"Contains the GenericSetup extension profile that sets up b-org. This is "
"registered in the *borg/*\\_\\_init\\_\\_.py*.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2140
msgid "setuphandlers.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2139
msgid ""
"Defines a custom GenericSetup \"import step\" which configures aspects of "
"b-org that cannot be expressed in the existing GenericSetup XML formats."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2147
msgid "skins/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2143
msgid ""
"Contains the borg skin layer, which is registered in "
"*borg/\\_\\_init\\_\\_.py*. This contains only the b-org icons. These could "
"potentially have been defined in a *browser* package using Zope 3 resources,"
" but are included in a traditional skin layer to make them easier to "
"customise using conventional methods. See the section on Zope 3 views for "
"more details."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2149
msgid "tests/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2150
msgid "Contains unit and integration tests."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2153
msgid "zmi/"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2152
msgid "Defines a ZMI page for adding the PAS plug-in, for completeness' sake."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2155
msgid ""
"You will notice that there are many directories, and many of these "
"directories contain the same set of files - *employee.py*, *department.py* "
"and *project.py*. This is a side-effect of the finer-grained components and "
"increased separation of concerns that stem from Zope 3 design concepts. For "
"products that act less as framework, the degree of separation may be lower, "
"and thus the product may appear smaller. However, as you browse b-org's "
"source code, it should become obvious why things are placed where they are, "
"and how code is grouped together by logical functionality rather than a "
"tight coupling to Archetypes content types."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2169
msgid "5.7. Interfaces"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2171
msgid ""
"In Zope 3, everything is connected to an interface in some way. Sure enough,"
" b-org has a slew of them. Getting the interface design right is often more "
"than half the battle, so pay attention to this part."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2176
msgid ""
"If you were trying to understand b-org without a comprehensive tutorial to "
"hand, you would do well to look at the *interfaces* package. You will notice"
" that this is subdivided into various files"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2185
msgid "interfaces/department.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2184
msgid ""
"Contains a description of a department (*IDepartment*) and a marker "
"interface for the content object that stores the department "
"(*IDepartmentContent*)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2189
msgid "interfaces/employee.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2188
msgid ""
"Contains the equivalent interfaces, *IEmployee* and *IEmployeeContent*, as "
"well as the definition of a specific event interface, *IEmployeeModified.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2193
msgid "interfaces/project.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2192
msgid ""
"Again contains *IProject* and *IProjectContent*, as well "
"*ILocalWorkflowSelection*, which is used to denote a utility that defines "
"the placeful workflow policy that projects will use."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2197
msgid "interfaces/workspace.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2196
msgid ""
"Holds the interface *IWorkspace*, which is used by the local-role PAS plug-"
"in to extract which users should have which local roles in a project."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2201
msgid "interfaces/schema.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2200
msgid ""
"Contains interfaces relevant to the custom schema extension mechanism - "
"*ISchemaExtender*, *IExtensibleSchemaProvider* and "
"*ISchemaInvalidatedEvent*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2208
msgid "interfaces/utils.py"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2204
msgid ""
"Defines interfaces that are used as input to various vocabularies - "
"*IEmployeeLocator*, *IAddableTypesProvider* and *IValidRolesProvider*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2210
msgid ""
"In order to understand what each of these interfaces describes in more "
"detail, look at the files above. Recall that interfaces are mainly "
"documentation - these interfaces are accompanied by docstrings and generally"
" self-documenting code."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2215
msgid ""
"The various interfaces intended for public consumption are imported to "
"*interfaces/\\_\\_init\\_\\_*.py, so that client code can write, e.g.:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2223
msgid ""
"This is a common idiom. If you find yourself with too many interfaces to "
"manage in *interfaces/\\_\\_init\\_\\_.py*, you don't necessarily need to do"
" this, but it's probably a sign that you should be breaking your code into "
"smaller packages! Remember that unless you have a particular need to depend "
"on Zope 2, then you don't need to pollute the *Products* namespace with such"
" components! (and even if you do, with *PythonProducts* or Zope 2.10, you "
"can do without the Products/ namespace too). For example, we could have "
"placed the employee functionality in a package *borg.employee*, found in "
"*lib/python/borg/employee* as a plain-python library, possibly depending on "
"Zope 3 components (i.e. packages in the *zope.*\\* namespace). Conversely, "
"if you have relatively few interfaces, you can simply have an "
"*interfaces.py* module without a directory."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2239
msgid "Separating Archetypes from real components"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2241
msgid ""
"One thing you may notice is that we have split the interface describing the "
"concept of e.g. an employee (*IEmployee*) from the interface that describes "
"the employee content object in the ZODB (*IEmployeeContent*). Whether this "
"is always the right thing to do is debatable, but the reasoning goes "
"something like this: Archetypes objects contain a very large API. Archetypes"
" *schemas* and the infamous *ClassGen* generate methods on the content "
"objects corresponding to schema fields, so that a field *name* gets an "
"accessor called *getName()* and a mutator called *setName()*. This is all "
"rather Archetypes-specific, and in Zope 3 schemas, we typically prefer "
"simple properties (a *name* attribute) to pairs of methods. To avoid being "
"constrained by the Archetypes when defining interfaces (Archetypes is just "
"one implementation choice), we created *IEmployee* as follows: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2259
msgid ""
"To support this, we could put the relevant properties into the Archetypes "
"content object, but this is cumbersome, since the *property()* declaration "
"normally used to convert methods to properties will only work when those "
"methods actually exist, not when they are created by *ClassGen*. Instead, we"
" mark the content object with a marker interface, *IEmployeeContent* and "
"then register an adapter to *IEmployee*. Strictly speaking, this is "
"cheating, since the adapter makes assumptions about its context (such as "
"which methods are available, and the fact that it uses Archetypes) that are "
"not formally defined in the interface. To save excessive typing and retain "
"some sanity in the interface definitions, it's not a terrible compromise "
"though. Here's the adapter, from *membership/employee.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2276
msgid "Now, you can write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2282
msgid ""
"Another side-effect of this pattern is that we can separate things that are "
"Archetypes-dependent from things that operate on the more general notion of "
"an employee. For example, membrane generally makes assumptions about "
"operating on Archetypes content objects, so the various membrane adapters "
"adapt IEmployeeContent, whereas the view for charity employees is only "
"concerned with \"real\" employees and so adapts the context to IEmployee."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2290
msgid "This pattern is repeated for Departments and Projects as well."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2293
msgid "Interfaces intended for utilities and adapters"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2295
msgid ""
"Although interface design should generally not be too concerned with how "
"those interfaces are implemented, you will often think \"this is going to be"
" used a a utility\" or \"this will most likely be an adapter\". In this "
"case, you may want to make some reference in the doc-string at least. For "
"example, the *ILocalWorkflowSelection* interface states: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2305
msgid ""
"Conversely, many interfaces are context-dependent, which means that most "
"likely they will either be directly provided by a particular object or "
"adaptable to it. Take the *IAddableTypesProvider*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2312
msgid "The implication here is that client code will do something like: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2317
msgid ""
"Whether IAddableTypesProvider was provided directly by the context or (more "
"likely) provided via an adapter is not important. The only time this "
"distinction is really useful is in the case of marker interfaces, such as "
"*IEmployeeContent*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2325
msgid "These are often checked with *providedBy()*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2330
msgid ""
"Again, the guiding principle here is *separation of concerns*. The aspect of"
" a component that can provide a list of addable types "
"(*IAddableTypesProvider*) is logically distinct from (and could be varied "
"independently of) the aspect of a component that specifies it represents a "
"project (*IProject*), even though it so happens that at present projects are"
" the only time we concern ourselves with restricting addable types. In the "
"olden days, we would probably have put methods like "
"*getAvailableProjectAddableTypes()*into the *Project* content type. "
"Hopefully, you'll see why this is less optimal than having it in a separate "
"component (hint: what if you in your customisation of b-org wanted to be "
"much more particular about which types were addable?). You will hopefully "
"start to pick up \"fat\" interfaces during interface design - if you had a "
"neat *IProject* interface that described attributes of a project that were "
"to be saved alongside the project object, and then found a couple of methods"
" about defining addable types that were related to one another but not so "
"much to the data of a project in general, you would hopefully reach for a "
"new interface. If so - well done, you're getting there."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2352
msgid "5.8. Test-driven development"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2354
msgid "Testing should come first, not last, when doing development."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2356
msgid ""
"One of the greatest things that Zope 3 has established is a culture of test-"
"driven development. Because Zope 3 components tend to be small and not "
"dependent on a large framework or (typically) a running application server, "
"tests are easier to write and execute faster. Most Zope 3 testing happens in"
" the form of testable documentation - DocTests - which tell the story of how"
" a component should be used along with testable examples."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2364
msgid ""
"The `testing tutorial <https://plone.org/documentation/tutorial/testing>`_ "
"explains the philosophy behind test-driven development and the tools and "
"techniques available in Zope. It is **required reading** if you are not "
"familiar with testing in Zope, and probably quite useful even if you are."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2372
msgid "Testing strategy"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2374
msgid ""
"Tests were (largely) written against interfaces and stub implementations, "
"before the actual functionality was written. One of the first test cases to "
"be created was *test\\_adapters.py*, which simply verifies that the various "
"adapter registrations are in effect. This is obviously an integration test "
"(using PloneTestCase), since it is verifying what happens on a \"normal\" "
"Zope start-up. You will also notice tests named after the three content "
"types, *test\\_department.py*, *test\\_employee.py* and *test\\_project.py*."
" Each of these contains tests that verify the given type is available and "
"can be instantiated and edited. This catches errors in Archetypes "
"registrations or schemas. There are then further tests for the "
"*membrane*integration and for the adapters to the canonical interfaces "
"*IDepartment*, *IEmployee* and *IProject*. Lastly, non-trivial methods in "
"content types and relevant adapters are given their own test fixtures. By "
"being systematic and diligent with tests, many, many bugs were caught and "
"dealt with before they ever hit a live system. Of course, this does not "
"replace in-browser acceptance testing, which was also performed regularly. "
"At the time of writing, there are no *zope.testbrowser* based functional "
"tests for the user interface. That is regrettable - and this is an open "
"source project after all, so feel free to contribute some!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2400
msgid "Test set-up"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2402
msgid ""
"You will find b-org's tests in the *tests* module. Most of these use are "
"DocTest integration tests, using PloneTestCase. Make sure you use a recent "
"version of PloneTestCase (or svn trunk) since there have been some recent "
"changes in how Zope 3 components (or rather, ZCML registrations) are loaded "
"for test runs. The upshot is that with PloneTestCase, things should \"just "
"work\" for integration testing - components you have defined in ZCML in your"
" products will be loaded as they would when Zope is started."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2411
msgid ""
"The file *base.py* contains an insulating base class for b-org tests, called"
" *BorgTestCase* and its sister-class *BorgFunctionalTesetCase*. When "
"imported, this file will trigger the setup of a Plone site with the "
"*membrane* and *borg* extension profiles installed, as such:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2422
msgid "Integration and unit tests"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2424
msgid "Most of the tests are integration test that are set up like so:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2430
msgid ""
"There is also a plain-python (no loading of Zope necessary, which is much "
"faster) unit test for the password digest in *test\\_passwords.py*. This is "
"appropriate because the functionality under test does not depend on the Zope"
" application server or database being loaded. Use plain-python (or perhaps "
"rather, plain Zope 3) tests whenever you can to reduce interdependencies and"
" test load times:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2442
msgid ""
"The functions *configurationSetUp()* and *configurationTearDown()* are "
"defined in *utils.py* and are used to load specific ZCML files that enable "
"the test environment to function. This is necessary because without "
"PloneTestCase's integration test layer in effect, there will be no compnent "
"registrations when the tests are run! This may be more cumbersome (though in"
" reality, the same set of components tend to be used), but also allows "
"better control over the environment in which test are run, in addition to "
"(much) faster test execution times."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2452
msgid "From *utils.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2458
msgid ""
"You will also find a regular unit test in *test\\_setup.py*, simply because "
"this was quicker to write:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2465
msgid ""
"Finally, there is an docstring DocTest for the *ExtensibleSchemaSupport* "
"class. This is because this class if largely standalone (it probably "
"shouldn't be b-org at all, but in a more general module, except Archetypes "
"will gain similar functionality of its own for Plone 3.0) and the test "
"provided important documentation in the class' docstring."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2472
msgid "The class looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2478
msgid "And the test runner, in *test\\_schema.py*, contains:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2485
msgid "5.9. Setup using GenericSetup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2487
msgid ""
"b-org uses GenericSetup to impose itself on your Plone instance. Here's how "
"it works."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2490
msgid ""
"Hands up if you have ever written a workflow definition in Python and tried "
"to figure out how to install it in your *Extensions.py* and thought, this is"
" the least useful API I have ever had to deal with. Actually, the API is not"
" that bad, it's just not very good for performing set-up. Similarly, it may "
"start to make your separation-of-concerns-brainwashed mind a little uneasy "
"that we tend to define aspects of the type's configuration as class "
"attributes in an Archetypes class (though of course it's better than using a"
" CMF FTI dict or mangling *portal\\_types* directly)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2500
msgid ""
"The fine folks who gave us the CMF came up with another way, called "
"*GenericSetup* (after a few name changes - you may see the names *CMFSetup* "
"and *ContentSetup* as well, which refer to predecessors of what is not "
"GenericSetup). This is based on a declarative XML syntax that can represent "
"site configuration. The configuration of an entire site is called a "
"*profile* and can be imported and exported to replicate state across "
"multiple Plone (or CMF) sites. There is a smaller version of a profile "
"called an *extension profile* which can be used to extend a base profile. "
"Both membrane and b-org use extension profiles to install themselves."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2512
msgid ""
"GenericSetup is described a `tutorial "
"<https://plone.org/documentation/tutorial/understanding-and-using-"
"genericsetup-in-plone>`_ by Rob Miller, cheif GenericSetup protagonist, so "
"we won't repeat too much of the detail here. However, you should be aware "
"that in Plone 2.5, GenericSetup has a slightly awkward user experience and "
"does not have any well-defined way of performing uninstall, which stems from"
" the fact that it was originally designed for the use case of taking a "
"snapshot of the configuration of an entire site, not for installing and "
"uninstalling products and extensions!"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2522
msgid ""
"The other main shortcoming at the moment is that there is no way to specify "
"interdependencies between profiles. It is important that membrane is "
"installed before b-org, but if you're not careful it will happen the other "
"way around. When you create a Plone site, you will be able to choose a "
"number of extension profiles to apply (including meaningless ones like "
"*Archetypes* - meaningless because Plone already invokes those when you set "
"up a site). In this list, \"Base organisation\" comes before \"membrane\" by"
" virtue of alphabetical sorting. Therefore, you can't just choose both and "
"click \"Add\". Instead, you should select \"membrane\" first, and then add "
"\"Base organisation\" via portal\\_setup, as described in the b-org "
"*README.txt:*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2536
msgid "Go to *portal\\_setup* in the ZMI"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2537
msgid "Click the *Properties* tab"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2538
msgid ""
"Select \"Base organisation\" as the active profile (since this is an "
"extension profile, it won't override the base profile that set up your Plone"
" site) and click *Update*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2541
msgid ""
"Go to the *Import* tab and click *Import all steps* at the bottom. Note that"
" although it seems like this will re-install a whole bunch of stuff, it will"
" only execute those steps that are actually listed in the "
"*import\\_steps.xml* for the *active profile*, which in this case is "
"b-org's."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2547
msgid ""
"If you didn't already set up membrane and you created a Plone site without "
"the membrane extension profile, follow the same steps to install membrane "
"*before* you install b-org. So why did we do all this? Firt of all, both "
"membrane and b-org are really infrastructure that fundamentally influence "
"how you build your site, so the lack of uninstall isn't as bad as it would "
"have been for more user-facing products. Secondly, with Plone 3.0, this will"
" become easier, as the QuckInstaller (and hence the *Add/Remove Products* "
"control panel page) becomes Extension Profile aware and gives some uninstall"
" support. At the end of this section, you will see how you can use a "
"traditional QuickInstaller *Install.py* method and still get the nice XML "
"syntax, with a bit of extra work."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2562
msgid "Import steps"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2564
msgid ""
"To GenericSetup, the installation of a third party product via an extension "
"profile is considered to be the *importing* of that profile. A file "
"*import\\_steps.xml* is used to determine which actual import steps will be "
"executed. First, we need to tell GenericSetup where the import steps are "
"defined, though, by registering the extension profile. This is done in the "
"product's *\\_\\_init\\_\\_.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2576
msgid ""
"This references the directory *profiles/default*, which contains various "
"files:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2581
msgid "import\\_steps.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2582
msgid "Lists the steps to be performed during import (set-up)"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2585
msgid "export\\_steps.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2584
msgid ""
"Lists the steps to be performed during export - that is, if the "
"configuration is changed in the ZODB and the site admin wishes to export the"
" configuration to a file, these steps will be performed."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2587
msgid "membrane\\_tool.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2588
msgid "Configuration for membrane tools"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2589
msgid "skins.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2590
msgid "Sets up skins in portal\\_types"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2596
msgid "types.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2592
msgid ""
"Configures FTIs (Factory Type Information settings) for the content types "
"that b-org ships with. Each of the types listed here has a corresponding "
"file in *profiles/default/types* (the name of the type and the name of the "
"file should match). This file contains all the various FTI settings, such as"
" friendly name, meta type, actions and aliases."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2603
msgid "workflows.xml"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2599
msgid ""
"Configures workflows. This works in the same way as *types.xml* - the main "
"file configures the names of the workflows and the bindings of workflows to "
"content types. The actual workflow definitions, including states and "
"transitions, are found in *profiles/default/workflows*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2605
msgid "The *import\\_steps.xml* which orchistrates all this looks like follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2613
msgid ""
"Note that we don't actually specify most of the files - they are referenced "
"by the *base profile* that was used to set up Plone or the extension profile"
" for membrane. GenericSetup knows all the registered profiles' steps, and "
"looks for the corresponding files."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2619
msgid "Various setup handlers"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2621
msgid ""
"The one setup handler you do see is the \"various\" handler. This is "
"dependent on the set-up of type info, skins and workflow. Ordinarily, setup "
"handlers will utilise GenericSetup base classes, adapters and utility "
"functions to parse XML files. However, it's not always convenient to invent "
"a generic XML syntax for all types of configuration. The *importVarious* "
"pattern is used by many products that need to perform some custom set-up in "
"Python. It is invoked as if it were a handler for an XML file, but it just "
"happens to have different side-effects. The main caveat with this type of "
"set-up, of course, is that it cannot symmetrically export (and then re-"
"import) the configuration, and it is more difficult to re-use."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2634
msgid "*importVarious* looks as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2640
msgid ""
"We set up the PAS plugins, register our types with *portal\\_factory*and add"
" a placeful workflow policy. The exact code to perform each of these steps "
"is not listed here to save space, but they use the same techniques you would"
" use in an *Install.py* file. Note that the *portal\\_factory* setup is "
"available in a more friendly XML format in Plone 2.5.1 and later, which was "
"released after b-org."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2649
msgid "GenericSetup without portal\\_setup"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2651
msgid ""
"When Plone 3.0 arrives, it will make the *Add/Remove Products* control panel"
" aware of extension profiles, and thus provide a more user friendly way of "
"performing install using GenericSetup. It will also support uninstall. Until"
" that time, however, it is possible to re-use the GenericSetup XML handlers "
"to parse files like *types.xml*Â  and *workflow.xml* from a regular "
"*Install.py* installation. We do this in the *charity* example. When "
"importing, GenericSetup requires a setup environment, and usually an object "
"to work on. A simple *SetupEnviron* is found in "
"*charity/Extensions/utils.py*, along with a method called *updateFTI()* "
"which can take an FTI object and update its settings based on a "
"*types.xml*-like file. This method takes a module and the id of an FTI to "
"update, and finds the corresponding file. It is used in "
"*charity/Extensions/Install.py* as follows: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2669
msgid "The relevant files may be found in *charity/Extensions/setup/types/*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2673
msgid "5.10. Using membrane to provide membership behaviour"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2675
msgid ""
"How b-org uses membrane to let employees be users and departments be groups"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2678
msgid ""
"Since version 2.5, the user management infrastructure in Plone has been "
"replaced by PAS, the Zope Pluggable Authentication Service, and PlonePAS, a "
"Plone integration layer for this. PAS offers several advantages over plain "
"user folders, mainly in terms of flexibility. Unfortunately, it is also more"
" difficult to work with through-the-web and has a very decentralised API, "
"based on the notion of plugin components, that can be difficult to "
"understand at first."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2687
msgid ""
"Membrane (or rather, *membrane* with a lowercase m) is a component first "
"developed by Plone Solutions and later improved by Rob Miller and others. It"
" is similar to *CMFMember* in that it can turn content objects into users, "
"although it is less concerned with replicating existing Plone functionality "
"and more concerned with making a thin integration layer to plug into. It "
"therefore fits b-org very well."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2695
msgid ""
"Membrane works on Archetypes objects (though theoretically it could be used "
"with other objects as well). It adds a tool called *membrane\\_tool* which "
"contains a registry of content types that are member- or group-sources, as "
"well as a special catalog. Using the Archetypes catalog multiplex, it is "
"able to catalog objects (which may also be cataloged in *portal\\_catalog*) "
"and find them again based on various interfaces (that is, it catalogs the "
"interfaces provided by an object). membrane provides a number of PAS plug-"
"ins that will search this catalog when looking for users and delegate to the"
" content objects (or rather, adapters on the content object) for obtaining "
"user information, performing authentication and so on."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2709
msgid "Registering with membrane"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2711
msgid ""
"*membrane\\_tool* contains an API for registering content types as "
"membership providers, but the easiest option is to use a GenericSetup "
"profile (see the section on GenericSetup for the full story). In "
"*profiles/default/membrane\\_tool.xml*, you will find: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2719
msgid ""
"This registers the three content types (by their portal type), and specifies"
" the workflow states in which they are \"active\" as member and group "
"sources."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2724
msgid "Applying marker interfaces"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2726
msgid ""
"When looking for content objects that provide group and member information, "
"membrane will use a number of marker interfaces that indicate support for "
"various types of behaviour. These are implemented by the three content type "
"classes. In *content/department.py*, you will find: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2735
msgid ""
"All this means is that the Department's schema is capable of providing "
"properties to PAS. Properties (normally related to users, but groups can "
"have properties as well) are just metadata about the user or group. Membrane"
" supports as PAS properties plugin that will look for Archetypes schema "
"fields with *member\\_property=True* set and report these back as user "
"properties. Although *Department* does not use any such properties at the "
"moment, we add this marker so that extension modules that use the schema "
"extension mechanism can benefit from this. The equivalent setup for "
"Employees, in *content/employee.py*, is a little more interesting. ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2750
msgid "Here, we are saying that:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2752
msgid ""
"An Employee can be used as a source of authentication (i.e. as a user), "
"since it is marked with *IUserAuthProvider*. Note that the actual "
"authentication is performed by a different adapter."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2755
msgid ""
"An Employee can provide user properties to PAS via membrane, following "
"*IPropertiesProvider*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2757
msgid "An Employee can be part of a group, because of *IGroupsProvider*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2759
msgid ""
"An employee can be given roles. There is an *IRolesProvider* interface that "
"we cold use for basic role awareness. The *IGroupAwareRolesProvider* is a "
"sub-interface that will cause membrane to also look at the user's groups."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2764
msgid ""
"The *IAttributeAnnotatable* interface is part of Zope 3's annotations "
"framework, discussed in a later section. Projects does not require any "
"particular marker interfaces."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2769
msgid "Providing membership behaviour"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2771
msgid ""
"When membrane looks for objects to provide membership-related behaviour, it "
"will not only look for objects directly providing a particular interface, "
"but also for objects that can be *adapted to* that interface. For example, "
"the presence of the interface *IGroup* informs membrane that an object can "
"act as a group, and contains methods that describe the members of that "
"group. Of course, we could have declared that *Department* implemented "
"*IGroup* and written these methods directly in the Department content "
"object. Hopefully you'll agree now that this would not be optimal, since it "
"mixes the content-object aspect and the group-behaviour aspect of Department"
" into a single monolithic object. Instead, we will use an adapter, which "
"also means that if you require different behaviour in an extension to b-org,"
" you have only to override the adapter, leaving the core content object "
"alone. In *membership/department.py*, you will see: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2791
msgid ""
"Mostly, this is about examining the Department content object to find roles "
"(which are listed in an Archetypes field, editable by the Manager role). "
"When calculating roles, we make sure that we don't give roles if the "
"Department group-source is actually disabled (by virtue of its workflow "
"state and the settings in membrane\\_tool). The group title and id are taken"
" from the object as well. The most interesting method is "
"*getGroupMembers()*. Here, we perform a search in the *membrane\\_tool* "
"catalog for objects adaptable to*IMembraneUserAuth*. This interface is the "
"basic interface in membrane describing things that can act as users - there "
"is an adapter from *IUserAuthProvider* to *IMembraneUserAuth*. We restrict "
"this to objects inside the Department object. The net effect is that all "
"Employee objects inside the Department are returned. Now, let's say you had "
"a need for a Department which in addition to acting as a group for all "
"members inside it, also allowed some members from other departments to be in"
" that group. In this case, you could use a schema extender to add a "
"*ReferenceField* to the schema of Department that allowed the Department "
"owner to reference other Employees. You would then provide an override "
"adapter, perhaps subclassing *Products.borg.membership.department.Group* but"
" overriding *getGroupMembers()* to append the ids of the referenced users as"
" well as the contained ones ... or instead of, depending on your needs. As "
"it happens, Projects also act as groups, with members being assigned by "
"reference, using two reference fields - one for project members, and one for"
" project manangers. Here is the equivalent adapter from "
"*membership/project.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2824
msgid ""
"As may be expected, the membrane adapters for *Employee* are a bit more "
"involved. They consist of the following:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2830
msgid "IUserRelated adapter"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2828
msgid ""
"Provides a user id for employees. Note that user ids and user names are "
"possibly different when PAS is used: the user id must be globally unique; "
"the user name is the named used for logging in."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2834
msgid "IUserAuthentication adapter"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2833
msgid ""
"Used to perform actual authentication by validating a supplied username and "
"password."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2837
msgid "IUserRoles adapter"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2837
msgid "Used to determine which roles the particular user is given."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2841
msgid "IMembraneUserManagement"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2840
msgid ""
"Used by membrane and Plone's UI to deal with changes to the user, such as "
"the adding of a new user (not implemented here, since we"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2843
msgid ""
"All these adapters are found in *membership/employee.py*. The *IUserRelated*"
" adapter is the simplest, as it simply invokes the user name. Note that by "
"default, membrane will use the Archetypes *UID()* function as the user id. "
"This is sensible, but unfortunately Plone's UI (and that of third party "
"products) is not always aware of the distinction between user id and user "
"name. Ideally, only the user name would ever be displayed, the user id being"
" an internal concept, but in practice you may end up with things like member"
" folder names that are long, unfriendly UID strings. Sometimes this may even"
" be unavoidable in the general case, because it's possible that two "
"different sources of users could use the same user name for two different "
"user ids! For the purposes of b-org, however, we assume user names are "
"unique and well-defined. The adapter is therefore quite trivial: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2861
msgid ""
"The id of the content object that represents the employee is used as the "
"user id. This is also used as the user name, as defined in the "
"*IUserAuthentication* adapter: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2868
msgid ""
"In the *verifyCredentials()* method, the adapter is passed the login and "
"password as entered by the user in a dict (*credentials*) and then compares "
"those to the values stored on its context (the Employee content object). The"
" password is stored as a SHA1 digest in an annotation to make sure it cannot"
" be read back by examining the content object - more on this in the section "
"on annotations. Be aware also that the *IUserAuthentication* adapter is "
"called on every request after a user is logged in and can deny access for "
"whatever reason by returning non-True. This means that it is important that "
"the method is as efficient as possible - expensive database lookups, for "
"example, are probably not a good idea here! The *IUserRoles* adapter is "
"trivial. Roles are stored on the content object in a field that is editable "
"only by managers. Of course, we could have picked roles from some other rule"
" if necessary: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2887
msgid ""
"The *getRoles()* method returns an iterable of strings representing "
"applicable roles. Note that depending on group membership (and the "
"*IGroupAwareRolesProvider* marker as described above) and local roles the "
"user may in fact have more roles than what this method returns! The "
"*IUserRoles* interface is concerned only with global roles intrinsic to the "
"user. Finally, we have the *IMembraneUserManagement* adapter. This lets "
"membrane know what to do when it is asked by Plone's UI to add, edit or "
"remove users. In particular, the *doChangeUser()* method enables the "
"*PasswordResetTool* to do its magic. Note that we have not implemented "
"*doAddUser()*, because there is no well-defined global policy for where the "
"actual *Employee* content object should be added! Recently membrane has "
"gained some functionality whereby a site-local utility providing "
"*IUserAdder*** from membrane can be queried for this policy. That may be "
"useful for b-org extension products, but b-org is still not in a position to"
" make a general policy for this, so it is not implemented out of the box. ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2908
msgid ""
"That's it! Through these adapters, the three b-org content types are able to"
" act as sources of groups and users. Hopefully, you will appreciate the "
"flexibility of the separation of concerns into adapters for things like "
"editing user properties, determining user id, calculating roles and "
"performing authentication. If you extend b-org, you can provide a more "
"specific adapter to any of the above interfaces to customise the membership "
"behaviour."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2917
msgid "5.11. Writing a custom PAS plug-in"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2919
msgid ""
"Projects require that members are given particular local roles within a "
"project space. This is achieved using a custom PAS plug-in."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2923
msgid ""
"PAS was introduced in the previous section on *membrane*. Truth be told, it "
"can be a bit of a jungle of plug-ins and delegation because it is so very "
"generic. Luckily, Plone (and membrane) takes care of most of the complexity "
"for us. Sometimes, however, it is desirable to influence the authentication "
"and role management at a lower level."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2931
msgid "Workspace adapters"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2933
msgid ""
"b-org ships with a bit of framework, adapted from some similar code in an "
"unreleased version of *teamspace* by Wichert Akkerman, which can provide "
"local roles in a \"workspace\" - in this case a Project. It relies on an "
"adapter to the *IWorkspace* interface to determine the mapping of users and "
"roles in the particular context. Before showing how this plug-in is written "
"and registered, however, let's look at how it is used by a Project. In "
"*membership/project.py* you will find: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2945
msgid ""
"This queries the lists of managers and members assigned (by reference) to "
"the project and specifies that both managers and members should get the role"
" *TeamMember* and managers should also get the role *Manager*. As it turns "
"out, this behaviour is also useful in Departments, which can be given one or"
" more department managers by reference. The idea is that department managers"
" should be allowed to add and remove Employees within that Department "
"(recall that *Department* is a folderish container for *Employee* objects). "
"The analogous adapter in *membership/department.py* reads: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2959
msgid ""
"Thus, a container wanting to use the PAS plug-in we're about to see to "
"manage local roles only need to be adaptable to *IWorkspace*. In fact, this "
"whole machinery ought to be factored out into a separate component, possibly"
" sharing code to *teamspace*, another product which provides similar "
"functionality. Mostly, this is down to laziness - creating another product "
"(with all its boilerplate) and managing another dependency in the *Products*"
" folder seemed too onerous when b-org was being developed. Hopefully, with "
"Zope 2.10/Plone 3.0 and a growing preference for plain-Python packages and "
"\"eggs\", it will seem a little less of an obstacle to split products up "
"into multiple smaller pieces. So much for making excuses."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2973
msgid "The plug-in"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2975
msgid ""
"The PAS plug-in that uses the *IWorkspace* interface can be found in "
"*pas/localrole.py*. It looks like this: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:2981
msgid ""
"On first glance, there is quite a lot going on here, but it is not so hard "
"to understand. First, we define a good old-fashioned Zope 2 factory and ZMI "
"add form. This is good practice, because PAS plug-ins can be managed via "
"*acl\\_users* in the ZMI. If you find yourself wandering there, however, "
"remember to bring a torch and keep a trail of breadcrumbs to find your way "
"out. A backup wouldn't hurt either if you try to change things. It is, "
"unfortunately, not the most intuitive of interfaces. We will see how the "
"plug-in is registered and activated in a moment, but first notice that the "
"plug-in implements an interface, *ILocalRolesPlugin*,Â  which is defined by "
"PlonePAS, the PAS-in-Plone integration layer. This defines methods that will"
" be called by the PAS machinery to determine, in this case, local roles. "
"Note that this is *not* an adapter (perhaps it would have been if PAS had "
"been invented in Zope 3, though Zope 3 has its own authentication machinery "
"that is evolved from PAS and works slightly differently). When created, the "
"*ProjectLocalRoleManager* is an Zope 2 object that lives in the ZODB in "
"*acl\\_users*. The methods of the *ILocalRolesPlugin* interface are fairly "
"self-explanatory in purpose. They allow PAS to extract the local roles for a"
" particular user in a particular context (*getRolesInContext()*), to check "
"whether a user in fact has one of the roles required to access a particular "
"method attribute in a particular context (*checkLocalRolesAllowed()*), and "
"to get a map of users-to-roles in a particular context. The complex parts "
"are, as often is the case, concerned with acquistion. The helper method "
"*\\_findWorkspace()* attempts to walk up the object hierarchy to find the "
"first possible *IWorkspace* (it will only consider one) to get hold of the "
"appropriate *IWorkspace* adapter that is then used to determine the actual "
"roles that apply, as above. Without walking up the content hierarchy, it "
"would not be possible to let the local roles of a particular project apply "
"when in the context of a piece of content *inside* that project (i.e. a sub-"
"object of the folderish *Project* object). There is some reasonably hairy "
"acqusition-juggling going on in the \\_*chain()* method to return this chain"
" as a generator. The hairiness comes from the fact that the thing that is "
"being checked may in fact be a method that is being accessed, and aqusition "
"chains can get themselves in all kinds of knots, especially when Five is in "
"the mix. Lastly, we need to declare a *ClassSecurityInfo* and call "
"*InitializeClass* to get Zope 2 to play ball."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3025
msgid "Registering the plug-in"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3027
msgid ""
"To be able to use this plug-in, we must first register it with PAS. This is "
"done when the product is loaded, in *borg/\\_\\_init\\_\\_.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3033
msgid ""
"This is similar to how CMF content types are initialised with "
"*ContentInit().initialize()* and *context.registerClass().* In other words, "
"copy-and-paste and the less you know the happier you will be. By registering"
" the plug-in, we could now ask our users to instantiate a *Workspace Roles "
"Manager*within *acl\\_users*.... er... somwhere. Like we said - not "
"necessarily obvious. Better to do it once, in the setup code for b-org. "
"Please refer to the section on GenericSetup to learn how b-org is actually "
"installed, but notice that the relevant code is in *setuphandlers.py*: ::"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3047
msgid ""
"All we do here is get hold of the factory dispatcher for the user folder "
"(from *manage\\_addProduct*, which has something to do with that "
"*registerClass* call for the *WorkspaceLocalRoleManager* seen in the "
"previous code example, but like we said, it's dont-ask, don't-tell) and if "
"it is not there already, we create an instance of the plugin using the "
"factory. We then need to activate it so that it actually takes effect. *out*"
" is a StringIO output stream used for logging."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3057
msgid "5.12. Placeful workflow"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3059
msgid ""
"b-org uses CMFPlacefulWorkflow, which ships with Plone 2.5, to manage the "
"workflow of content objects inside a project."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3062
msgid ""
"Placeful workflows are based on the concept of policies. You can think of a "
"policy as a mapping of workflows to types, in the same way as you could "
"control from the *portal\\_workflow* tool. Policies are created, normally by"
" copying an existing policy (possibly the default, global policy), and then "
"applied to a context. In Plone, this can be done using the *policy*option in"
" the *state* menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3069
msgid ""
"Placeful workflows are used in b-org Projects. Inside a project, project "
"members should have elevated view and modify permissions over content. This "
"is achieved using the following technique:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3074
msgid "A new role *TeamMember* is made available within any Project*.*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3075
msgid ""
"A custom workflow, *borg\\_project\\_default\\_workflow* is a customisation "
"of the default Plone workflow that has a simplified set of states and "
"actions, and is aware of the *TeamMember* role."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3078
msgid ""
"A placeful workflow policy sets the default workflow, as well as the "
"workflow for folders, to this one."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3080
msgid ""
"When a Project is created, this placeful workflow policy is enabled for the "
"project."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3083
msgid ""
"The custom workflow is defined using *GenericSetup*, in "
"*profiles/default/workflows/borg\\_project\\_default\\_workflow/definition.xml*."
" You can of course install your own workflow if necessary. The workflow "
"policy is set up in the *importVarious* setup step, in *setuphandlers.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3093
msgid ""
"Again, you could add a different policy if you needed different settings."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3096
msgid ""
"Finally, we apply the policy when a project is created. We will see how this"
" is set up when events are covered in the next section, but the relevant "
"code is in *events/project.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3104
msgid ""
"Here, the local role is added to the newly created project instance (it is "
"not made global so as not to pollute the global roles list), and the policy "
"is associated with the contents of the (folderish) project object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3109
msgid ""
"Note that we do not hard-code the name of the workflow policy! Instead, we "
"ask a utility called *ILocalWorkflowSelection*. This could be overridden "
"using a local utility, but the global one references the policy created "
"above, as defined in *DefaultLocalWorkflowSelection*. This utility is "
"registered in *events/configure.zcml* as follows:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3121
msgid "5.13. Sending and handling events"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3123
msgid ""
"Events is undoubtedly one of the most useful things that Zope 3 brings to "
"the Zope 2 world. Here's how b-org uses them."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3126
msgid ""
"In the previous section, you saw how an event handler was used to apply a "
"placeful workflow policy to newly created projects. This pattern is quite "
"powerful - instead of needing to subclass *Project* just to add something to"
" *at\\_post\\_create\\_script()* or *initializeArchetype()*, say, you simply"
" register an appropriate event handler. This pattern can of course apply to "
"other situations, such as when objects are modified, deleted, added to a "
"container, or on any other type of event that may occur in your system. "
"Events are synchronous, so when code emits an event, it will block until all"
" event handlers are finished."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3137
msgid ""
"Recall the event handler for adding projects. It can be found in "
"*events/project.py* and has the following signature:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3145
msgid ""
"The first argument is the object the event was fired on, the second is an "
"instance of the event itself. In fact, this two-part event dispatcher is a "
"special case of events described with *IObjectEvent* and its sub-interfaces."
" Internally, Zope 3 catches all *IObjectEvent*s and re-dispatches the event "
"based on the object that is passed along the event instance. The "
"registration for the event handler in *events/configure.zcml* looks like "
"this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3160
msgid ""
"Note that there are two interfaces the subscriber is registered *for* - the "
"object type and the event type. These must be separated by whitespace, "
"though a newline like above is customary. This is the same syntax that is "
"used to explicitly define multi-adapters (if you are not using the "
"*adapts()* syntax in an adapter class) - in fact, the events machinery uses "
"the adapter registry internally to map subscribers to events when they are "
"fired."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3168
msgid ""
"A more general-case event can be found in *events/employee.py*, which takes "
"care of assigning ownership of an *Employee* object to the user that is tied"
" to that employee. The code is borrowed and adapted from *PloneTool*, but "
"notice the signature which only includes the event:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3182
msgid ""
"The registration in *events/onfigure.zcml*is similar to the one above, but "
"only uses one *for* interface:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3192
msgid "Sending custom events"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3194
msgid ""
"You will notice that the *IEmployeeModifiedEvent* is a custom event. In "
"Plone 3.0 (or rather, Archetypes 1.5) this won't be necessary, because "
"Archetypes will take care of sending an event derived from "
"*IObjectModifiedEvent*, which in turn derives from *IObjectEvent* and thus "
"is subject to the same registration as the *IObjectAddedEvent* that includes"
" the object type and the event type. For now, though, we need to send the "
"event ourselves."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3202
msgid "The event is described by an interface in *interfaces/employee.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3214
msgid ""
"The implementation is trivial, and can be found in *content/employee.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3230
msgid ""
"It is of course the event *class* that we instantiate and send, whilst we "
"register the event handler for the event *interface*. This means that we "
"could provide alternative implementations for the same event interface, if "
"need be. It also means that event handlers subscribed for a parent interface"
" will be invoked for events that provide a sub-interface. Sending the event "
"is very simple. In the definition of *Employee* in *content/employee.py*, we"
" have:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3258
msgid ""
"We construct an event instance and parameterise it with the right object "
"(i.e. self) before sending it with *notify()*, all on one line."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3263
msgid "5.14. Annotations"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3265
msgid ""
"Annotations are an elegant solution to the \"where do I store this?\" "
"problem, and are used in many Zope 3 applications."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3268
msgid ""
"It is often useful to be able to attach information to an object even if you"
" don't have control over that object's type and schema. For example, a "
"tagging solution may attach a list of tags to an object, or a notification "
"tool may want to add a list of subscribers on a per-object basis. This is "
"known in Zope 3 as \"annotations\"."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3275
msgid "Annotations work like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3277
msgid ""
"A marker interface, normally *IAttributeAnnotatable* is applied to the class"
" or object that is to be annotated. This particular marker means that "
"annotations are stored in a persistent dict called *\\_\\_annotations\\_\\_*"
" that is added to the object, though this should be considered an "
"implementation detail."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3282
msgid ""
"An adapter exists from *IAttributeAnnotable*to *IAnnotations*. If you need a"
" different annotation regime (e.g. one that stores the values keyed by "
"object id in some local utility) you could provide a different adapter to "
"*IAnnotations*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3286
msgid ""
"The code that wishes to annotate an object will adapt it to *IAnnotations*. "
"The annotations adapter acts like a dict. Conventionally, each package that "
"uses annotations will store all its (arbitrary) information under a "
"particular key in that dict. The key name is normally the same as the name "
"of the package. This is mainly to avoid conflicts between different packages"
" annotating a particular object."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3294
msgid ""
"In b-org, we don't have quite the same need for annotating objects from "
"other parts of Plone, but we use annotations to store users' passwords. This"
" ensures that they cannot be accessed through-the-web (since Zope 2 won't "
"publish the *\\_\\_annotations\\_\\_* dict, as it begins with an underscore)"
" and keeps passwords out of the way. Strictly speaking, this is probably "
"overkill since the password is also hashed using the SHA1 one-way hasing "
"algorithm, but that never stopped anyone before."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3303
msgid ""
"First, look at the definition of the *Employee* class in "
"*content/employee.py*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3320
msgid ""
"Here, we explicitly say that Employee is attribute annotatable. Of course, "
"this requires control over the class. If you are trying to annotate another "
"type that isn't already marked as annotatable, you may be able to add the "
"marker interface using *classProvides()* or *directlyProvides()* from "
"*zope.interface*, or use the ZCML *<implements />* directive. You need to be"
" a bit careful, though, since the thing you are annotating should probably "
"be persistent. You should also be polite - you're stuffing your own "
"information onto someone else's object. Try not to break it."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3330
msgid ""
"Further down in *content/employee.py*, you will see the annotation being "
"set:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3341
msgid ""
"PASSWORD\\_KEY comes from *config.py*, and is simply a string. The digest is"
" verified in *membership/employee.py*, in the *IUserAuthentication* adapter:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3369
msgid ""
"That's all there is to it. We get an *IAnnotations* adapter, and then look "
"up the *PASSWORD\\_KEY* to find the digest. The annotations adapter has the "
"same contract as a Python dict, so we can use functions like *get()* and "
"*setdefault()*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3375
msgid "5.15. Zope 3 Views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3377
msgid ""
"One of the nicest things that Zope 3 brought us is a way to manage view "
"logic."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3380
msgid ""
"In Zope 2, a view (be that a view of a content object, or a more standalone "
"template) typically consists of a Zope Page Template that pulls in data from"
" its context. The problem is that non-trivial templates usually require some"
" kind of \"view logic\" or \"display logic\". People tend to put these in a "
"few places:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3386
msgid ""
"Complex *python:* expressions in the ZPT. This is bad because it makes your "
"templates hard to understand, and because there is a limit to what you can "
"do with one-line Python expressions."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3389
msgid ""
"External Python Scripts in a skin layer that get acquired in the page "
"template, e.g. *here/calculateDate.* This is bad because it is cumbersome to"
" create a new file for something which may be quite trivial, because all "
"such scripts are part of a global namespace (and thus there may be conflicts"
" between two different scripts with the same name), and also because Python "
"scripts in the skin layers (and *python:* expressions) are slower than "
"filesystem Python code and more restricted."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3397
msgid ""
"A custom tool that provides some necessary functionality. This is bad "
"because a tool is a singleton, so you will probably need to explicitly pass "
"around a context. Tools are also part of that same global namespace (by way "
"of acquisition from the portal root), and are a hassle to create and "
"install."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3402
msgid ""
"Methods on the context content object (where applicable). This is bad "
"because it mixes presentation logic and the model (the schema) and storage "
"logic. This often leads to an explosion of methods on each content type that"
" are highly specific to a particular template. This pattern also requiers "
"that you have the ability to add new methods to the content type class, even"
" if you are just adding a new view template for it."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3410
msgid ""
"As usual, these problems indicate a lack of separation of concerns. Zope 3's"
" answer is a view - a class (typically) which may be associated with a "
"template."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3415
msgid "Views are multi-adapters"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3417
msgid ""
"You will often hear that views are named multi-adapters of a context and a "
"request. In fact, the concept of a multi-adapter originated in the need for "
"views. For most practical purposes, you can forget about this - it is an "
"implementation detail. However, you may sometimes need to look up views "
"yourself, which can be done using:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3429
msgid ""
"More importantly, you need to know that to access the context the view is "
"operating on inside that view, you can use *self.context*, and to access the"
" request (including form variables submitted as part of that request, if "
"applicable), using *self.request*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3435
msgid "Explicitly acquiring views"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3437
msgid ""
"One of the easiest ways of using views with existing code is to make page "
"templates in a skin layer as you normally would, and then acquire a view "
"object that is used for rendering logic. One of the main reasons for using "
"this approach is that it allows page templates to be customised using the "
"normal skin layer mechanism. This is approach is used extensively in Plone "
"2.5. Here's an example from the \"recent\" portlet, starting with "
"*portlet\\_recent.pt*:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3458
msgid ""
"The important line here is context*/@@recent\\_view*. This will look up a "
"view named *recent\\_view* relative to the current context (*context* in "
"page templates is a now-preferred alias for the *here* variable that was "
"used before - *here* still works in Zope 2 templates, but is gone in Zope "
"3)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3464
msgid ""
"This view is defined by a class and a ZCML directive. The ZCML directive "
"looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3477
msgid ""
"Actually, this is not exactly what's in the file in Plone, since Plone is "
"working around a few Zope 2.8 issues, but basically, this says that the view"
" is available on all types of contexts (*for=\"\\*\"* - this could specify a"
" dotted name to an interface if needed, more on that below), has the name "
"*recent\\_view*, is public (because of the magic permission *zope.Public*) "
"and that when acquired, the attribute (method) *results* is allowed - more "
"attributes could be specified separated by whitespace. The class that is "
"referenced contains the view implementation. Here it is, again slightly "
"modernised:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3513
msgid ""
"The use of *aq\\_inner()* on self.context is not strictly necessary always, "
"but is a useful rule of thumb to make acquisition do what you expect it to "
"do (this is because the *BrowserView* base class extends "
"*Acquisition.Explicit*, which causes *self.context* to gain an acquistion "
"wrapper that can mess with its acqusition chain)."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3522
msgid ""
"Zope 3 does not use views in this way. Instead, you would bind the template "
"to the browser view explicitly. The main drawback of this technique is that "
"the template is not present in the *portal\\_skins* tool, and so cannot be "
"customised through-the-web. This may be possible in future versions of Zope "
"and CMF, but for now the full-blown view technique is best used when it is "
"not necessary to customise views through-the-web. Of course, you can still "
"override view registrations using ZCML on more specific interfaces or an "
"*overrides.zcml*."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3532
msgid ""
"Here is a view for departments in the *charity* example product, under "
"*charity/browser/configure.zcml.* Notice how this entire XML file is in the "
"*browser* namespace, and thus it is unnecessary to prefix each directive "
"with *browser:*"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3554
msgid ""
"Here, we explicitly state that this view is only available for "
"*IDepartmentContent* objects. This means that if you try to invoke "
"*@@charity\\_department\\_view* on anything that does not provide this "
"interface, you will get a lookup error. The view is protected by the Zope "
"2*View* permission. Also note that there is no *allowed\\_attributes* (or "
"*allowed\\_interface*) attribute here. This is because the view is not "
"intended to be used by other templates (if they tried, they would get an "
"*Unauthorized* error when trying to access any attribute of the view) - all "
"the logic is in the *department.pt* template."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3565
msgid ""
"The *department.pt* template is found in *charity/browser,*the same "
"directory as the *configure.zcml* file above. You can use relative paths "
"like *./templates/...* if necessary to point to the template file on the "
"filesystem. Here is the class:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3591
msgid "And here is the template that uses these methods:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3631
msgid ""
"Now, you can go to a hypothetical URL "
"*/mydept/@@charity\\_department\\_view* to see this view rendered. In fact, "
"this is set as the *view* and *(Default)* aliases for the Department content"
" type when *charity* is installed, so the user will never see this URL."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3640
msgid ""
"It is also possible to make views without templates. This is useful if you "
"need a URL to submit that does some processing. That processing would "
"normally be done in the *\\_\\_call\\_\\_()* method, as in the hypothetical "
"example below:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3654
msgid ""
"Now, we could write a form that has *action=\"@@modify\\_customer\"*, which "
"would result in this being called:"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3672
msgid ""
"This is obviously a simplified example, but the important thing to realise "
"is that the view will tend to use *self.context* and *self.request* to "
"interact with the rest of the portal."
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3679
msgid "5.16. The schema extension mechanism"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3681
msgid "How the Archetypes schema extension mechanism in b-org works"
msgstr ""

#: ../../reference_manuals/old/archetypes/appendix.rst:3683
msgid "Text to follow"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:3
msgid "ATContentTypes"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:7
msgid ""
"Since Plone 2.1, Plone has shipped with ATContentTypes for its default "
"content types"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:10
msgid ""
"“ATContentTypes”:/products/atcontenttypes is a re-implementation of the "
"standard CMF types as Archetypes content. It adds a numer of features to the"
" standard CMF types and offers more flexibility in extending and re-using "
"content types. The “RichDocument "
"tutorial”:/documentation/tutorial/richdocument explains how ATContentTypes "
"are subclassed and how they make use of the latest conventions in Archetypes"
" and CMF. The ATContentTypes product is installed during the creation of a "
"Plone site. It will migrate the base CMF content types to its own "
"equivalents using its own highly generic migration framework. Please note "
"that ATContentTypes aims to be usable in plain CMF. It has a number of "
"optional Plone dependencies, in the form::"
msgstr ""

#: ../../reference_manuals/old/archetypes/atcontenttypes.rst:28
msgid ""
"Plone has no direct dependencies on ATContentTypes, nor on Archetypes. There"
" are a few generic interfaces in ‘CMFPlone.interfaces’ that are used by both"
" Archetypes/ATContentTypes and Plone, but we do not wish to have any direct "
"dependency on Archetypes, since Archetypes is essentially just a development"
" framework to make developing CMF content types easier. By minimising the "
"number of dependencies, we ensure that plain-CMF (and in the future, plain-"
"Zope 3) content types are still usable within Plone. ATContentTypes and "
"Plone both depend on ‘CMFDynamicViewFTI’. This is a wrapper on the standard "
"CMF FTI type that adds support for the ‘display’ menu by recording a few "
"extra properties for the available and currently-selected view methods. It "
"also provides a mixin class, "
"‘CMFDynamicViewFTI.browserdefault.BrowserDefaultMixin’, which enables "
"support for the ‘display’ menu (or rather, the interface "
"‘CMFDynamicViewFTI.interfaces.ISelectableBrowserDefault’)."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:3
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:10
msgid "How to use events to hook the Archetypes creation process"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:8
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:14
msgid ""
"Times have changed since the days of at_post_create_script(). Here is the "
"way to hook into Zope3 (or Five's) event system in order to execute code "
"during the Archetypes content creation and or editing process."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:10
msgid ""
"In the old days the only way to execute code during the object creation "
"process for Archetypes was to add a method to your content type called "
"at_post_create_script. In this script you would add any code that should "
"execute after Archetypes was done creating the object."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:12
msgid ""
"The new method for hooking the Archetypes object creation and editing "
"process is to use Zope3 style events, like "
"Products.Archetypes.interfaces.IObjectInitializedEvent."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:17
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:30
msgid ""
"Have a content type handy so we can add a post creation hook to it. To learn"
" how to create a content type, check previous sections of this manual."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:19
msgid ""
"We're going to use a content type called ExampleContent with the interface "
"IExampleContent for this how to. The code structure will look like this::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:26
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:45
#: ../../reference_manuals/old/buildout/subversion.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:95
msgid "Step by step"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:27
msgid ""
"First let's create the interface for our ExampleContent type. In "
"interfaces.py, add::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:35
msgid ""
"You can store the implementation for your event handlers anywhere but for "
"the purpose of this example we're going to put it in the same module as the "
"ExampleContent type::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:47
msgid ""
"All we need to do now is register the addSubFolder method as a handler for "
"Products.Archetypes.interfaces.IObjectInitializedEvent and for anything "
"implementing the IExampleContent interface. We do this in a configure.zcml "
"file::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:53
msgid ""
"Notice that there are two interfaces in the \"for\" attribute. This is "
"because we are registering a multi-adapter. Now when you add an "
"ExampleContent type the addSubFolder method will be executed after "
"Archetypes has created the object. The object itself will be passed to the "
"handler and we can use the object reference to make additional "
"modifications, in this case adding a sub folder."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:55
msgid "You can register as many handlers as you need."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:58
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:94
msgid "Warnings from your future"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:60
msgid ""
"Having implemented all of your content type's event hooks you might then run"
" off and try using invokeFactory somewhere in your code only to realize that"
" your IObjectInitializedEvent handlers are not being executed. This is "
"because invokeFactory does not notify Zope's event system that new objects "
"are being created. You have to provide these notifications yourself. So here"
" is an example::"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:68
msgid ""
"This will both create your object and invoke any IObjectInitializedEvent "
"handlers you have registered. Notice that we are importing "
"ObjectInitializedEvent, not the interface IObjectInitializedEvent. We want "
"to actually instantiate an event passing it our newly created object as the "
"single parameter and then pass the event to zope.event.notify. From there, "
"Zope takes care of figuring out which handlers need to execute."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:70
msgid ""
"So for example, in our addSubFolder method above, any events registered for "
"the folder we created would not fire. To complete our hook in this case we "
"should provide a notification for our newly created folder. Archetypes or "
"other products may be expecting notifications so when using invokeFactory, "
"always send an IObjectInitializedEvent for the object. The complete method "
"looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:75
msgid "def addSubFolder(obj, event):"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:73
msgid ""
"obj.invokeFactory(type_name='Folder', id='subfolder') folder = getattr(obj, "
"'subfolder') zope.event.notify(ObjectInitializedEvent(folder))"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:78
#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:134
#: ../../reference_manuals/old/buildout/subversion.rst:79
msgid "Further information"
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:80
msgid ""
"The IObjectInitializedEvent is fired once during the objects creation "
"process. To hook the editing process for an object use IObjectEditedEvent."
msgstr ""

#: ../../reference_manuals/old/archetypes/create_event_hook.rst:82
msgid ""
"The Sending and handling events tutorial is a little out of date but "
"provides a broader explanation of the underlying mechanics. Walking through "
"Five to Zope 3 - Events is another great introduction to events handling."
msgstr ""

#: ../../reference_manuals/old/archetypes/display_menu.rst:3
msgid "The 'display' menu"
msgstr ""

#: ../../reference_manuals/old/archetypes/display_menu.rst:7
msgid ""
"The 'display' menu is the drop-down that lets content authors select which "
"view template to use, or which object to set as a default-page in a folder."
msgstr ""

#: ../../reference_manuals/old/archetypes/display_menu.rst:11
msgid ""
"The ``display`` menu is found in ``global\\_contentmenu.pt`` and supports "
"three different functions: - Set the display template (aka “layout”) of the "
"current content object, provided that object supports this. - Set the "
"default-page of a folder, provided the folder supports this - If viewing a "
"folder with a default-page, allow selecting the standard view "
"template/layout for that folder, thus unsetting the default-page. There are "
"two interfaces in ``CMFDynamicViewFTI.interfaces`` that are used to support "
"this functionality: IBrowserDefault – Provides information about the layout "
"current selection of a given content object, including any selected deafult-"
"page ISelectableBrowserDefault – Extends IBrowserDeafult with methods to "
"manipulate the current selection The canonical implementation of both these "
"interfaces is in ``CMFDynamicViewFTI.browserdefault.BrowserDefaultMixin``. "
"This in turn gets the vocabulary of available view methods from the FTI (and"
" hence this can be edited through-the-web in ``portal\\_types``), and stores"
" the current selection in two properties on each content object: ``layout``,"
" for the currently selected view template, and ``default\\_page`` if any "
"default page is selected. If both are set, the default-page will take "
"precedence. ``BrowserDefaultMixin`` actually provides a ``\\_\\_call\\_\\_``"
" method which means that will render the object with its default layout "
"template. However, ``PloneTool.browserDefault()`` will actually query the "
"interface directly to find out which template to display - please see the "
"next page for the gory details."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:3
msgid "Advanced: Understanding Storage"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:7
msgid ""
"This page describes the basic mechanism for the Field storage mechanism, a "
"powerful Archetypes feature that allows you to store field data somewhere "
"besides the ZODB."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/advanced_understanding_storage.rst:11
msgid "TBD: write the page"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/fields_reference.rst:3
msgid "Fields Reference"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/fields_reference.rst:7
msgid "Attributes of standard Archetypes fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:3
msgid "Validator Reference"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:7
msgid "A quick reference to the built-in Archetypes validators."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:10
msgid "Using Validators"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:12
msgid ""
"Archetypes fields may have validators specified in the Field schema. For "
"example, the schema for the basic page type includes the stanza:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:24
msgid ""
"This specifies that the *isTidyHtmlWithCleanup* test will be applied to "
"validate form input."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:27
msgid "You may specify a sequence of validators:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:33
msgid "and the validators will tested in order."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:35
msgid "The validators sequence may contain two kinds of entries:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:37
msgid ""
"The string names of validators registered with the validation service (see "
"Products.validation);"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:39
msgid ""
"Instances of classes implementing the IValidator interface "
"(Products.validation.interfaces.IValidator.IValidator)."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:42
msgid ""
"A validation specification using a validator class instance can look like:"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:52
msgid "Registered Validators"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/validator_reference.rst:54
msgid ""
"These are validators pre-registered with the validation service. They may be"
" specified by name."
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/widgets_reference.rst:3
msgid "Widgets Reference"
msgstr ""

#: ../../reference_manuals/old/archetypes/fields/widgets_reference.rst:7
msgid ""
"This page is a syntax reference and general guide for defining and using "
"Widgets."
msgstr ""

#: ../../reference_manuals/old/archetypes/index.rst:3
msgid "Content-types with Archetypes"
msgstr ""

#: ../../reference_manuals/old/archetypes/index.rst:7
msgid ""
"How to create new content-types in Plone using the Archetypes framework."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:6
msgid "What is Archetypes?"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:10
msgid "Brief presentation of Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:13
msgid ""
"Archetypes is a framework for developing new content types for a Plone "
"project. Most content management projects involve introducing new types of "
"content, which in the non-trivial case requires an informed understanding of"
" how Zope and the CMF work. Archetypes provides a simple, extensible "
"framework that can ease both the development and maintenance costs of CMF "
"content types while reducing the learning curve for the simpler cases."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:21
msgid ""
"Compared to building content types using the stock CMF (through "
"subclassing), Archetypes gives you the following advantages:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:24
msgid "automatically generates forms and views;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:25
msgid ""
"provides a library of stock field types, form widgets, and field validators;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:27
msgid "allows defining custom fields, widgets, and validators;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:28
msgid "automates transformations of rich content;"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:29
msgid ""
"a built-in reference engine that gives the ability to link two objects "
"together with a relation; such a “link” from a given object to another one "
"is a Python object called a *reference*."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:33
msgid ""
"Since Plone 2.1, Archetypes has become the de-facto way of developing new "
"content types, and a majority of third party products that are released "
"these days use Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:38
msgid "Archetypes schemas"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:42
msgid "Introducing Archetypes-based schemas and fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:44
msgid ""
"Archetypes provides a robust framework for storing data attributes on "
"content objects.  This framework consist of a number of **Fields** stored in"
" a container called a **Schema**. Fields are simply specialized Python "
"classes that allow you to store and retrieve data associated with an "
"Archetypes object."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:50
msgid ""
"Fields provide a few functionalities. First, there are specialized field "
"types for strings, lists of strings, integers, floating-point numbers, etc.,"
" that allow special handling of fields based on the type of data stored."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:56
msgid "Some definitions"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:58
msgid "Before we go diving in, let’s define some often-used terms:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:60
msgid ""
"Field: An Archetypes Field. This refers to an instance of a Field class "
"defined in a Schema."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:62
msgid "Schema: The “container” that Archetypes uses to store fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:63
msgid ""
"Schemata: A named grouping of fields. One Schema can have many schematas."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:65
msgid "AT: Abbreviation for Archetypes."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:68
msgid "Fields, Classes, and Objects"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:70
msgid ""
"Archetypes Fields are Python objects contained within the Schema. A Field is"
" defined once for an Archetypes content class. This single Field instance is"
" used for every instance of that class.  Therefore, the relationship between"
" Field instances and content classes is described as such: “A field instance"
" belongs to exactly one class.” A class, however, can have many *different* "
"Field instances. Furthermore, every instance of an AT class uses the *same* "
"set of Fields.  AT objects themselves do not contain unique Fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:79
msgid ""
"When Zope starts up, during product initialization, Archetypes reads the "
"schema of the registered classes and “automagically” generates methods to "
"read (the *accessor*) and change (the *mutator*) each of the fields defined."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:85
msgid "Stock schemas"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:87
msgid "Archetypes includes three stock schemas:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:89
msgid "BaseSchema: defines a normal content type,"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:90
msgid ""
"BaseFolderSchema: defines a folderish content type (object can contain other"
" objects),"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:92
msgid ""
"BaseBTreeFolderSchema: for folders which need to handle hundreds or "
"thousands of objects (even up to millions)."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:95
msgid ""
"All three include two fields, ``id`` and ``title``, as well as the standard "
"Dublin Core metadata fields."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:99
msgid "Modifying the fields of an existing schema"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:101
msgid ""
"Modifying an existing schema field is possible using the syntax "
"``schema['<field_name>'].attribute = value``. For example, to change the "
"label of the *description* field widget (already available in *BaseSchema*),"
" you can write (*in your defined schema definition that reuses BaseSchema*):"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:111
msgid ""
"The fields in the schema are ordered, and normally first fields come first "
"in “add” and “edit” forms. To rearrange a field within the schema use the "
"``moveField`` method:"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:115
msgid ""
"Place it before a specific field: ``schema.moveField('<field_to_move>', "
"before='<field_to_place_it_before>')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:117
msgid ""
"Place it after a specific field: `` schema.moveField('<field_to_move>', "
"after='<field_to_place_it_after>')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:119
msgid ""
"Place it at the top of the schema: `` schema.moveField('<field_to_move>', "
"pos='top')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:121
msgid ""
"Place it at the bottom: `` schema.moveField('<field_to_move>', "
"pos='bottom')``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:123
msgid ""
"Place it in a specific position: `` schema.moveField('<field_to_move>', "
"pos=0)``"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:128
msgid "What is ATContentTypes?"
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:132
msgid ""
"ATContentTypes is the Plone core product that provides the default content "
"types (since Plone 2.1)."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:135
msgid ""
"One of the major changes introduced in Plone 2.1 was that the core content "
"types (Page, Image, etc) were changed from being based on stock CMF types, "
"to using Archetypes. The new core types are housed in the ATContentTypes "
"product."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:140
msgid ""
"ATContentTypes introduces a number of base classes and tools that provide "
"common “Plone-ish” behaviour. This includes things like support for the "
"“display” menu and the “more…” menu and restrictions for the “add item” "
"menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/introduction.rst:145
msgid ""
"You can use ATContentTypes’ base classes and tools in your own products. The"
" `RichDocument tutorial`_ covers the core techniques, and is probably a good"
" place to go when you have finished this reference."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:3
msgid "Other Useful Archetypes Features"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:7
msgid "Complementary features you'd be pleased to know about."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:18
msgid ""
"In the old days the only way to execute code during the object creation "
"process for Archetypes was to add a method to your content type called "
"*at\\_post\\_create\\_script*. In this script you would add any code that "
"should execute after Archetypes was done creating the object."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:23
msgid ""
"The new method for hooking the Archetypes object creation and editing "
"process is to use Zope3 style events, like \\ "
"*Products.Archetypes.interfaces.IObjectInitializedEvent*."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:34
msgid ""
"We’re going to use a content type called *ExampleContent* with the interface"
" *IExampleContent* for this how to. The code structure will look like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:47
msgid ""
"First let’s create the interface for our *ExampleContent* type. In "
"*interfaces.py*, add:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:58
msgid ""
"You can store the implementation for your event handlers anywhere but for "
"the purpose of this example we’re going to put it in the same module as the "
"*ExampleContent* type:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:74
msgid ""
"All we need to do now is register the *addSubFolder* method as a handler for"
" \\ *Products.Archetypes.interfaces.IObjectInitializedEvent* and for "
"anything implementing the *IExampleContent* interface. We do this in a "
"*configure.zcml* file:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:85
msgid ""
"Notice that there are two interfaces in the “for” attribute. This is because"
" we are registering a multi-adapter. Now when you add an *ExampleContent* "
"type the *addSubFolder* method will be executed after Archetypes has created"
" the object. The object itself will be passed to the handler and we can use "
"the object reference to make additional modifications, in this case adding a"
" sub folder. You can register as many handlers as you need."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:96
msgid ""
"Having implemented all of your content type’s event hooks you might then run"
" off and try using *invokeFactory* somewhere in your code only to realize "
"that your \\ *IObjectInitializedEvent* handlers are not being executed. This"
" is because *invokeFactory* does not notify Zope’s event system that new "
"objects are being created. You have to provide these notifications yourself."
" So here is an example:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:111
msgid ""
"This will both create your object and invoke any \\ "
"*IObjectInitializedEvent* handlers you have registered. Notice that we are "
"importing *ObjectInitializedEvent*, not the interface "
"*IObjectInitializedEvent*. We want to actually instantiate an event passing "
"it our newly created object as the single parameter and then pass the event "
"to *zope.event.notify*. From there, Zope takes care of figuring out which "
"handlers need to execute."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:119
msgid ""
"So for example, in our *addSubFolder* method above, any events registered "
"for the folder we created would not fire. To complete our hook in this case "
"we should provide a notification for our newly created folder. Archetypes or"
" other products may be expecting notifications so when using invokeFactory, "
"always send an *IObjectInitializedEvent*\\ for the object\\ *.*\\ The "
"complete method looks like this:"
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:140
msgid ""
"The \\ *IObjectInitializedEvent* is fired once during the objects creation "
"process. To hook the editing process for an object use \\ "
"*IObjectEditedEvent*."
msgstr ""

#: ../../reference_manuals/old/archetypes/other_useful_archetypes_features.rst:144
msgid ""
"The \\ `Sending and handling events`_ tutorial is a little out of date but "
"provides a broader explanation of the underlying mechanics. `Walking through"
" Five to Zope 3 - Events`_ is another great introduction to events handling."
msgstr ""

#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:3
msgid "Restricting addable types"
msgstr ""

#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:7
msgid ""
"The constrain-types machinery and how it drives the \"restrict...\" option "
"under the \"add item\" menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/restricting_addable_types.rst:10
msgid ""
"As of Plone 2.1, the “add item” menu supports a “restrict…” page that lets "
"the user decide which items can and cannot be added to that folder. This "
"functionality is defined in a pair of interfaces in "
"``CMFPlone.interfaces.constrains``, ``IConstrainTypes`` for read-only access"
" and ``ISelectableConstrainTypes`` for the mutators. The canonical "
"implementation of these interfaces is in "
"``ATContentTypes.lib.constraintypes``. This provides storage for the "
"constraint mode (more below) and the list of locally allowed and “preferred”"
" types. The preferred types are the ones that appear in the list "
"immediately, and the rest of the allowed types appear behind a “more…” item."
" The constraint type mode can be ``ACQUIRE`` (the default), ``DISABLED`` or "
"``ENABLED``. When disabled, the settings in ``portal\\_types`` are used. "
"When enabled, the list of types explicitly set are used. When set to "
"acquire, the parent folder`s types will be used \\*if\\* the parent is of "
"the same portal type as the folder in question. If they are of different "
"types the settings in ``portal\\_types`` apply. The rest of the "
"``ConstrainTypesMixin`` class overrides CMFCore`s ``allowedContentTypes`` "
"and ``invokeFactory`` methods to ensure the constraints are enforced."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:3
msgid "From Zope to the Browser"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:7
msgid ""
"How do content types get \"published\" (in the Zope sense, not the workflow "
"sense) to the web browser?"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:10
msgid ""
"There is a fairly complex mechanism that determines how a content object "
"ends up being displayed in the browser. The following is an adaptation of an"
" email to the plone-devel list which aims to untangle this complexity. It "
"pertains to Plone 2.1 only. Assumptions:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:16
msgid ""
"You want the 'view' action to be the same as what happens when you go to the"
" object directly for most content types..."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:18
msgid ""
"...but for some types, like File and Image, you want the \"view\" action to "
"display a template, whereas if you go straight to the object, you get the "
"file's contents"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:20
msgid ""
"You want to be able to redefine the 'view' action in your custom content "
"types or TTW in portal\\_types explicitly. This will essentially override "
"the current layout template selection. Probably this won't be done very "
"often for things deriving from ATContentTypes, since here you can register "
"new templates with the FTI and have those be used (via the \"display\" menu)"
" in a more flexible (e.g. per-instance, user-selectable) way, but you still "
"want the \"view\" action to give the same power to change the default view "
"of an object as it always has."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:22
msgid ""
"When you use the \"display\" menu (implemented with IBrowserDefault) to set "
"a default page in a folderish container, you want it to display that item "
"always, unless there is an index\\_html - index\\_html always wins (note - "
"the \"display\" menu is disabled when there is an index\\_html in he folder,"
" precisely because it will have no effect)"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:24
msgid ""
"When you use the \"display\" menu to set a layout template for an object "
"(folderish or not), you want that to be displayed on the \"view\" tab "
"(action), as well as by default when the object is traversed to without a "
"template/action specified..."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:26
msgid ""
"...except for ATFile and ATImage, which use a method index\\_html() to cut "
"in when you don't explicitly specify an item. However, these types will "
"\\*still\\* want their \"view\" action to show the selected layout, but will"
" want a no-template invocation to result in the file content"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:28
msgid "Some implementation detail notes: There are two distinct cases:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:31
msgid ""
"CASE I: \"New-style\" content types using the paradigms of ATContentTypes --"
" These implement ISelectableBrowserDefault, now found in the generic "
"CMFDynamicViewFTI product. They support the \"display\" menu with per-"
"instance selectable views, including the ability to select a default-page "
"for folders via the GUI. These use CMF 1.5 features explicitly."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:38
msgid ""
"CASE II: \"Old-style\" content types, including CMF types and old AT types "
"-- These do not implement this interface. The \"display\" menu is not used. "
"The previous behaviour of Plone still holds. The \"old-style\" behaviour is "
"implemented using the Zope hook \\_\\_browser\\_default\\_\\_(), which "
"exists to define what happens when you traverse to an object without an "
"explicit page template or method. This is used to look up the default-page "
"(e.g. index\\_html) or discover what page template to render. In Plone, "
"\\_\\_browser\\_default\\_\\_() calls PloneTool.browserDefault() to give us "
"a single place to keep track of this logic. The rules are (slightly "
"simplified):"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:49
msgid ""
"1. A method, attribute or contained object 'index\\_html' will always win. "
"Files and Images use this to dump content (via a method index\\_html()); "
"creating a content object index\\_html in a folder as a defualt page is the "
"now-less-encouraged way, but should still be the method that trumps all "
"others."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:55
msgid ""
"2. A propery 'default\\_page' set on a folderish object giving the id of a "
"contained object to be the default-page is checked next."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:58
msgid ""
"3. A property 'default\\_page' in 'site\\_properties' gives us a list of ids"
" to check and treat similarly to index\\_html. If a folder contains items "
"with any of these magic ids, the first one found will be used as a default-"
"page."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:63
msgid ""
"4. If the object has a 'folderlisting' action, use this. This is a funny "
"fallback which is necessary for old-style folders to work (see below)."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:66
msgid ""
"5. Look up the object's 'view' action and use this if none of the above hold"
" true."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:69
msgid ""
"In addition, we test for ITranslatable to allow the correct translation of "
"returned pages to be selected (LinguaPlone), and have some WebDAV overrides."
" Lastly, it has always been possible to put \"/view\" at the end of a URL "
"and get the view of the object, regardless of any index\\_html() method. "
"This means that you can go to /path/to/file/view and get the view of the "
"file, even if /path/to/file would dump the content (since it has an "
"index\\_html() method that does that). This mechanism uses the method "
"view(), defined in PortalContent in CMF (and also in BaseFolder in "
"Archetypes). view() returns 'self()', which results in a call to "
"\\_\\_call\\_\\_(). In CMF 1.4, this would look up the 'view' action and "
"resolve this. Note that for \\*folders\\* in Plone 2.0, the 'view' action is"
" just 'string:${object\\_url}/', which in turn results in "
"\\_\\_browser\\_default\\_\\_() and the above rules. This means that "
"/path/to/folder/view will render a default-page such as a content object "
"index\\_html. The fallback on the 'folderlisting' action in "
"PloneTool.browserDefault() mentioned above is there to ensure that when "
"there \\*isn't\\* an index\\_html or other default-page, we get "
"'folder\\_listing' (instead of an infinite loop), essentially making the "
"'folderlisting' action on Folders the canonical place to specfy the view "
"template. If you think that sounds messy, you're right. (With CMF 1.5 types,"
" things are little different - more on that later.)"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:92
msgid ""
"Enter CMF 1.5. CMF 1.5 introduces \"Method Aliases\". It is important to "
"separate these from actions:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:95
msgid ""
"Actions -- These generate the content action tabs (the green ones). You "
"almost always have 'view' and 'edit'. Other standard actions are "
"'properties' and 'sharing'. Each action has a target, which is typically "
"something like 'string:${object\\_url}/base\\_edit' for the edit tab. "
"'base\\_edit' here is a page template."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:101
msgid ""
"Method aliases -- These let you generalise actions. The alias 'edit' can "
"point to 'atct\\_edit' for an ATContentTypes document, for example, and "
"point to 'document\\_edit\\_form' for a CMF document. Aliases can be "
"traversed to, so /path/to/object/edit will send you to 'atct\\_edit' on the "
"object if the object is an ATContentTypes document, and to "
"'document\\_edit\\_form' if it is a CMF Document. This level of indirection "
"is actually quite useful. First of all, we get a standard set of URLs, so "
"/path/to/object/edit is always edit, /path/to/object/view is always view. "
"The actions (tabs) can point to these, meaning that we can pretty much use "
"the same set of actions for all common types, with the variation happening "
"in the aliases instead. Secondly, a method alias with the name \"(Default)\""
" specifies what happens when you browse to the object without any template "
"or action specified. That is, /path/to/object will look up the \"(Default)\""
" alias. This may specify a page template, for example, or a method (such as "
"a file-dumping index\\_html()) to call. Crucially, if \"(Default)\" is not "
"set or is an empty string, CMF falls back on the old behaviour of calling "
"the \\_\\_browser\\_default\\_\\_() method. In PloneFolder.py, this is "
"defined to call PloneTool.browserDefault(), as mentioned above, which "
"implements the Plone-specific rules for the lookup. Hence, if we need the "
"old behaviour, we can just unset \"(Default)\"! This is what happens with "
"old-style content types (that is, it is the default if you're not using "
"ATContentTypes' base classes or setting up the aliases yourself). Now, "
"CMFDynamicViewFTI, which is used by ATContentTypes, extends the standard CMF"
" FTI and a adds a few things:"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:128
msgid ""
"1. A pair of interfaces, ISelectableBrowserDefault and IBrowserDefault (the "
"former extends the latter) describing various methods for getting dynamic "
"views, as found in Plone in the \"display\" menu."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:132
msgid ""
"2. A class BrowserDefaultMixin which gives you a sensible implementation of "
"these. This uses two properties, \"default\\_page\" and \"layout\" to keep "
"track of which default-page and/or view template (aka layout) is currently "
"selected on an object."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:137
msgid ""
"3. Two new properties in the FTI in portal\\_types - the default view, and "
"the list of available views."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:140
msgid ""
"4. A special \\*target\\* for a method alias called '(selected layout)', "
"which will return the selected view template (layout)."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:144
msgid ""
"5. Another special alias target called '(dynamic view)', which will return a"
" default-page, if set, or else the selected view template (layout) - you can"
" think of \"(dynamic view)\" as a superset of \"(selected layout)\"."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:149
msgid ""
"ATContentTypes uses BrowserDefaultMixin from CMFDynamicViewFTI, and sets up "
"the standard aliases for \"(Default)\" and \"view\" to point to \"(dynamic "
"view)\". The exceptions are File and Image, which have the \"(Default)\" "
"alias pointing to \"index\\_html\", and the \"view\" alias pointing to "
"\"(selected layout)\". This way, /path/to/file results in the file content "
"(via the index\\_html() method) and /path/to/file/view shows the selected "
"layout inside Plone. (Note that using \"(dynamic view)\" for the \"view\" "
"alias would \\*not\\* work, because the index\\_html attribute would take "
"precedence over the layout when testing for a default-page.) Additionaly, "
"the 'view' action (tab) for each of these types must be "
"'string:${object\\_url}/view' to ensure it invokes the \"view\" alias, not "
"the \"(Default)\" alias. For Folders, the use of \"(dynamic view)\" takes "
"care of the default-page and the selected view template. The 'folderlisting'"
" fallback is no longer needed - the 'view' action can still be "
"\"string:${object\\_url}\", and the \"(Default)\" alias pointing to "
"\"(dynamic view)\" takes care of the rest. In order for the \"(dynamic "
"view)\" target to work as expected, it needs to delegate to PloneTool so "
"that Plone's rules for lookup order and (especially) "
"ITranslatable/LinguaPlone support are used. However, delegating to "
"PloneTool.browserDefault() is not an option, because this does other checks "
"which are not relevant (this essentially stems from the fact that "
"browserDefault() is implementing \\*both\\* the \"(Default)\" and \"view\" "
"cases above in a single method). Thus, the code for determining which, if "
"any, contained content object should be used as a default-page has been "
"factored out to its own method, PloneTool.getDefaultPage(). Helpfully, this "
"can also be used by PloneTool.isDefaultPage(), radically simplifying that "
"method."
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:179
msgid "Calling content objects"
msgstr ""

#: ../../reference_manuals/old/archetypes/zope_to_browser.rst:181
msgid ""
"The last issue is what happens with view() and \\_\\_call\\_\\_() in this "
"equation. The first thing to note is that view() method is masked by the "
"'view' method alias. Hence, /path/to/object/view will invoke the method "
"alias 'view' if it exists, not call view(), making that method a lot less "
"relevant. However, we still want \\_\\_call\\_\\_() to have a well-defined "
"behaviour. In CMF 1.4, \\_\\_call\\_\\_()used to look up the 'view' action, "
"and this is still the default fallback, but if the \"(Default)\" alias is "
"set, this is used instead. This may give somewhat unexpected behaviour, "
"however: From the comments in the source code and the behaviour in Zope, "
"where \\_\\_call\\_\\_() is the last fallback if neither "
"\\_\\_browser\\_default\\_\\_() nor index\\_html are found, and to ensure "
"that the \"view() --> \\_\\_call\\_\\_()\" mechanism always returns the "
"object itself, never dumped file content, it seems to be the intention that "
"\\_\\_call\\_\\_() should always return the object, never a default-page or "
"file content dumped via an index\\_html() method. For \\*Folders\\* in Plone"
" 2.0, this was actually not the case: \\_\\_call\\_\\_() would look up the "
"'view' action, which was \"string:${object\\_url}\", which with the use of "
"\\_\\_browser\\_default\\_\\_() resulted in a lookup of a default-page if "
"one was present. With the CMF 1.5 behaviour, the use of the \"(Default)\" "
"alias in \\_\\_call\\_\\_() will mean that calling a File returns the dumped"
" file content. Calling a Folder will return the default-page (or the Folder "
"in its view if no default page is set) as in Plone 2.0. The behaviour in "
"Plone 2.1 is that \\_\\_call\\_\\_(), as overridden in BrowserDefaultMixin, "
"should always return the object itself as it would be rendered in Plone "
"without any index\\_html or default-page magic. Hence, \\_\\_call\\_\\_() in"
" CMFDynamicViewFTI looks up the \"(selected layout)\" target and resolves "
"this. This behaviour is thus consistent with the old behaviour of Documents "
"and Files, but whereas Folders with a default-page in 2.0 used to return "
"that default page from \\_\\_call\\_\\_(), in 2.1, it returns the Folder "
"itself rendered in its selected layout. Again remember that this method will"
" rarely if ever be called, since /path/to/object is intercepted by CMF's "
"pre-traversal hook and ends up looking up the \"(Default)\" method alias "
"(which \\*does\\* honour default-page for Folders), and /path/to/object/view"
" uses the \"view\" method alias, as described above."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:3
msgid "Attributes / Fields / Indexing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:9
msgid "How to control the fields of your schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:11
msgid ""
"Archetypes are using *schemas* (also called *schemata*) with *fields* to "
"define the form-fields on your content. The schema and its fields of your "
"content types is generated from the *attributes* of your classes in your "
"model and their tagged values. Each field has a type and a widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:13
msgid ""
"The `Archetypes documentation <http://plone.org/documentation/manual"
"/archetypes-developer-manual>`_ and the quick reference at the end of this "
"document describes which fields are available and what parameters they take "
"as configuration."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:16
msgid "Usage of tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:17
msgid ""
"If you set a tagged value on an attribute of your class, in general that "
"tagged value will be passed through as a parameter to the generated "
"Archetypes field. Hence, if you set a tagged value ``enforceVocabulary`` to "
"the value ``1`` on an attribute, you will get ``enforceVocabulary=1`` for "
"that field in the generated schema. Similarly, you can set a field's widget "
"properties by prefixing the tagged value with ``widget:``. ``widget:label`` "
"sets the label of a widget, for instance."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:20
msgid "Non-string tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:21
msgid ""
"As before, when reading tagged values, ArchGenXML will generally treat them "
"as strings, with a few exceptions where only non-string values are "
"permitted, such as the 'required' tagged value. If you do not wish your "
"value to be quoted as a string, prefix it with ``python:``. For example, if "
"you set the tagged value ``default`` to ``python:[\"high\", \"low\"]`` on a "
"``lines`` attribute, you will get ``default=[\"high\", \"low\"]`` in a "
"LinesField in your schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:24
msgid ""
"field recycling - copy from parents schema or another source schema and "
"modify"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:25
msgid ""
"This feature alows you to copy a field from another source schema and rename"
" the field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:27
msgid ""
"Rather than subclass an entire class then delete unwanted fields, you can "
"explicitly copy just the fields you need. You can keep the copied field "
"\"as-is\" or modify it by overriding properties with tag values as needed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:29
msgid ""
"For example you may need a ``Description`` field that is usually defined in "
"your parent classes (BaseContent, BaseFolder) Schema. You would create a new"
" attribute in your class named ``description`` with a type of ``copy.`` If "
"you want it to appear in your base_edit form rather then the default of "
"properties/metadata page you just need to change one property of the field "
"by adding the tag ``schemata = \"default\"``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:31
msgid ""
"You may also copy from any other schema or from within the same schema. You "
"need to specify the source schema using the tag ``copy_from`` and if you "
"need to rename the field use the ``source_name`` tag to indicate the source "
"field Id, otherwise the Id of the field in you schema is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:34
msgid "Index and metadata in catalogs and Collection"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:35
msgid ""
"ArchgenXML can create configuration files to create an index and/or metadata"
" entries in the catalog such as portal_catalog."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:37
msgid "Available are the following tagged values:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:39
msgid ""
"``catalog:index`` -- add the field to the index. Boolean, 1 or 0. Default is"
" 0. If set, you may need to provide ``index:*`` tagged values too."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:41
msgid ""
"``catalog:metadata`` -- add the field to the metadata record on the query "
"result? Boolean, 1 or 0. If you do not provide ``index:attributes``, the "
"name of the accessor of the field is the default. If "
"``catalog:metadata_accessor`` is given it will be used instead."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:43
msgid ""
"``catalog:metadata_accessor`` -- the accessor used for the metadata "
"(string)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:45
msgid ""
"``catalog:name`` -- sometimes you need to add an index to a other catalog "
"than ``portal_catalog`` and its XML-File ``catalog.xml``. Provide a tuple of"
" comma separated strings, id of the catalog and the filename of its "
"configuration file. default is \"portal_catalog, Plone Catalog Tool'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:47
msgid ""
"``index:type`` -- the type of index used as (string), for example "
"``FieldIndex``, ``KeywordIndex``, ``DateIndex`` or any available index in "
"your portal. For known types a default is guessed, such as FieldIndex for "
"StringFields or DateIndex for DateFields. If no guess is possible, we assume"
" a FieldIndex."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:49
msgid ""
"``index:attributes`` -- the attributes to use for index (string or comma "
"separated list of strings). This are the methods called at indexing time. "
"Normally it is enough to provide one index method, but for some specific use"
" cases you might need to provide alternatives. If you do not provide this "
"tagged value, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:51
msgid ""
"``index:name`` -- the name of the index used (string). Use this name in your"
" queries. If you do not provide a name, the name of the accessor of the "
"field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:53
msgid ""
"``index:extras`` -- some indexes are using so called *extras* on "
"installation as configuration. If the index need extras you'll need to "
"declare them here. provide a comma separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:55
msgid ""
"``index:properties`` -- some indexes are using *properties* on installation "
"as configuration. If the index need properties you'll need to declare them "
"here. Provide a comma separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:57
msgid ""
"``collection:criteria`` -- add the index to the Collection (aka Smart "
"Folder) Indexes available for defining Criteria. Provide a comma seprated "
"list of criteria that will be available by default. Available criterias are:"
" ATBooleanCriterion, ATDateCriteria, ATDateRangeCriterion, ATListCriterion, "
"ATPortalTypeCriterion, ATReferenceCriterion, ATSelectionCriterion, "
"ATSimpleIntCriterion, ATSimpleStringCriterion, ATSortCriterion, "
"ATCurrentAuthorCriterion, ATPathCriterion, ATRelativePathCriterion. You must"
" provide an ``index:type`` as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:59
msgid ""
"``collection:criteria_label`` -- the display name of the "
"``collection:criteria``, called *friendly name* (string). Its added to the "
"``generated.pot`` as a literal. If not given the ``widget:label`` is taken "
"if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:61
msgid ""
"``collection:criteria_description`` -- a help text (string), used for "
"``collection:criteria``. Its added to the ``generated.pot`` as a literal. if"
" not provided the ``widget:description`` is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:63
msgid ""
"``collection:metadata`` -- register the ``catalog:metadata`` as an available"
" column in a Collection. Can be used as an alternative for "
"``catalog:metadata``. ``catalog:metadata_accessor`` is used if given."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:65
msgid ""
"``collection:metadata_label`` -- the display name of the "
"``collection:metadata``, called *friendly name* (string), used for "
"index:criteria. Its added to the ``generated.pot`` as a literal. If not "
"given the ``widget:label`` is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:67
msgid ""
"``collection:metadata_description`` -- a help text (string), used for "
"``collection:criteria``. Its added to the ``generated.pot`` as a literal. If"
" not provided the ``collection:criteria_help`` or - if not provided - "
"``widget:description`` is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/attributes-fields-indexing.rst:69
msgid ""
"**DEPRECATED** For backward compatibility reasons we support a sub part of "
"the old style in ArchGenxML Version 1.6 and earlier using the tagged value "
"``index``. This is deprecated and will be removed in one of the next version"
" of ArchGenXML. A tagged value ``index`` with value like ``index:type`` "
"above creates an index with the accessor. To include the index in catalog "
"metadata (and have the attribute ready to use in the brain objects), append "
"``:brains`` (same as older ``:schema``), (e.g. ``FieldIndex:brains``). "
"ArchGenXML does longer provides the ability to define multiple indexes using"
" the old declaration style."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:3
msgid "Classes / Content Types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:9
msgid "Use classes to generate content types and portal tools."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:13
msgid ""
"By default, when you create a class in your class diagram, it represents an "
"Archetypes content type. You can add operations in your model to generate "
"methods on the class, and attributes to generate fields in the schema. The "
"quick reference at the end of this tutorial will tell you which field types "
"you can use. You should also browse the \"Archetypes quick reference "
"documentation\":/documentation/manual/archetypes-developer-manual/fields to "
"see what properties are available for each field and widget type. You may "
"set these using tagged values (see below)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:22
msgid ""
"There are three basic ways in which you can alter the way your content types"
" are generated:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:25
msgid ""
"You may set one or more stereotypes on your class, which alters the \"type\""
" of class. A stereotype ``<<portal_tool>>``, for example means you are "
"generating a portal tool rather than just a simple content type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:26
msgid ""
"You can use tagged values in your model to configure many aspects of your "
"classes, their attributes and their methods. A list of recognised tagged "
"values acting on classes, fields and methods are found in the \"quick "
"reference\":archgenxmlquickref at the end of this tutorial."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:28
msgid ""
"When reading tagged values, ArchGenXML will generally treat them as strings,"
" with a few exceptions where only non-string values are permitted, such as "
"the ``required`` tagged value. If you do not wish your value to be quoted as"
" a string, prefix it with ``python:``. For example, if you set the tagged "
"value ``default`` to ``python:[\"high\", \"low\"]`` on a ``lines`` "
"attribute, you will get ``default=[\"high\", \"low\"]`` in a LinesField in "
"your schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:30
msgid ""
"ArchGenXML is clever about aggregation and composition. If your class "
"aggregates other classes, it will be automatically made into a folder with "
"those classes as the allowed content types. If you use composition "
"(signified by a filled diamond in the diagram) rather than aggregation, the "
"contained class will only be addable inside the container, otherwise it will"
" be addable globally in your portal by default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:33
msgid "Variants of Content Types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:35
msgid "Simple Classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:36
msgid ""
"A simple class is what we had in HelloWorld in the previous chapter. A "
"simple class is based on ``BaseContent`` and ``BrowserDefault``. This is the"
" default if no other options override."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:40
msgid "Folderish Classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:41
msgid ""
"The easiest way to make a content type folderish is to introduce composition"
" or aggregation in your model - the parent class will become folderish and "
"will be permitted to hold objects of the child classes. You can also make a "
"class folderish just by giving it the ``<<folder>>`` stereotype. Both of "
"these approaches will result in an object derived from ``BaseFolder``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:47
msgid ""
"You can also give a class the ``<<ordered>>`` stereotype (possibly in "
"addition to ``<<folder>>``) in order to make it derive from "
"``OrderedBaseFolder`` and thus have ordering support. Alternatively, you can"
" set the ``base_class`` tagged value on the class to ``OrderedBaseFolder``. "
"This is a general technique which you can use to override the base folder "
"should you need to. As an aside, the ``additional_parents`` tagged value "
"permits you to derive from multiple parents."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:54
msgid ""
"Another option is to derive from ATFolder (from ATContentTypes) by giving "
"the class the stereotype ``<<atfolder>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:57
msgid "Other tagged values which may be useful when generating folders are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:59
msgid ""
"filter_content_types -- Set this to ``0`` or ``1`` to turn on/off filtering "
"of content types. If content types are not filtered, the class will act as a"
" general folder for all globally addable content."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:63
msgid ""
"allowed_content_types -- To explicitly set the allowable content types, for "
"example to only allow images and documents, set this to: 'Image, Document'. "
"Note that if you use aggregation or composition to create folderish types as"
" described above, setting the allowed content types manually is not "
"necessary."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:69
msgid "Portal tools"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:70
msgid ""
"A portal tool is a unique singleton which other objects may find via "
"``getToolByName`` and utilise. There are many tools which ship with Plone, "
"such as portal_actions or portal_skins. To create a portal tool instead of a"
" regular content type, give your class the ``<<portal_tool>>`` stereotype. "
"Tools can hold attributes and provide methods just like a regular content "
"type. Typically, these hold configuration data and utility methods for the "
"rest of your product to use. Tools may also have configlets - configuration "
"pages in the Plone control panel. See the quick reference at the end of this"
" document for details on the tagged values you must set to generate "
"configlets."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:81
msgid "Abstract mixin classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:82
msgid ""
"By marking your class as ``abstract`` in your model (usually a separate "
"tick-box), you are signifying that it will not be added as a content type. "
"Such classes are useful as mixin parents and as abstract base classes for "
"more complex content types, and will not have the standard Archetypes "
"registration machinery, factory type information or derive from BaseClass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:89
msgid "Stub classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:90
msgid ""
"By giving your class the ``<<stub>>`` stereotype, you can prevent it from "
"being generated at all. This is useful if you wish to show content types "
"which are logically part of your model, but which do not belong to your "
"product. For instance, you could create a stub for Plone's standard Image "
"type if you wish to include this as an aggregated object inside your content"
" type - that is, your content type will become folderish, with Image as an "
"allowable contained type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:99
msgid "Deriving/Subclassing Classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:100
msgid ""
"Deriving or subclassing a class is used to extend existing classes, or "
"change their behavior. Using generalisation arrows in your model, you can "
"inherit the methods and schema from another content type or mixin class in "
"your class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:105
msgid "Simple Derivation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:106
msgid ""
"All content types in Archetypes are derived from one of the base classes - "
"BaseContent, BaseFolder, OrderedBaseFolder and so on. If you wish to turn "
"this off, for example because the base class is being inherited from a "
"parent class, you can set the ``base_class`` tagged value to ``0``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:112
msgid "Multiple Derivation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:113
msgid ""
"You can of course use multiple inheritance via multiple generalisation "
"arrows in your model. However, if you need to use a base class that is not "
"on your model, you can set the ``additional_parents`` tagged value on your "
"class to a comma-separated list of parent classes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:119
msgid "Deriving from other Products"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:120
msgid ""
"If you want to derive from a class of an other product create a stub class "
"with a tagged value ``import_from``: This will generate a import line ``from"
" VALUE import CLASSNAME`` in classes derived from this class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:125
msgid "Deriving form ATContentTypes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:126
msgid ""
"To derive from ATDocument just use a stereotype ``<<atdocument>>``. Also "
"possible with ``<<atfile>>``, ``<<atevent>>`` and ``<<atfolder>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:130
msgid "Packages - bring order to your code"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/classes-content-types.rst:131
msgid ""
"Packages are both a UML concept and a Python concept. In Python, packages "
"are directories under your product containing a set of modules (.py files). "
"In UML, a package is a logical grouping of classes, drawn as a large "
"\"folder\" with classes inside it. To modularise complex products, you "
"should use packages to group classes together."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:9
msgid "Setting up the Widgets for each field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:11
msgid ""
"ArchGenXML will pick a default widget for your fields and fill in default "
"labels and descriptions. For example, a ``string`` field gets a "
"``StringWidget`` by default, but a ``selection`` field type gets "
"``SelectionWidget`` on a StringField! You can override this in two ways. So "
"ArchGenXML mixes up fields and widgets slightly for convinience reasons. "
"Anyway, you can override all predefined definitions using widget options."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:13
msgid ""
"Widget options are specified with the prefix ``widget:``. As with normal "
"field tagged values, unrecognised options will be passed straight through to"
" the widget definition."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:15
msgid "The most common widget options are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:17
msgid ""
"widget:type -- sets the widget type used. Its the name of the widget class. "
"You can use all widgets shipped within the Archetypes-Framework by just "
"providing this tagged value. To use 3rd-Party widgets you additionally need "
"to import the class using the *imports* tagged value on class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:19
msgid "``widget:label`` -- sets the widget's label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:21
msgid "``widget:description`` -- sets the widget's description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:23
msgid ""
"``widget:label_msgid`` -- overrides the default label message id (i18n)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:25
msgid ""
"``widget:description_msgid`` -- overrides the default description message id"
" (i18n)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:27
msgid ""
"``widget:i18n_domain`` -- sets the i18n domain (defaults to the product "
"name)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:29
msgid ""
"You may also use widget-specific options, such as ``widget:size`` where they"
" apply. Look up possible widget-specific options at the documentation of the"
" widget you want to use."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:33
msgid "Changing the default widgets"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:34
msgid ""
"To change the widget used for one field-type for a whole model, a product, a"
" package or just for all fields in one class you can set on the product, "
"package or class level the tagged value "
"``default:widget:FIELDNAMEABBREVIATION`` to ``WIDGETNAME``. For example use "
"the tagged value ``default:widget:Reference`` set it to "
"``ReferenceBrowserWidget`` to use the ReferenceBrowserWidget instead of the "
"ReferenceWidget. You might also want to also use the ``imports`` tagged "
"value and set it to ``from ATReferenceBrowserWidget.ATReferenceBrowserWidget"
" import ReferenceBrowserWidget`` on your class to ensure that you get the "
"widget definition imported into your class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:37
msgid "Creating new widgets"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/field-widgets.rst:38
msgid ""
"To define a new widget add a class to your model with the ``<<widget>>`` "
"stereotype."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/index.rst:3
msgid "Basic Features"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/index.rst:7
msgid "Content Types, Fields, Widgets, References and Workflow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:3
msgid "Methods and Actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:9
msgid "Defining Methods and Actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:11
msgid ""
"To create a method in your class, add a method to the UML diagram, with the "
"desired parameters. The types of the parameters and the type of the return "
"value are ignored, since Python does not support this."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:13
msgid ""
"Methods can different access specifiers (also called visibilities) These "
"are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:15
msgid ""
"public (shown by a + before the method name) -- The method is part of the "
"class' public interface. It will be declared public (accessible from unsafe"
"/through-the-web code) by default. If you add a tagged value 'permission' "
"(see below), it will be declared as protected by this permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:16
msgid ""
"protected (#) -- The method is not part of the class' public interface, but "
"is meant for use by sub-classes. It will be declared private to prevent "
"unsafe code from accessing it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:17
msgid ""
"private (-) -- The method is internal to the class. It will be declared "
"private to prevent unsafe code from accessing it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:18
msgid ""
"package (~) -- The method is intended to be accessed by other code in the "
"same module as the class. It will not gain any Zope security assertions, "
"relying instead on the class/module defaults."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:20
msgid ""
"There are a few tagged values you can use to alter how the code is "
"generated:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:22
msgid ""
"code -- Sets the python code body of the method. Only use this for short "
"one-liners. If you fill in code manually in the generated files, method "
"bodies will be preserved when you re-generate the product from the UML "
"model."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:23
msgid ""
"documentation -- Content of the python doc-string of the method. You can "
"also use the documentation feature of most UML modellers to set "
"documentation strings."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:24
msgid ""
"permission -- Applies to methods with 'public' visiblity only. If you set "
"the permission tagged value to ``My custom permission`` results in "
"``security.declareProtected(\"\"\"My custom permission\"\"\",'methodname')``"
" - that is, access to your method is protected by the permission with the "
"name ``My custom permission``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:26
msgid ""
"If you want to use the CMF core permissions, add an ``imports`` tagged value"
" to the method's class containing ``from Products.CMFCore import "
"permissions``, and then set the permission tagged value of your method to "
"``python:permissions.View``, ``python:permissions.ModifyPortalContent`` or "
"any other core permission. You can also use the common paradigm of defining "
"permissions in config.py as constants with names like EDIT_PERMISSION. A "
"config.py is automatically generated and its contents imported, so you can "
"just set the permission tagged value to, for example, "
"``python:EDIT_PERMISSION``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:28
msgid ""
"Archetypes uses actions for generating custom tabs to access some view of an"
" Archetype object. ArchGenXML can generate actions for you: Just define a "
"method without any parameters and set its stereotype to ``<<action>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:30
msgid ""
"Once again tagged values can be set on the sterotyped methods in order to "
"set some properties of the action:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:32
msgid ""
"action -- The TAL expression representing the action to be executed when the"
" user invokes the action. Defaults to the methodname."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:33
msgid ""
"category -- The category of an action, view or form. Defaults to ``object``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:34
msgid "id -- The id of an action, view or form. Defaults to the methodname."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:35
msgid ""
"label -- The label of an action, view or form. Defaults to the methodname."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:36
msgid ""
"permission -- ``permission=My permission`` results in ``permissions: ('''My "
"Permission''',)``. See the description of the general ``permission`` tagged "
"value above for more."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:37
msgid ""
"condition -- A TALES expression giving a condition to control when the "
"action is to be made available."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:39
msgid ""
"You can override the default Archetypes actions by using special names for "
"the id. These are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:41
msgid "view -- for overriding the default view action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:42
msgid "edit -- for overriding the default edit action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/methods-and-actions.rst:43
msgid "contents -- for overriding the default contents action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:3
msgid "Relationships between classes and objects"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:9
msgid "How to use references, associations, aggregations and compositions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:11
msgid ""
"With aggregations, compositions and associations you define where your new "
"type will show up, what it might contain and to which content it can point "
"to."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:13
msgid ""
"There is virtually no limit on how many aggregations, compositions and "
"associations you can attach to a class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:16
msgid "Aggregations: Global Containment"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:21
msgid ""
"Aggregation means: This content can exist global and in this container. The "
"container class that gets the empty rhomb (diamond) attached is derived from"
" BaseFolder and it's ``allowed_content_types`` is set to the class that is "
"attached to it. If more than class is attached to one class by aggregations "
"the ``allowed_content_types`` is extended accordingly. The attached class "
"keeps the default ``global_allow=1``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:24
msgid "Compositions: Strict Containment"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:29
msgid ""
"Compositions are used to model parts that exist or live and die with their "
"associated owner. So the code generated is similar to the one generated by "
"aggregations, but with one major difference: The attached classes are only "
"allowed to be generated in the folderish type of the class they're attached "
"to (this is done by setting ``global_allow=0`` in the factory type "
"information of the class)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:32
msgid "Directed Associations: References"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:37
msgid ""
"References are used to store the relation of an object to other objects."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:39
msgid ""
"Each content type that derives from ``IReferenceable`` is capable of being "
"referenced. Objects from such a content type have an UID (Unique "
"Identification) that's unique throughout the whole Plone site. Therefore "
"References don't break if you move referenced objects around in the site."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:41
msgid ""
"To use ``ReferenceFields`` there are two possible ways. The by models-design"
" clean way is to use directed associations. Another possibility is to define"
" References as class-attributes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:44
msgid "Directed Associations"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:45
msgid ""
"An directed association between two classes generates a ``ReferenceField`` "
"in the class where the association starts."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:47
msgid "The ``relationship`` itself is named after the association's name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:49
msgid "The multiplicity defines if the allows a 1:1 or 1:n relation."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:53
msgid ""
"This only results in validation on the field. References at all don't know "
"anything about multiplicity, so this is only a check on userinterface-level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:56
msgid ""
"All other field settings are taken from the association's end, including "
"information how to generate the widget. By default a ReferenceWidget is "
"used. You can use tagged values on the association's end to define label, "
"description, a different widget-type, schemata, etc. like you do it on a "
"field (on a class attribute)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:58
msgid ""
"The big drawback of using associations to create ReferenceFields is that "
"they always get attached to the end of the schema and there is no way to "
"change that in the UML diagram. So if you need order in your fields read the"
" next section."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:61
msgid "References as class attributes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:62
msgid ""
"You can define an attribute with the type reference. Then you can apply any "
"needed tagged values to it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:64
msgid "keys of interest are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:66
msgid "``allowed_types`` : needs a list of allowed types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:67
msgid ""
"``multiValued`` : set to 0 to only be able to select one object to reference"
" to"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:68
msgid "``relationship`` : name of the relationship in the reference_catalog"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:70
msgid ""
"The benefit of using an attribute to define the reference is that you can "
"define the place in the schema where the ReferenceField will show up."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:73
msgid "Reference classes (advanced)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:74
msgid ""
"Sometimes it's needed to store information not in the origin or destination "
"class, but in the reference itself. UML has a notation to model this: "
"`association classes "
"<http://argouml.tigris.org/documentation/defaulthtml/manual/ch17s11.html#s2.ref.association_multiway>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:78
msgid ""
"ArchGenXML support them automatically. When a model includes an association "
"class, two things occur:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:81
msgid "A new content type is created, named like the association name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:83
msgid ""
"The generated ReferenceField has a new attribute defined like this: "
"``referenceClass = ContentReferenceCreator('My_Association_Name')``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:85
msgid ""
"This causes that the class of the reference instances is now not "
"``Archetypes.ReferenceEngine.Reference``, but "
"``Archetypes.ReferenceEngine.ContentReference``, a subclass of it that has a"
" new method: getContentObject(), that return the content inside the "
"reference."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:88
msgid ""
"The same effect can be reached without association classes, by defining a "
"content type and then adding the ``association_class`` tagged value to the "
"association (although I haven't been able to make this work)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:90
msgid ""
"To create the reference via code, use a special form of the addReference "
"method::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:102
msgid "(where attr1, attr2... are the attributes of the association)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/relationships-between-classes-and-objects.rst:104
msgid ""
"To read the data, we can't use the origin.getRefs(assocName) method, as "
"usual, because it returns only the destination objects. One way to read it "
"is by using the reference_catalog tool::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:3
msgid "Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:9
msgid "Generation of tests from UML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:13
msgid ""
"We hope there is no need for us to emphasize how important testing is for "
"even the most simple products you may be developing. This makes it "
"especially useful to include the creation of both your testing framework and"
" individual tests within your UML model."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:15
msgid ""
"Within a new package with a stereotype of ``<<tests>>`` you can create your "
"base test case class with a stereotype of ``<<plone_testcase>>`` and a test "
"setup class with a stereotype of ``<<setup_testcase>>``. You can then add "
"additional test classes as needed with a stereotype of either "
"``<<testcase>`` or ``<<doc_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:21
msgid "Base Test Case"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:22
msgid ""
"Creating a class in your tests package with a stereotype of "
"``<<plone_testcase>>`` generates the needed base test case for all other "
"test cases."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:25
msgid "Test Setup"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:26
msgid ""
"Creating a class in your tests package with a stereotype of "
"``<<setup_testcase>>`` generates a testcase for the setup, with pre-defined "
"common checks."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:29
msgid "Test Cases"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:31
msgid "Test Case"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:32
msgid ""
"Creating a class in your tests package with a stereotype of ``<<testcase>>``"
" generates a standard test case class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:35
msgid "Doc Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:36
msgid ""
"Creating a class in your tests package with a stereotype of "
"``<<doc_testcase>>`` generates a doc test file in the ``doc`` folder of your"
" product with a name of ``class + .txt``. You can use the tag of "
"``doctest_name`` on your class (excluding any extension as ``.txt`` is "
"appended automatically) to indicate a different name for your generated doc "
"test."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:39
msgid "Functional Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:40
msgid ""
"Generate browser functional tests using the ``<<plonefunctional_testcase>`` "
"stereotype."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:43
msgid "Interface Tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:44
msgid ""
"Generate interface tests using the ``<<interface_testcase>>`` stereotype."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/tests.rst:46
msgid ""
"It is unverified whether these generated test cases will verify Z3 style "
"interfaces but stay tuned!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:3
msgid "Workflows"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:9
msgid "Usage of state diagrams to create custom workflows."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:11
msgid ""
"ArchGenXML can use state diagrams to generate workflows for a portal type. "
"Workflows are used to set the various states an object can be in, and the "
"transitions between them."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:13
msgid ""
"Importantly, workflows control permissions of objects. By convention, and "
"for convenience and consistency, most content types will use the permissions"
" found in the ``CMFCorePermissions`` class in the CMFCore product to control"
" access to their methods. The methods generated by and inherited from the "
"CMF and Archetypes frameworks adhere to this principle. Although many "
"different content types use the same basic permissions to control access, "
"workflows are the means by which you can control permissions for an object "
"in detail. For instance, you may wish to specify that in the ``testing`` "
"state, Manager and Reviewer has ``Modify portal content`` permissions, and "
"Owner, Manager and Reviewer has ``View`` permissions. For the ``completed`` "
"state, you could have a different set of permissions. See the DCWorkflow "
"documentation for more details about how to use workflows."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:16
msgid "Problems with UML-Software"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:17
msgid ""
"The workflow implementation of ArchGenXML has to date only been tested with "
"ArgoUML and Poseidon (tested Version is 3.1 and 3.2 CE)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:19
msgid ""
"ObjectDomain is known not to work at this time, because it does not appear "
"to correctly export the XMI for state diagrams. If you have different "
"experiences, please add a comment to this document or contact us."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:22
msgid "Creating a workflow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:23
msgid ""
"In your UML modeller, add a state diagram for the class you wish to create a"
" custom workflow for. If you don't want to assign the workflow to a class "
"use an class with stereotype ``stub``. In Poseidon, this is done by right-"
"clicking on the object in the tree on the left hand side, and selecting to "
"add a new state diagram. The name of the state diagram becomes the name of "
"the workflow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:26
msgid "States"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:27
msgid ""
"On the state diagram, add a state item (a rounded-corner box) for each "
"state. You must have an initial state of your workflow for it to work "
"correctly. Use a \"initial state\" symbol (filled cirlce) for the state your"
" object defaults to after creation. Optional you can use a normal state item"
" and set a tagged value ``initial_state`` with value 1 to it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:29
msgid ""
"At present, ArchGenXML does not support the \"final state\" UML symbols to "
"represent final states, so you should stick to the standard state symbols."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:31
msgid ""
"The names of your states in UML become the names of the states in your "
"workflow. The user-visible label can be set with the ``label`` tagged value;"
" it defaults to the state name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:37
msgid "Transitions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:38
msgid ""
"For each possible transition between states, add a transition arrow to your "
"UML model. The name of the transition becomes the name of the workflow "
"action. You can set the ``label`` tagged value on the transition to set a "
"custom label to display to the user."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:40
msgid ""
"If a transition with the same name/target is used more than one time, you "
"can use the stereotype ``<<primary>>`` to define its settings once and use "
"it by name on all similar transitions."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:43
msgid "Transition guards"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:44
msgid ""
"You can add a guard to a transition to restrict to whom and when it is made "
"available. Set the ``expression`` field of a transition to a \\|-separated "
"list of the following pairs:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:46
msgid "**guard_roles**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:47
msgid ""
"Set ``guard_roles:Owner; Manager`` to restrict the transition to users "
"posessing the Owner or Manager role in the current context."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:48
msgid "**guard_permissions**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:49
msgid ""
"Set ``guard_permissions:My custom permission;View`` to ensure that only "
"those users with ``My custom permission`` or ``View`` permissions in the "
"current context are allowed to access the transition."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:51
msgid "**guard_expr**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:51
msgid ""
"Set ``guard_expr:expression``, where ``expression`` is a TALES expression, "
"to have the expression be evaluated in order to determine whether the "
"transition should be made available."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:53
msgid ""
"Thus, to restrict access to roles Reviewer and Manager, and only those users"
" with permission ``My custom permission`` and ``View`` in the current "
"context, you can set the expression of the transition to "
"``guard_roles:Reviewer;Manager|guard_permissions:My custom permission, "
"View``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:55
msgid ""
"If you are using Poseidon, transition guards are located in the property of "
"the transition arrow with the name ``[A] Guard``. You can add an expression "
"like the one outlined above to this field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:58
msgid "Permissions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:59
msgid ""
"ArchGenXML uses tagged values on states in a somewhat unconventional, though"
" convenient, way to control permissions. With the exception of the special-"
"case ``initial_state`` and ``label`` tagged values, you give the name of the"
" permission as the tagged value key, and a comma-separated list of roles the"
" permission should be enabled for as the value."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:61
msgid "There are three shorthand permission names available:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:63
msgid "**access**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:64
msgid "referes to the ``Access contents information`` permission,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:65
msgid "**view**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:66
msgid "refers to the ``View`` permission,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:67
msgid "**modify**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:68
msgid "refers to the ``Modify portal content`` permission,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:69
msgid "**list**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:70
msgid "refers to the ``List folder contents`` permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:72
msgid "**delete**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:72
msgid "refers to the ``Delete objects`` permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:74
msgid ""
"Hence, if you want your state to permit anonymous users and members to view "
"your content, only permit managers to modify, and permit both the owner and "
"managers to add new objects controlled by the ``Add MySubTypes`` permission,"
" you can add tagged values to the workflow state::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:80
msgid ""
"If you want to aquire the permissions and add new ones you can use the value"
" 'aquire'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:84
msgid ""
"(One special case: if you leave the value empty, no one gets that permission"
" (which is logical), but it also explicitly unsets acquisition of the "
"permission)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:87
msgid "Workflow actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:88
msgid ""
"The ``portal_workflow`` tool allows a script to be executed before and/or "
"after a transition is completed. This is no longer supported. Instead "
"subscribers to the Workflow events are used. Event-subsribers are more "
"flexible."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:90
msgid ""
"Actions are set using the ``effect`` field of a transition. The value given "
"here gives the name of the subscriber to execute (and thus must be valid "
"python method name). ArchGenXML will create or modify a subscriber for each "
"workflow-action in a file ``wfsubsribers.py`` in your product. You must fill"
" in the method bodies for the actions in this file. Method bodies will be "
"preserved upon re-generation of your product from the UML model. In Plone "
"2.5 compatible mode DCWorkflow needs a patch with a backport. This patch is "
"generated, if ``2.5`` is selected as ``plone_target_version`` (tagged value "
"on model)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:92
msgid ""
"By default, actions specified in this way are post-transition actions, "
"meaning that they are executed after the transition has taken place. If you "
"wish to specify a pre-transition action, executed before the transition "
"takes place, separate action names by semicolons: "
"``preActionName;postActionName``. If you want only a pre-transition action, "
"use ``preActionName;`` to specify that there is an empty post-transition "
"action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:95
msgid "Attach workflow to more than one class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:96
msgid ""
"In UML there is no semantic to use a workflow for more than one class. We "
"introduced the tagged value ``use_workflow`` for classes. Value is the "
"workflow name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:99
msgid "Worklist support"
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:100
msgid ""
"You can attach objects in a certain state to a worklist. A worklist is "
"something like the \"documents to review\" list you get when you're a "
"reviewer in a Plone site. This is done by adding a tag ``worklist`` to the "
"state with the name of the worklist as value (like ``review_list``)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/basic-features/workflows.rst:102
msgid ""
"You can add more than one state to a ``worklist``, just by specifying the "
"same name for the worklist tagged value. Likewise, you can have more than "
"one worklist (just not on the same state). The tagged value "
"``worklist:guard_permissions`` allows you to specify the permission you need"
" to have to view the worklist. The default value is ``Review portal "
"content``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:3
msgid "Configure ArgoUML to use the archgenxml profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:9
msgid ""
"ArgoUML can load a \"definition\" file with predefined tagged values and "
"stereotypes. So you have all the custom tagged values and stereotypes used "
"by ArchGenXML available in dropdown menus."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:14
msgid "Background and Notes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:15
msgid ""
"The screenshot below shows ArgoUML with the custom tags from the definition "
"file. Having many of the possible options available from a menu has the "
"following benefits:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:17
msgid "saves time - sometimes clicking is faster than typing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:18
msgid "reduces errors - no more mispelled tags"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:19
msgid ""
"presents a learning opportunity - seeing new tags and stereotypes provides a"
" springboard for further investigation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:25
msgid ""
"This walks you through how a setup of ArgoUML on an Ubuntu desktop system. "
"The methodology should be easily adjusted to other platforms."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:29
msgid "These are my assumptions:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:31
msgid ""
"You already have latest sun java JRE installed. You can get it on Ubuntu "
"with::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:35
msgid "If::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:39
msgid ""
"don't give you */usr/lib/jvm/java-6-sun/jre/bin/java*, you can set java sun "
"as the default java implementation like this::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:43
msgid ""
"You have copied archgenxml_profile.xmi in the *<path to "
"archgenxml>/profiles* directory like described in the previous section."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:46
msgid "Install ArgoUML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:48
msgid ""
"Go to http://argouml.tigris.org and download the latest stable version of "
"ArgoUML (0.28 when these lines are written). Download the exe for Windows, "
"the tar.gz archive for Linux."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:50
msgid "On Windows, execute the downloaded exe to install it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:52
msgid "On Linux, unpack the archive somewhere, a good location is '/opt'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:58
msgid "It should create a argouml-0.28 directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:60
msgid "It is handy to symlink 'argouml.sh' to '/usr/local/bin/argouml'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:65
msgid "Configure ArgoUML to use the definition file"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:69
msgid ""
"ArgoUML 0.24 used to use the argo.defaultModel option to specify a profile "
"to use like this::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:73
msgid "It's not the case anymore with latest ArgoUML version. Please read on."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:75
msgid "Launch ArgoUML and go to Edit -> Settings... -> Profiles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:76
msgid ""
"Click on Add and specify your *<path to archgenxml>/profiles* directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:80
msgid ""
"archgenxml will use the list of profiles directories configured on ArgoUML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:82
msgid "Close ArgoUML and launch it again."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:83
msgid ""
"Go again in Edit -> Settings... -> Profiles AGXProfile should be visible now"
" in \"Available Profiles\"."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:84
msgid "Click on \">>\" to add it to \"Default profiles\"."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:85
msgid ""
"You should remove the Java profile from the \"Default profiles\" list to be "
"sure to not use stereotypes and tag definitions from this one. You should "
"only have AGXProfile and UML 1.4 in this list. You can't remove the UML 1.4 "
"here, but you remove it by project."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:87
msgid "The global configuration is now done."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:89
msgid "Now for every new project you create:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:91
msgid ""
"Click on the fourth icon in the toolbar to configure Profiles for this "
"project. Delete UML 1.4. You should really only have AGXProfile is this "
"list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:95
msgid ""
"if you want to generate Plone 2.5 compatible code, set on the model root the"
" plone_target_version tag definition with value 2.5."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:98
msgid "Why ArgoUML?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:99
msgid "Just a few notes on why using ArgoUML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:101
msgid ""
"Mature - it supports the important stuff (at least as far as ArchGenXML "
"goes), state diagrams, tagged-values, stereotypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:102
msgid ""
"It is pretty lightweight, which is important when your laptop only has 256 "
"MB of RAM and a PIII 700 Mhz processor. Poseidon Community Edition, though "
"nice, is just too memory hungry."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/configure-argouml.rst:103
msgid "Price is good (free and open source)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:3
msgid "Hello World"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:9
msgid "Create your first minimal content type with ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:11
msgid ""
"Open the UML tool of your choice. Make a new UML model and give it a name "
"``HelloWorld``. Then add a class diagram (most UML tools do this "
"automatically)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:14
msgid ""
"Choose the tool for class creation and add a class to the diagram. Give it a"
" name such as ``HelloType`` and add an attribute ``HelloText`` with type "
"``string``. The `helloworld3.zargo <helloworld3.zargo>`_ (Plone 3.0) / "
"`helloworld25.zargo <helloworld25.zargo>`_ (Plone 2.5) models were created "
"using ArgoUML, and contain the type as described above."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:25
msgid "Generating the product"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:27
msgid ""
"Save your model as ``helloworld.zargo`` (ArgoUML) or ``helloworld.zuml`` "
"(Poseidon), or export it as an XMI file with the name ``helloworld.xmi``. "
"Then go to the command line and execute:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:35
msgid ""
"ArchGenXML will begin code generation. When it completes, you will have a "
"new folder ``HelloWorld`` on your file system. Its contents looks like::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:73
msgid "Installing and using the generated product"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:75
msgid ""
"Move the whole folder ``HelloWorld`` to your Zope/Plone 3 instance's "
"``Products`` folder. Restart Zope, open Plone in a browser and log in as "
"Manager. Choose *Plone Setup* from the personal bar and choose *Add/Remove "
"Products*. A new product ``HelloWorld`` should now appear in the list of "
"products available for install. Choose it and click *install*. Go to your "
"personal folder. In the list of addable items, you'll find the content type "
"from the new product. Add a test instance to see if it works."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/hello-world.rst:87
msgid ""
"That's the trick. By the way: the title is always part of the schema. But "
"don't worry: you can hide or recycle it later."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/index.rst:7
msgid "Introduction, Installation and Hello World."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:3
#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:12
msgid "Installation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:9
msgid "How to install ArchGenXML and get up and running."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:14
msgid ""
"ArchGenXML has a dependency on some Zope 3 eggs. To avoid messing up your "
"global site-packages directory, using buildout or virtualenv is recommended."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:19
msgid ""
"In an older version of AGX, a Zope 3 installation could be configured in a "
"``~/.agx_zope_path`` file. This case is not supported anymore. You can "
"delete this file if you have it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:23
msgid ""
"On Windows, I assume that you installed Python 2.4.4 using the `msi "
"installer <http://www.python.org/download/releases/2.4.4/>`_ installer, and "
"that you installed it in the default location. If you have not already done "
"so, configure the ``Path`` environment variable to include your python path "
"and scripts directory. For this, go to *Control Panel*, *Advanced*, "
"*Environment Variables*, edit *Path*, and append "
"``;C:\\\\Python24;C:\\\\Python24\\Scripts`` to the existing string."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:32
msgid "Installing stable version"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:36
msgid ""
"Adding the ArchGenXML egg to a Plone buildout is not supported! The Plone "
"3.x buildout is shipped with an old Zope 3.3. ArchGenXML depends on the "
"latest version of Zope 3 eggs. So please create a buildout only for "
"ArchGenXML like described below."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:41
msgid ""
"If you want to install archgenxml via buildout (recommended), read :ref"
":`agx-installation-using-buildout` and skip the :ref:`agx-installation-"
"using-easy-install` part."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:45
msgid ""
"It can happen that the ArchGenXML version on http://plone.org is older than "
"PyPI because the release manager forgot to upload it on http://plone.org or "
"for another reason.  ``easy_install`` and ``buildout`` will get the latest "
"ArchGenXML version from PyPI by default, so it's fine."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:53
msgid "Using buildout"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:55
msgid "Create a fresh directory and go into it:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:62
msgid ""
"Download the normal `bootstrap.py "
"<http://svn.zope.org/*checkout*/zc.buildout/trunk/bootstrap/bootstrap.py>`_ "
"and put it in this directory. You can copy an existing bootstrap.py file of "
"one of your buildout, it's the same file."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:67
msgid ""
"Then create a ``buildout.cfg`` file in this directory with the following "
"snippet:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:0
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:0
#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:0
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:0
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:0
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:0
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:0
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:0
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:0
#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:0
msgid "Todo"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:80
msgid "Is ini the appropriate lexer here?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:82
msgid "Finally bootstrap the buildout and run it:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:89
msgid ""
"On Windows, it's ``bin\\buildout``; you have to replace '/' by '\\' in all "
"following examples."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:91
msgid "The ``archgenxml`` command is now available as ``./bin/archgenxml``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:93
msgid ""
"To update ArchGenXML later, go in your directory and run buildout again:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:99
msgid ""
"It will download latest version of ArchGenXML and all its dependencies."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:101
msgid ""
"In the following, I refer to the *<path to archgenxml>* as the "
"``archgenxml_buildout`` directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:107
msgid "Using ``easy_install`` in a virtualenv"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:109
msgid ""
"If you don't want to use buildout, you can use ``virtualenv`` to create an "
"isolated environment. You have to install the ``setuptools`` egg in order to"
" have the ``easy_install`` command available. On Ubuntu you can do it with "
"``apt-get install python-setuptools``. On Windows, go to the `setuptools "
"pypi page <http://pypi.python.org/pypi/setuptools>`_, download the ``exe`` "
"which matches the Python version you are using, and execute it to install "
"it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:117
msgid "Install virtualenv with easy_install:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:123
msgid ""
"On Windows, ``easy_install.exe`` is in ``C:\\Python24\\Scripts``, so you "
"have to invoke it with the full path if you haven't added this directory to "
"your ``PATH``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:127
msgid ""
"Create the virtualenv with the ``--no-site-packages`` option to ignore "
"globally-installed packages:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:137
msgid ""
"Every time you want use ArchGenXML, you have to go in the *agx* directory "
"and type ``source bin/activate`` to activate the environment. To deactivate "
"the environment, type ``deactivate``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:141
msgid ""
"To update ArchGenXML, you have to update each egg. The most important ones "
"are ``archgenxml`` and ``xmiparser``:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:149
msgid ""
"If you have a problem with ArchGenXML, please be sure to recreate the "
"virtualenv completely so you have the latest versions of all eggs before "
"asking on the archetypes-users mailing-list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:153
msgid ""
"I call below *<path to archgenxml>* the path to the virtualenv agx "
"directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:156
msgid "Installing the development version"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:158
msgid "ArchGenXML's svn trunk is for the 2.x development version."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:160
msgid ""
"As usual, the goal is to keep trunk workable. Some of the developers work "
"and develop on the edge: trunk."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:162
msgid "If you need stability, use the latest release."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:164
msgid ""
"The only supported way to use the ArchGenXML trunk is with buildout. You "
"install it like this:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:173
msgid "To update your buildout:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:181
msgid ""
"If you are interested in AGX 3 development, see "
"http://dev.plone.org/archetypes/browser/AGX"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:183
msgid "I call below *<path to archgenxml>* the archgenxml_buildout directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:186
msgid "Get the ArchGenXML profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:188
msgid ""
"The ``archgenxml_profile.xmi`` file contains information about stereotypes, "
"fields, and other stuff that AGX needs to generate valid Python code from "
"your model. You can `get the profile "
"<http://svn.plone.org/svn/archetypes/ArchGenXML/trunk/umltools/argouml/archgenxml_profile.xmi>`_"
" from subversion."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:194
msgid ""
"Or you can regenerate it with ``<path to "
"archgenxml>/bin/agx_argouml_profile``. An ``archgenxml_profile.xmi`` file is"
" generated in the current directory."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:197
msgid ""
"Create a ``<path to archgenxml>/profiles`` directory and put the file here."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:199
msgid ""
"Note: In an older version of AGX, this file was called "
"``argouml_profile.xmi``. You should not use it with ArgoUML > 0.24."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:205
msgid ""
"On Windows, you may have to install and configure the `mingw32 compiler "
"<http://plone.org/documentation/kb/using-buildout-on-windows>`_ to compile "
"the ``zope.proxy`` egg, an indirect dependency of ArchGenXML. Now "
"``zope.proxy`` eggs are built for Windows, so you should not have this "
"problem anymore."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:211
msgid "Support"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:213
msgid ""
"For any questions or problems, please ask on the `archetypes-users mailing-"
"list <http://plone.org/support/forums/archetypes>`_. Please don't use "
"comments on the manual pages. Not everybody is alerted when a comment is "
"added."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/installation.rst:217
msgid ""
"If you want to contribute to this documentation, please post on the `plone-"
"docs mailing-list <http://plone.org/support/forums/docs>`_."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:9
msgid ""
"An introduction to ArchGenXML |---| what it is, reasons to use it, who made "
"it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:12
msgid "What is ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:14
msgid ""
"With ArchGenXML, you can create working Python code without writing one "
"single line of Python. It is a command-line utility that generates fully "
"functional Zope Products, based on the Archetypes framework, from UML models"
" using XMI (``.xmi``, ``.zargo``, ``.zuml``) files. The most common use-case"
" is to generate a set of custom content types and folders, possibly with a "
"few tools, a member type and some workflows thrown in."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:21
msgid ""
"In practice, you draw your UML diagrams in a tool which has the ability to "
"generate XMI files, like ArgoUML or Poseidon. Once you are ready to test "
"your product, you run ArchGenXML on the XMI file, which will generate the "
"product directory. After generation, you will be able to install your "
"product in Plone and have your new content types, tools and workflows "
"available."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:27
msgid ""
"At present, round-trip support is not implemented: custom code can't be "
"converted back into XMI (and thus diagrams). However, you can re-generate "
"your product over existing code; method bodies and certain \"protected\" "
"code sections will be preserved. This means that you can evolve your "
"product's public interfaces, its methods and its attributes in the UML "
"model, without fear of losing your hand-written code."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:34
msgid ""
"ArchGenXML is hosted at `svn.plone.org "
"<http://svn.plone.org/svn/archetypes/ArchGenXML/>`_ as a subproject of the "
"Archetypes project. It is released under GNU General Public Licence 2 or "
"later."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:43
msgid "Why should I use ArchGenXML?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:45
msgid "Major reasons:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:47
msgid "You want to save time"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:48
msgid "You are a lazy programmer"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:49
msgid "You don't like to reinvent the wheel"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:50
msgid "You don't like copying and pasting code (and bugs)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:51
msgid "You make heavy use of references and interfaces"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:52
msgid "You have big projects with many different custom types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:53
msgid "You want or need a well-documented interface to your product"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:54
msgid "You like structured model- and pattern-driven software development"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:55
msgid "You want to maintain your project in future without getting a headache"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:57
msgid "and many other good and odd reasons."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:60
msgid "Contributors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:62
msgid ""
"The project was initially started by Phil Auersperg. Thanks to his laziness "
":-)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:65
msgid "Authors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:67
msgid "**Phil Auersperg (Project Leader)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:68
msgid "BlueDynamics Alliance, Auersperg-Castell KEG, phil@bluedynamics.com,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:69
msgid "**Jens Klein (Release Manager, Developer and Doc-Writer)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:70
msgid "BlueDynamics Alliance, Klein & Partner KEG, jens@bluedynamics.com,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:71
msgid "**Reinout van Rees (Co-Release Manager, Developer and Doc-Writer)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:72
msgid "ZestSoftware"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:73
msgid "**Fabiano Weimar dos Santos (Ideas, Testing, Bugfixing, Workflow)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:74
msgid ""
"Weimar Desenvolvimento e Consultoria em Informatica Ltda., xiru@xiru.org,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:75
msgid "**Martin Aspeli (Improvements, bug fixes and documentation)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:76
msgid "Martin Aspeli"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:77
msgid "**Robert Niederreiter (Lots of base work on AGX 2.0)**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:78
msgid "Robert Niederreiter"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:80
msgid "**and others**"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:80
msgid ""
"thanks to everybody who contributed with testing, doc-writing or code-"
"pieces!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:83
msgid "Sponsors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:85
msgid ""
"Xiru.org, Brazil (Fabiano Weimar dos Santos) sponsors a valuable amount of "
"money into workflow support (State diagrams -> DCWorkflow, will go into "
"release 1.2),"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:88
msgid "PilotSystems, Paris, France (David Sapiro),"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:89
msgid "OpenSource.ag, Innsbruck, Austria (Georg Pleger)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:91
msgid "\"will go\"?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:92
msgid "hyperlink companies"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/introduction.rst:94
msgid ""
"If you want to contribute ArchGenXML by improving the code, helping with "
"documentation or sponsoring it to make us improve it, please contact one of "
"us."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:3
msgid "UML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:9
msgid "A brief introduction to UML and pointers to further readings."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:11
msgid ""
"UML |---| the Unified Modeling Language |---| is a graphical language "
"designed to describe software through formalised diagrams. There are several"
" different types of diagrams available, but the ones most relevant to "
"ArchGenXML are:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:16
msgid "The **class** diagram"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:17
msgid "The **state** diagram"
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:19
msgid ""
"Class diagrams are used to draw *interfaces*, *content types* (represented "
"as classes) and *tools* (represented as classes with the ``portal_tool`` "
"stereotype), as well as the *attributes* and *public operations* on these. "
"In addition, associations in the diagram show how objects are aggregated "
"within or referenced from one another."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:25
msgid ""
"The goal of model-driven development is to create the \"blueprints\" for "
"your software in a well-defined, easily-communicated format: the UML model "
"and diagram thereof. You can design your model using visual tools until you "
"have a structure which adequately represents your needs, and ArchGenXML will"
" generate the necessary code."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:31
msgid ""
"For all but the simplest products, you will have to customise that code "
"somewhat, filling in method bodies, creating new page templates, etc., but "
"ArchGenXML takes care of all the boilerplate for you. With tagged values and"
" stereotypes you can customise the generated code with a surprising degree "
"of flexibility and control, and when you need to hand-code something, "
"ArchGenXML won't overwrite your changes (provided you stick to the protected"
" code sections, clearly marked in the source code)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:39
msgid ""
"This manual does not aim to teach you UML and object-oriented, model-driven "
"software development. There are several other fine manuals about that on the"
" web. A very good starting point is the `OMG UML Resource Page "
"<http://www.uml.org/>`_, including its web-links to tutorials."
msgstr ""

#: ../../reference_manuals/old/archgenxml/getting-started/uml.rst:44
msgid ""
"For a quick-start read `Practical UML "
"<http://bdn.borland.com/article/0,1410,31863,00.html>`_ chapters 'class-"
"diagram' and 'state-chart-diagram'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/index.rst:3
msgid "ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/index.rst:7
msgid ""
"ArchGenXML is a code-generator for CMF/Plone applications (\"Products\"). It"
" currently targets the Archetypes framework. It parses UML models in XMI-"
"Format (``.xmi``, ``.zargo``, ``.zuml``), created with applications such as "
"ArgoUML, Poseidon or ObjectDomain. This tutorial will help you get started "
"developing applications with the aid of ArchGenXML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/index.rst:3
msgid "Recipes and Tips"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/index.rst:7
msgid ""
"A collection of recipes for real world use cases and tips for making life "
"easier."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:3
msgid "Using the config file to get shorter tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:9
msgid ""
"Some tagged values can get quite lengthy. If you use such a lengthy value a "
"few times, you can store it in your project's config file."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:12
msgid ""
"An example of long tagged values are the permissions you set on workflow "
"states. A key ``view``, with the value ``Manager, Member, Reviewer``, for "
"instance."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:16
msgid ""
"In tagged values, the text you type in is normally taken as a string. If you"
" prefix your value with ``python:``, it is copy-pasted literally into your "
"code. So ``python:[\"a\", \"b\"]`` is put into your code as ``[\"a\", "
"\"b\"]``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:21
msgid "The config file"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:23
msgid ""
"ArchGenXML generates a ``config.py`` file in your Product's root directory, "
"which in turn tries to import ``AppConfig.py``. So stuff you put in there is"
" treated as if it is placed in the main config file."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:27
msgid ""
"Every ArchGenXML-generated file contains an import like ``from "
"Products.YourProduct.config import *``, so the variables defined in your "
"AppConfig are directly available in all the files. This means that *you can "
"specify shortcuts* for the tagged values."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:33
msgid "Shorter tagged values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:35
msgid "Example line in your 'AppConfig.py'::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:39
msgid ""
"Remember that we can use ``python:`` to paste raw python code directly into "
"the generated files. After adding above line, the original tagged value "
"``view`` with value ``Manager, Member, Reviewer`` can be shortened to the "
"tagged value ``view`` with value ``python:EDITORS``. Now that's handy :-) "
"And if you need to change this definition you have it at a central place. No"
" need to touch 2, 3 or more ``states`` in UML where it's used several times "
"on each."
msgstr ""

#: ../../reference_manuals/old/archgenxml/recipes-and-tips/using-the-config-file-to-get-shorter-tagged-values.rst:46
msgid ""
"You can use this little *feature* almost everywhere, so its not limited to "
"workflow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/index.rst:3
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:2
msgid "Reference"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/index.rst:7
msgid "Reference of Stereotypes, Tagged Values and more."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:3
msgid "Quick Reference"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:9
msgid "A quick reference sheet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:11
msgid "UPDATE!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:14
msgid "Complete list of the field types including their default settings"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:16
msgid "string -- StringField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:18
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:23
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:35
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:103
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:107
msgid "StringField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:19
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:24
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:45
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:50
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:56
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:61
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:66
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:83
msgid "searchable=1"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:21
msgid "text -- TextField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:25
msgid "TextAreaWidget()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:27
msgid "richtext -- TextField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:29
msgid "TextField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:30
msgid "default_output_type=text/html"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:31
msgid ""
"allowed_content_types=('text/plain','text/structured','text/html','application/msword',)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:33
msgid "selection -- StringField with SelectionWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:37
msgid "multiselection -- LinesField with SelctionWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:39
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:60
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:82
msgid "LinesField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:40
msgid "multiValued=1"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:42
msgid "integer -- IntegerField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:44
msgid "IntegerField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:47
msgid "float -- Floatfield"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:49
msgid "FloatField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:51
msgid "DecimalWidget()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:53
msgid "boolean -- BoleanField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:55
msgid "BooleanField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:58
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:80
msgid "lines -- LinesField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:63
msgid "date -- DateTimeField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:65
msgid "DateTimeField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:68
msgid "image -- ImageField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:70
msgid "ImageField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:71
msgid "sizes ={'small':(100,100),'medium':(200,200),'large':(600,600)}"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:72
#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:77
msgid "AttributeStorage()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:74
msgid "file -- FileField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:76
msgid "FileField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:78
msgid "FileWidget()"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:85
msgid "fixedpoint -- FixedPointField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:87
msgid "FixedPointField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:89
msgid "reference -- ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:91
msgid "ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:93
msgid "backreference -- BackReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:95
msgid "BackReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:97
msgid "computed -- ComputedField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:99
msgid "ComputedField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:101
msgid "color -- StringField w/Color picker"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:105
msgid "country -- StringField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:108
msgid "CountryWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:110
msgid "datagrid -- DataGridField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:112
msgid "DataGridField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:113
msgid "DataGridWidget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:115
msgid "photo -- PhotoField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:117
msgid "PhotoField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:120
msgid "Tagged values for fields"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:122
msgid "searchable -- register and index the field in the catalog,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:124
msgid "1 .. register and index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:125
msgid "0 .. don't register and index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:127
msgid "storage -- AttributeStorage(), SQLStorage(), ...."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:129
msgid ""
"sizes -- defines the sizes of the images in a ImageField example: "
"python:{'small':(80,80),'medium':(200,2000),'large':(600,600)}"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:132
msgid "default_method -- no idea what that does"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:134
msgid ""
"required -- defines whether a field should be rendered required, or not."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:136
msgid "1 .. field is required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:137
msgid "0 .. field is not required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:139
msgid "accessor -- defines the accessor of a field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:141
msgid ""
"vocabulary -- defines the vocabulary or the method generating a vocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:143
msgid "allowed_types -- defines the allowed types in a ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:145
msgid "relationship -- defines the relationship, used in a ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:147
msgid ""
"multiValued -- defines whether a SelectionField accepts one or more values,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:149
msgid "1 .. multivalued"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:150
msgid "0 .. singlevalued"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/quick-reference.rst:152
msgid ""
"These tagged values are just the ones handy for fields, the full lists of "
"tagged values and stereotypes are shown on the next two pages."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:3
msgid "Stereotypes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:9
msgid "All stereotypes available in its context."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:11
msgid "*This file was generated 2009-05-12 with bin/agx_stereotypes 2.4.1.*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:14
msgid "abstraction"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:16
msgid "adapts"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:16
msgid ""
"On a realization, specify a class (``<<adapter>>``, ``<<named_adapter>>``, "
"``<<extender>>``) adapts another class (``<<stub>>``, ``<<interface>>``)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:19
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:241
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:20
msgid "class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:21
msgid "adapter"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:21
msgid "Is a (non-named) adapter."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:24
msgid "archetype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:24
msgid ""
"Explicitly specify that a class represents an Archetypes type. This may be "
"necessary if you are including a class as a base class for another class and"
" ArchGenXML is unable to determine whether the parent class is an Archetype "
"or not. Without knowing that the parent class in an Archetype, ArchGenXML "
"cannot ensure that the parent's schema is available in the derived class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:27
msgid "atblob"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:27
msgid "Turns the class into an plone.app.blob.content.ATBlob subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:30
msgid "atdocument"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:30
msgid "Turns the class into an Atdocument subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:33
msgid "atevent"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:33
msgid "Turns the class into an ATEvent subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:36
msgid "atfile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:36
msgid "Turns the class into an ATFile subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:39
msgid "atfolder"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:39
msgid "Turns the class into an ATFolder subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:42
msgid "atimage"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:42
msgid "Turns the class into an ATImage subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:45
msgid "atlink"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:45
msgid "Turns the class into an ATLink subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:48
msgid "atnewsitem"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:48
msgid "Turns the class into an ATNewsItem subclass."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:51
msgid "btree"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:51
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:87
msgid ""
"Like ``<<folder>>``, it generates a folderish object. But it uses a BTree "
"folder for support of large amounts of content. The same as ``<<large>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:54
msgid "content_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:54
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:138
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:141
msgid "Complete"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:57
msgid "doc_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:57
msgid ""
"Turns a class into a doctest class. It must subclass a "
"``<<plone_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:60
msgid "extender"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:60
msgid "Is a schema extender supported by archetypes.schemaextender."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:63
msgid ""
"Class will target in a ObjectField or CompoundField (latter if Attributes "
"are provided)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:66
msgid "flavor"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:66
msgid "Generates a ContentFlavors flavor from this class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:69
msgid ""
"Turns the class into a folderish object. When a UML class contains or "
"aggregates other classes, it is automatically turned into a folder; this "
"stereotype can be used to turn normal classes into folders, too."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:72
msgid "functional_doc_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:72
msgid ""
"Turns a class into a functional doctest class. It must subclass a "
"``<<plone_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:75
msgid "functional_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:75
msgid ""
"Turns a class into a functional testcase. It must subclass a "
"``<<functional_testcase>>``. Adding an interface arrow to another class "
"automatically adds that class's methods to the testfile for testing."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:78
msgid "hidden"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:78
msgid ""
"Generate the class, but turn off \"global_allow\", thereby making it "
"unavailable in the portal by default. Note that if you use composition to "
"specify that a type should be addable only inside another (folderish) type, "
"then \"global_allow\" will be turned off automatically, and the type be made"
" addable only inside the designated parent. (You can use aggregation instead"
" of composition to make a type both globally addable and explicitly addable "
"inside another folderish type)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:81
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:155
msgid "interface"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:81
msgid "Is an interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:84
msgid "interface_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:84
msgid "Turns a class into a testcase for the interfaces."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:87
msgid "large"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:90
msgid "mixin"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:90
msgid ""
"Don't inherit automatically from \"BaseContent\" and so. This makes the "
"class suitable as a mixin class. See also ``<<archetype>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:93
msgid "named_adapter"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:93
msgid "Is a named adapter."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:96
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:179
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:201
msgid "odStub"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:96
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:179
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:201
msgid ""
"Prevents a class/package/model from being generated. Same as ``<<stub>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:99
msgid "ordered"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:99
msgid ""
"For folderish types, include folder ordering support. This will allow the "
"user to re-order items in the folder manually."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:102
msgid "plone_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:102
msgid ""
"Turns a class into the (needed) base class for all other ``<<testcase>>`` "
"and ``<<doc_testcase>>`` classes inside a ``<<test>>`` package."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:105
msgid "plonefunctional_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:105
msgid ""
"Turns a class into the base class for all other ``<<functionaltestcase>>`` "
"classes inside a ``<<test>>`` package."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:108
msgid "portal_tool"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:108
msgid "Turns the class into a portal tool."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:111
msgid "portlet_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:111
msgid ""
"Generate this class as a zope3 portlet class instead of as an Archetypes "
"class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:114
msgid "python_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:114
msgid ""
"Generate this class as a plain python class instead of as an Archetypes "
"class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:117
msgid "remember"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:117
msgid ""
"The class will be treated as a remember member type. It will derive from "
"remember's Member class and be installed as a member data type. Note that "
"you need to install the separate remember product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:120
msgid "setup_testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:120
msgid ""
"Turns a class into a testcase for the setup, with pre-defined common checks."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:123
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:157
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:182
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:204
msgid "stub"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:123
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:157
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:182
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:204
msgid "Prevents a class/package/model from being generated."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:126
msgid "testcase"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:126
msgid ""
"Turns a class into a testcase. It must subclass a ``<<plone_testcase>>``. "
"Adding an interface arrow to another class automatically adds that class's "
"methods to the testfile for testing."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:129
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:808
msgid "tool"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:129
msgid "Turns the class into a portal tool. Similar to ``<<portal_tool>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:132
msgid "variable_schema"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:132
msgid ""
"Include variable schema support in a content type by deriving from the "
"VariableSchema mixin class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:135
msgid "view_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:135
msgid ""
"Generate this class as a zope3 view class instead of as an Archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:138
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:205
msgid "vocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:141
msgid "vocabulary_term"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:144
msgid "A simple stub archetypes-widget class will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:147
msgid "zope_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:147
msgid ""
"Generate this class as a plain Zope class instead of as an Archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:150
msgid "dependency"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:152
msgid "value_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:152
msgid ""
"Declares a class to be used as value class for a certain field class (see "
"``<<field>>`` stereotype)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:160
msgid "z3"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:160
msgid ""
"Generate this interface class as zope 3 interface. This will inherit from "
"zope.interface.Interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:163
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:445
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:311
msgid "method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:165
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:187
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:16
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:19
msgid "action"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:165
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:187
msgid ""
"Generate a CMF action which will be available on the object. The tagged "
"values \"action\" (defaults to method name), \"id\" (defaults to method "
"name), \"category\" (defaults to \"object\"), \"label\" (defaults to method "
"name), \"condition\" (defaults to empty), and \"permission\" (defaults to "
"empty) set on the method and mapped to the equivalent fields of any CMF "
"action can be used to control the behaviour of the action."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:168
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:190
msgid ""
"Generate an action like with the ``<<action>>`` stereotype, but also copy an"
" empty controller page template to the skins directory with the same name as"
" the method and set this up as the target of the action. If the template "
"already exists, it is not overwritten."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:171
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:193
msgid "noaction"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:171
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:193
msgid ""
"Disables standard actions, applied to a method out of 'view', 'edit', "
"'metadata', 'references."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:174
#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:196
msgid ""
"Generate an action like with the ``<<action>>`` stereotype, but also copy an"
" empty page template to the skins directory with the same name as the method"
" and set this up as the target of the action. If the template exists, it is "
"not overwritten."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:177
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:460
msgid "model"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:185
msgid "operation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:199
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:598
msgid "package"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:206
msgid "tests"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/stereotypes.rst:207
msgid ""
"Treats a package as test package. Inside such a test package, you need at a "
"``<<plone_testcase>>`` and a ``<<setup_testcase>>``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:5
msgid "Tagged Values"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:11
msgid "All tagged values available in its context."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:13
msgid "*This file was generated 2009-05-12 with bin/agx_taggedvalues 2.4.1.*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:19
msgid ""
"For a stereotype 'action', this tagged value can be used to overwrite the "
"default URL ('..../name_of_method') into '..../tagged_value'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:77
msgid "category"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:22
msgid "The category for the action. Defaults to 'object'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:25
msgid "condition"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:25
msgid ""
"A TALES expression defining a condition which will be evaluated to determine"
" whether the action should be displayed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:28
msgid "id"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:28
msgid "The id of the action. Use 'id',"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:31
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:58
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:151
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:364
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:436
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:454
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:541
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:667
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:718
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:745
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:781
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:793
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:799
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:862
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1075
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1087
msgid "label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:31
msgid "The label of the action - displayed to the user."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:34
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:457
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:22
msgid "permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:34
msgid ""
"The permission used for the action, a string or comma separated list of "
"strings, default to 'View'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:37
msgid "visible"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:37
msgid "Sets the visible property, default to 'True'"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:40
msgid "association"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:43
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:466
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:604
msgid "association_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:43
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:466
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:604
msgid ""
"You can use associations classes to store content on the association itself."
" The class used is specified by this setting. Don't forget to import the "
"used class properly."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:46
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:469
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:607
msgid "association_vocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:46
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:469
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:607
msgid ""
"Switch, defaults to False. Needs Product 'ATVocabularyManager'. Generates an"
" empty vocabulary with the name of the relation."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:49
msgid "back_reference_field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:49
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:61
msgid "Use a custom field instead of ReferenceField."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:52
msgid ""
"Synonymous with either reference_field or relation_field, depending on "
"whether you use it on the *from* end or the *to* end of a relation. Works "
"only together with 'Relations' Product and relation_implementation set to "
"'relations'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:55
msgid "inverse_relation_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:55
msgid ""
"Together with 'Relations' Product you have inverse relations. the name "
"default to 'name_of_your_relation_inverse', but you can overrrule it using "
"this tagged value."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:58
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:151
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:364
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:436
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:454
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:541
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:667
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:718
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:745
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:781
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:793
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:799
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:862
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1075
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1087
msgid "Sets the readable name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:61
msgid "reference_field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:64
msgid "relation_field"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:64
msgid ""
"Use a custom field instead of RelationField. Works only together with "
"'Relations' Product and relation_implementation set to 'relations'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:67
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:562
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:682
msgid "relation_implementation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:67
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:562
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:682
msgid ""
"Sets the type of implementation is used for an association: 'basic' (used as"
" default) for classic style archetypes references or 'relations' for use of "
"the 'Relations' Product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:70
msgid "relationship"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:70
msgid "Standard relationship for ReferenceField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:73
msgid "attribute"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:76
msgid "accessor"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:76
msgid ""
"Set the name of the accessor (getter) method. If you are overriding one of "
"the DC metadata fields such as 'title' or 'description' be sure to set the "
"correct accessor names such as 'Title' and 'Description'; by default these "
"accessors would be generated as getTitle() or getDescription()."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:79
msgid "allowed_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:79
msgid "Sets the types allowed for a ReferenceField. Default is []"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:82
msgid "array:widget"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:82
msgid ""
"specify which custom ArrayWidget should be used for a field (only applies if"
" the field has cardinality >1."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:85
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:277
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:475
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:613
msgid "catalog:index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:85
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:277
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:475
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:613
msgid ""
"Add the field (or all fields of a class, package, model) to the index. "
"Boolean, 1 or 0. Default is 0. If set, you may need to provide ``index:*`` "
"tagged values too."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:88
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:280
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:478
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:616
msgid "catalog:metadata"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:88
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:280
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:478
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:616
msgid ""
"Adds the field to the metadata record on the query result. Boolean, 1 or 0. "
"If you do not provide 'index:attributes', the name of the accessor of the "
"field is the default. If 'catalog:attributes' is given for each attribute "
"one field at the record will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:91
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:283
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:481
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:619
msgid "catalog:name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:91
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:283
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:481
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:619
msgid ""
"Sometimes you need to add an index to a other catalog than 'portal_catalog' "
"and its XML-File 'catalog.xml'. Provide a tuple of comma separated strings, "
"id of the catalog and the filename of its configuration file. default is "
"\"portal_catalog, Plone Catalog Tool'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:94
msgid "collection:criteria"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:94
msgid ""
"Add the index to the Collection (aka Smart Folder) Indexes available for "
"defining Criteria. Provide a comma separated list of criteria that will be "
"available by default. Available criterias are: ATBooleanCriterion, "
"ATDateCriteria, ATDateRangeCriterion, ATListCriterion, "
"ATPortalTypeCriterion, ATReferenceCriterion, ATSelectionCriterion, "
"ATSimpleIntCriterion, ATSimpleStringCriterion, ATSortCriterion, "
"ATCurrentAuthorCriterion, ATPathCriterion, ATRelativePathCriterion. You must"
" provide an index:type as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:97
msgid "collection:criteria_description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:97
msgid ""
"A help text (string), used for collection:criteria. Its added to the "
"generated.pot as a literal. If not provided the widget:description is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:100
msgid "collection:criteria_label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:100
msgid ""
"The display name of the collection:criteria, called friendly name (string). "
"Its added to the generated.pot as a literal. If not given the widget:label "
"is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:103
msgid "collection:metadata"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:103
msgid ""
"register the catalog:metadata as an available column in a Collection. Can be"
" used as an alternative for catalog:metadata. catalog:metadata_accessor is "
"used if given."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:106
msgid "collection:metadata_description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:106
msgid ""
"A help text (string), used for collection:criteria. Its added to the "
"generated.pot as a literal. If not provided the collection:criteria_help or "
"- if not provided - widget:description is used."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:109
msgid "collection:metadata_label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:109
msgid ""
"the display name of the collection:metadata, called friendly name (string), "
"used for index:criteria. Its added to the generated.pot as a literal. If not"
" given the widget:label is taken if provided."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:112
msgid "copy_from"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:112
msgid ""
"To copy an attribute from another schema, give it the type 'copy'. The "
"tagged value 'copy_from' is then used to specify which schema to copy it "
"from (for instance, 'BaseSchema' when copying Description from the base "
"schema). For copying your own schemas, add an 'imports' tagged value to "
"import your class (say 'MyClass') and then put 'MyClass.schema' in your "
"'copy_from' value."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:115
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:790
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:143
msgid "default"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:115
msgid "Set a value to use as the default value of the field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:118
msgid "default_method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:118
msgid ""
"Set the name of a method on the object which will be called to determine the"
" default value of the field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:121
msgid "enforceVocabulary"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:121
msgid ""
"Set to true (1) to ensure that only items from the vocabulary are permitted."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:124
msgid "expression"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:124
msgid "evaluation expression for computed fields."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:127
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:346
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:529
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:655
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:909
msgid "i18ncontent"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:127
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:346
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:529
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:655
msgid ""
"Enables the content type(s) for LinguaPlone. Only allowed value is "
"'linguaplone'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:130
msgid "index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:130
msgid ""
"DEPRECATED: Add an index to the attribute. Use catalog:index and the index:*"
" tagged value instead."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:133
msgid "index:attributes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:133
msgid ""
"The attributes to use for index or metadata (string or comma separated list "
"of strings). This are the methods called at indexing time. Normally it is "
"enough to provide one index method, but for some specific use cases you "
"might need to provide alternatives. If you don not provide this tagged "
"value, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:136
msgid "index:extras"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:136
msgid ""
"Some indexes are using so called 'extras' on installation as configuration. "
"If the index need extras you'll need to declare them here. Provide a comma "
"separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:139
msgid "index:name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:139
msgid ""
"the name of the index used (string). Use this name in your queries. If you "
"do not provide a name, the name of the accessor of the field is the default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:142
msgid "index:properties"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:142
msgid ""
"Some indexes are using 'properties' on installation as configuration. If the"
" index need properties you'll need to declare them here. Provide a comma "
"separated list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:145
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:358
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:538
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:664
msgid "index:type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:145
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:358
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:538
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:664
msgid ""
"the type of index used as (string), for example 'FieldIndex', "
"'KeywordIndex', 'DateIndex' or any available index in your portal. For known"
" types a default is guessed, such as FieldIndex for StringFields or "
"DateIndex for DateFields. If no guess is possible, we assume a FieldIndex."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:148
msgid "indexMethod"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:148
msgid "DEPRECATED: Declares method used for indexing."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:154
msgid "move:after"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:154
msgid ""
"Move the current field after the given field (put the field name between "
"quote)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:157
msgid "move:before"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:157
msgid ""
"Move the current field before the given field (put the field name between "
"quote)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:160
msgid "move:bottom"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:160
msgid "Move the current field to the bottom (put 1 for the value)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:163
msgid "move:pos"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:163
msgid "Move the current field at the given position (an int)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:166
msgid "move:top"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:166
msgid "Move the current field to the top (put 1 for the value)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:169
msgid "multiValued"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:169
msgid ""
"Certain fields, such as reference fields, can optionally accept more than "
"one value if multiValued is set to true (1)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:172
msgid "mutator"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:172
msgid "Similarly, set the name of the mutator (setter) method."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:175
msgid "original_size"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:175
msgid "Sets the maximum size for the original for an ImageField widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:178
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:388
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:559
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:679
msgid "read_permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:178
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:388
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:559
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:679
msgid ""
"Defines archetypes fields read-permission. Use it together with workflow to "
"control ability to view fields based on roles/permissions."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:181
msgid "required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:181
msgid "Set to true (1) to make the field required"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:184
msgid "schemata"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:184
msgid ""
"If you want to split your form with many, many attibutes in multiple "
"schemata (\"sub-forms\"), add a tagged value 'schemata' to the attributes "
"you want in a different schemata with the name of that schemata (for "
"instance \"personal data\"). The default schemata is called \"default\", "
"btw."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:187
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:394
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:565
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:685
msgid "searchable"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:187
msgid ""
"Whether or not the field should be searchable when performing a search in "
"the portal."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:190
msgid "sizes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:190
msgid "Sets the allowed sizes for an ImageField widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:193
msgid "source_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:193
msgid ""
"With attribute type 'copy' sometimes schema-recycling is fun, together with "
"copy_from you can specify the source name of the field in the schema given "
"by copy_from."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:196
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:439
msgid "validation_expression"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:196
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:439
msgid "Use an ExpressionValidator and sets the by value given expression."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:199
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:442
msgid "validation_expression_errormsg"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:199
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:442
msgid ""
"Sets the error message to the ExpressionValidator (use with "
"validation_expression to define the validation expression to which this "
"error message applies)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:202
msgid "validators"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:202
msgid "Not supported for now."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:205
msgid ""
"Set to a python list, a DisplayList or a method name (quoted) which provides"
" the vocabulary for a selection widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:208
msgid "vocabulary:name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:208
msgid ""
"Together with Products 'ATVocabularyManager' this sets the name of the "
"vocabulary."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:211
msgid "vocabulary:term_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:211
msgid ""
"For use with 'ATVocabularyManager'. Defaults to 'SimplevocabularyTerm'. Let "
"you define the portal_type of the vocabularyterm used for the default term "
"that is created in Install.py."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:214
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:421
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:589
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:706
msgid "vocabulary:type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:214
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:421
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:589
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:706
msgid ""
"Enables support for Products 'ATVocabularyManager' by setting value to "
"'ATVocabularyManager'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:217
msgid "Allows you to set the widget to be used for this attribute."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:220
msgid "widget:description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:220
msgid "Set the widget's description."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:223
msgid "widget:description_msgid"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:223
msgid ""
"Set the description i18n message id. Defaults to a name generated from the "
"field name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:226
msgid "widget:i18n_domain"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:226
msgid "Set the i18n domain. Defaults to the product name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:229
msgid "widget:label"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:229
msgid "Set the widget's label."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:232
msgid "widget:label_msgid"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:232
msgid ""
"Set the label i18n message id. Defaults to a name generated from the field "
"name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:235
msgid "widget:type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:235
msgid ""
"Set the name of the widget to use. Each field has an associated default "
"widget, but if you need a different one (e.g. a SelectionWidget for a string"
" field), use this value to override."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:238
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:427
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:595
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:712
msgid "write_permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:238
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:427
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:595
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:712
msgid ""
"Defines archetypes fields write-permission. Use it together with workflow to"
" control ability to write data to a field based on roles/permissions."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:244
msgid "active_workflow_states"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:244
msgid ""
"The active workflow states for a remember type. MUST be set on "
"``<<remember>>`` types. Format is ['state', 'anotherstate']."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:247
msgid "additional_parents"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:247
msgid ""
"A comma-separated list of the names of classes which should be used as "
"additional parents to this class, in addition to the Archetypes BaseContent,"
" BaseFolder or OrderedBaseFolder. Usually used in conjunction with 'imports'"
" to import the class before it is referenced."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:250
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:463
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:601
msgid "alias"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:250
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:463
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:601
msgid "FTI Alias definition in the form alias=fromvalue,tovalue"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:253
msgid "allow_discussion"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:253
msgid ""
"Whether or not the content type should be discussable in the portal by "
"default."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:256
msgid "allowable_content_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:256
msgid "A comma-separated list of allowed test format for a textarea widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:259
msgid "allowed_content_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:259
msgid ""
"A comma-separated list of allowed sub-types for a (folderish) content type. "
"Note that allowed content types are automatically set when using aggregation"
" and composition between classes to specify containment."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:262
msgid "archetype_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:262
msgid ""
"The name which will be shown in the \"add new item\" drop-down and other "
"user-interface elements. Defaults to the class name, but whilst the class "
"name must be valid and unique python identifier, the archetype_name can be "
"any string."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:265
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:472
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:610
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:811
msgid "author"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:265
msgid ""
"You can set the author project-wide with the '--author' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:268
msgid "base_actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:268
msgid "Sets the base actions in the class's factory type information (FTI)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:271
msgid "base_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:271
msgid ""
"Explicitly set the base class of a content type, overriding the automatic "
"selection of BaseContent, BaseFolder or OrderedBaseFolder as well as any "
"parent classes in the model. What you specify here ends up as the first item"
" (or items: comma-separate them) in the classes it inherits from. So this is"
" also a handy way to place one class explicitly in front of the other. See "
"also additional_parents."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:274
msgid "base_schema"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:274
msgid ""
"Explicitly set the base schema for a content type, overriding the automatic "
"selection of the parent's schema or BaseSchema, BaseFolderSchema or "
"OrderedBaseFolderSchema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:286
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:484
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:622
msgid "catalogmultiplex:black"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:286
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:484
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:622
msgid ""
"Remove an archetypes class (identified by meta_type) from one or more "
"catalogs to be cataloged in. Comma-separated list of catalogs. Example-"
"value: 'portal_catalog, another_catalog'. Explaination: Instances of the "
"class wont be catalogged in portal_catalog anymore."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:289
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:487
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:625
msgid "catalogmultiplex:white"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:289
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:487
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:625
msgid ""
"Add an archetypes class (identified by meta_type) to one or more catalogs to"
" be cataloged in. Comma-separated list of catalogs. Example-value: "
"'myfancy_catalog, another_catalog'. Explaination: Additionally to the "
"default 'portal_catalog' the instances of this class will be catalogged in "
"the two given catalogs."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:292
msgid "content_icon"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:292
msgid ""
"The name of an image file, which must be found in the skins directory of the"
" product. This will be used to represent the content type in the user "
"interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:295
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:490
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:628
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:841
msgid "copyright"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:295
msgid ""
"You can set the copyright project-wide with the '--copyright' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:298
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:493
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:631
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:844
msgid "creation_permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:298
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:493
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:631
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:844
msgid ""
"Sets the creation permission for the class. Example: 'Add portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:301
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:496
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:634
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:847
msgid "creation_roles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:301
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:496
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:634
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:847
msgid ""
"You can set an own role who should be able to add a type. Use an Tuple of "
"Strings. Default and example for this value: '(\"Manager\", \"Owner\", "
"\"Member\")'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:304
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:499
msgid "default_interface_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:304
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:499
msgid "default type of interfaces (z2 or z3)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:307
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:502
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:637
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:850
msgid "default_view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:307
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:502
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:637
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:850
msgid ""
"The TemplateMixin class in Archetypes allows your class to present several "
"alternative view templates for a content type. The default_view value sets "
"the default one. Defaults to 'base_view'. Only relevant if you use "
"TemplateMixin."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:310
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:433
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:736
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1084
#: ../../reference_manuals/old/testing/brief_example.rst:4
#: ../../reference_manuals/old/testing/code_coverage.rst:4
#: ../../reference_manuals/old/testing/doctest_zope3.rst:4
#: ../../reference_manuals/old/testing/doctests.rst:4
#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:4
#: ../../reference_manuals/old/testing/introduction.rst:4
#: ../../reference_manuals/old/testing/running_tests.rst:4
#: ../../reference_manuals/old/testing/testing_examples.rst:4
#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:4
#: ../../reference_manuals/old/testing/types_of_tests.rst:4
#: ../../reference_manuals/old/testing/unit_tests.rst:4
#: ../../reference_manuals/old/testing/writing_ptc_test.rst:4
#: ../../reference_manuals/old/testing/zope_testrecorder.rst:4
msgid "description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:310
msgid ""
"A description of the type, a sentence or two in length. Used to describe the"
" type to the user."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:313
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:511
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:640
msgid "detailed_creation_permissions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:313
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:511
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:640
msgid ""
"Give the content-type (types in the package, model) own creation "
"permissions, named automagically 'ProductName: Add ClassName'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:316
msgid "disable_polymorphing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:316
msgid ""
"Normally, archgenxml looks at the parents of the current class for content "
"types that are allowed as items in a folderish class. So: parent's allowed "
"content is also allowed in the child. Likewise, subclasses of classes "
"allowed as content are also allowed on this class. Classic polymorphing. In "
"case this isn't desired, set the tagged value 'disable_polymorphing' to 1."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:319
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:514
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:643
msgid "display_in_navigation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:319
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:514
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:643
msgid ""
"Setting this boolean value adds the type to 'Displayed content types' in the"
" portals navigation settings. Default is True"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:322
msgid "doctest_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:322
msgid ""
"In a tests package, setting the stereotype ``<<doc_testcase>>`` on a class "
"turns it into a doctest. The doctest itself is placed in the doc/ "
"subdirectory. The 'doctest_name' tagged value overwrites the default name "
"for the file (which is the name of the doctestcase class + '.txt'). "
"ArchGenXML appends the '.txt' extension automatically, so you don't need to "
"specify it."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:325
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:517
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:646
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:853
msgid "email"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:325
msgid ""
"You can set the email project-wide with the '--email' commandline parameter "
"(or in the config file). This TGV allows you to use/ overwrite it on a class"
" level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:328
msgid "filter_content_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:328
msgid ""
"If set to true (1), explicitly turn on the filter_content_types factory type"
" information value. If this is off, all globally addable content types will "
"be addable inside a (folderish) type; if it is on, only those values in the "
"allowed_content_types list will be enabled. Note that when aggregation or "
"composition is used to define containment, filtered_content_types will be "
"automatically turned on."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:331
msgid "folder_base_class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:331
msgid ""
"Useful when using the '<<folder>>' stereotype in order to set the folderish "
"base class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:334
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:523
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:649
msgid "generate_reference_fields"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:334
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:523
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:649
msgid ""
"Per default (True) navigable reference (or relation) ends are resulting in a"
" ReferenceField (or RelationField). Setting this value to False results in "
"not generating ReferenceFields automagically."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:337
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:526
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:652
msgid "global_allow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:337
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:526
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:652
msgid ""
"Overwrite the AGX-calculated 'global_allow' setting of class. Setting it to "
"'1' makes your content type addable everywhere (in principle), setting it to"
" '0' limits it to places where it's explicitly allowed as content."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:340
msgid "hide_actions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:340
msgid ""
"A comma- or newline-separated list of action ids to hide on the class. For "
"example, set to 'metadata, sharing' to turn off the metadata (properties) "
"and sharing tabs."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:343
msgid "hide_folder_tabs"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:343
msgid ""
"When you want to hide the folder tabs (mostly the \"contents\" tab, just set"
" this tagged value to 1."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:349
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:532
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:658
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:856
msgid "immediate_view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:349
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:532
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:658
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:856
msgid ""
"Set the immediate_view factory type information value. This should be the "
"name of a page template, and defaults to 'base_view'. Note that Plone at "
"this time does not make use of immediate_view, which in CMF core allows you "
"to specify a different template to be used when an object is first created "
"from when it is subsequently accessed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:352
msgid "import_from"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:352
msgid ""
"If you wish to include a class in your model (as a base class or aggregated "
"class, for example) which is actually defined in another product, add the "
"class to your model and set the import_from tagged value to the class that "
"should be imported in its place. You probably don't want the class to be "
"generated, so add a stereotype '<<stub>>' as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:355
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:535
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:661
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:859
msgid "imports"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:355
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:535
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:661
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:859
msgid ""
"A list of python import statements which will be placed at the top of the "
"generated file. Use this to make new field and widget types available, for "
"example. Note that in the generated code you will be able to enter "
"additional import statements in a preserved code section near the top of the"
" file. Prefer using the imports tagged value when it imports something that "
"is directly used by another element in your model. You can have several "
"import statements, one per line, or by adding several tagged values with the"
" name 'imports'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:361
msgid "inherit_allowed_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:361
msgid ""
"By default, a child type will inherit the allowable content types from its "
"parents. Set this property to false (0) to turn this off."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:367
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:544
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:670
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:865
msgid "license"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:367
msgid ""
"You can set the license project-wide with the '--license' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a class level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:370
msgid "marshaller"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:370
msgid "Specify a marshaller to use for the class' schema."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:373
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:547
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:673
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:868
msgid "module"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:373
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:547
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:673
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:868
msgid ""
"Like 'module_name', it overwrites the name of the directory it'd be normally"
" placed in."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:376
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:550
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:676
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:871
msgid "module_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:376
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:550
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:676
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:871
msgid ""
"Like 'module', it overwrites the name of the directory it'd be normally "
"placed in."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:379
msgid "parentclass_first"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:379
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:382
msgid ""
"if this tgv is set to true generalization parents are used before the "
"standard base classes (e.g. BaseContent) this option is sometimes necessary "
"when inheriting from some special parents (e.g. 'remember' style classes)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:382
msgid "parentclasses_first"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:385
msgid "portal_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:385
msgid ""
"Sets the CMF portal-type this class will be registered with, defaults to the"
" class-name."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:391
msgid "register"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:391
msgid "'Remember' related. Set as default member type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:394
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:565
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:685
msgid ""
"Per default a fields 'searchable' property is set to False. Sometimes you "
"want it for all fields True. This TGV let you define the default for a "
"class, package or model."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:397
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:568
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:688
msgid "searchable_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:397
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:568
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:688
msgid ""
"Setting this boolean value adds the type to 'types to be searched' in the "
"portals search settings. Default is True"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:400
msgid "strict"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:400
msgid ""
"On a class with the ``<<interface_doctest>>`` stereotype: check for "
"inherited interfaces as well."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:403
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:574
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:691
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:874
msgid "suppl_views"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:403
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:574
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:691
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:874
msgid ""
"The TemplateMixin class in Archetypes allows your class to present several "
"alternative view templates for a content type. The suppl_views value sets "
"the available views. Example: '(\"my_view\", \"myother_view\")'. Defaults to"
" '()'. Only relevant if you use TemplateMixin."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:406
msgid "typeDescription"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:406
msgid "DEPRECATED. Use 'description' instead."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:409
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:577
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:694
msgid "use_dynamic_view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:409
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:577
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:694
msgid ""
"Controles wether CMFDynamicViewFTI is used for a type/class. Boolean, "
"default is True."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:412
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:580
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:697
msgid "use_portal_factory"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:412
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:580
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:697
msgid ""
"This boolean value controls the registration of the type for use with "
"portal_factory. Default: True."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:415
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:583
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:700
msgid "use_workflow"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:415
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:583
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:700
msgid ""
"Tie the class to the named workflow. A state diagram (=workflow) attached to"
" a class in the UML diagram is automatically used as that class's workflow; "
"this tagged value allows you to tie the workflow to other classes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:418
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:586
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:703
msgid "version_info"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:418
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:586
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:703
msgid ""
"Add ArchGenXML version information to the generated file (default is 1)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:424
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:592
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:709
msgid "vocabulary:vocabulary_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:424
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:592
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:709
msgid ""
"For use with 'ATVocabularyManager'. Defaults to 'Simplevocabulary'. Let you "
"define the portal_type of the vocabulary used as initial vocabulary at "
"Product install time. If VdexVocabulary is used, the install-script tries to"
" install a vocabulary from a vdex file names "
"'Products/PRODUCTNAME/data/VOCABULARYNAME.vdex'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:433
msgid ""
"Sets a description for this field. It's used for field documentation while "
"registering inside Archetypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:448
msgid "code"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:448
msgid ""
"The actual python code of the method. Only use this for simple one-liners. "
"Code filled into the generated file will be preserved when the model is re-"
"generated."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:451
msgid "documentation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:451
msgid ""
"You can add documention via this tag; it's better to use your UML tool's "
"documentation field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:457
msgid ""
"For method with public visibility only, if a permission is set, declare the "
"method to be protected by this permission. Methods with private or protected"
" visiblity are always declared private since they are not intended for "
"through-the-web unsafe code to access. Methods with package visibility use "
"the class default security and do not get security declarations at all."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:472
msgid ""
"You can set the author project-wide with the '--author' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:490
msgid ""
"You can set the copyright project-wide with the '--copyright' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:505
msgid "dependency_step_qi"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:505
msgid ""
"Generate Quickinstaller dependency installation for your product. Boolean (1"
" or 0), default 0 (off). Dependencies can be declared in AppConfig.py in a "
"variable DEPENDENCIES."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:508
msgid "dependend_profiles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:508
msgid ""
"GenericSetup profiles your product depends on. A list of profile names "
"separated by commas. This list is used for the dependencies tag inside the "
"metadata.xml file of the product's profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:517
msgid ""
"You can set the email project-wide with the '--email' commandline parameter "
"(or in the config file). This TGV allows you to use/ overwrite it on a model"
" level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:520
msgid "fixtools"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:520
msgid ""
"Generate fixTools function in setuphandlers.py. It calls "
"initializeArchetypes for generated tools, thus reset existing data in the "
"tools. Boolean (1 or 0), default 0 (off)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:544
msgid ""
"You can set the license project-wide with the '--license' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a model level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:553
msgid "plone_target_version"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:553
msgid ""
"The target version of Plone. Defaults to 3.0 Possible values are 2.5 and 3.0"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:556
msgid "product_description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:556
msgid ""
"The description of the Product. This is placed as description tag in the "
"metadata.xml file of the product's profile"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:571
msgid "skin_directories"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:571
msgid ""
"A comma separated list of subdirectories to be generated inside the product "
"skins directory. Each of this directories is prefixed with productname in "
"lowercase. The default value is \"'templates', 'styles', 'images'\"."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:610
msgid ""
"You can set the author project-wide with the '--author' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:628
msgid ""
"You can set the copyright project-wide with the '--copyright' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:646
msgid ""
"You can set the email project-wide with the '--email' commandline parameter "
"(or in the config file). This TGV allows you to use/ overwrite it on a "
"package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:670
msgid ""
"You can set the license project-wide with the '--license' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a package level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:715
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:21
msgid "portlet"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:721
msgid "template_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:721
msgid ""
"Specify a template for the portlet (without .pt). Default is the class name."
" (on classes with the stereotype ``<<portlet_class>>``)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:724
msgid "state"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:727
#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:888
msgid "access"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:727
msgid "Shortcut for 'Access contents information'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:730
msgid "add"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:730
msgid "Shortcut for 'Add portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:733
msgid "delete"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:733
msgid "Shortcut for 'Delete objects'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:736
msgid "Sets the state description."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:739
msgid "inactive"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:739
msgid "Shortcut for 'Access inactive portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:742
msgid "initial_state"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:742
msgid ""
"Sets this state to be the initial state. This allows you to use a normal "
"state in your UML diagram instead of the special round starting-state "
"symbol."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:748
msgid "list"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:748
msgid "Shortcut for 'List folder contents'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:751
msgid "modify"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:751
msgid "Shortcut for 'Modify portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:754
msgid "review"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:754
msgid "Shortcut for 'Review portal content'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:757
msgid "role"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:757
msgid "Shortcut for 'Change local roles'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:760
msgid "Shortcut for 'View'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:763
msgid "worklist"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:763
msgid ""
"Attach objects in this state to the named worklist. An example of a worklist"
" is the to-review list."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:766
msgid "worklist:guard_permissions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:766
msgid ""
"Sets the permissions needed to be allowed to view the worklist. Default "
"value is 'Review portal content'. Set to 'False' for no guard_permission."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:769
msgid "worklist:guard_roles"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:769
msgid ""
"Sets the roles needed to be allowed to view the worklist. No default value"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:772
msgid "state action"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:775
msgid "after:binding"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:775
msgid "Interface to bind the after effect to."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:778
msgid "before:binding"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:778
msgid "Interface to bind the before effect to."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:784
msgid "state machine"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:787
msgid "bindings"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:787
msgid ""
"List of portal-types this workflow should be bound to. Comma-separated, i.e."
" 'Document, Image, File'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:790
msgid "A workflow id to be set as the default workflow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:796
msgid "state transition"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:802
msgid "trigger_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:802
msgid ""
"Sets the trigger type, following what is defined by DCWorkflow: automatic "
"user action (default) workflow method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:805
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:353
#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:170
msgid "url"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:805
msgid "Action URL, need 'PloneWorkflowTransitions' to see it in Plone."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:811
msgid ""
"You can set the author project-wide with the '--author' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:814
msgid "autoinstall"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:814
msgid ""
"Controls, wether the tool is automatically installed when your product is "
"installed. Boolean, default is True."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:817
msgid "configlet"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:817
msgid ""
"Set to true (1) to set up a configlet in the Plone control panel for your "
"tool."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:820
msgid "configlet:condition"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:820
msgid ""
"A TALES expression defining a condition which will be evaluated to determine"
" whether the configlet should be displayed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:823
msgid "configlet:description"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:823
msgid "A description of the configlet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:826
msgid "configlet:icon"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:826
msgid ""
"The name of an image file, which must be in your product's skin directory, "
"used as the configlet icon."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:829
msgid "configlet:permission"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:829
msgid "A permission which is required for the configlet to be displayed."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:832
msgid "configlet:section"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:832
msgid ""
"The section of the control panel where the configlet should be displayed. "
"One of 'Plone', 'Products' (default) or 'Member'. **warning**: older "
"documentation versions mentioned 'Members' here."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:835
msgid "configlet:title"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:835
msgid "The name of the configlet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:838
msgid "configlet:view"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:838
msgid ""
"The id of the view template to use when first opening the configlet. By "
"default, the 'view' action of the object is used (which is usually "
"base_view)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:841
msgid ""
"You can set the copyright project-wide with the '--copyright' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:853
msgid ""
"You can set the email project-wide with the '--email' commandline parameter "
"(or in the config file). This TGV allows you to use/ overwrite it on a tool "
"level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:865
msgid ""
"You can set the license project-wide with the '--license' commandline "
"parameter (or in the config file). This TGV allows you to use/ overwrite it "
"on a tool level."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:877
msgid "tool_instance_name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:877
msgid ""
"The id to use for the tool. Defaults to 'portal_<name>', where ``<name>`` is"
" the class name in lowercase."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:880
msgid "toolicon"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:880
msgid ""
"The name of an image file, which must be found in the skins directory of the"
" product. This will be used to represent your tool in the Zope Management "
"Interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:883
msgid "unknown"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:885
msgid "Modify"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:891
msgid "allow_empty_rows"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:894
msgid "columns"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:897
msgid "default:widget:Reference"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:900
msgid "default_content_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:903
msgid "default_output_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:906
msgid "default_page_type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:912
msgid "index_method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:915
msgid "languageIndependent"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:918
msgid "max_size"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:921
msgid "mode"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:924
msgid "pil_quality"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:927
msgid "pil_resize_algo"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:930
msgid "rename_after_creation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:933
msgid "storage"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:936
msgid "swallowResizeExceptions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:939
msgid "widget:addable"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:942
msgid "widget:allow_brightness"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:945
msgid "widget:allow_browse"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:948
msgid "widget:allow_file_upload"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:951
msgid "widget:allow_search"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:954
msgid "widget:allow_sorting"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:957
msgid "widget:append_only"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:960
msgid "widget:auto_insert"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:963
msgid "widget:available_indexes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:966
msgid "widget:base_query"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:969
msgid "widget:checkbox_bound"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:972
msgid "widget:cols"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:975
msgid "widget:columns"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:978
msgid "widget:default_search_index"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:981
msgid "widget:destination"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:984
msgid "widget:destination_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:987
msgid "widget:divider"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:990
msgid "widget:dollars_and_cents"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:993
msgid "widget:ending_year"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:996
msgid "widget:force_close_on_insert"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:999
msgid "widget:format"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1002
msgid "widget:future_years"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1005
msgid "widget:history_length"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1008
msgid "widget:image_method"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1011
msgid "widget:image_portal_types"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1014
msgid "widget:maxlength"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1017
msgid "widget:nullValueTitle"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1020
msgid "widget:omitCountries"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1023
msgid "widget:only_for_review_states"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1026
msgid "widget:provideNullValue"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1029
msgid "widget:restrict_browsing_to_startup_directory"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1032
msgid "widget:rows"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1035
msgid "widget:search_catalog"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1038
msgid "widget:show_hm"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1041
msgid "widget:show_indexes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1044
msgid "widget:show_path"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1047
msgid "widget:show_review_state"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1050
msgid "widget:show_ymd"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1053
msgid "widget:size"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1056
msgid "widget:starting_year"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1059
msgid "widget:startup_directory"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1062
msgid "widget:thousands_commas"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1065
msgid "widget:visible"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1068
msgid "widget:whole_dollars"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1078
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:14
msgid "name"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1078
msgid ""
"Specify a name for the zope3 view.. Default is the class name. (on classes "
"with the stereotype ``<<view_class>>``)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1084
msgid ""
"Sets a description for this widget. It's used for widget documentation while"
" registering inside Archetypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1090
msgid "macro"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1090
msgid ""
"Sets the macro used by the widget. This will be used as the name of the "
"auto-created page template for the widget."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1093
msgid "title"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1093
msgid ""
"Sets the widget title. It's used for widget documentation while registering "
"inside Archetypes."
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1095
msgid "used_for"
msgstr ""

#: ../../reference_manuals/old/archgenxml/reference/tagged-values.rst:1096
msgid ""
"Sets the possible fields which can use this widget. It's used for widget "
"documentation while registering inside Archetypes. The list has the form: "
"'\"Products.Archetypes.Field.Field1Name\", "
"\"Products.Archetypes.Field.FieldName2\"'."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/index.rst:3
msgid "Step by Step Instructions"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/index.rst:7
msgid ""
"Step by step instructions for common tasks while developing with ArchGenXML."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:3
msgid "Setup of a Testcase Environment using UML and ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:9
msgid "Environment for test-driven and architecture centric development."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:11
msgid "Check if it works in 2.0. Add some information how to run the tests."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:14
msgid "About Testing"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:15
msgid ""
"Since development is going on at many places in the Plone system, it is "
"important to have a way ready to *test* if the software you wrote is "
"affected by the changes. And, more important the other way around, if your "
"work, in case it makes it way into the Plone core or other add-on products, "
"affects the work of *others*."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:21
msgid ""
"There are several documents available to read on why testing is important, "
"so feel free to have a look:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:24
msgid ""
"`Testing in Plone - Introduction "
"<http://plone.org/documentation/tutorial/testing/introduction>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:25
msgid ""
"`Best Practices for Plone development - Unit Testing "
"<http://plone.org/documentation/tutorial/best-practices/unit-testing>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:26
msgid ""
"`RichDocument Tutorial - Unit testing "
"<http://plone.org/documentation/tutorial/richdocument/unit-testing>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:28
msgid ""
"and there are many more: Try the *testing*. Some of these documents are "
"describing in detail how to write the tests itself, which this manual page "
"is not intended for."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:33
msgid "Testing and UML/ ArchGenXML"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:34
msgid ""
"This document describes the few steps necessary to setup your testing "
"environment when using an UML diagram and ArchGenXML. It generates your "
"projects with the test infrastructure and you can focus on writing the test "
"itself"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:39
msgid ""
"ArchGenXML provides a pre-configured testing environment - no more hand-work"
" to create it !"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:42
msgid "Steps:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:44
msgid ""
"Check if `PloneTestCase <http://plone.org/products/plonetestcase/>`_ product"
" was shipped with your Plone. If not install it in the version for your "
"Plone."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:45
msgid ""
"Create a package in your model and name it 'tests' and give it the "
"stereotype ``<<tests>>``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:46
msgid ""
"Inside the new tests package create class 'MyFancyTestcase' (in the uml "
"below named 'testPlone') and give it the stereotype ``<<plone_testcase>>``. "
"This is your main testcase class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:47
msgid ""
"Create an additional class inside the test package, call it 'testSetup', and"
" give it the stereotype ``<<setup_testcase>>``. Let it derive from the main "
"testcase class using the generalization arrow."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:48
msgid ""
"Testing methods/behaviour of archetypes classes: Create a class inside the "
"test package. Give it the stereotype ``<<testcase>>`` or "
"``<<doc_testcase>>``. Make them derive from main testcase class using the "
"generalization arrow. On a testcase class you can add methods starting with "
"'test' such as 'testMyFancyFeature'. After code generation you just need to "
"fill in your test code. A doc_testcase class creates an empty doctest text-"
"file in the '/docs' directory of your product. There are some tagged value "
"available to control the testcase in detail. Please look at the chapter :ref"
":`agx-tagged-values` for more information."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:49
msgid ""
"To generate all imports and some startup code, you can use the dependency "
"arrow from the testcase class to the archetypes class."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:50
msgid ""
"You can repeat 5 and 6 for every class you want to include in yout test. You"
" can organize your tests also different, like one integration test, as you "
"like."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:51
msgid "Generate and run the tests."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:53
msgid ""
"steps needed to get the test fly, such as 'zopectl test' or setting "
"SOFTWAREHOME and INSTANCEHOME environment."
msgstr ""

#: ../../reference_manuals/old/archgenxml/step-by-step-instructions/setup-of-a-testcase-environment-using-uml-and-archgenxml.rst:58
msgid "These are the basic steps necessary to get it running."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:3
msgid "ATVocabularyManager"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:9
msgid ""
"ATVocabularyManager is a product for letting site managers define "
"vocabularies for fields through-the-web or by import from XML files. "
"ArchGenXML can generate the necessary code to use this product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:13
msgid ""
"ATVM manages dynamic vocabularies. It installs a tool, where a site Manager "
"can add, change and delete vocabularies. These vocabularies can then be used"
" anywhere on the site."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:15
msgid ""
"You can download ATVocabularyManager from the Plone.org products area: "
"`/products/atvocabularymanager "
"<http://plone.org/products/atvocabularymanager>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:18
msgid "Using simple flat vocabularies"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:19
msgid "Adding ATVM-vocabs to your UML model is quite easy."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:21
msgid "Add a selection or multiselection field to your type."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:23
msgid ""
"Add a tag ``vocabulary:name`` and give it a name, let's say ``countries``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:25
msgid "Add a tag ``vocabulary:type`` with the value ``ATVocabularyManager``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:27
msgid ""
"We are now finished with the UML. Save it and let AGX do the work. What "
"still is missing, is to install the countries vocabulary. Therefore:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:29
msgid ""
"Add a function called ``setupVocabularies`` to the protected code section in"
" ``setuphandlers.py`` in your product and register it as an import step in "
"``/profiles/default/import_steps.xml`` in a code section (make it dependent "
"from you ``*QI-Dependencies`` step."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:31
msgid ""
"Add the following code to your setuphandler.py (this sets up a vocabulary "
"``countries`` with the given values, and registers it with "
"ATVocabularyManager)::"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:53
msgid "Using simple tree vocabularies"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:54
msgid "If you are interested in using and creating hierachical vocab:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:56
msgid ""
"use additional tag ``vocabulary:vocabulary_type`` with value "
"``TreeVocabulary``,"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:58
msgid ""
"have a look at the doc-string of "
"``Products.ATVocabularyManager.utils.createHierarchicalVocabs``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:60
msgid ""
"Using vocabularies based on the **IMS Vocabulary Definition Exchange** "
"(VDEX) format."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:62
msgid ""
"`VDEX <http://www.imsglobal.org/vdex/index.html>`_ is a simple XML based "
"format to define flat or hierachical multilingual vocabularies. "
"ATVocabularyManager supports VDEX in most of its dialects."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:64
msgid ""
"To tell Archetypes to use them in your UML first take Steps 1 to 3 of the "
"first section and skip the import part. Then add a tag "
"``vocabulary:vocabulary_type`` and give it the value ``VdexVocabulary``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/ATVocabularyManager.rst:66
msgid ""
"Now add a folder called ``data`` in your products folder. Inside the "
"``/data`` folder create a new file called ``countries.vdex`` "
"(\"example\":countries.vdex). It will be imported automatically on install "
"or reinstall, but only if a vocabulary named countries does not exist."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:3
msgid "CompoundField and ArrayField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:9
msgid ""
"How to make custom fields: a list of some default field type, a compound of "
"a two or more default fields."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:14
msgid ""
"Install the `CompoundField <http://plone.org/products/compoundfield>`_ "
"extension into you Products folder."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:17
msgid "List of fields - ArrayField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:18
msgid ""
"Assume you want to have content type where the user can provide one or more "
"files. Its easy by making the type folderish. But for some use-cases this is"
" to heavy or to difficult, you want the user to use a form for those files."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:22
msgid ""
"You could say, ok, up to 5 files is enough and model 5 file fields into your"
" class. Not very elegant, huh?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:25
msgid ""
"The easiest way is to to use the UML ``multiplicity`` feature on your "
"attribute aka field of the class. If you want to enable unlimited "
"attachments use multiplicity ``*``. Or choose a number like ``5``, as in our"
" above example."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:27
msgid ""
"You can set the initial size of the array by using the tagged value "
"``array:size`` to ``python:10`` for example. Prefixed with ``array:`` you "
"can access also the label ``array:widget:label`` of it and so on. If you "
"prefer the EnhancedArrayWidget you need to add an tagged value ``imports`` "
"``from Products.Compoundfield.EnhancedArrayWidget import "
"EnhancedArrayWidget`` to your class and set on the attribute the tagged "
"value ``array:widget:type`` to ``EnhanceArrayWidget``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:30
msgid "Custom Fields compounds - CompoundField"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:31
msgid ""
"With ArchGenXML you can create compounds of fields from existing fields. "
"Such a set of fields behaves almost like a normal field. To create such a "
"compounded field create a new class and give it the stereotype ``<<field>>``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:33
msgid ""
"Now add attributes to it like you would do on a content type class. You can "
"use almost every field type, just some special fields, mostyl those acting "
"as a proxy without own storage, wont work (such as ReferenceField or "
"AttachementField)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:35
msgid ""
"For example we create a ``PointField`` consisting out of two ``FloatFields``"
" by just adding a ``x`` and ``y`` attribute of type ``float``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:37
msgid ""
"To use the new field create a fresh content class and name it ``Polygon``. "
"Take a dependency arrow pointing from your Polygon class to the field class."
" This ensures it gets imported!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/CompoundField-and-ArrayField.rst:39
msgid ""
"Next add an attribute ``points`` to the class. The type of the new points "
"attribute is ``PointsField``. Now to make it a polygon give it a "
"multiplicity of ``*`` and you are done: You have a list of Points as one "
"field."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:3
msgid "archetypes.schemaextender"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:9
msgid ""
"When you want to add a couple of fields to an existing content type "
"(including reference fields), you may decide to create a whole new product "
"that subclasses that type. You then have a whole bunch of code to maintain "
"and you are dependent on changes that may occur in your parent class. Or you"
" let ArchGenXML make your product use archetypes.schemaextender and your day"
" gets brighter."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:18
msgid ""
"You must install the `archetypes.schemaextender "
"<http://pypi.python.org/pypi/archetypes.schemaextender>`_ product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:21
msgid "Adding a field to an existing content type"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:22
msgid "Let's say you want to add *superPower* (a field) to *HumanBeing*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:24
msgid "(a class)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:26
msgid ""
"Let the content type to extend, e.g. *\"HumanBeing\"*, be present in your "
"diagram (as a **class**, possibly with the ``<<stub>>`` stereotype)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:27
msgid ""
"Create an **interface**, e.g. *\"ISuperHero\"* (the \"I\" helps remembering "
"this is an interface), in your diagram ; it has the ``<<interface>>`` "
"stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:28
msgid "Draw a **realization** arrow from *\"HumanBeing\"* to *\"ISuperHero\"*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:29
msgid ""
"Create a **class**, e.g. *\"SuperHero\"*, in your diagram and give it the "
"``<<extender>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:30
msgid "Add any **field** (s), e.g. *\"superPower\"*, to this extender"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:31
msgid ""
"Create a **realization** arrow from the extender class to the interface, "
"e.g. from *\"SuperHero\"* to *\"ISuperHero\"*, remove its ``<<realize>>`` "
"stereotype and replace it with a ``<<adapts>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:32
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:28
#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:27
msgid "Generate & Done"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:34
msgid ""
"Now every new instance of *HumanBeing* will have the *superPower* field in "
"its schema, default view and default edit form. And even if the developer of"
" the *HumanBeing* content type decides to remove its arms or legs, human "
"beings (all of them) will still have super powers because you declared they "
"are super heros (they implement *ISuperHero*)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:36
msgid ""
"Note that, in order to add these stereotypes (``<<extender>>``, "
"``<<adapts>>``) to your (Argo)UML model, you have to create a stereotype, "
"give it the proper name (extender, adapts) and select its proper \"Super-"
"class\" in the properties tab (you either select class for class "
"stereotypes, or abstraction for the \"adapts\" stereotype)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:39
msgid "Example model and additional features"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:40
msgid ""
"AGX support of archetypes schemaextender is illustrated by the example model"
" in the screenshot below :"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:46
msgid ""
"You may note from this example model that AGX support of "
"archetypes.schemaextender comes with a bunch of funny features :"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:48
msgid ""
"support for `adapters and named adapters "
"<http://plone.org/documentation/tutorial/borg/a-whirlwind-tour-of-zope-3/>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:49
msgid ""
"adapted interfaces (or classes) can be external to your model (using the "
"``<<stub>>`` stereotype)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/archetypes-schemaextender.rst:50
msgid ""
"you can even let a stub class implement a stub interface : in the example "
"above, the *HumanBeing* stub class has a realization arrow to "
"*IAStubInterfaceFromYetAnotherProduct*, which will be turned by AGX into a "
"five:implement ZCML declaration. This is useful when you want to integrate 2"
" distinct third party products via your own product. Your model is then "
"nothing more than a \"glue\" model, which is a good thing in many cases."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:3
msgid "Content Flavors"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:9
msgid ""
"When you want to add a couple of fields to an existing content type "
"(including reference fields), you may decide to create a whole new product "
"that subclasses that type. You then have a whole bunch of code to maintain "
"and you are dependent on changes that may occur in your parent class. Or you"
" let ArchGenXML use the Content Flavors product and your day gets brighter. "
"Note that the use of the experimental content flavors product is now "
"deprecated in favor of the more reliable and feature-rich "
"archetypes.schemaextender."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:20
msgid ""
"You must install the `Content Flavors "
"<http://plone.org/products/contentflavors>`_ product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:23
msgid "Adding a field to an existing content typ"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:24
msgid ""
"Let an existing content type, e.g. *\"ExistingType\"*, be present in your "
"diagram (as a **class** with stereotypes ``<<archetype>>`` and ``<<stub>>``)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:25
msgid ""
"Create a **class**, e.g. *\"MyCoolFlavor\"*, in your diagram and give it the"
" ``<<flavor>>`` stereotype"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:26
msgid "Add any field(s), e.g. *\"MyAdditionalField\"*, to this flavor class"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:27
msgid "Create a **realization** arrow from *\"ExistingType\"* to *\"MyCoolFlavor\"*"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:30
msgid ""
"Now every new instance of *ExistingType* will have the *MyAdditionalField* "
"field in its schema, default view and default edit form."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:33
msgid "Limits"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:34
msgid ""
"The use of the experimental content flavors product is now deprecated in "
"favor of the more reliable and feature-rich archetypes.schemaextender."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:36
msgid ""
"Content Flavors also allows **custom views** to be used by existing types "
"but this feature is not supported by ArchGenXML yet."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:37
msgid ""
"You may not be able to see the additional field(s) if the ExistingType uses "
"some non-default view. You then have to manually manage this by **overriding"
" these existing views** with some of your own, with or without the help of "
"the Content Flavors product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:38
msgid "The existing content type may have to be based on ATCT (to be tested)?"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:39
msgid ""
"Several flavors can be applied to a given type. The order of precedence can "
"be managed through the web if the existing type follows some requirements "
"detailed in the `Content Flavors documentation "
"<http://plone.org/products/contentflavors/documentation>`_."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:40
msgid ""
"There are possible issues with indexing the additional fields, see `CF "
"documentation for details "
"<http://plone.org/products/contentflavors/documentation>`_."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/content-flavors.rst:41
msgid ""
"Content Flavors was an experiment and is now deprecated in favour of the "
"`archetypes.schemaextender "
"<http://plone.org/products/realestatebroker/documentation/how-to/customize-"
"the-fields-of-the-content-types>`_, which is also supported by AGX."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/index.rst:3
msgid "Third Party Product Integration"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/index.rst:7
msgid "The usage of add on products."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:3
msgid "Relations"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:9
msgid ""
"Create relations between portal-types model-driven. Support for Relations "
"Product (complex references). Define sets of rules for validation, creation "
"and lifetime of Archetypes references. ArchGenXML can generate the necessary"
" code and XML-configuration data to use this product."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:17
msgid ""
"To enable Relations install the Product (`code-location "
"<http://plone.org/products/relations/>`_)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:20
msgid "Basics"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:21
msgid ""
"As an option on command line, up to a tagged-value on model-level or on a "
"single UML-Association you just define the ``relation_implementation`` and "
"set it to ``relations``. A directed Assoziation results in one Relation."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:23
msgid ""
"**Give the association and its assoziation ends names.** They'll be used as "
"the names for the RelationField. If you dont want a field turn it off by "
"setting a tagged value ``generate_reference_fields`` on class (or package, "
"model) level to ``0``."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:26
msgid "Inverse Relation"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:27
msgid ""
"If the association is not directed (navigable on both association ends) an "
"inverse relation will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:29
msgid ""
"The tagged-value ``inverse_relation_name`` will be used for the back-"
"relation on undirected associations. It defaults to a relation named "
"``toend_fromend``, where these are the lowercased versions of the "
"association ends. If the two ends are named the same, then the relation will"
" be named ``association_inv``, where ``association`` is the name of the "
"association. (Finally, if the option ``old_inverse_relation_name`` is set, "
"then it defaults to the association name postfixed by ``_inverse``.)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:32
msgid "Cardinality"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:33
msgid ""
"You can use the Multiplicity on in UML to define the cardinality of an "
"Relation. You can use the minimum and maximun value here using the syntax "
"``1..5`` which means at least one relationrelated objects but not more than "
"five."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:39
msgid "type-constraint"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:39
msgid ""
"as described above an association between two portal-types will be created."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:42
msgid "interface-constraint"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:42
msgid ""
"an association between an archetypes class and an interface will create an "
"interface-constraint. the relation is allowed to all classes implementing "
"this interface."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:45
msgid "Association classes"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/relations.rst:46
msgid ""
"Association classes can be used to store data on the relation as an object. "
"You can model it using the UML association class or using a tagged value "
"``association_class`` on the association."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:3
msgid "Remember"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:9
msgid ""
"Generate 'Remember' based Member-Types. Its the successor of CMFMember."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:13
msgid "You must install to additional Products:"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:15
msgid "`membrane <http://plone.org/products/membrane>`_"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:17
msgid ""
"`remember <http://plone.org/products/remember>`_ (using `Five 1.4.3+ "
"<http://codespeak.net/z3/five/>`_)"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:19
msgid ""
"You should also read the documentation of both and understand how they work!"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:22
msgid "A Content-Type based on remember"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:23
msgid ""
"Create a class in your class diagram and give it a a stereotype "
"``<<remember>>``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:24
msgid ""
"add the tagged value ``use_workflow`` and set it to one of "
"``member_approval_workflow`` or ``member_auto_workflow``. You can create "
"also your own workflow if you know what remember needs (look at the "
"workflows shipped with remember)."
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:25
msgid ""
"set the ``active_workflow_states`` tagged value to the class and declare "
"which states of the used workflow are the ones, where the user can log in "
"with. It expects a list of values, e.g. ``python:[\"private\", \"public\"]``"
msgstr ""

#: ../../reference_manuals/old/archgenxml/third-party-product-integration/remember.rst:26
msgid ""
"Add attributes (fields) as you need. Attention here, only override fields of"
" remembers BaseMember schema if you know what youre doing."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:3
msgid "Additional information"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:7
msgid ""
"Further in-depth information about dealing with buildout in Plone context"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:13
msgid "Recipes"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:15
msgid "Buildout consists of *recipes*. In use, a recipe consists of:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:17
msgid "a Python package published to in ``pypi.python.org``,"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:18
msgid "a declaration in ``[buildout] parts=partname``, and"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:19
msgid ""
"a ``[partname]`` section with a ``recipe=`` assignment specifying the "
"package name at ``pypi.python.org`` name"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:22
msgid "Recipes are automatically downloaded from pypi as Python eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:25
msgid "Making buildout faster"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:27
msgid ""
"``easy_install`` crawls unnecessary web pages when trying to install Python "
"eggs. You can limit this crawl by using ``allow-hosts`` to specify a "
"whitelist:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:40
msgid "Buildout folder structure"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:42
msgid "Plone buildouts have folders with predefined purposes:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:47
msgid "``bin/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:45
msgid ""
"Contains Python scripts and shell scripts installed by various eggs, "
"including the ``buildout`` command itself.  The default Plone start script "
"``bin/instance`` is here."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:54
msgid "``parts/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:50
msgid ""
"The source tree constructed by buildout. This is wiped between buildout "
"runs, so you should not change anything here (note: some broken recipes "
"store things like pid files here). Generated configuration files are stored "
"here: don't change them directly (changes will be wiped), change the "
"corresponding buildout sections instead."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:57
msgid "``src/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:57
msgid "source code you are developing yourself."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:60
msgid "``eggs/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:60
msgid "extracted Python eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:64
msgid "``downloads/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:63
msgid ""
"Python egg download cache (may be elsewhere depending on the system "
"configuration)."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:69
msgid "``var/``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:67
msgid ""
"Persistent data such as logfiles, pid files, and Zope's database consisting "
"of filestorage files (e.g. ``Data.fs``) and blobstorage directories."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:72
msgid "``bootstrap.py``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:72
msgid "Installs the ``buildout`` command."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:78
msgid "``buildout.cfg``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:75
msgid ""
"Basic buildout file. May extend other ``.cfg`` files. Sometimes there are "
"many files and you need to pick one for ``buildout`` to use; e.g.::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:81
msgid "Running buildout on Windows"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:83
msgid ""
"The Windows Plone installer provides ``buildout.exe``. This executable uses "
"the system Python installation. This installation is not necessarily the "
"correct Python version, if multiple Pythons are installed on the computer."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:88
msgid ""
"Many Windows Python software uses wrapper ``.exe`` files which pick the "
"Python interpreter based on registry settings. One notable exe is "
"``buildout.exe``, which is used to run buildout."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:93
msgid ""
"If you install multiple Pythons, the latter installations might not become "
"active in the registry automatically, and your Python wrapper still rely on "
"the old version. This leads to version incompatibilities and you are unable "
"to start the Python applications."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:98
msgid ""
"Since only one Python interpreter can be active at a time, it is tricky to "
"develop multi-version Python code on Windows, for example if you need to "
"develop Plone 3 sites (Python 2.4) and Plone 4 sites (Python 2.6) "
"simultaneously."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:103
msgid ""
"Below is a script (``regpy.py``) which changes the active Python "
"interpreter. The orignal author is unknown, I picked up this code from some "
"paste board long time ago. Just run this code with your Python and the "
"running interpreter becomes active."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:108
#: ../../reference_manuals/old/portlets/tips.rst:348
msgid "Example::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:112
msgid "Code::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:155
msgid "Example error when going from Plone 3 to Plone 4::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:177
msgid ""
"http://blog.mfabrik.com/2011/02/22/changing-the-active-python-interpreter-"
"on-windows/"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:180
msgid "Running buildout behind a proxy"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:182
msgid ""
"Buildout uses ``setuptools``, which uses ``urllib``, which allows you to set"
" a proxy using the ``http_proxy`` (lowercase!) environment variable."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:186
msgid "Example for UNIX shell (bash):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:201
msgid "You can also SSH tunnel the proxy from a remote server:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:211
msgid "*!!Attention!!*"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:213
msgid ""
"In Plone 4.3 the System changed , and from now on you get special users with"
" different privileges for buildout and run. Because of the sudo command you "
"proxy environment variables aren't saved in the sudo env list."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:214
msgid "There are 3 ways to fix this in \\*nix systems:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:217
msgid "Inline: Set the environment variable inline."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:217
msgid ""
"``sudo -u plone_buildout http_proxy=\"http://myproxy:1234\" ./bin/buildout``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:220
msgid "Copy the environment from the currently logged in user."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:220
msgid "``sudo -E -u plone_buildout ./bin/buildout``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:225
msgid "Setup sudoers"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:223
msgid ""
"3)Maybe this article is interesting for setting up sudoers: "
"http://ubuntuforums.org/showthread.php?t=1132821"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:228
msgid "Buildout cache folder"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:230
msgid ""
"If you are running several buildouts as the same user you should consider "
"setting the cache folder. All downloaded eggs are cached here."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:233
msgid "There are two ways to set the cache folder"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:235
msgid "Use the ``PYTHON_EGG_CACHE`` environment variable;"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:237
msgid ""
"or set the ``download-cache`` variable in ``[buildout]``. This is only "
"recommended if the ``buildout.cfg`` file is not shared between different "
"configurations."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:241
msgid "Example:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:252
msgid "Buildout defaults"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:254
msgid "You can set user-wide buildout settings in the following file::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:258
msgid ""
"This is especially useful if you are running many Plone development "
"buildouts on your computer and you want them to share the same buildout egg "
"cache settings."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:261
msgid ""
"Example settings how to setting shared egg cache across various buildouts on"
" your computer::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:275
msgid "Manually picking downloaded and active component versions"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:277
msgid ""
"This is also known as *pinning* versions. You can manually choose what "
"Python egg versions of each component are used. This is often needed to "
"resolve version conflict issues."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:281
msgid ""
"http://www.uwosh.edu/ploneprojects/documentation/how-tos/how-to-use-"
"buildout-to-pin-product-versions"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:284
msgid "Migrating buildout to a different Python interpreter"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:286
msgid "You can either:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:288
msgid "copy the whole buildout folder to a new computer (not recommended); or"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:290
msgid "changing the Python interpreter on the same computer."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:292
msgid ""
"First you need to clear existing eggs as they might contain binary "
"compilations for wrong Python version or CPU architecture:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:299
msgid "Also clear the ``src/`` folder if you are developing any binary eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:301
msgid ""
"Buildout can be made aware of a new Python interpreter by rerunning "
"``bootstrap.py``:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:309
msgid ""
"Then run buildout again and it will fetch all Python eggs for the new Python"
" interpreter:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:316
msgid "Setting up a Plone site from ``buildout.cfg`` and ``Data.fs``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:318
msgid ""
"This is often needed when you are copying or moving a Plone site. If the "
"repeatable deployment strategy is done correctly, all that is needed to "
"establish a Plone site is:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:322
msgid ""
"``buildout.cfg`` (which describes the Plone site and its add-on products and"
" how they are downloaded or checked out from version control)"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:325
msgid ""
"``Data.fs`` (and blobstorage directories) which contains the site database."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:328
msgid "Below is an example process."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:330
msgid ""
"Activate Python 2.6 for Plone (see :doc:`how to use virtualenv controlled "
"non-system wide Python </getstarted/python>`):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:336
msgid ""
"Install ZopeSkel templates which contains a buildout and folder structure "
"template for Plone site (``plone3_buildout`` works also for Plone 4 as long "
"as you type in the correct version when paster template engine asks for it):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:363
msgid ""
"Then you can copy ``buildout.cfg`` from the existing site to your new "
"project:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:373
msgid ""
"Assuming buildout completes succesfully, test that the site starts (without "
"database):"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:380
msgid "Press CTRL+C to stop the instance."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:382
msgid "Now copy the existing database to the buildout directory:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:388
msgid ""
"If you do not know the admin user account for the database, you can create "
"an additional admin user:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:395
msgid ""
"Look for the Zope start-up message, which mentions the port the instance is "
"running on (the default port is 8080)::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:402
msgid "Then log in to the Zope Management Interface using your browser::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:409
msgid "Configuring plone products from buildout"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:411
msgid ""
"In case add-on products require configuration which is not handled by "
"buildout recipes, you can supply this configuration using the ``zope-conf-"
"additional`` specification of the ``plone.recipe.zope2instance`` recipe:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:426
msgid ""
"These configuration sections are added directly to your ``zope.conf`` file."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:428
msgid ""
"Any named product-config section is then available as a simple dictionary to"
" any python product that cares to look for it. The above example creates a "
"``foobar`` entry which is a dict with a ``'spam': 'eggs'`` mapping."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:432
msgid "Here is how you then access that from your code::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:440
msgid ""
"A similar method is used to configure the built-in Zope ClockServer enabling"
" you to trigger scripts:"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:456
msgid "Setting ``LD_LIBRARY_PATH``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:458
msgid ""
"``LD_LIBRARY_PATH`` is a UNIX environment variable which specifies from "
"which folders to load native dynamic linked libraries (``.so`` files). You "
"might want to override your system-wide libraries, because operating systems"
" may ship with old, incompatible, versions."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:463
msgid ""
"You can use ``environment-vars`` of the `zope2instance "
"<http://pypi.python.org/pypi/plone.recipe.zope2instance>`_ recipe."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:466
msgid "Example in ``buildout.cfg``"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:477
msgid "Extending buildout section"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:479
msgid "Buildout extensions can be extended in another buildout file."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:481
msgid "http://pypi.python.org/pypi/zc.buildout#extending-sections-macros"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:485
msgid "Overriding parts variables from command line"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:487
msgid ""
"Sometimes, you need a variable from one of your buildout parts to be "
"different, but for just one run."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:489
msgid ""
"So, instead of modifying your .cfg file for just one run and remember to "
"revert it back before pushing your changes back to the server, you can just "
"do that from the command line."
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:491
msgid "The format is::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:496
#: ../../reference_manuals/old/testing/introduction.rst:38
msgid "Examples"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:498
msgid "Need to create your site from scratch using the plonesite recipe::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:502
msgid ""
"Want to re-run buildout, but you don't want to mr.developer to update "
"packages::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:506
msgid "Want to do both examples at the same time::"
msgstr ""

#: ../../reference_manuals/old/buildout/additional.rst:514
msgid ""
"See :doc:`Buildout troubleshooting </troubleshooting/buildout>` chapter."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:3
msgid "Understanding buildout.cfg"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:7
msgid "How to manage the main buildout configuration file"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:10
msgid ""
"**Important note:** This document applies to Plone 3.2 onwards. In Plone "
"versions prior to 3.2 the vanilla buildout.cfg file was significatively "
"different because Plone wasn't fully eggified."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:14
msgid ""
"*buildout.cfg* is the most important file in your new buildout environment. "
"Here is how it looks:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:93
msgid "Let us walk through this file step-by-step:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:96
msgid "The main [buildout] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:98
msgid ""
"The *[buildout]* section is the starting point for the file. It lists a "
"number of \"parts\", which are configured in separate sections later in the "
"file. Each *part* has an associated *recipe*, which is the name of an egg "
"that knows how to perform a particular task, e.g. build Zope or create a "
"Zope instance. A recipe typically takes a few configuration options."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:105
msgid "Our global settings are as follows:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:124
msgid ""
"This specifies that the parts *zope2*, *productdistros*, *instance* and "
"*zopepy* will be run, in that order. Then, we tell buildout that it can "
"search one of a number of URLs when it is looking for eggs to download. In "
"addition, it will always search the Cheese Shop."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:130
msgid ""
"Note that configuration entries are commonly split into multiple lines. For "
"this to work, all lines after the first must begin with **at least 4 "
"spaces**."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:134
msgid ""
"Next, we can list any eggs that buildout should download and install for us."
" This may include version specifications. For example, if you want "
"sqlalchemy 0.3, but not 0.4, you could list;"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:143
msgid ""
"Please note that you will need the Python Imaging Library (PIL) for Plone to"
" work. This example assumes that you have this library already installed and"
" available from your Python interpreter, but otherwise you can install a "
"slightly modified (to workaround some common problems) version from the "
"\"thirdparty\" Plone repository in your buildout adding its name to the eggs"
" list:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:154
msgid "And the full path to the package in the find-links, e.g.:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:160
msgid ""
"Finally, we can list development eggs, by specifying a directory where the "
"egg is extracted in source format. For example:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:171
msgid ""
"This presumes that there is an egg called *my.package* in the *src/* "
"directory. We will learn how to create such eggs a little later in this "
"tutorial. Notice how we must also list my.package as an actual egg "
"dependency: development eggs are not automatically added to the \"working "
"set\" of eggs that are installed for Zope."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:178
msgid "The *extends* and *versions* lines"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:180
msgid ""
"This part was introduced with Plone 3.2. It references a remote file where "
"the version of each needed package is specified. Check that remote file to "
"see yourself how these dependencies are specified."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:192
msgid ""
"If you want to use a local file instead of a remote one to be able to work "
"offline, download it to your buildout directory and reference it like this:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:201
msgid "The [zope2] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:203
msgid ""
"This part builds Zope 2, using `plone.recipe.zope2install "
"<http://cheeseshop.python.org/pypi/plone.recipe.zope2install>`_. If you "
"specified an existing Zope installation, you will not have this part. "
"Otherwise, it looks like this:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:214
msgid ""
"Here, we reference the download location for Zope as present in the versions"
" file. This ensures that we always get the recommended version of Zope. You "
"could specify a download URL manually instead, if you wanted to use a "
"different version of Zope."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:219
msgid ""
"When the recipe is run, Zope 2 is installed in *parts/zope2*. The Zope "
"software home becomes *parts/zope2/lib/python*."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:223
msgid "The [productdistros] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:225
msgid ""
"This uses the `plone.recipe.distros "
"<http://cheeseshop.python.org/pypi/plone.recipe.distros>`_ recipe, which is "
"able to download distributions (archives) of Zope 2 style products and make "
"them available to Zope. It is empty to begin with:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:239
msgid ""
"However, you can list any number of downloads. The recipe is also able to "
"deal with archives that contain a single top-level directory that contains a"
" bundle of actual product directories (*nested-packages*), or packages that "
"have a version number in the directory name and thus need to be renamed to "
"get the actual product directory (*version-suffix-packages*)."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:246
msgid "Consider the following distributions:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:279
msgid ""
"Here is what the part would look like if we try to install the three "
"distributions above:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:293
msgid ""
"You can specify multiple downloads on separate lines. When the recipe is "
"run, the product directories for downloaded products are found in "
"*parts/productdistros*."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:298
msgid "The [instance] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:300
msgid ""
"The instance section pulls it all together: It configures a Zope instance "
"using the `plone.recipe.zope2instance "
"<http://cheeseshop.python.org/pypi/plone.recipe.zope2instance>`_ script. "
"Here is how it looks:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:326
msgid ""
"Here, we reference the Zope 2 installation from the *[zope2]* part - if you "
"specified a location yourself when creating the buildout, you would see that"
" one here. Then, we specify the initial admin user and password used only "
"when creating the initial database, and the port that Zope will be bound to."
" We also turn on debug mode and verbose security. They are useful for "
"development, but remember to turn them off in production sites since they "
"can compromise the security of your site. These options are used to generate"
" an appropriate *zope.conf* file for this instance. See the `recipe page in "
"the Cheese Shop "
"<http://cheeseshop.python.org/pypi/plone.recipe.zope2instance>`_ for more "
"details on the options available."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:338
msgid ""
"Next, we specify which eggs that will be made available to Zope. This "
"references the \"global\" eggs from the *[buildout]* section, as well as "
"Plone itself. You could add additional eggs here, though it is generally "
"easier to specify these at the top of the file, so that they get included in"
" the *${buildout:eggs}* working set."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:344
msgid ""
"Zope 3 *configure.zcml* files are not automatically loaded for eggs or "
"packages that lack *z3c.autoinclude* support and are not in the *Products* "
"namespace. To load ZCML files for a regular package, we can make buildout "
"create a ZCML slug by listing the package under the *zcml* option:"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:356
msgid ""
"This assumes that *my.package* was previously referenced in the buildout. "
"This would load both the main *configure.zcml*and the *overrides.zcml* file "
"from this package. Over time, the need for these entries should diminish, as"
" *z3c.autoinclude* support becomes widespread."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:362
msgid ""
"Finally, we list the various directories that contain Zope 2 style products "
"- akin to the *Products/* directory in a traditional instance. Notice how "
"the *products/* directory in the main buildout directory comes first, "
"followed by the products downloaded with the *[productdistros]* part."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:368
msgid ""
"When the recipe is run, the Zope instance home will be *parts/instance*, and"
" a control script is created in *./bin/instance*."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:373
msgid "The [zopepy] section"
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:375
msgid ""
"This final section creates a Python interpreter that has all the eggs and "
"packages (but not Zope 2 style products) that Zope would have during "
"startup. This can be useful for testing purposes."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:388
msgid ""
"Here, we copy the eggs from the *[instance]* section, and include in the "
"pythonpath the Zope instance home."
msgstr ""

#: ../../reference_manuals/old/buildout/buildoutcfg.rst:391
msgid "When the recipe is run, the script will be created in *./bin/zopepy*."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:3
msgid "Creating a buildout for your project"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:7
msgid ""
"How to create a new buildout for a project, adding Plone and other third "
"party products as dependencies"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:10
msgid ""
"We are now ready to create a new buildout. The \"buildout\" is a directory "
"containing all the parts that make up a project, including a Zope instance, "
"the Plone sources, custom configuration options, and your our project's "
"source code."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:18
#: ../../reference_manuals/old/buildout/prerequisites.rst:12
msgid ""
"As of Plone 3.2, all of the Plone installers are buildout based. You can get"
" the latest `installer`_ and run it to have a working buildout without "
"having to follow these steps. However, these steps are still valid if you "
"want to create the buildout manually with ZopeSkel."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:24
msgid "Create one like this:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:30
msgid ""
"This will ask a series of questions. If you want to use an existing "
"installation of Zope rather than have buildout download and compile one for "
"you, specify an absolute path as the *zope2\\_install*. Similarly, if you do"
" not want buildout to download the core Plone products, you can point it to "
"an existing directory containing all the products (it will still download "
"Plone 3's eggs, but as we will see later, it is possible to share an eggs "
"directory among multiple buildouts). You will need to enter a Zope "
"administrator username and password, and you may want to turn debug mode and"
" verbose security *on* during development."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:41
msgid ""
"Now, enter the newly created myproject directory, and run the buildout "
"bootstrap script.  NOTE: Python 2.4 is currently required to Plone 3.x:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:50
msgid ""
"This will create a number of directories and scripts and download the latest"
" version of the zc.buildout egg. This step should be needed only once."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:54
msgid "To get started straight away, run:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:60
msgid ""
"This reads the generated buildout.cfg file and executes its various "
"\"parts\", setting up Zope, creating a Zope instance, downloading and "
"installing Plone. We will explain this file in more detail shortly."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:65
msgid ""
"You will need to run *./bin/buildout* again each time you change "
"*buildout.cfg*. If you do not want buildout to go online and look for "
"updated versions of eggs or download other archives, you can run it in non-"
"updating, offline mode, with;"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:74
msgid "To start Zope in foreground and debug mode, run:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:80
msgid ""
"The *instance* script is analogous to *zopectl* as found in a standard Zope "
"instance. You can use *./bin/instance start* to run Zope in daemon mode. It "
"can also be used to run tests:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:88
msgid "Running:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:94
msgid ""
"is equivalent to *bin/instance fg*, but does not implicitly turn on debug "
"mode but respects the *debug-mode* setting in *buildout.cfg*. This can be "
"useful to run Zope in non-development mode with daemon-control programs like"
" supervisord."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:99
msgid ""
"Once your buildout installation is up and running, you will still need to "
"install a Plone site.  Log in to the Zope Management Interface (ZMI) and "
"from \"select type to add...\" choose Plone Site.  Fill in the required "
"details and submit.  Now you have a Plone site at the ID that you specified."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:106
msgid "Directories in the buildout"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:108
msgid ""
"Before we dive into buildout.cfg, let us take a quick look at the "
"directories that buildout has created for us:"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:112
msgid "bin/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:112
msgid ""
"Contains various executables, including the *buildout* command, and the "
"*instance* Zope control script."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:116
msgid "eggs/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:115
msgid ""
"Contains eggs that buildout has downloaded. These will be explicitly "
"activated by the control scripts in the *bin/* directory."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:118
msgid "downloads/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:119
msgid "Contains non-egg downloads, such as the Zope source code archive."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:128
msgid "var/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:121
msgid ""
"Contains the log files (in *var/log/*) and the file storage ZODB data (in "
"*var/filestorage/Data.fs*). Buildout will never overwrite these. If you want"
" to import a .zexp file, place it in the *var/instance/imports* folder. "
"Previously one had to put that file into *parts/instance/import*, but this "
"folder gets wiped and regenerated when running *bin/buildout*, so the import"
" location was changed."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:131
msgid "src/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:131
msgid ""
"Initially empty. You can place your own development eggs here and reference "
"them in *buildout.cfg*. More on that later."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:138
msgid "products/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:134
msgid ""
"This is analogous to a Zope instance's *Products/* directory (note the "
"difference in capitalisation). If you are developing any old-style Zope 2 "
"products, place them here. We will see how buildout can automatically "
"download and manage archives of products, but if you want to extract a "
"product dependency manually, or check one out from Subversion, this is the "
"place to do so."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:143
msgid "parts/"
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:141
msgid ""
"Contains code and data managed by buildout. In our case, it will include the"
" local Zope installa TRUNCATED! Please download pandoc if you want to "
"convert large files."
msgstr ""

#: ../../reference_manuals/old/buildout/creating.rst:147
msgid ""
"You can check in a buildout directory to a source code repository to share "
"it  among developers. In this case, you should ignore the directories bin/, "
"eggs/, downloads/, var/, and parts/. Each developer can run bootstrap.py to "
"get these back, and will normally need local copies anyway. All your "
"configuration should be in the buildout.cfg file, and all custom code in "
"src/ or products/."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:3
msgid "Creating a new package"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:7
msgid ""
"Adding a new custom package is not much different from installing a third-"
"party one."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:12
msgid "Creating a traditional Zope 2 product"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:14
msgid ""
"To create a traditional Zope 2 product, put it in the top-level *products/* "
"directory and re-start Zope. Nothing more should be required. As explained "
"previously, products placed here will be found automatically at start-up, "
"and their *configure.zcml* files will be executed automatically."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:21
msgid "Creating an egg"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:23
msgid ""
"Of course, if you are using products, you cannot benefit from the additional"
" features of eggs, including automatic dependency management, distribution "
"via the Cheese Shop and nested namespaces."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:28
msgid ""
"The easiest way to create a new egg is to use the *paster*command, which we "
"already used to create the buildout. To create a new basic package, with a "
"top-level namespace (e.g. your company name) and a specific name, go to the "
"*src/* directory and run:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:38
msgid ""
"You will be asked a series of questions. Make sure that the namespace "
"package and package name correspond to the name of the egg. In this case, "
"the namespace package is *myorg* and the package name is *mypackage*. In "
"general, answer *False* to the question on whether your package if \"zip "
"safe\". Enter other metadata as requested."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:45
msgid "You will now have:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:48
msgid "A *setup.py* which contains the metadata you entered"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:49
msgid ""
"A package in *myorg.mypackage/myorg/mypackage*. Your source code goes here."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:51
msgid ""
"A skeleton *configure.zcml*, tests.py and a few other useful starting "
"points."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:53
msgid "Some generic documentation in *myorg.mypackage/docs*."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:55
msgid ""
"Of course, you must also add this package to the buildout. In "
"*buildout.cfg*, you might have:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:69
msgid ""
"Unless you plan to include this package from another one (or use automatic "
"ZCML loading, explained below), you probably also need a ZCML slug:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:80
msgid "Do not forget to re-run buildout after making the change:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:87
msgid "Automate ZCML loading for your package"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:89
msgid ""
"If you're not including your package from another one, you can still avoid "
"having to include a ZCML slug in *buildout.cfg* for it. This is particulary "
"useful to avoid unneccessary repetition of package names in *buildout.cfg*, "
"which beginner integrators might easily overlook. From Plone 3.3 on, you can"
" make your packages signal that their ZCML should be included by adding:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:104
msgid ""
"to their *setup.py* file. For further information, see the `setuptools "
"documentation about dynamic discovery of services and plugins "
"<http://peak.telecommunity.com/DevCenter/setuptools#dynamic-discovery-of-"
"services-and-plugins>`_.` "
"<http://peak.telecommunity.com/DevCenter/setuptools#id19>`_"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:108
msgid "Specifying dependencies"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:110
msgid ""
"If your new package has explicit dependencies, you can list them in "
"*setup.py*. That way, buildout will be able to download and install these as"
" well. Dependencies are listed in the *install\\_requires* argument to the "
"*setup()* method, By default, *setuptools*is listed here, since we need this"
" to support namespace packages. To add *sqlalchemy*0.3 (but not 0.4), and "
"the *MySQL-Python* driver, you could amend this to read:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:127
msgid "Uploading your egg to the Cheese Shop"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:129
msgid ""
"If you want to share your package with the rest of the Python community and "
"make it easy to install using tools like buildout and *easy\\_install*, you "
"can upload the package to the Cheese Shop."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:133
msgid "Before doing so, you should:"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:136
msgid ""
"Commit your latest changes and tag the release in Subversion, if applicable."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:138
msgid ""
"Make sure the version number in *setup.py* is correct. This should use "
"common conventions such as \"1.0b2\" for the second beta of version 1.0, or "
"\"2.1.3rc1\" for the first release candidate of version 2.1.3."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:142
msgid ""
"If you are using Mac OS X, run export "
"COPY\\_EXTENDED\\_ATTRIBUTES\\_DISABLE=true on the shell first - otherwise, "
"the egg will contain Mac OS X resource forks which cause problems if your "
"egg is used on Windows."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:147
msgid ""
"When you are ready, run the following command from your package's directory "
"(e.g. *src/myorg.mypackage*):"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:154
msgid ""
"This will ask you to create a Cheese Shop account if you do not have one "
"already. You can run this command as often as you'd like to release a new "
"version (probably with a new version number)."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:160
msgid "Creating development releases"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:161
msgid ""
"When working on a project, you might want to generate development releases "
"of a project to push to a staging server. Instead of increasing the version "
"number in the ``setup.py`` file each time, you can use the ``egg_info`` "
"command to name the release appropiately."
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:166
msgid "For a complete list of the available options, run::"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:170
msgid ""
"If you're using subversion for version control, you can use the revision "
"numbers. For example, this will generate a targz package in the ``dist`` "
"folder named ``your.package-rXXXX``, where ``XXXX`` is a revision number::"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:177
msgid "If you do nightly releases, tagging with the date is a good option::"
msgstr ""

#: ../../reference_manuals/old/buildout/creatingpackage.rst:181
msgid ""
"If you don't want to enter the full command everytime you make a release, "
"you can use the setup.cfg file to set the defaults. For example:"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:3
msgid "Creating a buildout defaults file"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:8
msgid ""
"This makes it possible to share configuration across multiple buildouts, and"
" save some time and disk space."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:11
msgid ""
"To set \"global\" options affecting all buildouts, create a directory "
"*.buildout* (note leading dot) in your home directory, and add a file there "
"called *default.cfg*. Any option set here will be applied to the "
"corresponding section in any *buildout.cfg that you run, unless it is "
"overridden by a more specific option in the *buildout.cfg* file itself."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:20
msgid ""
"Windows may error when creating the *.buildout* directory with \"You must "
"type a file name\" due to the leading dot. This directory can be created "
"using the command line. Once created, it can be accessed normally in the "
"Windows gui."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:25
msgid "The most common options are:"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:29
msgid "executable"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:28
msgid ""
"Specify a python interpreter other than the system default. This is useful "
"if you have Python 2.5 installed, say, but you want your buildouts to use "
"another installation of Python 2.4."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:36
msgid "eggs-directory"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:32
msgid ""
"Specify a directory where eggs will be downloaded. This allows multiple "
"buildouts to share the same eggs, saving disk space and download time. Note "
"that only those eggs explicitly required by a particular buildout will be "
"activated. The eggs directory may contain many more eggs (or many different "
"versions of the same package) than what is used at any one time."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:40
msgid "download-cache"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:39
msgid ""
"Specify a shared directory for downloaded archives. Again, this can save "
"disk space and download time. NOTE: before zc.buildout 1.0, this was called "
"download-directory"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:47
msgid "extends-cache"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:43
msgid ""
"Specify a shared directory for extended buildout configurations that are "
"downloaded from a URL. As of Plone 3.2 this is how Plone pins the "
"`versions`_ of its eggs. This option was added in `zc.buildout 1.4.1`_, "
"prior to that the offline mode in combination with a extends URL would not "
"work."
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:49
msgid "Here is an example *~/.buildout/default.cfg* setting all three:"
msgstr ""

#: ../../reference_manuals/old/buildout/defaults.rst:59
msgid ""
"This assumes Python 2.4 is installed in */opt/python2.4*. For the last two "
"options to work, you would need to create the directories *eggs* and "
"*downloads* inside the *~/.buildout* directory."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:3
msgid "A deployment configuration"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:7
msgid "How to use buildout for deployment configuration"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:9
msgid ""
"Finally, let's take a look at a more advanced configuration, better suited "
"for deployment. Save this file as *deployment.cfg*, at the root of the "
"buildout next to the main *buildout.cfg* file:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:59
msgid "Here, we are:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:62
msgid ""
"Referencing the main *buildout.cfg* file, extending and overriding it with "
"configuration more appropriate for deployment."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:64
msgid ""
"Setting up a ZEO server with two client instances, instance**and *debug-"
"instance* (see `plone.recipe.zope2zeoserver`_ and "
"`plone.recipe.zope2instance`_ for more details)"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:67
msgid ""
"Compiling the Varnish cache server (see `plone.recipe.varnish`_ for more "
"details)."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:70
msgid ""
"By combining buildout configuration files like this, you can create tailor-"
"made configurations for different deployment scenarios. To learn more about "
"the advanced features of buildout, see `its documentation`_."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:75
msgid ""
"To build this environment, you must explicitly specify a configuration file:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:82
msgid ""
"To start Zope and Plone, you will need to start the ZEO server, the instance"
" and the Varnish server:"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:91
msgid ""
"If you need to bring up an instance for debugging then you can start up the "
"*debug-instance* in foreground mode."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:98
msgid ""
"The recipes will also create scripts to back up the ZODB filestorage (in "
"*./bin/repozo*) and to pack the database (in .*/bin/zeopack*)."
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:103
msgid "Further options"
msgstr ""

#: ../../reference_manuals/old/buildout/deployment.rst:105
msgid ""
"``zc.buildout`` is a very flexible system. It is relatively easy to create "
"new recipes, and you can combine existing recipes in powerful ways. Search "
"the `Cheese Shop for \"buildout\"`_ to find more recipes, or take a look at "
"the `source code for some of Plone's own recipes`_ to understand how recipes"
" are created."
msgstr ""

#: ../../reference_manuals/old/buildout/index.rst:3
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:17
msgid "Buildout"
msgstr ""

#: ../../reference_manuals/old/buildout/index.rst:7
msgid ""
"Buildout is a tool used to make site configuration repeatable and automatic."
" It will download and configure software for you."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:7
msgid "Or: \"What's wrong with a plain old Zope instance\"?"
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:9
msgid ""
"This tutorial shows how to install Plone 3 into a *buildout*, and how to use"
" that buildout when working on a software project that extends Plone. A "
"buildout is a self-contained environment where you can manage the "
"dependencies (including Zope and Plone and any third-party products or "
"libraries you need) and custom code for your project. Even if you are not "
"planning on writing any custom code, the buildout approach is an easy way to"
" install Plone in a robust, well-tested manner.  As of Plone 3.2, all of the"
" installers are now buildout based."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:19
msgid ""
"Prior to Plone 3.0, most developers and users who did not use a GUI "
"installer, would set up a Zope instance, drop in a few products into the "
"*Products* folder, and be done with it. Unfortunately, this approach has a "
"few problems:"
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:25
msgid ""
"Plain old Zope instances are not very well equipped to deal with packages "
"distributed as python *eggs* or using setuptools *namespace packages*. Many "
"new packages in Plone 3 are made in this way, and more and more third party "
"modules will be as well."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:29
msgid ""
"Without access to the metadata that is held in eggs, developers may find it "
"too time-consuming or confusing to factor their work into multiple packages "
"that are more re-usable, preferring monolithic products that are impossible "
"to re-use outside Zope."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:33
msgid ""
"Without any further tools, it is cumbersome to repeat a setup across "
"different environments."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:36
msgid ""
"As eggs become more important, developers should look to employ more "
"appropriate tools for managing their code. **zc.buildout**, hereafter "
"referred to only as \"buildout\" is one such tool. This tutorial shows how "
"to use buildout for day-to-day development as well as deployment."
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:43
msgid "More buildout documentation and background"
msgstr ""

#: ../../reference_manuals/old/buildout/introduction.rst:45
msgid ""
"Buildout was created by Jim Fulton of Zope Corporation, and is documented in"
" depth at: `http://buildout.org/`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:3
msgid "Packages, products and eggs"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:7
msgid "Looking at the core concepts in more detail"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:12
msgid "Before we begin, you should familiarize yourself with these terms:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:15
msgid "`Software home`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:16
msgid "`Zope instance`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:17
msgid "`Python path`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:18
msgid "`Python package`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:19
msgid "`Zope product`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:20
msgid "`Python egg`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:21
msgid "`The Python Package Index`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:22
msgid "`easy\\_install`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:23
msgid "`Namespace package`_"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:26
msgid "The magic Products namespace"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:28
msgid ""
"When Zope finds a \"product\", it will create an entry in "
"*Control\\_Panel/Products* in the root of the ZMI, and run the "
"*initialize()* method, found in the product's root *\\_\\_init\\_\\_.py* "
"file, each time Zope starts up. Not every package used in a Plone context "
"needs to be a product, but \"productness\" is required for:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:36
msgid "GenericSetup profiles"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:37
msgid ""
"Skin directories being installed as layers in the *portal\\_skins* tool (but"
" *not* for Zope 3-style browser views)"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:40
msgid ""
"The easiest way to create a product is to use Paster/ZopeSkel to create an "
"egg-ready package in the *Products.\\** namespace using the "
"*basic\\_namespace* template:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:58
msgid ""
"If you're using buildout, create your package in the *src* directory, and "
"add references to it in the develop and instance/eggs sections of "
"buildout.cfg:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:74
msgid ""
"Run bin/buildout and you'll be set up to develop your egg-ready product in "
"the *src* directory. Turn it into a distribution egg when complete."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:78
msgid ""
"It is possible to use packages (including egg-distributed ones) outside the "
"*Products* namespace/directory as Zope 2 products. Many developers prefer "
"this approach, feeling it is unnatural to keep everything in a single, "
"\"flat\" namespace."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:83
msgid ""
"Extra steps are required for this. Prior to Zope 2.10.4, this is also "
"required for products in the *Products* namespace"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:86
msgid ""
"We must add a line like the following to the package's *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:101
msgid ""
"Secondly, it is important to realize that packages outside the *Products* "
"namespace are not automatically detected when Zope starts up. If they "
"contain *configure.zcml* files (as most packages will do), this must be "
"explicitly included from somewhere. This may be:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:107
msgid "Another package's configure.zcml file."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:108
msgid ""
"Zope's site.zcml, the root of all ZCML files, which is found in the *etc* "
"directory in the instance home."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:110
msgid ""
"A ZCML :term:`Slug`, a one-liner created in the zope instance's *etc"
"/package-includes* directory, with a name like *my.package-configure.zcml*."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:114
msgid "In all cases, the syntax is the same:"
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:120
msgid ""
"If you have *meta.zcml* or *overrides.zcml* files, you can add *<include />*"
" directives for these as well. If you are using slugs, it must be named "
"accordingly, e.g. *my.package-meta.zcml* or *my.package-overrides.zcml*. A "
":term:`Slug` can not contain more than one line."
msgstr ""

#: ../../reference_manuals/old/buildout/packages.rst:126
msgid ""
"Later in this tutorial, we will show how buildout can manage slugs for us "
"automatically."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:7
msgid "A few things you need before we can get started."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:9
msgid ""
"Before we can create a buildout to manage Zope and Plone, there are a few "
"prerequisites to take care of."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:18
msgid ""
"First, you will need an appropriate Python interpreter, if you do not have "
"one already:"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:22
msgid ""
"Install `Python 2.4`_ for your platform, and add it to your system *PATH*. "
"It is easiest if Python 2.4 is what you get when you type *python -V* on a "
"command line. Make sure you're using Python 2.4 and not 2.5, since Plone 3.x"
" doesn't support Python 2.5 or later. You might need to type *python2.4* "
"instead of just *python* when running some of the following commands."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:28
msgid ""
"If you installed Python using an operating system package (e.g. an RPM), "
"make sure you get the development package (e.g. python-devel) as well. This "
"includes Python header files that we will use later to compile Zope. If you "
"installed from source, or used the Python Windows installer, you should "
"already have these."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:33
msgid ""
"Install `PIL`_, the Python Imaging Library into this Python interpreter."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:35
msgid ""
"Install `setuptools`_. If you're using Linux and your distribution doesn't "
"provide a package for setuptools, download `ez\\_setup.py`_ and run it with:"
" ::"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:42
msgid ""
"This will download and install setuptools and the *easy\\_install* script. "
"Watch the console output to understand where *easy\\_install* is installed. "
"If this is not in your system *PATH*, you should add this directory to the "
"path as well."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:48
msgid ""
"Finally, use *easy\\_install* to get *ZopeSkel*, a collection of skeleton "
"templates for Zope and Plone development:"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:55
msgid "This will get *Paste Script* and various other dependencies."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:57
msgid ""
"Linux note: If you're installing setuptools and ZopeSkel system-wide, you "
"will probably need to become superuser or use sudo, if you're not using "
"virtualenv or similar. But please note that bin/buildout (introduced later) "
"should never be run as root. If you really can't avoid running this script "
"as root, don't forget to change the owner of created files (chown -R) so the"
" unprivileged user that runs the zope instance will be able to read those "
"files."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:65
msgid ""
"If you added the Python console scripts directory (where *easy\\_install* "
"was placed) to your system path, you should now be able to run the *paster* "
"command. You can test it with:"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:95
msgid ""
"Your output may differ slightly, but make sure you have the "
"*plone3\\_buildout* and *plone* templates at least."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:99
msgid "Additional installation steps for Windows"
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:101
msgid "If you are using Windows, there are a few more things you need to do."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:104
msgid "First, get and install the `Python Win32 extensions`_ for Python 2.4."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:107
msgid ""
"If you intend to compile Zope yourself, rather than using a binary "
"installer, or if you ever need to compile an egg with C extensions, you will"
" need the `mingw32 compiler`_. Make sure you choose the \"base\" and "
"\"make\" modules at a minimum when the installer asks. By default, this "
"installs into *C:\\\\MingW32*. Inside the installation directory, there will"
" be a bin directory, e.g. *C:\\\\MingW32\\\\bin*. Add this to your system "
"*PATH*."
msgstr ""

#: ../../reference_manuals/old/buildout/prerequisites.rst:115
msgid ""
"Finally, you need to configure Python's *distutils* package to use the "
"mingw32 compiler. Create a file called *distutils.cfg* in the directory "
"*C:\\\\Python24\\\\Lib\\\\distutils* (presuming Python was installed in "
"*C:\\\\Python24*, as is the default). Edit this with Notepad, and add the "
"TRUNCATED! Please download pandoc if you want to convert large files."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:3
msgid "Useful buildout recipes"
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:7
msgid ""
"A list of the most common and useful buildout recipes used when working with"
" Plone."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:10
msgid ""
"The list is more or less sorted by topic. Check all available recipes `at "
"PyPI`_."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:14
msgid ""
"`zc.recipe.egg`_ - Installs eggs into a buildout eggs directory. It also "
"generates scripts in a buildout bin directory with egg paths baked into "
"them."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:17
msgid ""
"`infrae.subversion`_ - This zc.buildout recipe will check out a *number* of "
"URLs into its parts directory. It won't remove its parts directory if there "
"are any changes in the checkout, so it's safe to work with that checkout for"
" development."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:21
msgid ""
"`plone.recipe.zope2install`_ - Installs Zope 2, i.e. its Python libraries "
"and scripts, but doesn't create any instance."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:23
msgid ""
"`plone.recipe.zope2instance`_ - Creates and configures a Zope 2 instance in "
"parts. It also installs a control script, which is like zopectl, in the bin/"
" directory."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:26
msgid ""
"`plone.recipe.zope2zeoserver`_ - This recipe creates and configures a Zope 2"
" ZEO server in parts. It also installs a control script, which is like "
"zeoctl, in the bin/ directory."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:29
msgid ""
"`plone.recipe.distros`_ -  Installs distributions, i.e. Zope products not "
"packaged as eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:31
msgid "`plone.recipe.apache`_ - Builds and configures the Apache web server."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:33
msgid "`gocept.nginx`_ - zc.buildout recipe for configuring an nginx server"
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:35
msgid ""
"`plone.recipe.varnish`_ - Installs the Varnish reverse-cache proxy. It works"
" for non-Zope sites as well."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:37
msgid ""
"`plone.recipe.squid`_ - Installs the Squid proxy. It works for non-Zope "
"sites as well."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:39
msgid ""
"`collective.recipe.omelette`_ - Creates a unified directory structure of all"
" namespace packages, symlinking to the actual contents, in order to ease "
"navigation."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:42
msgid ""
"`collective.recipe.i18noverrides`_ - Creates an i18n directory within one or"
" more Zope 2 instances in your buildout. It copies some .po files to those "
"directories. The translations in those .po files will override any other "
"translations."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:46
msgid ""
"`zc.recipe.cmmi`_ - The Configure-Make-Make-Install recipe automates "
"installation of configure-based source distribution into buildouts."
msgstr ""

#: ../../reference_manuals/old/buildout/recipes.rst:49
msgid ""
"`plone.recipe.command`_ - Execute arbitrary commands in buildout through "
"os.system."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:3
msgid "Installing products from Subversion"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:7
msgid ""
"Sometimes Plone products are not eggified, but available only in Subversion "
"version control repository. This how to tells how such product can be "
"automatically installed in buildout installations."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:12
msgid ""
"A few buildout recipes provide direct version control checkout "
"functionality:"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:16
msgid ""
"`plone.recipe.bundlecheckout`_ - recipe provides Subversion (and CVS) "
"downloads. Always does checkout - not suitable if you change files."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:19
msgid ""
"`mr.developer`_ -  a zc.buildout extension which makes it easier to work "
"with buildouts containing lots of packages of which you only want to develop"
" some."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:23
msgid "`infrae.subversion`_ - can do SVN update"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:25
msgid "In this example we use the later."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:30
msgid ""
"Add the *infrae.buildout* recipe to your *buildout.cfg*. Adding a recipe "
"means adding a new line to [*buildout] parts=...myrecipename* at the "
"beginning of the file and then later a corresponding *[mypartname] recipe = "
"xxx.yyy* section."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:50
msgid ""
"List all the URLs of the products you want in *svnproducts* section. In the "
"example below we checkout TickingMachine product."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:63
msgid ""
"In the case you're installing an old product (not eggified) you will also "
"need to register it in the *[products]* section so that they get added to "
"your Python path:"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:75
msgid ""
"After rerunning buildout, TickingMachine will be found under parts"
"/development-products folder."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:82
msgid "`infrae.subversion: a recipe against disaster`_"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:83
msgid ""
"Note that pointing to trunk is only a good practice for active development. "
"Anyone else that needs to use this technique should point to a tag or branch"
" URL."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:88
msgid "Certification errors and passwords"
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:90
msgid ""
"Self-signed certificates are often used with Subversion repositories. Since "
"*infrae.subversion* is made for automatization, it cannot accept security "
"decisions for the user. So if you are receiving certification validation "
"errors and password prompts, please access the Subversion repository first "
"manually using svn command. Accept the choice and the svn client will "
"remember this in your user account home folder. It is recommended not to use"
" your commit account for this, since storing passwords is insecure."
msgstr ""

#: ../../reference_manuals/old/buildout/subversion.rst:99
msgid ""
"Here's an example about how to access a SVN repository using the *svn ls* "
"command and accepting the security decisions for the svn client to remember "
"them permanently:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:3
msgid "Installing a third party product"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:7
msgid "How to install a new package using these tools"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:10
msgid ""
"How to install a new third-party products will depend on whether it is "
"packaged as an egg, or a traditional Zope 2 product."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:14
msgid "Installing eggs"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:16
msgid ""
"So long as an egg has a release in the `PyPi <http://pypi.python.org/pypi>`_"
" or elsewhere, buildout can download and install it, including any "
"explicitly specified dependencies. Simply list the egg, and optionally a "
"version (otherwise, you get the latest available), in the *eggs* option."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:30
msgid ""
"If you want buildout to search an index other than PyPi's, you can add a URL"
" to *find-links* that contains download links for the eggs. In fact, we have"
" already seen an example of this: *elementtree* is found at "
"*http://effbot.org/downloads*, not in PyPi directly. Thus, we have:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:50
msgid ""
"We have also listed some of the download locations for Zope and Plone eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:53
msgid "Again - re-run buildout for the changes to take effect:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:60
msgid "Development eggs"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:62
msgid ""
"If there is not a release for your egg, or you want to track an egg in "
"Subversion, check it out to the *src/* directory. Make sure you get the full"
" egg, including the top-level *setup.py* file. For example, to get the "
"*plone.portlets* trunk development, egg do:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:72
msgid "Then, add the following to *buildout.cfg*:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:88
msgid ""
"The *develop*option contains a relative path to where the source egg is "
"installed. Buildout will expect to find a suitable *setup.py* in this "
"directory."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:91
msgid "Development eggs always take precedence over regular eggs."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:92
msgid ""
"You still need to list the egg name in the *eggs* option for it to be "
"installed."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:94
msgid ""
"If you are overriding an egg that ships with Plone, you may need to list it "
"in the eggs section of the *[plone]* part instead:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:111
msgid ""
"This is because *plone.recipe.plone* is very explicit about which versions "
"of its various eggs to use, to ensure Plone keeps running as it was "
"released."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:115
msgid ""
"Buildout recipes (such as *plone.recipe.plone*) are distributed as eggs. You"
" can use a development egg of a recipe by listing it under the *develop* "
"option. There is no need to explicitly list it under the *eggs* option, "
"since it is referenced by the *recipe* option of the relevant part."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:122
msgid "Installing a traditional Zope 2 product"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:124
msgid ""
"The easiest way to try out a traditional Zope 2 product is to extract it "
"into the *products*/ folder inside the buildout. If you see documentation "
"referring to the *Products/* folder in a Zope instance, this is the same "
"thing."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:129
msgid ""
"However, this approach makes it harder to redistribute your project and "
"share it with other developers. It is often more predictable to let buildout"
" download and install the package for you. You can do this with the "
"*[productdistros]* section of *buildout.cfg*. For example, here is how you "
"might install a product named *ExampleProduct* and a set of products named "
"*ExampleProductBundle*:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:148
msgid ""
"Note that our fictional *ExampleProductBundle* is distributed as a single "
"directory containing a number of products in sub-directories, so we list it "
"under *nested-packages*."
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:152
msgid "As always, if you change *buildout.cfg*, you must re-run buildout:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:159
msgid "Managing ZCML files"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:161
msgid ""
"It is important to realize that Zope will not load *configure.zcml* files "
"automatically for packages that are not in the *Products.\\** namespace and "
"lack support for *z3c.autoinclude* (see next page for more on using "
"*z3c.autoinclude*). Instead, you must explicitly reference the package. "
"Buildout can create such a reference (known as a ZCML **slug**) with the "
"*zcml*option under the *[instance]* part. Here is how to ensure that "
"*borg.project* is available to Zope:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:185
msgid ""
"Should you need to load an *overrides.zcml* or a *meta.zcml*, you can use a "
"syntax like:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:196
msgid "Policy products"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:198
msgid ""
"Many developers prefer to create a single \"policy product\" (also known as "
"a \"deployment product\") that orchestrates various dependencies. If you "
"have such a product, you may want to include various dependencies directly "
"from the policy product's *configure.zcml* file, with lines such as:"
msgstr ""

#: ../../reference_manuals/old/buildout/thirdparty.rst:212
msgid ""
"In this case, you may still need one slug (using the *zcml* option as above)"
" for the policy product."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:3
msgid "Converting single process Zope instance to ZEO cluster buildout.cfg"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:10
msgid ""
"See `ZEO <http://plone.org/documentation/manual/installing-plone/installing-"
"on-linux-unix-bsd/to-zeo-or-not-to-zeo>`_."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:12
msgid ""
"See the `plone.app.blob product page "
"<http://plone.org/products/plone.app.blob>`_ for good ZEO configuration "
"examples."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:16
msgid "Steps"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:18
msgid "Use link above for a ``buildout.cfg`` example."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:20
msgid "Changes needed to a single process ``buildout.cfg``:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:22
msgid "Add ``[zeo]`` section:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:34
msgid ""
"Convert ``[instance]`` to ``[client1]``. Add the following new settings:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:43
msgid "Add ``[client2]`` ... ``[clientN]`` sections:"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:61
msgid "Reconfigure ``[buildout]`` parts to include zeo, client1, client2..."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:74
msgid ""
"Change all ``${instance:...}`` references to ``${client1:...}``. Search and "
"replace ``${instance:`` -> ``${client1:``"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:78
msgid "Starting ZEO cluster"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:80
msgid "You need to start ZEO and clients independently"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:82
msgid "bin/zeo start"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:84
msgid "bin/client1 start"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:86
msgid "bin/client2 start"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:88
msgid "etc."
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:91
msgid "Other resources"
msgstr ""

#: ../../reference_manuals/old/buildout/zope_to_zeo.rst:93
msgid ""
"http://blog.twinapex.fi/2008/07/07/zope-zeo-setupconversion-and-zeo-vs-"
"standalone-performance-review/"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:3
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:2
msgid "Customizing the template and the widgets"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:7
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:6
msgid "Hack into the appearance of your form."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:11
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:9
msgid "Customizing the template"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:13
msgid ""
"*plone.app.form* provides a handy default template named ``pageform.pt`` "
"which integrates well with the default Plone skin, but you might need to "
"customize it or write your own one."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:17
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:15
msgid ""
"To do that, override the ``template`` attribute of the form class "
"definition:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:41
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:39
msgid ""
"As already stated, all the view attributes will be available inside the page"
" template, including:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:45
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:42
msgid "**label -** A label to display at the top of the form."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:46
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:43
msgid "**prefix -** A string added to all widget and action names."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:47
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:44
msgid "**form\\_fields -** The list of form's fields."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:48
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:45
msgid ""
"**widgets -** A list of views for the former fields. The widgets are looked "
"up as multiadapters for each schema field and the request providing "
"``IDisplayWidget`` or ``IInputWidget``."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:51
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:48
msgid "**errors -** A list of errors encountered during validation."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:52
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:49
msgid ""
"**error\\_views -** A list of views for the former errors. These views are "
"looked up as multiadapters for each error and the request providing "
"``zope.app.form.browser.interfaces.IWidgetInputErrorView``."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:56
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:52
msgid ""
"**status -** An update status message, normally generated by success or "
"failure handlers."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:58
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:54
msgid "**availableActions -** The list of form's available actions."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:59
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:55
msgid "**template -** The template used to display the form."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:61
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:57
msgid ""
"It's reccommended to start with the default ``pageform.pt`` and customize it"
" cutting, pasting, deleting and entering text and tags."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:65
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:60
msgid "**Using named templates**"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:67
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:62
msgid ""
"Another really zope3-ish method to choose the form template is using the "
"*zope.formlib* named templates. Using named templates can be (and actually "
"is) an overkill if you've designed your template to work with your form "
"class as a single component. But if you write a form class and the template "
"is just a visual customization of that form, you might want to be able to "
"customize the template without having to reimplement the whole class, or let"
" others do so. This is exactly how Plone overrides the default "
"*zope.formlib* template with a more plone-ish one in the *plone.app.form* "
"package."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:78
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:72
msgid ""
"Please note that this approach was not taken in the example product "
"*example.formlib*."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:81
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:75
msgid ""
"Named templates are adapters for the form's view class to "
"``INamedTemplate``, bound to the form class only by their names. This way, a"
" third party product (e.g. a theme) can register a different template with "
"the same name (usually in a different browser skin layer) to override the "
"default one. Moreover, they're very easy to use. Modify and add the "
"emphasized lines:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:108
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:102
msgid ""
"In configure.zcml, add the following snippet to register the named template "
"as an adapter for your form:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:119
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:113
msgid "Name your page template ``feedback_form.pt`` and you're done."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:122
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:116
msgid "Customizing the widgets"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:124
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:118
msgid ""
"As we've already stated earlier, form widgets are views for schema fields, "
"i.e. multiadapters for each schema field and the request providing "
"*IDisplayWidget* or *IInputWidget*, depending on if they display field data "
"or offer editing funcionality to the user."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:129
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:123
msgid ""
"To do so, override the ``custom_widget`` attribute of a field (which "
"defaults to None). Remember how we set up the form's fields:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:143
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:136
msgid ""
"The ``form_fields`` fields are accessible throught a dict-like interface, "
"with the schema field names as keys, so we write:"
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:164
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:157
msgid ""
"Here, we're specifying a custom widget for the subject field: "
"``RadioWidget``, which displays a radio box for every item from the field's "
"vocabulary. The *zope.app.form.browser* and plone.app.form.widgets packages "
"provide a reasonable set of widgets to use and customize, including "
"dropdowns and Kupu/WYSIWYG. Unfortunately, creating new widgets is out of "
"the scope of this tutorial for now."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:172
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:164
msgid ""
"The ``RadioWidget`` function deserves a little explanation. Believe it or "
"not, *zope.formlib* doesn't handle custom widgets with vocabularies (called "
"items widgets) properly, because it calls ``form_field.custom_widget(field, "
"request)`` either the field has an associated vocabulary or not, and item "
"widgets have to be initialized with a vocabulary argument too; so a wrapper "
"function is needed to workaround this issue."
msgstr ""

#: ../../reference_manuals/old/formlib/customtemplate.rst:180
#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:172
msgid "Here's how the improved form looks like:"
msgstr ""

#: ../../reference_manuals/old/formlib/index.rst:3
msgid "Using zope.formlib"
msgstr ""

#: ../../reference_manuals/old/formlib/index.rst:7
msgid ""
"zope.formlib is a zope 3 library to handle forms creation, validation, "
"display and actions. It provides a series of base classes and methods to "
"allow forms to be defined with just a little bit of meta data."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:3
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:2
msgid "Creating a simple feedback form"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:7
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:6
msgid "This section explains how to create a very basic feedback form."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:12
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:8
msgid ""
"The code for this example is available to checkout from the collective as "
"`the *example.formlib* package "
"<http://svn.plone.org/svn/collective/example.formlib/>`_."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:16
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:12
msgid ""
"For all practical sense formlib based components are really regular Zope "
"view components with some convenient base classes for auto-generating output"
" based on schemas and other configuration info. You will see that in a "
"moment."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:21
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:17
msgid "First, define an interface class with the schema of the form:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:43
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:39
msgid ""
"The purpose of this interface is to define the fields of the form. The type "
"of each schema field determines the type of widget that will be used by "
"default for that field, so choose it carefully. To see all the schema fields"
" available, read the zope.schema package's interfaces."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:49
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:44
msgid ""
"Next, create a form instance, which is a class that groups an ordered "
"collection of fields and actions. To do that, simply subclass Five's "
"PageForm class, a wrapper to the formlib Form class to keep Zope 2 happy. "
"Type the following code into a Python file inside your product:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:59
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:53
msgid ""
"You will also need to make use of Five's strange hybrid between Zope 2 and "
"Zope 3 page templates:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:66
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:60
msgid ""
"The simplest way to define a collection of form fields is using the "
"``Fields`` constructor with the previous schema:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:79
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:73
msgid ""
"By inheriting from the ``PageForm`` class, the ``FeedbackForm`` class "
"inherit functionality from formlib itself. By default, ``PageForm`` knows "
"how to generate all the HTML that will make up of a finished form. But in "
"order to do this, formlib needs to know what fields are wanted. This is done"
" by providing the form\\_fields attribute. The ``Fields`` constructor is a "
"formlib helper class that generates the appropriate field items from any "
"Zope 3 schema (in this case, the schema interface defined above)."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:88
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:82
msgid ""
"In order to provide a complete form, you need to specify the action to "
"perform when the \"submit\" button of the form (or any other indicated) is "
"activated. To define the action, use the ``form.action`` decorator with a "
"handler function for the submitted data. More on actions later."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:120
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:113
msgid ""
"This is where the real work takes place. In this example, the "
"``feedback_result.pt`` page template is rendered and returned. All the "
"view's attributes will be available inside this template, which will be "
"introduced later."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:125
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:118
msgid "An example result form is:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:145
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:138
msgid ""
"zope.formlib already includes a default general page form template, with the"
" fields labels, the widgets structures and the submit buttons, so you only "
"have to register your form page with the appropiate ZCML snippet in order to"
" make it accesible from a browser. Assuming you've placed your code into a "
"file named ``browser.py``:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:161
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:153
msgid "Let's explain what this ZCML snippet means:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:163
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:155
msgid ""
"The ``for`` attribute indicates the class or interface this view will be "
"available for; in this case, it will be shown only from the root of a Plone "
"site. To see the interfaces provided by a certain object, fire up the ZMI, "
"navigate up to your object and check the Interfaces tab."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:168
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:160
msgid ""
"The ``name`` attribute sets the name of the view, so the form will be "
"available from a URL with the form ``http://<plone-site>/feedback``."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:171
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:162
msgid ""
"The ``class`` attribute indicates the view class responsible for displaying "
"the page form, in this case, the FeedbackForm class inside the "
"``browser.py`` file."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:174
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:165
msgid ""
"The ``permission`` attribute specify the permission needed to access the "
"page."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:177
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:168
msgid "Among the most used permissions you can find:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:180
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:170
msgid "``zope.Public`` - no restrictions, available to everyone."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:181
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:171
msgid "``zope.View`` - permission to view this component."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:182
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:172
msgid "``zope.ManageContent`` - add, edit and delete content objects."
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:184
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:174
msgid ""
"Note: Keen readers will notice the special name for configuring the new view"
" component, browser:page. This XML tag actually employs an XML namespace "
"prefix which needs to be defined. Normally this is added right onto the "
"configure tag like this:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:197
msgid "And that's all! Here's how the form and result pages will look like:"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:200
#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:186
msgid "**Contact form:**"
msgstr ""

#: ../../reference_manuals/old/formlib/simple.rst:204
msgid "**Result page:**"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:3
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:2
msgid "Adding validation"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:8
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:6
msgid ""
"Server-side form validation is vital to ensure data sanity and protect our "
"site from malicious users."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:13
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:10
msgid "Field validation"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:15
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:12
msgid ""
"Once you've understood the \"hello form\", let's move onto a more advanced "
"topic: validation."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:18
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:15
msgid ""
"The easiest way to manage validation in a formlib-based form is to specify "
"the validation rules in our schema. Actually, you've already implemented "
"some validation: the customer, subject and message fields are required. If "
"you leave the *subject* field empty, for example, and click the *send* "
"button, a pretty red error message will show up asking you to fill that "
"field."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:25
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:22
msgid ""
"Let's add email validation to the *customer* field using the constraint "
"keyword argument fot that attribute in our schema. For simplicity, the mail "
"address checker that comes with the CMFDefault utilities toolbox will be "
"used in this example, althought you could also use your own regular "
"expression checking. The constraint argument must be a callable that returns"
" ``True`` if the value submitted is valid, or raise an exception inheriting "
"from ``zope.schema.ValidationError``, whose docstring will be used in the "
"error message."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:68
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:64
msgid ""
"Now, if you type an invalid address into the *customer* field and click "
"*send*, a kind and colorful error message will be displayed:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:73
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:71
msgid "That was too easy, wasn't it?"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:76
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:74
msgid "Invariants validation"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:78
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:76
msgid ""
"*zope.formlib* also supports the validation of schema invariants, e.g. the "
"min value entered must be smaller than the max value. In this example the "
"form will be extended to provide a set of predefined subjects and a field "
"named *other* which must be filled when selecting the the *Other* option in "
"the subject select dropdown. It's easier to explain it in Python than in "
"English:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:119
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:117
msgid ""
"Here, the *subject* field type has been set to *Choice*, and the list of "
"available values has been indicated to be obtained from the *Available "
"Subjects* vocabulary, a named utility which will be defined shortly."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:124
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:121
msgid ""
"The form will call all the *invariant*-decorated functions of the schema "
"upon validation and catch any raised *Invalid* exceptions."
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:127
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:124
msgid "You still need to define the *Available Subjects* vocabulary:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:142
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:139
msgid ""
"and register it as a named utility using ZCML in the ``configure.zcml`` "
"file:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:156
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:153
msgid ""
"Restart your Zope instance for the changes to take effect and test your new "
"form. You'll see something similar to this:"
msgstr ""

#: ../../reference_manuals/old/formlib/validation.rst:161
#: ../../reference_manuals/old/forms/using_formlib/validation.rst:160
msgid ""
"Unfortunately, invariant errors descriptions are not shown in the default "
"template."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:3
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:2
msgid "Why learn how to use a new framework?"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:7
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:6
msgid ""
"You may be wondering why should you learn how to use a new forms framework "
"if you already know how to use the CMF Form Controller Tool (Form "
"Controller)."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:12
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:9
msgid ""
"Why should you use a forms framework at all? You could always write your own"
" HTML form snippets and use the request dictionary to retrieve and handle "
"data."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:16
msgid ""
"The reason is simple: you'll end up writing a lot of boilerplate code to "
"collect, validate and build the response. It would be better if you could "
"just define the fields and metadata of the form and re-use a set of base "
"classes to do the repetitive work behind the scenes, i.e., a forms "
"framework."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:22
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:19
msgid ""
"One of these frameworks is the Form Controller Tool, which is not bad, but "
"has some disadvantages over formlib:"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:26
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:22
msgid ""
"First, the Form Controller spreads the form logic across several files so it"
" can be hard to follow it."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:28
msgid ""
"Second, the From Controller doesn't handle the creation and display of the "
"widgets, so you have to create them manually, what could become *especially*"
" unmantainable when using choice-type fields."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:32
msgid ""
"Last, the Form Controller doesn't work with Zope 3 schema interfaces nor "
"views. Using a Zope 3 schema can help you creating add and edit forms."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:36
msgid ""
"However, the Form Controller can be useful and even preferable when you need"
" to implement a complex page flow, or if you want to customize Plone forms "
"that use it; e.g. the ''Send this page to someone'' form."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:41
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:35
msgid ""
"Beginning with Zope 2.9.3 (Plone 2.5) zope.formlib is being distributed with"
" Zope 2. Five >= 1.4 is required to make use of this Zope 3 package."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:46
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:39
msgid "Note: Where do I place the code?"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:48
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:41
msgid ""
"You can place the code wherever you want: all in the same file, each class "
"in a file, in several directories, utilities in a ``utilities.py`` file, "
"etc. Just keep in mind two things:"
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:53
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:45
msgid ""
"If you write several pieces of code (functions, classes) in separate files, "
"remember to import them whenever you use them, as you would do in any other "
"Python program."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:56
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:48
msgid ""
"The ZCML statements have to be placed into a file called ``configure.zcml`` "
"in the root of your package, or in any other file included from it."
msgstr ""

#: ../../reference_manuals/old/formlib/why.rst:60
#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:52
msgid ""
"Said that, the author reccommends putting all the Python code in a file "
"named ``browser.py`` in this tutorial to avoid confusion."
msgstr ""

#: ../../reference_manuals/old/forms/index.rst:3
msgid "zope.formlib"
msgstr ""

#: ../../reference_manuals/old/forms/index.rst:7
msgid "How to use zope.formlib library to create forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:2
msgid "Using CMFFormController"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:6
msgid ""
"How to create and validate forms in Plone using its CMFFormController. Be "
"sure to also read the CMFFormController tutorial in the "
"Products/CMFFormController/documentation directory, included with your copy "
"of Plone. This how-to is also available in Products/CMFFormController/www/ "
"as the file docs.stx, included with Plone."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:12
msgid ""
"The CMFFormController package helps developers by simplifying the process of"
" validating forms. It also makes it easier for site administrators to "
"override some of the behavior of packages without modifying code, making it "
"easier to upgrade packages without disturbing the modifications."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:18
msgid "How it works:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:20
msgid ""
"Developers associate a set of default variables for their Page Templates. "
"These variables control the validation that takes place after the form is "
"submitted and the actions that occur after validation. The variables are "
"stored on the filesystem in the .metadata properties file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:25
msgid ""
"Site administrators can override the default validations and actions using "
"the ZMI. Once a set of validations or actions has been specified in the ZMI,"
" the default validations and actions will be ignored."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:31
msgid "Forms"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:33
msgid ""
"To take advantage of CMFFormController, you need to use Controller Page "
"Templates rather than ordinary Page Templates. Controller Page Templates act"
" just like ordinary Page Templates, but they do some extra work when they "
"are viewed."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:38
msgid "Here is a basic form that uses CMFFormController:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:54
msgid "Let's take a look."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:56
msgid ""
"First, we note that the form is set up to submit to itself. *Forms must "
"submit to themselves.*"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:58
msgid ""
"Second, we see the special hidden variable ``form.submitted``. The "
"controlled page template checks the REQUEST for form.submitted to see if the"
" form has been submitted or if, instead, it has just been accessed, e.g. via"
" a link. *Forms must contain the hidden variable ``form.submitted``*"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:63
msgid ""
"At the beginning of the form we set the variable errors. The errors "
"dictionary comes from the state object which is passed in the template "
"options. The state object lets validators and scripts pass information to "
"each other and to forms. For our purposes, the most important information is"
" the errors dictionary, which has entries of the form "
"``{field_name:error_message}``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:70
msgid ""
"Before we can use this form we need to specify the validators that will be "
"used to check the form values, and we need to specify the action that will "
"occur after validation."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:75
msgid "Specifying Validators"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:78
msgid "There are two basic ways to specify a form's validators."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:80
msgid ""
"You can specify the validators in the .metadata properties for filesystem-"
"based Controller Page Templates."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:82
msgid ""
"You can specify the validators via the ZMI (or programmatically). These "
"values will be stored in the ZODB as attributes of the "
"``portal_form_controller`` object."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:86
msgid ""
"If you specify validators in both places, the validators specified in the "
"ZMI will take precedence over those specified in the .metadata file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:90
msgid "Specifying Validators on the Filesystem"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:92
msgid ""
"You can specify validators on the filesystem using an objects .metadata "
"properties file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:95
msgid ""
"To create a .metadata file, simply create a file with the same name as your "
"page template, and then append .metadata to the end of the name of the file."
" For instance, you might have a Controller Page Template called "
"``document_edit_form.cpt``. The properties for that file would be stored in "
"a file called ``document_edit_form.cpt.metadata``"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:101
msgid ""
"The .metadata file uses the standard python ConfigParser syntax. The "
"validator section of the .metadata file would look like:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:109
msgid ""
"The validation scripts ``validate_script1`` and ``validate_script2`` will be"
" called in order."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:113
msgid "Type-Specific Validators"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:115
msgid ""
"Suppose you want different validators to be called, depending on the type of"
" context the form has."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:118
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:277
msgid "You can do so as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:126
msgid ""
"In the above example, if the context is a Document object, "
"``validate_script2`` will be called for validation; for everything else, "
"only ``validate_script1`` will be called."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:130
msgid ""
"Note that the order in which the variables are specified does not matter; "
"the type-specific validators override non-specific validators if both are "
"applicable."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:135
msgid "Button-Specific Validators"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:137
msgid ""
"Suppose instead that you have two different buttons on your form, and you "
"want different validation sequences to occur depending on which button is "
"pressed. You can accomplish this as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:141
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:298
msgid "First, name your buttons button1 and button2:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:152
msgid ""
"Next, specify validators in the .metadata file for button1 and for button2:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:161
msgid ""
"Note the presence of the ``..``. This is a placeholder for a type specifier."
" You could further specify that ``validate_script5`` is called if "
"``button2`` is pressed and the context is a Document by adding:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:170
msgid ""
"Remember that button specific validators take precedence over non-specific "
"validators."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:174
msgid "Specifying Validators in the ZMI"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:176
msgid ""
"If you look at a Controller Page Template in the ZMI, you will see that it "
"looks just like an ordinary Page Template with two extra tabs, Validation "
"and Actions. Click on the Validation tab."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:180
msgid ""
"The Validation tab shows all the validators for the page template in "
"question. You can specify validators with the same kind of specialization "
"options as above via a web form."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:184
msgid ""
"The validator information for all forms is stored in the "
"``portal_form_controller`` tool in your portal. This means that you can "
"specify validators for filesystem objects with no problems, since the "
"information is persisted in the ZODB. Note that the validator information is"
" bound to the form's Id, so all forms with the same Id use the same "
"validators. This keeps things simple when you have multiple skins:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:192
msgid ""
"*Forms with the same Id use the same validators, no matter what skin they "
"are in.*"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:195
msgid ""
"When a form is submitted, it first checks to see if there are any applicable"
" validators that have been specified via the ZMI. If it finds one, it uses "
"it. If it does not find a validator via the ZMI, it then checks the REQUEST "
"object to see if validators have been specified in hidden variables. As a "
"result, validators specified in the ZMI take precedence over those specified"
" in forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:203
msgid "Specifying Validators Programmatically"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:205
msgid ""
"The portal's ``portal_form_controller`` tool has methods you can use to "
"specify the validators for a given ControllerPageTemplate. The API is as "
"follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:216
msgid ""
"Here ``id`` is the Id of the ControllerPageTemplate, ``context_type`` is the"
" class name for the class of the context object, ``button`` is the name of "
"the button pressed, and validators is a comma-delimited string or a list of "
"strings. If you want a validator to act for any class, set context\\_type to"
" None. Similarly, you want a validator to act for any button, set button to "
"None."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:224
msgid "Specifying Actions"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:226
msgid ""
"The sequence of validators that is executed returns a status in the state "
"object. The default status is ``success``, i.e. if no validators are "
"executed, the status will be ``success``. If a validator encounters an "
"error, it will typically set the status to ``failure``. The next thing we "
"need to do in your form is to specify what happens when a given status is "
"returned."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:233
msgid ""
"As with validators, there are two basic ways to specify a form's actions."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:236
msgid ""
"You can specify the actions in the .metadata properties for filesystem-based"
" Controller Page Templates and Controller Python Scripts."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:239
msgid ""
"You can specify the actions via the ZMI (or programmatically). These values "
"will be stored in the ZODB as attributes of the ``portal_form_controller`` "
"object."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:243
msgid ""
"If you specify actions in both places, the actions specified in the ZMI will"
" take precedence over those specified in the form."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:247
msgid "Specifying Actions on the Filesystem"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:249
msgid ""
"You can specify actions on the filesystem using an objects .metadata "
"properties file."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:252
msgid ""
"Actions are stored in the same .metadata file as the validators. The syntax "
"for the actions section of your file would look like:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:260
msgid ""
"In the above example, when the form is submitted and the validation scripts "
"return a status of ``success``, the ``traverse_to`` action is called with "
"the argument ``string:script1``, i.e. if the form data is valid, we run the "
"script ``script1``. Alternatively, we could specify ``action.success = "
"redirect_to:string:http://my_url_here``, which would cause the browser to be"
" redirected to ``http://my_url_here``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:267
msgid ""
"The default action for the ``failure`` status is to reload the current form."
" The form will have access to all the error messages, via the state object "
"in its options."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:272
msgid "Type-Specific Actions"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:274
msgid ""
"Suppose you want different actions to occur depending on the type of context"
" the form has."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:285
msgid ""
"In the above example, if the context is a Document object, document\\_script"
" will be executed upon successful validation; for everything else, script1 "
"will be executed. Note that the order in which the variables are specified "
"does not matter; the type-specific actions will override non-specific "
"actions if both are applicable."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:292
msgid "Button-Specific Actions"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:294
msgid ""
"Suppose instead that you have two different buttons on your form, and you "
"want different actions to occur depending on which button is pressed. You "
"can accomplish this as follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:309
msgid "Next, specify actionss for button1 and for button2:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:317
msgid ""
"Note the presence of the ``..``. This is a placeholder for a type specifier."
" You could further specify that ``document_script2`` is called if button2 is"
" pressed and the context is a Document by adding:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:327
msgid "Specifying Actions in the ZMI"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:329
msgid ""
"If you look at a Controller Page Template in the ZMI, you will see that it "
"looks just like an ordinary Page Template with two extra tabs, Validation "
"and Actions. Click on the Actions tab."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:333
msgid ""
"The Actions tab shows all the actions for the page template in question. You"
" can specify actions with the same kind of specialization options as above "
"via a web form."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:337
msgid ""
"The action information for all forms is stored in the "
"``portal_form_controller`` tool in your portal. This means that you can "
"specify actions for filesystem objects with no problems, since the "
"information is persisted in the ZODB. Note that the action information is "
"bound to the form's Id, so all forms with the same Id use the same actions. "
"This keeps things simple when you have multiple skins: forms with the same "
"Id use the same actions, no matter what skin they are in."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:345
msgid ""
"When a form is submitted, it first checks to see if there are any applicable"
" actions that have been specified via the ZMI. If it finds one, it uses it. "
"If it does not find an action via the ZMI, it then checks the REQUEST object"
" to see if actions have been specified in hidden variables. As a result, "
"actions specified in the ZMI take precedence over those specified in forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:353
msgid "Specifying Actions Programmatically"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:355
msgid ""
"The portal's ``portal_form_controller`` tool has methods you can use to "
"specify the actions for a given ControllerPageTemplate. The API is as "
"follows:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:368
msgid ""
"Here ``id`` is the Id of the ControllerPageTemplate, ``status`` is the "
"status for which the action will be executed, ``context_type`` is the class "
"name for the class of the context object, ``button`` is the name of the "
"button pressed, ``action_type`` is the type of action that will occur, and "
"``args`` is a string (typically a TALES expression) that will be passed to "
"the action. If you want an action to be executed for any class, set "
"context\\_type to None. Similarly, you want an action to be executed for any"
" button, set button to None."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:378
msgid "Validation Scripts"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:380
msgid ""
"When writing validation scripts, use Controller Validators instead of Python"
" Scripts. Controller Validators are just like ordinary Scripts with the "
"addition of a ZMI Actions tab. On the file system, Controller Validators use"
" the extension .vpy rather than .py."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:385
msgid ""
"Let's take a look at a basic validation script that tests the REQUEST value "
"``n`` to see if it is an integer:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:404
msgid ""
"The first thing to note is that Controller Validators have a built-in state "
"object called ``state``. This state object (of class ControllerState) "
"contains basic information about what has happened during the validation "
"chain."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:409
msgid ""
"The state object has a ``status`` attribute which contains the current "
"validation status. The initial status is ``success``. If errors are detected"
" by validators, they set the status to something else, typically "
"``failure``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:414
msgid ""
"The state object also stores errors that have been detected. The "
"``setError`` method is used to set an error message for a particular "
"variable. The setError method has the optional ``new_status`` argument that "
"can be used to both set an error message as well as to update the status. "
"You can see if an error message has already been stored for a particular "
"variable by calling ``state.getError(variable_name)``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:421
msgid ""
"The set method lets you set multiple attributes of the state object all at "
"once, e.g.:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:428
msgid ""
"You can also pass keyword arguments to the state object via the set method. "
"These arguments will get passed along by the action. The ``traverse_to`` "
"action places these keyword arguments in the REQUEST. The ``redirect_to`` "
"action adds them to the query string of the URL to which it is redirecting."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:434
#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:505
msgid "Finally, we return the state object."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:436
msgid "Another interesting example is email validation:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:458
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:81
msgid "Scripts"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:460
msgid ""
"When writing scripts that do some processing after a validated form, you can"
" use Controller Python Scripts instead of ordinary Python Scripts to let "
"site managers override their actions via the ZMI. On the file system, "
"Controller Python Scripts use the extension .cpy rather than .py. Note that "
"Controller Validators and Controller Python Scripts differ in signficant "
"ways. Be sure to use the appropriate script type (Controller Validator or "
"Controller Python Script) and/or the appropriate file extension (.cpy or "
".vpy)."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:469
msgid ""
"Let's take a look at a basic script that sets a context attribute to the "
"value ``n`` that is passed in via the 'REQUEST':"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:485
msgid ""
"Note that you will usually want to use the ``traverse_to`` action to call "
"your script. This will ensure that form variables set in the REQUEST object "
"are available to your script."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:489
msgid ""
"This script sets its action to redirect to the relative url ``view`` for the"
" current context object. The status has not been set, so it is the default "
"status, ``success``."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:493
msgid ""
"The ``state.setNextAction`` directive above is analogous to having the "
"following line in your .metadata file:"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:501
msgid ""
"As with the .metadata file, the default action specified in the script can "
"be overridden via the ZMI. This allows site managers to override post-script"
" actions without having to customize your code."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:508
msgid "Validation for Scripts"
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:510
msgid ""
"Having separate validation scripts typically means that validation is moved "
"out of scripts. This simplifies scripts, but means that it is possible to "
"call them directly with invalid data. We can prevent this problem by adding "
"validators to scripts. Controller Python Scripts use the same ZMI and/or "
".metadata file mechanisms for adding validators as do Controller Page "
"Templates."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:517
msgid ""
"Each time a validator is called, it logs the call in the state object. "
"Validation is smart enough that if a validator is called by a form, it will "
"not be called again by the script."
msgstr ""

#: ../../reference_manuals/old/forms/using_cmfformcontroller.rst:521
msgid ""
"Note that if you associate validators with a script, you will need to set a "
"sensible ``failure`` status action, since scripts do not set such an action "
"by default. You may wish to define a different failure status for failures "
"that occur within your script, e.g. ``script_failure``. Then you can specify"
" a behavior for failures that occur as a result of invalid parameters coming"
" in and for failures that occur within the script."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:183
msgid ""
"And that's all! Here's how the form and result pages will look like:\\ ** **"
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/creating_a_form.rst:192
msgid "**Result page**:"
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:11
msgid ""
"*plone.app.form*\\ provides a handy default template named ``pageform.pt`` "
"which integrates well with the default Plone skin, but you might need to "
"customize it or write your own one."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/customizing_template_and_widgets.rst:178
msgid "Form radio buttons"
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:13
msgid ""
"The reason is simple: you’ll end up writing a lot of boilerplate code to "
"collect, validate and build the response. It would be better if you could "
"just define the fields and metadata of the form and re-use a set of base "
"classes to do the repetitive work behind the scenes, i.e., a forms "
"framework."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:24
msgid ""
"Second, the From Controller doesn’t handle the creation and display of the "
"widgets, so you have to create them manually, what could become *especially*"
" unmantainable when using choice-type fields."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:27
msgid ""
"Last, the Form Controller doesn’t work with Zope 3 schema interfaces nor "
"views. Using a Zope 3 schema can help you creating add and edit forms."
msgstr ""

#: ../../reference_manuals/old/forms/using_formlib/why_learn.rst:31
msgid ""
"However, the Form Controller can be useful and even preferable when you need"
" to implement a complex page flow, or if you want to customize Plone forms "
"that use it; e.g. the ‘’Send this page to someone’’ form."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:3
msgid "Content types"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:5
msgid ""
"Plone is a content management system (CMS) built on top of the Zope Content "
"Management Framework (CMF)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:8
msgid ""
"As such, one of the core features is the ability to add various types of "
"content objects, such as:"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:11
msgid "Folder"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:12
#: ../../reference_manuals/old/plone_3_theming/index.rst:141
msgid "Page"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:13
msgid "Image"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:14
msgid "File"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:16
msgid ""
"Early implementations of content types in Plone were built exclusively with "
"the Zope CMF. Since then, two other significant frameworks have come along "
"to advance the state of the art: **Archetypes** and **Dexterity**."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:21
msgid ""
"This document aims to provide \"top level\" perspective for those not "
"familiar with Plone technology. And what follows is a description of each "
"technology along with information about the version of Plone it works with."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:26
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:18
msgid "CMF"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:28
msgid "Used to build the orginal content types from Plone 0.1 to 2.0."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:33
msgid ""
"Used to build the content types from versions 2.1 to present (4.1 at the "
"time of this writing)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:37
msgid "Dexterity"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/content-types.rst:39
msgid ""
"Came along around the time of Plone 3 as an alternative to Archetypes. Will "
"likely replace AT as the default content type technology in a future release"
" of Plone (hard to say when, but if \"Plone 6\" means anything to you, then "
"that is when it *might* happen.)"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:2
msgid "Zope 2 vs. Zope 3 practices"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:4
msgid ""
"Over the years Plone has used many, many different technologies to deliver "
"its award-winning CMS to the masses."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:7
msgid ""
"You may often hear of a particular technology being referred to as \"old "
"style\" or \"new style\"."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:10
msgid ""
"This section aims to give a cursory overview of all of Plone technologies, "
"particularly with regard to their categorization as \"old style\" or \"new "
"style\"."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:15
msgid ""
"This section does not aim to tell you which technology to choose over "
"another; and it is certainly not a definitive resource for what is \"old\" "
"or \"new\" in Plone. It only aims to clear up confusion with regard to the "
"common use of such terminology."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/index.rst:22
msgid ""
"Also please note that while \"old\" generally refers to Zope 2 before the "
"ZTK existed and \"new\" generally refers to the mixture of Zope 2 and ZTK "
"technologies, there are no absolutes. You can apply the terms \"old\" and "
"\"new\" to just about anything in Plone, and the terminology is always "
"changing as Plone development advances."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:2
msgid "Packaging"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:4
msgid ""
"To understand Plone's packaging story you must first understand **both** the"
" historic Zope2 add-on packaging story **and** the present day Python "
"packaging story. It also doesn't hurt to understand the future of Python "
"packaging."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:9
msgid "Zope2 products"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:11
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:11
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:20
msgid "*Old style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:13
msgid ""
"Zope2 introduces the concept of \"products\" which are bundles of Python "
"source code that live in a special \"products\" directory; Zope2 looks for "
"these on startup and then registers them if they meet a certain set of "
"criteria."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:17
msgid ""
"The *specialized* creation and use of products in Zope2 has generally fallen"
" out of favor, and given way to the use of *generic* Python packages, which "
"are widely used by the rest of the Python community."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:22
msgid "Python packages"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:24
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:30
#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:40
msgid "*New style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:26
msgid ""
"The Setuptools add-on module for Python introduces the concept of Python "
"packages, called \"eggs\" (although recently, they are more and more being "
"referred to as just packages to avoid any \"cuteness\" getting in the way of"
" the concept.)"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:33
msgid ""
"If the packaging story were over now, things would be simple; but life is "
"never simple. What follows is an explanation of Setuptools vs. Distribute. "
"Or if you will, old style (Setuptools) vs. new style (Distribute) within the"
" new style of packaging (eggs)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:39
msgid "Setuptools"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:41
msgid "*Old style within new style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:43
msgid "There are several important things you should know about Setuptools:"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:45
msgid ""
"It's built on top of a core module called Distutils, but it itself is not "
"part of the Python core."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:48
msgid ""
"It was forked in 2009 into the Distribute project (based on a disagreement "
"over frequency of releases, among other things)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:51
msgid "It continues to exist."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:53
msgid ""
"Based on the above criteria, and what follows below about Distribute, you "
"may sometimes (perhaps less frequently then in the case of products vs. "
"packages) hear Setuptools referred to as \"old style\" and Distribute "
"referred to as \"new style\". And even if you don't, being aware of the "
"distinction will certainly help you understand \"new style\" packaging "
"better."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:60
msgid "Distribute"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:62
msgid "*New style within new style*"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:64
msgid ""
"Distribute is a fork of Setuptools. It is intended to \"get us through\" to "
"the point where a better solution can be implemented within the Python core "
"in the Distutils2 module which is currently in development (as of early "
"2011)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:68
msgid ""
"Distribute is actively maintained, has frequent bug fixes and releases, and "
"is the self-proclaimed \"new hotness\"."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/packaging.rst:71
msgid ""
"And the \"new hotness\" part is no false promise. Using Distribute means you"
" are using the newest Python packaging technology short of Distutils2. One "
"of the promises of Distribute is using it will prepare you as gently as "
"possible for the arrival of Distutils2."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:3
msgid "Theming"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:5
msgid ""
"To understand Plone's theming story you must first understand the technology"
" stack on which it is built (or not built)."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:9
msgid "Zope2"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:13
msgid ""
"Zope2 is the oldest portion of the stack. It offers technologies like "
"``Acquisition`` (among others) which facilitate the reuse of objects such as"
" page templates amongst a website full of \"content\" objects."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:22
msgid ""
"Next came The Zope ``Content Management Framework`` (CMF); it offers "
"technologies like file system directory views (FSDV) and skin layers (among "
"others). The CMF allows people to manage their website's CSS, JavaScript and"
" image resources on the filesystem, typically inside a \"skins\" directory."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:28
msgid "ZTK"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:32
msgid ""
"Initially called Zope 3 (more or less), the ``Zope Toolkit`` (ZTK) is a set "
"of reusable packages (including ``zope.component`` and ``zope.interface`` "
"which provide the Zope Component Architecture) that bring a modern, scalable"
" development environment to Plone."
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:38
msgid "Diazo"
msgstr ""

#: ../../reference_manuals/old/old-style-vs-new-style/theming.rst:42
msgid ""
"Born out of a desire to separate Python package code from website resources "
"like CSS, JavaScript and images; Diazo (orginally called XDV) is a "
"technology that maps Plone content to an XHTML template, based on an XML "
"ruleset."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:2
msgid "Future Directions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:4
msgid ""
"This reference manual outlines the current approach to Plone themes. But you"
" may as well know now that there are other, perhaps simpler, approaches on "
"the horizon."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:8
msgid ""
"Plone theming is getting a bit complicated. So the Plone community, in its "
"inimitable and energetic way, is already exploring different solutions to "
"the “theme problem”."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:12
msgid ""
"Things move fast. At the time of writing, some of the solutions listed below"
" are probably not mature enough to use in earnest, particularly if you are "
"just starting out. However, you might want to investigate them to see how "
"they’re progressing:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:18
msgid "Out of the Box Themes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:20
msgid ""
"A sprint and ongoing project to generate themes that will ship with out-of-"
"the box Plone, and to brainstorm on other ways to improve the Plone theming "
"story"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/directions.rst:24
msgid ""
"`http://www.openplans.org/projects/ootb-plone-themes/summary "
"<http://www.openplans.org/projects/ootb-plone-themes/summary>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:2
msgid "Through the Web or on the File System?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:4
msgid ""
"How to decide whether to build your theme through the web or on the file "
"system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:7
msgid ""
"Sooner or later with Plone you'll be faced with a decision. Plone is "
"sufficiently flexible that there is often more that one way of doing things,"
" and the conundrum is, usually, not *how* to do it, but *which way*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:12
msgid ""
"You can customize Plone Default through the web very easily - particularly "
"the skin and the configuration building blocks; further sections of this "
"manual will point you in the direction of the relevant places in the Zope "
"Management Interface to do this. However, if you want to move these "
"customizations to a new site, undertake quite extensive customizations, or "
"build a completely new theme, then it is advisable to move your work to the "
"file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:20
msgid ""
"In this case you will need to create an installable module (also known as a "
"theme product or  egg). This can be a daunting prospect, but there are tools"
" available to simplify this process, providing you with a ready-made package"
" into which to drop all the elements of your theme building blocks. We "
"explain these tools on the next few pages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:26
msgid ""
"If you are just starting out, then it is a good idea to get familiar with "
"the building blocks and techniques by working through the web. It isn't "
"difficult to move what you've done to the file system later. Once you start "
"rewiring or moving components around you'll find the file system a more "
"convenient way to work."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:33
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:7
msgid "Through the Web"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:36
#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:49
msgid "Pros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:36
#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:49
msgid "Cons"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:38
msgid "Quick and easy"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:38
msgid "Difficult to replicate or move from one site to another"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:40
msgid "Results immediately visible"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:40
msgid "Large customizations can get complicated"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:42
msgid ""
"Some customizations of components aren't possible (e.g. can't move viewlets "
"between viewlet managers)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:46
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:22
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:17
msgid "On the File System"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:51
msgid "Portable and reusable"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:51
msgid "Steeper learning curve when you first start out"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:53
msgid "Complete flexibility, can write your own viewlets and portlets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:53
msgid "Need access to the file system"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:55
msgid "Bundles your changes up into your own theme / skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/filesystem.rst:55
msgid "Will sometimes need to restart to see changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:2
msgid "From Scratch or Based on Plone Default?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:4
msgid ""
"It is perfectly possible to build your own Plone theme completely from "
"scratch, but you probably won't want to do this."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:8
msgid "Based on Plone Default?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:10
msgid ""
"In particular, the bells and whistles of the Plone editing interface are "
"wrapped up as part of the out-of-the box Plone Default, and you'll probably "
"want to keep these."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:14
msgid ""
"The good news is that you can **base** your own theme on Plone Default and "
"interweave your bits of templates, styles, scripts and components with "
"what's already there. There are three ways of doing this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:18
msgid ""
"with the Skin building block you **customize**\\ the Plone Default bits "
"(there's a neat way of doing this which ensures you leave the Plone Default "
"theme completely intact)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:21
msgid ""
"with the Components building block you **build your own**, but you can "
"**reuse** bits of the Plone Default components in the process"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:23
msgid "with the Configuration you simply **add new**\\ directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:25
msgid ""
"There's more good news - the elements of a Plone theme are broken up into "
"very small parts. Each one can be dealt with independently of the others, so"
" you can home in on just the bits you want to change.The price of all this "
"flexibility is that it is sometimes difficult to track down exactly which "
"bit you want, and things can start to seem complicated. This manual should "
"help with that."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:32
msgid ""
"You can change a great deal of the look and feel just by overwriting "
"existing CSS styles, or by rewriting some of the existing style sheets. "
"However, if you want to start moving page elements around or rewriting some "
"of the XHTML, then you'll need to delve into the templates, components, and "
"configuration in more detail."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:38
msgid ""
"In the end, you're likely to come up with a theme based on Plone Default "
"(that is, based structurally, not necessarily visually). This will probably "
"contain"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:42
msgid "your own style sheet; or rewrites of some of the Plone CSS"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:43
msgid "some rearrangement of page elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:44
msgid "a few rewrites of some page elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/approaches/plonedefault.rst:45
msgid "a few 'new' page elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:2
msgid "Interfaces and why they matter"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:4
msgid ""
"Interfaces are a bit techie and something a non-developer would probably "
"rather not think about. However, they are an important part of component "
"wiring, so it is as well to know a bit about what they are and do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:9
msgid "Interfaces as Markers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:11
msgid ""
"ZCML attributes often refer to interfaces rather than actual classes - for "
"instance the example below wires up the presentation viewlet for content "
"types that have the IATDocument interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:25
msgid ""
"In effect this is saying that the presentation viewlet is available for any "
"content type which is ATDocument-like or behaves like an ATDocument. So, in "
"this case, the interface is a marker."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:29
msgid ""
"The convenience of this is that a content type can have one (or more) "
"interfaces, and several content types can share the same one. If you develop"
" a new content type and mark it with the IATDocument interface, you can use "
"this presentation viewlet with it - no extra wiring required."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:36
msgid "Components and Interfaces"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:38
msgid ""
"Components themselves can be marked with an interface - the technical term "
"is \"provides\". Note that in the presentation viewlet example, the viewlet "
"manager is referred to by its interface, not its name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:46
msgid ""
"To track down the actual component, look in the configure.zcml file in the "
"same directory as the interfaces. For instance, in "
"plone/app/layout/viewlets/configure.zcml you'll see the interface has been "
"wired up with a Python class to create a viewlet manager component:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:61
msgid "How to spot an interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:63
msgid ""
"It is usually fairly easy to spot a reference to an interface. By "
"convention, their names will be prefixed with an \"I\", and they will live "
"in an interface or interfaces namespace. If you investigate interfaces.py or"
" interface.py in any egg or product, you won't find very much code, but "
"you'll often find useful information – effectively it is documentation about"
" what a component providing (i.e. marked by) that interface should do. For "
"example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/interfaces.rst:76
msgid ""
"If you've used the plone3\\_theme paster template, you'll find you have a "
"ready-made interfaces.py file to which you can add your own interfaces if "
"you need to create them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:2
msgid "Permission"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:4
msgid ""
"The permission attribute can be used to restrict visibility of a component."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:7
msgid ""
"When a user logs in to a site, they will be given a role ('manager' or "
"'editor' for instance). This role is, effectively, a set of permissions, "
"giving them particular rights over particular aspects of the site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:11
msgid ""
"To find out more about permissions consult the Understanding Permissions and"
" Security Tutorial:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:14
msgid ""
"`http://plone.org/documentation/tutorial/understanding-permissions/ "
"<http://plone.org/documentation/tutorial/understanding-permissions/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:16
msgid ""
"In the case of components, the permission attribute allows the site to "
"decide whether a user has a right to see, or interact with a component. Most"
" viewlets have the permission Zope2.View or Zope2.Public, which are "
"permissions assigned to everyone, even anonymous visitors. However, look at "
"the Lock Info viewlet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:32
msgid ""
"By using cmf.ModifyPortalContent, this viewlet is restricted only to those "
"who have the right to edit content (those who don't wouldn't be interested "
"in whether an item was locked or not)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:36
msgid ""
"The list of available permissions is buried rather deeply in the Five "
"product which comes with your installation of Zope - look in "
"permissions.zcml for the most up-to-date list."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:42
msgid "zope2.Public"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:44
msgid "Public, everyone can access"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:46
msgid "zope2.Private"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:48
msgid "Private, only accessible from trusted code"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:50
msgid "zope2.AccessContentsInformation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:52
msgid "Access contents information"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:54
msgid "zope2.ChangeImagesFiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:56
msgid "Change Images and Files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:58
msgid "zope2.ChangeConfig"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:60
msgid "Change configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:62
msgid "zope2.ChangePermissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:64
msgid "Change permissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:66
msgid "zope2.CopyOrMove"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:68
msgid "Copy or Move"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:70
msgid "zope2.DefinePermissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:72
msgid "Define permissions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:74
msgid "zope2.DeleteObjects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:76
msgid "Delete objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:78
msgid "zope2.FTPAccess"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:80
msgid "FTP access"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:82
msgid "zope2.ImportExport"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:84
msgid "Import/Export objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:86
msgid "zope2.ManageProperties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:88
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:144
msgid "Manage properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:90
msgid "zope2.ManageUsers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:92
msgid "Manage users"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:94
msgid "zope2.Undo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:96
msgid "Undo changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:98
msgid "zope2.View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:100
msgid "View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:102
msgid "zope2.ViewHistory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:104
msgid "View History"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:106
msgid "zope2.ViewManagementScreens"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:108
msgid "View management screens"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:110
msgid "zope2.WebDAVLock"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:112
msgid "WebDAV Lock items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:114
msgid "zope2.WebDAVUnlock"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:116
msgid "WebDAV Unlock items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:118
msgid "zope2.WebDAVAccess"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:120
msgid "WebDAV access"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:122
msgid "cmf.ListFolderContents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:124
msgid "List folder contents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:126
msgid "cmf.ListUndoableChanges"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:128
msgid "List undoable changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:130
msgid "cmf.AccessInactivePortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:132
msgid "Access inactive portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:134
msgid "cmf.ManagePortal"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:136
msgid "Manage portal"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:138
msgid "cmf.ModifyPortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:140
msgid "Modify portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:142
msgid "cmf.ManageProperties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:146
msgid "cmf.ListPortalMembers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:148
msgid "List portal members"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:150
msgid "cmf.AddPortalFolders"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:152
msgid "Add portal folders"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:154
msgid "cmf.AddPortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:156
msgid "Add portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:158
msgid "cmf.AddPortalMember"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:160
msgid "Add portal member"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:162
msgid "cmf.SetOwnPassword"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:164
msgid "Set own password"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:166
msgid "cmf.SetOwnProperties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:168
msgid "Set own properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:170
msgid "cmf.MailForgottonPassword"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:172
msgid "Mail forgotten password"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:174
msgid "cmf.RequestReview"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:176
msgid "Request review"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:178
msgid "cmf.ReviewPortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:180
msgid "Review portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:182
msgid "cmf.AccessFuturePortalContent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/permissions.rst:184
msgid "Access future portal content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:2
msgid "Python Classes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:4
msgid ""
"You'll have noticed that Python classes are often part of the wiring of "
"Components, and you will find that you can't really avoid understanding a "
"little bit about them, particularly if you want to make your own viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:9
msgid ""
"Having to deal with something as advanced as Python classes can be daunting "
"for the non-developer. The good news is that using Python classes will be "
"more a case of copying and changing little bits of code than writing "
"anything from scratch."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:15
msgid "What's a Class?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:17
msgid ""
"It's best to think of a class as a discrete piece of code containing a "
"collection of methods ('actions' of some sort) and attributes ('variables' "
"which can hold a value)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:21
msgid ""
"In the case of components, the main purpose of a class is to compute the "
"pieces of information a component needs to display. The class for the logo "
"viewlet is a good example. You can find it in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:25
msgid ""
"[your egg location]/plone/app/layout/viewlets/common.py - look for "
"LogoViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:28
msgid ""
"After a bit of preparatory work, the LogoViewlet class first finds out the "
"name of the image that is to be used for the logo (and is defined in the "
"base\\_properties property sheet):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:36
msgid ""
"Then it works out the logo's vital statistics, size, alt text etc and turns "
"this into an HTML anchor tag:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:43
msgid ""
"Finally, just in case you might need it, it looks up the title of the site:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:50
msgid ""
"In the page template associated with this viewlet you can get hold of this "
"information (self.logo\\_tag, self.portal\\_title) using the variable "
"\"view\":"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:60
msgid "Do I have to use Classes?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:62
msgid ""
"Viewlets tend to be wired up with a Python class which points to a template."
" So, even though you might only want to create a new template, you'll find "
"that you have to write a class to point to your new template. The `Elements "
"<http://plone.org/documentation/manual/theme-reference/elements>`_ section "
"of this manual should help you by giving you a snippet of code for each "
"element to copy and paste into your own product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:70
msgid ""
"Here's an example. The standard logo template doesn't actually make use of "
"view/portal\\_title. So if you wanted to incorporate this into your logo in "
"some way, then you would need to write your own template and then also your "
"own class:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:83
msgid ""
"First, pull in (\"import\") all the bits and pieces with which to build your"
" class using from ….. import …… ."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:86
msgid ""
"Next, define your class. The important thing here is to base it on a pre-"
"existing class so that you don't have to start from scratch. Put the name of"
" the pre-existing class in brackets after your class name (make sure that "
"you've imported it first). Don't forget the colon!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:90
msgid ""
"Finally, rewrite any of the methods or attributes you need. Here, we've just"
" rewritten the *render* method to display our own template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:93
msgid ""
"Note: indenting is very important in Python code, the convention is to use "
"four spaces (rather than a tab). If you are having problems, double check "
"the indentation first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:97
msgid ""
"`http://wiki.python.org/moin/HowToEditPythonCode "
"<http://wiki.python.org/moin/HowToEditPythonCode>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:99
msgid ""
"If you're feeling brave or want to know more, a straightforward introduction"
" is here: "
"`<http://www.diveintopython.org/object_oriented_framework/defining_classes.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/componentparts/pythonclasses.rst:103
msgid ""
"`Dive Into Python - Defining Classes "
"<http://www.diveintopython.org/object_oriented_framework/defining_classes.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:2
msgid "Customizing or Creating New"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:4
msgid ""
"You can customize through the web, but on the file system, the way to "
"customize or create components for your theme is to wire up new ones."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:10
msgid ""
"Just as for Skins and Layers, it is possible to customize the templates used"
" by components through the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:13
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:18
msgid "Site Setup > Zope Management Interface > portal\\_view\\_customizations"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:15
msgid ""
"You will need to know the name of your component (plone.presentation for "
"instance). The `Elements <http://plone.org/documentation/manual/theme-"
"reference/elements/elementsindex>`_ section of this manual will help if the "
"name isn't obvious. You can only rewrite the template, which might be "
"limiting."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:24
msgid ""
"You can achieve much more if you are building your own theme product on the "
"file system, and in this case the approach is slightly different."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:27
msgid ""
"Rather than overwrite a component (as you could for skins), it is far easier"
" to create your own version. This involves some rewiring or new wiring in "
"your own .zcml file, but is actually simpler than it sounds."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:31
msgid ""
"Here's an example of the presentation viewlet - as it is used by Plone:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:43
msgid ""
"Imagine, for your purposes, you need to use a new class to get this viewlet "
"as you want. In your own configure.zcml file, give it a new name and wire in"
" your own class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:57
msgid ""
"Remember that the dot in front of your class namespace indicates that it can"
" be found in the same directory as this configure.zcml file."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/customizing.rst:59
msgid ""
"If you're not sure where your configure.zcml file lives, consult the `Where "
"to Find What you Need <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/locations>`_ page of this section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:2
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:2
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:2
msgid "Where to find what you need"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:4
msgid ""
"Where to put components in your own product and how to track them down in "
"the Zope Management Interface and on the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:10
msgid "The templates for most components can be customized through the web:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:14
msgid ""
"The `Elements <http://plone.org/documentation/manual/theme-"
"reference/elements/elementsindex>`_ section can help you identify the "
"component you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:19
msgid "Plone Default Components on the File system"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:21
msgid ""
"If you're planning to wire up your own components, you may need to track "
"down the relevant files of existing components to copy. This can be tricky. "
"They are packaged up into a number of different eggs, so you need first to "
"locate where your eggs are stored, and then work out which of these contains"
" the component elements you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:27
msgid ""
"To work out where your eggs are stored, look at the `Where is What "
"<http://plone.org/documentation/manual/theme-"
"reference/whereiswhat/egglocation>`_ section of this manual?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:30
msgid ""
"The `Elements <http://plone.org/documentation/manual/theme-"
"reference/elements/elementsindex>`_ section of this manual will help you "
"track down the egg containing the component you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:36
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:38
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:40
msgid "In your own Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:38
msgid "|The browser folder in your theme product|/browser/viewlet.py \\|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:39
msgid "viewlet.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:40
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:9
msgid "An example viewlet component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:41
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:11
msgid "/browser/interfaces.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:42
msgid "This is used to create your theme interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:43
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:62
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:16
msgid "/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:44
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:18
msgid "Use this file to order your viewlets within viewlet managers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:45
msgid "/browser/configure..zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:46
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:22
msgid "Use this file to wire up your components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:50
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:24
msgid "/browser/templates \\| styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:48
msgid ""
"These directories can be used for templates, styles, and images. You will "
"need to register these as directories as resources in configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/locations.rst:53
msgid ""
"product| image:: http://plone.org/documentation/manual/theme-"
"reference/images/your_theme_egg_components_cutdown.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:2
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:2
msgid "Skin or Components?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:4
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:4
msgid ""
"You’ll have noticed that you can turn any template or css file, or any "
"directory containing these into a component. So why bother with the Skin "
"building block?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:8
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:8
msgid ""
"The product created by the plone3\\_theme paster template does the "
"following:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:11
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:11
msgid ""
"**overrides and rewrites** of the standard Plone Default templates and CSS "
"files go in the **Skin** section – the skins directory."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:13
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:13
msgid ""
"**new** style sheets and images go in the **Components** section – the "
"browser directory."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:16
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:16
msgid ""
"This manual suggests putting all your templates, style sheets and images in "
"the Skin section - leaving just the viewlet and portlet templates in the "
"components. There are a few reasons for this"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:20
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:20
msgid "it is simpler to do this when you're just starting out"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:21
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:21
msgid "it follows the way in which Plone Default is constructed"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:22
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:22
msgid ""
"it makes it quick and easy to adjust your theme on-the-fly after it's "
"installed. At that point, you can make further customizations of the Skin "
"through the Zope Management Interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:26
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:26
msgid ""
"At the time of writing there's a `big discussion "
"<http://www.openplans.org/projects/ootb-plone-themes/lists/ootb-plone-"
"themes-discussion/archive/2008/05/1209686168874/forum_view>`_ going on about"
" this very question."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:32
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:32
msgid ""
"If you want to strip the browser resources out of the product created by the"
" plone3\\_theme paster template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:35
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:35
msgid ""
"remove the images and stylesheets directories in the [your theme "
"package]/browser"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:37
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:37
msgid ""
"remove the <browser:resourceDirectory /> entries in [your theme "
"package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:39
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:39
msgid ""
"remove the register stylesheet entry for main.css in [your theme "
"package]/profiles/default/cssregistry.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/skinorcomponents.rst:41
#: ../../reference_manuals/old/plone_3_theming/page/buildingblocks/components/skinorcomponents.rst:41
msgid ""
"if you have already installed your product you may need to check the CSS "
"registry in the Zope Management Interface (portal\\_css) and delete the "
"main.css entry there too"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:2
msgid "Making Components Theme Specific"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:4
msgid ""
"You may want to make components only available for your particular theme. To"
" do this you will need an interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:7
msgid ""
"As components come into being as soon as Zope starts up and reads the .zcml "
"files, they are available for every Plone site you have in a Zope instance. "
"You might not want this to happen."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:12
msgid "A Theme Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:14
msgid ""
"You can specify that your components are available only for your theme with "
"a marker interface and a layer attribute in ZCML. Here's a rewired version "
"of the presentation viewlet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:29
msgid ""
"Note: Don't confuse the layer attribute with a skin layer. Here, layer "
"refers to the whole theme rather than just one slice of it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:32
msgid "There are two methods for creating a theme interface:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:35
msgid "Using plone.theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:37
msgid "In Plone 3.0, plone.theme is used:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:39
msgid ""
"A marker interface is defined in [your theme package]/browser/interfaces.py:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:49
msgid ""
"and this is registered in ZCML in [your theme "
"package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:60
msgid ""
"Note: [your skin name] crops up here; refer back to the skins section if you"
" are wondering what this is."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:64
msgid "Using plone.browserlayer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:66
msgid "In Plone 3.1, plone.browserlayer is available to you."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:68
msgid ""
"Create your interface (e.g. in [your theme package]/browser/interfaces.py)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:77
msgid ""
"Register this in the configuration (in [your theme "
"package]/profiles/default/browserlayer.xml):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:88
msgid ""
"If you generate your file system product or egg using the plone3\\_theme "
"paster template, then the basics will be done for you (using the plone.theme"
" method), you will simply need to track down the interface to find its name."
" Look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:93
msgid "[your theme package]/browser/interfaces.py or configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/themespecific.rst:95
msgid ""
"and you should find it with the name IThemeSpecific. When you refer to it, "
"use its path"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:2
msgid "Viewlets, Portlets and Other Components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:4
msgid "Types of component."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:7
msgid "Viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:9
msgid ""
"This is a new feature in Plone 3 and is used to provide aspects of the page "
"furniture - those elements of the page which generally don't change "
"throughout the site. These are organized by another type of component - a "
"Viewlet Manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:14
msgid "For more information you can look at"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:16
msgid ""
"`Anatomy of a Viewlet <http://plone.org/documentation/manual/theme-"
"reference/elements/viewlet/anatomy>`_ section in this reference manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:19
msgid ""
"`http://plone.org/documentation/tutorial/customizing-main-template-viewlets "
"<http://plone.org/documentation/tutorial/customizing-main-template-"
"viewlets>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:20
msgid ""
"`http://plone.org/documentation/tutorial/customization-for-"
"developers/viewlets/ <http://plone.org/documentation/tutorial/customization-"
"for-developers/viewlets/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:23
msgid "Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:25
msgid ""
"Portlets in Plone are boxes of information, usually in the right or left "
"column of a page, containing aggregated content or additional information, "
"which may or may not be directly relevant to the content item being "
"displayed. Behind the scenes these used to be constructed from ordinary page"
" templates, but now, in Plone 3, they are wired together as components and "
"are managed by another component - a Portlet Manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:33
msgid "For more information take a look at:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:35
msgid ""
"The `Anatomy of a Portlet <http://plone.org/documentation/manual/theme-"
"reference/elements/portlet/anatomy>`_ section of this manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:18
msgid ""
"`http://plone.org/documentation/how-to/override-the-portlets-in-plone-3.0/ "
"<http://plone.org/documentation/how-to/override-the-portlets-in-"
"plone-3.0/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:39
msgid ""
"`http://plone.org/documentation/tutorial/customization-for-developers"
"/portlet-renderers/ <http://plone.org/documentation/tutorial/customization-"
"for-developers/portlet-renderers/>`_ (for a much more technical explanation)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:8
msgid ""
"`http://plone.org/documentation/how-to/adding-portlet-managers "
"<http://plone.org/documentation/how-to/adding-portlet-managers>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:44
msgid "View (Browser View)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:46
msgid ""
"We gave one definition of the term \"view\" above in the `skin section "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin>`_. However, behind the scenes, in the context"
" of components, View has a more technical meaning. It refers to a component "
"which is usually made up of a Python class or a template or both and, put "
"simply, processes the data from a content item before it reaches the page. "
"There's a `technical explanation <http://plone.org/plone-developer-"
"reference/patterns/views/>`_ in the Plone Developer Manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:56
msgid ""
"You'll sometimes see it referred to as BrowserView or <browser:page> and in "
"templates you'll see a browser view's name prefaced by @@. We look at "
"browser views again in the section on `putting a page together "
"<http://plone.org/documentation/manual/theme-reference/page>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:61
msgid ""
"Note that the term browser and the browser namespace are used to demarcate "
"presentational components – that is, those bits of code which go to make up "
"elements which will find their way to a web browser at some point."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:67
msgid "Resource (Browser Resource) & ResourceDirectory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:69
msgid ""
"Although we've indicated that the skin and layers are the usual home of page"
" templates, images and style sheets, it is also possible to turn them into "
"components by registering them in ZCML. In this case you'll see them "
"referred to like this ++resource++[resource name]. The same can be done for "
"a directory containing templates and style sheets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/viewletsandportlets.rst:75
msgid ""
"“Oh great”, I can hear you saying, “so which should I use, components or "
"skins?” Go to the section `Skin or Components? "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/skinorcomponents>`_ for a discussion of "
"the pros and cons. At the time of writing we suggest the simpler option is "
"to keep your templates, images and style sheets in your skin. We're just "
"mentioning browser resources so that you know what they are if you encounter"
" them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:2
msgid "Component Wiring and ZCML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:4
msgid "About components and how they are wired together"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:6
msgid ""
"|diagram of a component|\\ Components are powerful and flexible tools in "
"Plone 3, but a little more abstract than page templates or Python scripts. "
"As the diagram on the right attempts to show, they are normally combinations"
" of Python classes and page templates wired together in Zope Configuration "
"Language (ZCML) and given a name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:12
msgid "There are two important things to remember about components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:14
msgid ""
"Components are compounds of classes, templates, interfaces, permissions etc."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:16
msgid ""
"To track components down you need to look in .zcml files first, locate their"
" names, and that will lead you to the classes and templates that contribute "
"to them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:22
msgid "Components come into existence when your Zope Instance is started up"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:20
msgid ""
"Provided Zope has read the .zcml file, a component will be available to use."
" You can't overwrite existing components, better to create your own, reusing"
" some of the parts."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:25
msgid "Parts of a Component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:27
msgid ""
"A component comes into being via a ZCML \"directive\" (there's an example of"
" one of these below). The directive will have a series of \"attributes\" "
"which will point to the various parts that go into its creation. These parts"
" have four main functions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:32
msgid ""
"To **identify** the component (in the case of a viewlet this will usually be"
" done with a \"name\" attribute)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:34
msgid ""
"To **compute**\\ the information the component is supposed to display (this "
"is usually done with a Python class, and pointed to with a \"class\" "
"attribute). For example, in the case of the navigation tree, this would be "
"working out which part of the tree should be displayed for each page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:39
msgid ""
"To **display** the information the component's class has computed (this is "
"usually done with a page template)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:41
msgid ""
"To **restrict** the display of the component. In the case of a viewlet, this"
" could be restricting it to display only to certain logged-in users (by "
"using the \"permission\" attribute) or restricting it to display only with "
"specific content types (by using the \"for\" attribute)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:47
msgid ""
"There's more about this in the `component parts "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/componentparts>`_ section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:52
msgid "Zope Configuration Language (ZCML)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:54
msgid ""
"The `Five Tutorial on WorldCookery.com "
"<http://worldcookery.com/files/ploneconf05-five/step2.html>`_ will walk you "
"through ZCML, and there are plenty of examples in tutorials on the plone "
"documentation site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:59
msgid ""
"Here's a sample ZCML directive conjuring up the presentation viewlet (which "
"simply provides a link to a presentation version of a page):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:75
msgid "There are three things to note:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:77
msgid ""
"Like any kind of XML, ZCML uses namespaces - watch out for these if you're "
"writing your own ZCML file. For theme components, you'll mostly use the "
"browser namespace."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:80
msgid ""
"ZCML attributes often refer to interfaces rather than actual content types, "
"classes or components (see the *for* and *manager* attributes in the example"
" above). You'll find more about interfaces in a `later section "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/componentparts/interfaces>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:84
msgid ""
"Look at the class attribute and you'll see it begins with a leading dot. "
"This means you can find it in the same directory as the ZCML file itself. If"
" it isn't within the same directory you'll need to give the full name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:89
msgid ""
"You can get detailed information about ZCML directives in the ZCML Reference"
" section of the Zope 3 API - `http://apidoc.zope.org/++apidoc++/ "
"<http://apidoc.zope.org/++apidoc++/>`_. If you want to be very disciplined "
"and tidy, consult the ZCMLStyleGuide "
"`http://wiki.zope.org/zope3/ZCMLStyleGuide "
"<http://wiki.zope.org/zope3/ZCMLStyleGuide>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/components/wiring.rst:98
msgid ""
"component| image:: http://plone.org/documentation/manual/theme-"
"reference/images/component.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:2
msgid "Generic Setup XML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:4
msgid "The language used to define profiles."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:6
msgid ""
"The XML used for profile files is straightforward. There's no DTD available,"
" but there are plenty of examples to reuse or adapt for your purposes. If "
"all of this seems too much, the good news is that you can get Generic Setup "
"to write the files for you by exporting the configuration from an existing "
"site. There's more information on how to do this on the Generic Setup Tool "
"page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:13
msgid "The root node of an XML profile is usually an object:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:21
msgid ""
"which corresponds to a particular site tool (in this case the JavaScripts "
"registry). Sub-nodes represent sub-objects and XML attributes correspond to "
"the attributes of those classes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:30
msgid ""
"So, in this case, the sub-node represents an entry in the JavaScripts "
"registry and its tick boxes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:37
msgid "screenshot of the javascripts registry in the ZMI"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/gsxml.rst:38
msgid ""
"In the very unlikely event that you need to work out for yourself what "
"attributes to use, you'll need to investigate the API (or the interfaces and"
" classes) of the tool in question. Use `http://api.plone.org "
"<http://api.plone.org>`_ or dig into the source code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:4
msgid ""
"How configuration works through the web and how to track down files on the "
"file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:10
msgid ""
"There are a number of different routes to configure your site through the "
"web. The `Elements <http://plone.org/documentation/manual/theme-"
"reference/elements/elementsindex>`_ section of this manual should give you "
"pointers on where to look to configure particular page elements. In general"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:16
msgid "Site Setup leads you to configlets for the site settings"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:17
msgid ""
"Site Setup > Zope Management Interface will lead you to the style sheet and "
"JavaScript registry (portal\\_css and portal\\_javascripts)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:19
msgid "Adding /@@viewlet\\_manager to a URL will enable you to order viewlets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:22
msgid "Plone Default Configuration on the File System"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:24
msgid "You will find most of the configuration files you need in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:26
msgid "[your products location]/CMFPlone/profiles/default"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:28
msgid ""
"However, be aware that some configuration files may be located in third-"
"party products. For instance, if you want to add some styles to the visual "
"editor, Kupu, as part of your theme, then you will need kupu.xml which "
"you'll find in [your products location]/kupu/plone/profiles/default."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:34
msgid ""
"There's an alternative to hunting around the file system, and that's to use "
"the Generic Setup Tool to export the profile."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:43
msgid "|The configuration directory in your theme product|/profiles/default/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:41
msgid ""
"This directory holds the XML for Generic Setup. The plone3\\_theme paster "
"template will have provided you with some ready-made files - for setting up "
"your skin layers, registering your style sheets and JavaScript, and ordering"
" your viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:46
msgid "/profiles/default/import\\_steps.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:46
msgid ""
"Is an essential file for installation, you shouldn't need to change this."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:50
msgid "/profiles/default/cssregistry.xml \\| jssregistry.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:49
msgid ""
"will register any style sheets and JavaScript in your skin. You will have to"
" edit these yourself if you have any css or Javascript files to add."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:54
msgid "/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:53
msgid ""
"Will drop your skin layers into the right order of precedence. You won't "
"need to change this unless you've renamed, removed, or added directories in "
"the skins directory of your theme egg."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:57
msgid ""
"will determine in what order viewlets appear in viewlet managers. You will "
"need to edit this yourself if you want to add your own viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:62
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:14
msgid "/profiles.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:61
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:16
msgid ""
"When your Zope instance starts up, this file makes the profile available for"
" Generic Setup to use."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/locations.rst:65
msgid ""
"product| image:: http://plone.org/documentation/manual/theme-"
"reference/images/your_theme_egg_config_cutdown.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:2
msgid "Profiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:4
msgid "Configuration and profiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:6
msgid ""
"Configuration refers to the default behaviour of a site (for instance, "
"whether you allow people to sign up to your site, or how dates are "
"displayed). You're likely to want some of this behaviour to be embedded in "
"your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:11
msgid ""
"There is also some overlap between Components, Skins, and Configuration. For"
" instance, the order of skin layers and the order in which viewlets appear "
"within a viewlet manager are considered aspects of configuration."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:16
msgid "Profile"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:18
msgid ""
"A profile is a set of configuration files. Each file is written in fairly "
"simple XML and refers to a particular group of components or page elements. "
"There are two different types of profile, base profiles and extension "
"profiles. For theme purposes you will only ever need to use an extension "
"profile (i.e., a profile that extends the configuration of an existing "
"site)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:25
msgid ""
"A profile comes into being when it is wired up by ZCML. Here's the version "
"created by the plone3\\_theme paster template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/profiles.rst:38
msgid ""
"You'll see that it points at a directory for the location of the XML files "
"and indicates that it is an extension profile by using an interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:2
msgid "The Generic Setup Tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:4
msgid "The Generic Setup tool is used to apply your profiles to your site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:6
msgid "You can find the Generic Setup tool here"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:8
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:43
msgid "Site Setup > Zope Management Interface > portal\\_setup"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:10
msgid ""
"You can run the tool manually, but for theme purposes, if you have created a"
" product using the plone3\\_theme paster template, Generic Setup will be "
"triggered automatically when you install your theme in your site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:15
msgid ""
"You'll find more extensive information about the Generic Setup Tool in this "
"tutorial:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:18
msgid ""
"`Understanding and Using Generic Setup on plone.org "
"<http://plone.org/tutorial/genericsetup/exports-snapshots-and-comparisons>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:21
msgid "However, there are two useful facts to know about it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:24
msgid "No Undo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:26
msgid ""
"Although you can uninstall your theme using portal\\_quickinstaller, at "
"present, you can't undo the profiles Generic Setup applied during "
"installation. For the most part, this isn't a problem, but it can get "
"confusing - if, for instance, you are experimenting with the order of your "
"viewlets and have tried several versions of viewlets.xml in successive "
"installations. In this case, exporting a profile (explained below) can help "
"you make sense of what you've done."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:35
msgid "Exporting Profiles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:37
msgid ""
"You can export the current configuration of your site as a set of XML files."
" This can be helpful if you're not quite sure what you've done, if you're "
"searching for a profile to base your own configuration on, or if you just "
"want the Generic Setup Tool to write out a configuration for you."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:44
msgid "Click the Export tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:45
msgid "Select the steps you wish to export"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:46
msgid "Click the Export Selected Steps button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:47
msgid "You'll be given a zip file with the relevant XML files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/configuration/tool.rst:49
msgid ""
"It isn't always obvious which export step you need to get the exact "
"configuration you want, you may need to experiment."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:4
msgid ""
"An overview of the building blocks and how they fit together to create a "
"theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:7
msgid ""
"There are really three main building blocks in a theme. The diagram below "
"shows you how these slot together:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:13
msgid "Skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:15
msgid ""
"deals with the overall construction of a page and the delivery of content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:17
msgid ""
"comprises page templates, macros, and Python scripts, and is also the place "
"to put style sheets and JavaScript"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:19
msgid ""
"to help you understand these we'll point you in the direction of tutorials "
"on the templating language TAL and introduce you to skin layers and order of"
" precedence"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:22
msgid "to find skin elements, look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:24
msgid "portal\\_skins in the Zope Management Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:25
msgid "the skins directory in a file system product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:28
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:2
msgid "Components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:30
msgid ""
"the Components part deals (mostly) with page furniture - the page elements "
"which have some level of consistency from page to page along with page "
"elements involving a level of processing - such as the navigation tree, RSS "
"feeds"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:34
msgid ""
"deploys a mixture of Python classes and page templates to create viewlets, "
"portlets and browser views"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:36
msgid ""
"to help you understand these, we'll give you an overview of how they are "
"wired together with ZCML, and we'll give you the briefest of introductions "
"to the bits you really need to know about Python classes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:40
msgid "to find the pieces that go together to make a component, look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:42
msgid "portal\\_view\\_customizations in the Zope Management Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:43
msgid "the browser directory in a file system product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:46
msgid "Configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:48
msgid ""
"the Configuration part deals with setting the order of some page elements "
"(or individual items) on the page and with automatically setting some of the"
" configuration you would otherwise make manually through the Site Setup "
"interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:52
msgid ""
"to help you understand the configuration, we'll point you in the direction "
"of the main tools for manual configuration, give you a quick overview of the"
" Generic Setup Tool and the XML used for automatic configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/overview.rst:56
msgid ""
"configuration tools are found in several places in the site, but the files "
"required to run a configuration automatically are found in the profiles "
"directory of a file system product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:4
msgid ""
"The page furniture, viewlets, portlets, and their managers. How to make your"
" own and where to find the bits you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:7
msgid ""
"`Component Wiring and ZCML <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/wiring>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:9
msgid ""
"`Viewlets, Portlets and Other Components "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/viewletsandportlets>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:11
msgid ""
"`Customizing or Creating New <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/customizing>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:13
msgid ""
"`Component Parts <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/componentparts>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:16
msgid ""
"`Interfaces and why they matter <http://plone.org/documentation/manual"
"/theme-reference/buildingblocks/components/componentparts/interfaces>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:18
msgid ""
"`Python Classes <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/componentparts/pythonclasses>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:20
msgid ""
"`Permission <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/componentparts/permissions>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:22
msgid ""
"`Making Components Theme Specific <http://plone.org/documentation/manual"
"/theme-reference/buildingblocks/components/themespecific>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:24
msgid ""
"`Skin or Components? <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/skinorcomponents>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:26
msgid ""
"`Where to find what you need <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/locations>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/components.rst:29
msgid ""
"`All content on one page (useful for printing, presentation mode etc.) "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/referencemanual-all-pages>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:2
msgid "Making and Naming your own Skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:4
msgid "How do you actually create a Skin?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:7
msgid "Through the ZMI"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:9
msgid "Go to Site Setup > Zope Management Interface > portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:10
msgid "Click the Properties tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:11
msgid "Choose Add New and give your skin a name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:12
msgid ""
"You can now type in a list of the layers you want to use, in the order you "
"want to use them"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:14
msgid "Finally, at the bottom of the page, set your new skin as the default"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:19
msgid ""
"If you use the plone3\\_theme paster template, code will be provided which, "
"when your theme product is installed, will register your skin directories as"
" skin layers and put these together into a new skin."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:23
msgid ""
"The paster template gives you the option of basing your skin on Plone "
"Default. That is, when you install the theme in your site, the Plone skin "
"layers will be added to yours - but below yours in the order of precedence. "
"This is a good idea, you can then re-use bits of Plone Default without "
"duplicating it, and overwrite the bits you don't want."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:29
msgid "The key steps are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:31
msgid ""
"Register your skin directories as Filesystem Directory Views, so that they "
"can become skin layers. This happens in two places:[your theme "
"package]/skins.zcml and [your theme package]/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:47
msgid ""
"Add and organize your skin layers into a skin in [your theme "
"package]/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:57
msgid ""
"Set your skin as the default skin in [your theme "
"package]/profiles/default/skins.xml by wrapping this node around the nodes "
"in the previous two examples."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:69
msgid "About the Skin Name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:71
msgid ""
"The name of your skin is required in a few places in your theme product. It "
"is worth knowing where and why, so, for reference, the occurrences are "
"listed here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:75
msgid "Where"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:77
msgid "Attributes/Directives used"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:79
msgid "Use"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:81
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:87
msgid "profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:83
msgid "<skin\\_path name=\"[your skin name]\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:85
msgid "Used to name your set of skin layers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:89
msgid "<object name=\"portal\\_skins\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:91
msgid "default\\_skin=\"[your skin name]\">"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:93
msgid "Used to set your set of skin layers as the default skin."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:95
msgid "browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:97
msgid "<interface …"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:99
msgid "name=\"[your skin name]\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:101
msgid "/>"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:103
msgid ""
"Used to name the theme specific interface (see `Components "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin/components>`_ section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:107
msgid "profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:109
msgid "<order manager=\"plone.portalfooter\" skinname=\"[your skin name]\""
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:111
msgid ">"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:113
msgid "Used to specify the theme when reordering viewlets in viewlet managers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/making.rst:115
msgid ""
"(see `Components <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin/components>`_ section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:2
msgid "Skin Layers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:4
msgid ""
"Templates, scripts, images, CSS and JavaScript files are organized with skin"
" layers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:7
msgid ""
"Note: in the context of components, \"layer\" has a slightly different "
"meaning."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:10
msgid ""
"A skin is comprised of a series of skin layers. On the file system, each "
"layer is a directory. In the Zope Management Interface (ZMI), each layer "
"appears in portal\\_skins as a separate folder (containing page templates, "
"style sheets or Python scripts)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:19
msgid "These have two uses."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:21
msgid ""
"Firstly they keep things organized. If you take a look at the Plone Default "
"Skin (part of which is shown in portal\\_skins in the screenshot above) "
"you'll see that they've separated out templates, scripts, styles and images "
"into separate skin layers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:25
msgid ""
"More importantly they have an order of precedence. This means that an item "
"named main\\_template in the top layer will be found and used before an item"
" named main\\_template in the bottom layer. We will go into this in more "
"detail on the next page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:30
msgid ""
"To create a skin layer through the web, simply add a new folder. On the file"
" system, add a directory to your skins directory. You will also need to add "
"a small amount of configuration to ensure that your directory is found and "
"registered as a skin layer on installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:35
msgid "Firstly, in [your theme package]/skins.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:42
msgid "Next, in [your theme package]/profiles/default/skins.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/overview.rst:50
#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:62
msgid "and"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:2
msgid "Customizing through Order of Precedence"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:4
msgid "How skin layers work and how they can be used in customization."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:6
msgid ""
"If you've worked with Plone 2, you'll be familiar with this type of "
"customization. As we mentioned earlier, the order of layers in a skin "
"determines which page templates, CSS files and Python scripts are processed "
"first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:11
msgid "To inspect the order of precedence:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:13
msgid "Site > Zope Management Interface > portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:14
msgid "click the Properties tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:16
msgid ""
"You should see the layers of the Plone Default skin listed there. Layers "
"such as 'plone\\_templates' come from the main Plone theme but there will "
"also be layers providing templates from specific add-on products (the visual"
" editor kupu for instance)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:21
msgid ""
"|screenshot of Skin layers in the ZMI|\\ When asked to process a specific "
"template, Plone will work from the top of this list downwards, looking in "
"each layer in turn to retrieve the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:25
msgid ""
"At the top is a custom layer; any template placed in here will be found and "
"used first. So, to create your own version of a Plone template or CSS file, "
"give it the same name as the Plone version but put it in the custom layer."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:30
msgid ""
"This is the simplest approach, but just ensuring that your version lives in "
"a layer higher in the order of precedence in a skin than the main Plone "
"theme layers will be enough to ensure that Plone finds it first and ignores "
"the original version."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:35
msgid "This technique can be used in two ways"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:40
msgid "using the custom folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:38
msgid ""
"through the Zope Management Interface, you can add your own versions of "
"templates, style sheets etc to the custom folder. This always comes at the "
"top, so you can be sure your versions will be found first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:46
msgid "adding your own skin layers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:43
msgid ""
"in your own theme product on the file system, create one or two skin layers,"
" and ensure that on installation these layers are put just below the custom "
"folder in the order or precedence. There's more information on how to do "
"this in the next section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:48
msgid ""
"Probably the most comprehensive description of skins, layers and order or "
"precedence can be found in the first two sections of `Chapter 7 of The "
"Definitive Guide to Plone <http://docs.neuroinf.de/PloneBook/ch7.rst>`_ "
"(note that most of this book refers to Plone 2, but these sections are still"
" relevant for Plone 3)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/layers/precedence.rst:56
msgid ""
"ZMI| image:: http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/images/order_of_precedence.gif"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:4
msgid "Where the skin lives in Plone and in your own theme product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:9
msgid ""
"You can customize all page templates, skins and CSS very easily through the "
"web."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:12
msgid "Site Setup > Zope Management Interface > portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:14
msgid ""
"Locate the item you want to change, click the customize button and a copy "
"will be dropped into the custom layer for you."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:17
msgid ""
"You can also add new page templates, Python scripts and files (for CSS and "
"JavaScript) to the custom layer by using the drop-down list in the ZMI. In "
"most cases, though, you will find it easier to locate a template you want to"
" base your new template on, customize it and then rename it through the ZMI."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:23
msgid ""
"Don't forget that, if you're hunting for something, the Find tab in the ZMI "
"can be very useful."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:27
msgid "Plone Default Skin on the File System"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:29
msgid ""
"All the page templates, style sheets, scripts and JavaScript for the Plone "
"Default skin can be found in the CMFPlone product:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:37
msgid "[your products directory]/CMFPlone/skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:33
msgid ""
"You'll see there are a number of directories corresponding to specific skin "
"layers. Most of this should be self-explanatory, but its worth remembering "
"that only the generic templates live in plone\\_templates. If you want to "
"track down a specific content view (e.g., document\\_view) then you'll need "
"to look in plone\\_content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:42
msgid "|The skins folder in your theme product|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:50
msgid "/skins/[your theme namespace].[your theme name]\\_custom\\_templates \\|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:45
msgid "custom\\_images \\| styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:47
msgid ""
"These directories will form your skin layers. Your templates, images, and "
"style sheets can go here. If you asked it to, the plone3\\_theme paster "
"template will have provided blank style sheets to override the Plone Default"
" ones."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:54
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:15
msgid "/skins.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:53
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:17
msgid ""
"When your Zope instance starts up, this turns your directories into skin "
"layers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:56
msgid "|Subsidiary files used for installing and setting up the Skin|"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:58
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:20
msgid "/profiles/default/skins.xml \\| cssregistry.xml \\| jsregistry.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/locations.rst:60
msgid ""
"When your theme is installed in your Plone site, these set up the hierarchy "
"of skin layers, and register your style sheets and JavaScript with the "
"registries"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:2
msgid "The Custom Style Sheet and Base Properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:4
msgid ""
"You can do a great deal by simply overriding Plone's existing styles. "
"There's a stylesheet available for just this purpose."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:7
msgid "You'll find an empty stylesheet called ploneCustom.css in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:9
msgid "[your products directory]/CMFPlone/skins/plone\\_styles or"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:10
msgid "Site Setup > Zope Management Interface > portal\\_skins > plone\\_styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:13
msgid ""
"This stylesheet is always loaded last on a page, and can be used, therefore,"
" to override any other styles. There's an excellent and comprehensive "
"tutorial on this here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:17
msgid ""
"`http://plone.org/documentation/tutorial/working-with-css "
"<http://plone.org/documentation/manual/tutorial/working-with-css>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:22
msgid "DTML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:24
msgid ""
"You'll see that ploneCustom.css has a .dtml extension, and the CSS inside is"
" wrapped in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:33
msgid ""
"DTML is another Zope templating language, which in this case is deployed so "
"that particular variables can be picked up from a properties sheet "
"(base\\_properties.props) - for example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/style-sheets/customstylesheet.rst:46
msgid ""
"We wouldn't recommend using this technique as it is likely to be phased out,"
" but it is as well to know that it is there. You can sometimes get caught "
"out if you're customizing ploneCustom.css and accidentally delete the top or"
" bottom \"dtml-with\" statement, or forget to add the .dtml extension."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:2
msgid "Advanced Usage"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:4
msgid ""
"In this part we'll look at some more advanced features of the Template "
"Attribute Language, including a more in-depth look at the TAL Expression "
"Syntax (TALES)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:9
msgid "Mixing and Matching Statements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:11
msgid ""
"As you have seen in the example template, you can put more than one TAL "
"statement on the same tag. There are three limits you should be aware of, "
"however:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:15
msgid ""
"Only one of each kind of statement can be used on a single tag. Since HTML "
"does not allow multiple attributes with the same name, you can't have two "
"``tal:define`` on the same tag."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:19
msgid ""
"Both of ``tal:content`` and ``tal:replace`` cannot be used on the same tag, "
"since their functions conflict."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:22
msgid ""
"The order in which you write TAL attributes on a tag does not affect the "
"order in which they execute. No matter how you arrange them, the TAL "
"statements on a tag always execute in the following order: ``define``, "
"``condition``, ``repeat``, ``content`` / ``replace``, ``attributes``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:28
msgid ""
"To get around these limits, you can add another tag and split up the "
"statements between the tags. If there is no obvious tag type that would fit,"
" use ``span`` or ``div``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:32
msgid ""
"For example, if you want to define a variable for each repetition of a "
"paragraph, you can't place the ``tal:define`` on the same tag as the "
"``tal:repeat``, since the definition would happen before all of the "
"repetitions. Instead, you would write either of the following:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:51
msgid ""
"Note: the definition of \"n\" is actually not much useful in this example "
"because we could have directly used \"repeat/ph/number\" in the replace "
"attribute which only occurs once, but it serves our purpose."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:56
msgid "Statements with Multiple Parts"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:58
msgid ""
"If you need to set multiple attributes on a tag, you can't do it by placing "
"multiple ``tal:attributes`` statements on the tag, and splitting them across"
" tags is useless."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:62
msgid ""
"Both the ``tal:attributes`` and ``tal:define`` statements can have multiple "
"parts in a single statement. You separate the parts with semicolons (``;``),"
" so any semicolon appearing in an expression in one of these statements must"
" be escaped by doubling it (``;;``). Here is an example of setting both the "
"``src`` and ``alt`` attributes of an image:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:73
msgid "Here is a mixture of variable definitions:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:79
msgid ""
"**Note:** in Plone 4 or newer you can use *context/items* instead of "
"*context/objectIds*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:83
msgid "String Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:85
msgid ""
"String expressions allow you to easily mix path expressions with text. All "
"of the text after the leading ``string:`` is taken and searched for path "
"expressions. Each path expression must be preceded by a dollar sign (``$``)."
" If it has more than one part, or needs to be separated from the text that "
"follows it, it must be surrounded by braces (``{}``). Since the text is "
"inside of an attribute value, you can only include a double quote by using "
"the entity syntax ``&quot;``. Since dollar signs are used to signal path "
"expressions, a literal dollar sign must be written as two dollar signs "
"(``$$``). For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:105
msgid "Nocall Path Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:107
msgid ""
"An ordinary path expression tries to render the object that it fetches. This"
" means that if the object is a function, Script, Method, or some other kind "
"of executable thing, then the expression will evaluate to the result of "
"calling the object. This is usually what you want, but not always. For "
"example, if you want to put a DTML Document into a variable so that you can "
"refer to its properties, you can't use a normal path expression because it "
"will render the Document into a string."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:115
msgid ""
"If you put the ``nocall:`` expression type prefix in front of a path, it "
"prevents the rendering and simply gives you the object. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:124
msgid ""
"This expression type is also valuable when you want to define a variable to "
"hold a function or class from a module, for use in a Python expression."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:129
msgid "Other Builtin Variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:131
msgid ""
"You have already seen some examples of the builtin variables ``template``, "
"``user``, ``repeat``, and ``request``. Here is a more complete list of the "
"other builtin variables and their uses:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:136
msgid ""
"A false value, similar to a blank string, that you can use in "
"``tal:replace`` or ``tal:content`` to erase a tag or its contents. If you "
"set an attribute to ``nothing``, the attribute is removed from the tag (or "
"not inserted), unlike a blank string. Equivalent to ``None`` in Python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:142
msgid ""
"A special value that doesn't change anything when used in ``tal:replace``, "
"``tal:content``, or ``tal:attributes``. It leaves the template text in "
"place."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:145
msgid "options"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:146
msgid "The *keyword* arguments, if any, that were passed to the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:149
msgid "attrs"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:148
msgid ""
"A dictionary of attributes of the current tag in the template. The keys are "
"the attributes names, and the values are the original values of the "
"attributes in the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:152
msgid "root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:152
msgid ""
"The root Zope object. Use this to get Zope objects from fixed locations, no "
"matter where your template is placed or called."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:155
msgid ""
"The object on which the template is being called. This is often the same as "
"the *container*, but can be different if you are using acquisition. Use this"
" to get Zope objects that you expect to find in different places depending "
"on how the template is called."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:160
msgid "An (older) alias for *context*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:163
msgid "container"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:162
msgid ""
"The container (usually a Folder) in which the template is kept. Use this to "
"get Zope objects from locations relative to the template's permanent home."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:166
msgid ""
"Contains the complete information about the current HTTP request that Zope "
"is processing. See `this page in the zope.org wiki "
"<http://wiki.zope.org/zope2/REQUESTX>`_ for further info about the request "
"object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:171
msgid ""
"The collection of Python modules available to templates. See the section on "
"writing Python expressions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:174
msgid ""
"For templates called from a Zope 3-style view *only*, this variable refers "
"to the associated view class. This may then contain functions and variables "
"prepared explicitly for the template to output"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:179
msgid "Alternate Paths"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:181
msgid ""
"The path ``template/title`` is guaranteed to exist every time the template "
"is used, although it may be a blank string. Some paths, such as "
"``request/form/x``, may not exist during some renderings of the template. "
"This normally causes an error when the path is evaluated."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:186
msgid ""
"When a path doesn't exist, you often have a fallback path or value that you "
"would like to use instead. For instance, if ``request/form/x`` doesn't "
"exist, you might want to use ``context/x`` instead. You can do this by "
"listing the paths in order of preference, separated by vertical bar "
"characters (``|``):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:196
msgid ""
"Two variables that are very useful as the last path in a list of alternates "
"are ``nothing`` and ``default``. Use ``nothing`` to blank the target if none"
" of the paths is found, or ``default`` to leave the example text in place."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:201
msgid ""
"You can also test the existence of a path directly with the ``exists:`` "
"expression type prefix. A path expression with ``exists:`` in front of it is"
" true if the path exists, false otherwise. These examples both display an "
"error message only if it is passed in the request:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:215
msgid "Dummy Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:217
msgid ""
"You can include page elements that are visible in the template but not in "
"generated text by using the builtin variable ``nothing``, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:226
msgid ""
"This can be useful for filling out parts of the page that will take up more "
"of the generated page than of the template. For instance, a table that "
"usually has ten rows will only have one row in the template. By adding nine "
"dummy rows, the template's layout will look more like the final result."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:233
msgid "Inserting Structure"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:235
msgid ""
"Normally, the ``tal:replace`` and ``tal:content`` statements quote the text "
"that they insert, converting ``<`` to ``&lt;``, for instance. If you "
"actually want to insert the unquoted text, you need to precede the "
"expression with the ``structure`` keyword. Given a variable ``copyright`` "
"with a string value of \"© 2008 By <b>Me</b>\", the following two lines:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:247
msgid ""
"...will generate \"© 2001 By <b>Me</b>\" and \"© 2001 By **Me**\", "
"respectively."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:250
msgid ""
"This feature is especially useful when you are inserting a fragment of HTML "
"that is stored in a property or generated by another Zope object. For "
"instance, you may have news items that contain simple HTML markup such as "
"bold and italic text when they are rendered, and you want to preserve this "
"when inserting them into a \"Top News\" page. In this case, you might write:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:263
msgid "Basic Python Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:265
msgid ""
"A Python expression starts with ``python:``, followed by an expression "
"written in the Python language. Python is a simple and expressive "
"programming language. If you have never encountered it before, you should "
"read one of the excellent tutorials or introductions available at the "
"official website `http://www.python.org <http://www.python.org/>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:271
msgid ""
"A Page Template Python expression can contain anything that the Python "
"language considers an expression. You can't use statements such as ``if`` "
"and ``while``, and Zope's security restrictions are applied."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:276
msgid "Comparisons"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:278
msgid ""
"One place where Python expressions are practically necessary is in "
"``tal:condition`` statements. You usually want to compare two strings or "
"numbers, and there isn't any other way to do that. You can use the "
"comparison operators ``<`` (less than), ``>`` (greater than), ``==`` (equal "
"to), and ``!=`` (not equal to). You can also use the boolean operators "
"``and``, ``not``, and ``or``. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:294
msgid ""
"Sometimes you want to choose different values inside a single statement "
"based on one or more conditions. You can do this with the ``test`` function,"
" like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:310
msgid "Using other Expression Types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:312
msgid ""
"You can use other expression types inside of a Python expression. Each type "
"has a corresponding function with the same name, including ``path()``, "
"``string()``, ``exists()``, and ``nocall()``. This allows you to write "
"expressions such as:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:323
msgid ""
"The final example has a slightly different meaning than the path expression "
"\"request/form/x \\| default\", since it will use the default text if "
"\"request/form/x\" doesn't exists *or* if it is false."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:328
msgid "Getting at Zope Objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:330
msgid ""
"Much of the power of Zope involves tying together specialized objects. Your "
"Page Templates can use Scripts, SQL Methods, Catalogs, and custom content "
"objects. In order to use them, you have to know how to get access to them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:335
msgid ""
"Object properties are usually attributes, so you can get a template's title "
"with the expression \"template.title\". Most Zope objects support "
"acquisition, which allows you to get attributes from \"parent\" objects. "
"This means that the Python expression \"context.Control\\_Panel\" will "
"acquire the Control Panel object from the root folder. Object methods are "
"attributes, as in \"context.objectIds\" and \"request.set\". Objects "
"contained in a folder can be accessed as attributes of the folder, but since"
" they often have Ids that are not valid Python identifiers, you can't use "
"the normal notation. For example, instead of writing "
"\"context.penguin.gif\", you must write \"getattr(context, 'penguin.gif')\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:346
msgid ""
"Some objects, such as ``request``, ``modules``, and Zope Folders support "
"item access. Some examples of this are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:353
msgid ""
"When you use item access on a Folder, it doesn't try to acquire the name, so"
" it will only succeed if there is actually an object with that Id contained "
"in the folder."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:357
msgid ""
"Path expressions allow you to ignore details of how you get from one object "
"to the next. Zope tries attribute access, then item access. You can write "
"\"context/images/penguin.gif\" instead of \"python:getattr(context.images, "
"'penguin.gif')\", and \"request/form/x\" instead of "
"\"python:request.form['x']\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:363
msgid ""
"The tradeoff is that path expressions don't allow you to specify those "
"details. For instance, if you have a form variable named \"get\", you must "
"write \"python:request.form['get']\", since \"request/form/get\" will "
"evaluate to the \"get\" *method* of the form dictionary."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:369
msgid "Using Scripts"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:371
msgid ""
"Script objects are often used to encapsulate business logic and complex data"
" manipulation. Any time that you find yourself writing lots of TAL "
"statements with complicated expressions in them, you should consider whether"
" you could do the work better in a script."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:376
msgid ""
"Each script has a list of parameters that it expects to be given when it is "
"called. If this list is empty, then you can use the script by writing a path"
" expression. Otherwise, you will need to use a Python expression, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:386
msgid ""
"If you want to return more than a single bit of data from a script to a page"
" template, it is a good idea to return it in a dictionary. That way, you can"
" define a variable to hold all the data, and use path expressions to refer "
"to each bit. For example, supposing we have a ``getPerson`` script which "
"returns a dictionary like ``{'name':'Fred', 'age':25}``:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:399
msgid "Calling DTML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:401
msgid ""
"DTML is another templating language made available by Zope, mostly replaced "
"by ZPT nowadays, but still in use. You can read more about it in `the "
"relevant chapter of the Zope Book "
"<http://www.zope.org/Documentation/Books/ZopeBook/current/DTML.stx>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:406
msgid ""
"Unlike Scripts, DTML Methods don't have an explicit parameter list. Instead,"
" they expect to be passed a client, a mapping, and keyword arguments. They "
"use these to construct a namespace."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:410
msgid ""
"When Zope's ZPublisher publishes a DTML object, it passes the context of the"
" object as the client, and the REQUEST as the mapping. When one DTML object "
"calls another, it passes its own namespace as the mapping, and no client."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:415
msgid ""
"If you use a path expression to render a DTML object, it will pass a "
"namespace with ``request``, ``context``, and the template's variables "
"already on it. This means that the DTML object will be able to use the same "
"names as if it were being published in the same context as the template, "
"plus the variable names defined in the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:422
msgid "Python Modules"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:424
msgid ""
"The Python language comes with a large number of modules, which provide a "
"wide variety of capabilities to Python programs. Each module is a collection"
" of Python functions, data, and classes related to a single purpose, such as"
" mathematical calculations or regular expressions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:429
msgid ""
"Several modules, including \"math\" and \"string\", are available in Python "
"Expressions by default. For example, you can get the value of *pi* from the "
"math module by writing \"python:math.pi\". To access it from a path "
"expression, however, you need to use the ``modules`` variable. In this case,"
" you would use \"modules/math/pi\". Please refer to the Zope Book or a DTML "
"reference guide for more information about these modules."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:436
msgid ""
"The \"string\" module is hidden in Python expressions by the \"string\" "
"expression type function, so you need to access it through the ``modules`` "
"variable. You can do this directly in an expression in which you use it, or "
"define a global variable for it, like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:446
msgid ""
"Modules can be grouped into packages, which are simply a way of organizing "
"and naming related modules. For instance, Zope's Python-based Scripts are "
"provided by a collection of modules in the \"PythonScripts\" subpackage of "
"the Zope \"Products\" package. In particular, the \"standard\" module in "
"this package provides a number of useful formatting functions that are "
"standard in the DTML \"Var\" tag. The full name of this module is "
"\"Products.PythonScripts.standard\", so you could get access to it using "
"either of the following statements:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:460
msgid ""
"Most Python modules cannot be accessed from Page Templates, DTML, or Scripts"
" unless you add Zope security assertions to them. That's outside the scope "
"of this document, and is covered by the `Zope Security Guide "
"<http://www.zope.org/Documentation/Books/ZDG/current/Security.stx>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:466
msgid "Special HTML attributes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:468
msgid ""
"The HTML boolean attributes checked\\ *,* selected, *nowrap*, *compact*, "
"*ismap*, *declare*, *noshade*, *disabled*, *readonly*, *multiple*, "
"*selected* and *noresize* are treated differently by tal:attributes. The "
"value is treated as true or false (as defined by tal:condition). The "
"attribute is set to attr=”attr” in the true case and omitted otherwise. If "
"the value is default, then it is treated as true if the attribute already "
"exists, and false if it does not. For example, each of the following lines:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:483
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:497
msgid "will render as:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:489
msgid "while each of these:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:503
msgid ""
"This article contains information and examples from the `Zope Book "
"<http://docs.zope.org/zope2/zope2book/source/index.html>`_, © `Zope "
"Developers Community."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/advanced-usage.rst:506
msgid "<http://docs.zope.org/zope2/zope2book/source/Contributions.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:2
msgid "Create an Alternative Edit Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:4
msgid ""
"Suppose you've a content type and you want to keep the default \"edit\" "
"template, but you want also to create another edit template suited for "
"editing only some particular metadata."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:8
msgid ""
"Think of the standard edit as a \"full\" edit, while your new edit is a "
"custom version. They co-exist together. This method also works if you've "
"already a mycustomtype\\_edit edit template, and you want to have another "
"one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:14
msgid "Limiting the Fields Available to Edit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:16
msgid ""
"Step 1: Copy the base\\_edit and the edit\\_macros (you can do it by simply "
"customizing them) and change their id (rename) to mynewedit and mynewmacros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:20
msgid "Step 2: Modify mwynewedit to point to mynewmacros:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:22
msgid "edit\\_template python:'newemacros';"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:23
msgid "edit\\_macros python:path('here/newemacros/macros \\| nothing');"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:25
msgid ""
"so this edit template will pick up the macros from your custom version."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:27
msgid ""
"Step 3: Modify mynewmacros as you need. For example, if you want to display "
"only some fields, you can (in<metal:block define-slot=\"widgets\"> which "
"manages widgets display) change the template as below:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:47
msgid ""
"So only 'title','myfield1','myfield2','myfield3','myfield4' will be "
"displayed and you will avoid people editing unwanted fields (even if they "
"can)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:51
msgid ""
"Step 4: If there's a failure, the user should go back to your form, so in "
"mynewedit -> actions, change failure from string:edit to string:mynewedit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:56
msgid "Dealing with Validation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:58
msgid ""
"Suppose you've some validated fields, or you want to run custom code when "
"the user saves the form. The validation will kick in when you'll press "
"\"save\". If you've some required fields, but they're not in the fields "
"listed above, you'll get the red warning and your data will not be saved. So"
" you have to bypass it, and we need to do it in two places:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:64
msgid "Step 1:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:66
msgid "edit mwynewedit -> validation -> delete the validation step."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:67
msgid ""
"edit mwynewedit -> actions -> change string:content\\_edit to "
"string:mycontent\\_edit (a custom content edit)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:70
msgid "Step 2:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:72
msgid ""
"Find content\\_edit in portal\\_skins/archetypes and customize it. Then "
"rename it to mycontent\\_edit. Here you can add custom code, sending mail "
"and so on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:75
msgid "Edit it -> actions -> delete the validate\\_integrity step"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:76
msgid ""
"Edit it -> actions -> change any string:edit to string:mynewedit , so after "
"saving you'll go to your edit form if there are any failures (should not if "
"you remove the validation)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:80
msgid ""
"Now your form can edit your content type without any restrictions. If you "
"need some restrictions, just don't delete the validation steps above and "
"customize the validation scripts validate\\_base and validate\\_integrity "
"(renaming them and pointing to them in the validation steps above)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/create-an-alternative-edit-template.rst:86
msgid ""
"This is enough to perform your \"very\" own custom edit, with custom saving "
"and custom validation, leaving the default one untouched."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:4
msgid "Some final notes about customizing Archetypes view templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:6
msgid "So, now you should know all of the following information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:8
msgid ""
"How to identify which parts of an Archetypes view template are generated by "
"the ``header``,\\ ``body``,\\ ``folderlisting``, and ``footer`` macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:11
msgid ""
"How to create a custom view template that overrides one or more of the "
"``header``,\\ ``body``,\\ ``folderlisting``, and ``footer`` macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:13
msgid ""
"How to create a custom widget template that works in the Archetypes "
"framework"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:15
msgid ""
"How to create a custom ``body`` template that uses Archetypes' widget "
"rendering templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:17
msgid ""
"How to inject custom CSS code and links to custom CSS files into your view "
"template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:21
msgid "Some Final Notes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:23
msgid ""
"I want to cover a few details about how to apply all of these tools. Some "
"wise guy somewhere said something like, \"To a man whose only tool is a "
"hammer, every problem tends to look like a nail.\" Your success with "
"Archetypes is very contingent upon selecting the appropriate tool for your "
"specific problem. So, use the following outline of the basic AT page layout "
"as a guideline to determine what should be customized:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:30
msgid "``header`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:32
msgid "Title (or id if no title is present)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:33
msgid "Document actions (e.g. print, send to)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:35
msgid "``body`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:37
msgid "List of fields"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:39
msgid ""
"Field label (from the ``label`` macro in the view template, if one exists)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:41
msgid "Field value (from the widget template's ``view`` macro)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:43
msgid "``folderlisting`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:45
msgid "List of links to each sub-object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:47
msgid "``footer`` macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:49
msgid "byline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/conclusion.rst:51
msgid ""
"So, based on which parts of this standard layout you need to customize, use "
"the appropriate macro. Keep the infamous \"Foo\" template around to help you"
" with debugging. See the next page for a reference on customizing Archetypes"
" view templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:2
msgid "Customizing Widgets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:4
msgid ""
"This page shows you how to customize widgets, and gives some examples of "
"what kinds of neat tricks can be done with widget customization."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:7
msgid ""
"As we've already said, widgets are what Archetypes uses to display "
"individual fields. Archetypes' built-in templates, ``base_view``,\\ "
"``base``, and ``widgets/field`` use each field and the field's associated "
"widget (specified in the schema) to determine which widget template to use. "
"However, you can override a widget's template, as we will show below. "
"Furthermore, you can create a whole new widget class, which will have data "
"and operations specific to the display of your custom data type. Read the "
"next section to determine how much widget hacking you need to do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:18
msgid "How to Determine If You Need to Create A Custom Widget Class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:20
msgid ""
"If you cannot find a widget in Archetypes or in a readily-available third-"
"party product that does what you need, use the following set of questions to"
" determine if you can just customize the **template** versus creating a new "
"**widget class**. If you answer \"no\" to the following questions, a custom "
"template is all you need:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:26
msgid ""
"Does the display of your field require helper functions to do conversions or"
" formatting that would be difficult or cumbersome in TALES?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:29
msgid ""
"Do you have multiple AT-based classes where some fields in those classes "
"share all of the the following characteristics?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:32
msgid "The same data type"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:33
msgid "Similar, needs for display"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:34
msgid ""
"One or more attributes that are class-specific that apply to the display "
"(i.e. the most appropriate place to set these attributes is in the schema "
"definition)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:38
msgid ""
"Does your custom data type need some super-specific marshalling when edited "
"or searched that you can't get from any standard AT widget class?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:41
msgid ""
"Do you need to override or change the way that Archetypes handles the "
"processing of the ``edit`` form for a particular field?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:44
msgid ""
"If you answered yes to most of the questions, then you might need to create "
"a Widget class. If the questions aren't clear, take a look at the "
"`RichDocument tutorial <http://plone.org/tutorial/richdocument>`_ . If "
"you've got a specific enough use-case (like RichDocument) that you *need* "
"custom widget classes, you're probably able to make it happen just by the "
"sheer fact that you *know* you need them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:52
msgid "Customizing Widget Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:54
msgid ""
"Creating custom widget templates is not hard, so don't be afraid. I assume "
"if you're reading this far, you've already determined that you don't need a "
"custom widget class, and just need to tinker a little bit with how things "
"are done by default."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:59
msgid ""
"First, you should understand what you have control over by customizing a "
"widget template itself. You're controlling the display of the widget's "
"*data*, but not its *label*. For a StringField called ``myfield``, the "
"default display is something like:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:64
msgid "**myfield:** some value"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:66
msgid ""
"The only thing we can control is the display of what comes after "
"\"**myfield:**\\ \", which is just the data contained within the field "
"itself (we'll talk about how to customize the display of labels later). "
"However, if we customize the template, we can insert *all kinds* of nifty "
"HTML into there! Take a look at the default template for StringWidget, "
"'widget/string'. It's pretty straight-forward. As you can see, there are "
"three important macros in a widget template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:74
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:57
msgid "``view``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:75
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:58
msgid "``edit``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:76
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:59
msgid "``search``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:78
msgid ""
"Widget templates must define all three macros, however we can pass-through "
"to the default when we aren't customising."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:81
msgid ""
"Don't concern yourself with the ``edit`` and ``search`` macros; remember, "
"we're customizing the *view*. Let's start by creating a new skin template "
"called ``my_string_widget``. Start with this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:118
msgid ""
"(NB: I'm breaking AT's naming convention here. You don't have to do that, "
"but I find it more convenient and understandable to add a ``_widget`` to the"
" names of my widget templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:122
msgid ""
"Notice we didn't copy the definitions for ``edit`` or ``search``, we also "
"get the default template to generate the markup surrounding the view widget,"
" and just populate the ``inside`` macro."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:126
msgid ""
"Also, notice how there is no display code for the label; that's handled "
"elsewhere. If you're wondering where the ``accessor`` variable comes from, "
"that's part of the widget display code. The widget class defines the "
"following local variables that are accessible inside widget templates:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:133
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:66
msgid "``accessor``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:133
msgid ""
"The accessor method for the field. Call it to retrieve the value of the "
"field."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:135
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:68
msgid "``fieldName``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:136
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:69
msgid "The name of the field."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:137
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:70
msgid "``widget``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:138
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:71
msgid "The widget object for the field."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:139
msgid "``field``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:140
msgid "The instance of the field class itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:143
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:74
msgid "``mode``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:142
msgid ""
"Will be ``view`` or ``edit``, based on the action being taken. For our "
"purposes, it should always be ``view``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:145
msgid ""
"Now, let's modify the way that our StringField displays. For brevity, I'll "
"just show the ``view`` macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:148
msgid ""
"Then, we should tell our type's schema to point at the new template, by "
"setting ``macro``:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:163
msgid ""
"Be sure to restart Zope and reinstall using ``portal_quickinstaller``. Now, "
"our StringField, when rendered, looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:170
msgid "Custom Widget"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/customizing-widgets.rst:172
msgid "Yes, folks, it's *just that easy*."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:4
msgid "Goals, Pre-Requisites, and Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:6
msgid ""
"So you think Archetypes' way of automagically generating HTML to view your "
"object isn't pretty enough? Well, you've come to the right place! I'm going "
"to teach you how to dress up those boring, drab views and make them *shine*!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:12
msgid "Goals: What will I learn?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:14
msgid "How Archetypes generates views for content objects"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:15
msgid "How much control Archetypes gives you"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:16
msgid ""
"How to change the HTML output for a particular field by creating a custom "
"widget template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:18
msgid ""
"How to use the Archetypes template framework to make minor changes to the "
"default AT-generated view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:20
msgid ""
"How to customize the HTML output for the entire view of an Archetypes object"
" by using the ``title``,\\ ``body``,\\ ``folderlisting``, and ``footer`` "
"macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:25
msgid "Pre-Requisites: What do I need to know?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:27
msgid "How to read and write Python code"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:28
msgid "How to read and write Zope Page Templates (ZPT)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:29
msgid "How to create Archetypes-based products (ArchGenXML is acceptable)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:32
msgid "Tools: What do I need to have installed?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:34
msgid "Plone 2.0 or 2.1"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:35
msgid "Archetypes (included by default in Plone 2.1)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/introduction.rst:36
msgid ""
"`The ATViewTutorial product <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin/templates/customizing-at-"
"templates/atviewtutorial.tgz>`_ - this product has examples of the concepts "
"in this tutorial"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:4
msgid "A reference for customizing Archetypes view templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:7
msgid "View Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:9
msgid ""
"View templates are named according to the ``portal_type`` of the class. To "
"create the name for a view template, follow these steps to create the name "
"of the template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:13
msgid "Change the ``portal_type`` to lowercase."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:14
msgid "Replace all spaces with underscores (``_``)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:15
msgid "Append ``_view`` to the end of the name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:17
msgid ""
"Archetypes will automatically locate templates with names created according "
"to the above steps, and will make use of the macros defined within the "
"template. View templates can define one or more of the following macros:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:25
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:66
msgid "``css``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:23
msgid ""
"A macro for inserting type-specific CSS code, including ``<link>`` tags "
"pointing to custom CSS files. There is no default macro for this within "
"Archetypes; Archetypes uses the existing CSS styles in Plone to render AT-"
"based objects."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:28
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:42
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:70
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:106
msgid "``header``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:28
msgid ""
"This macro, by default, generates the ``<h1>`` tag containing the object's "
"title and the document actions (print, rss, e.g.)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:33
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:43
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:73
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:107
msgid "``body``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:31
msgid ""
"The location where the fields and values are displayed by default. When "
"rendering fields using the existing widget mechanism, be sure to "
"``tal:define`` the variable ``field`` as the current field; the widget "
"templates depend on this variable being set."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:37
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:44
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:78
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:108
msgid "``folderlisting``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:36
msgid ""
"This is the folder listing display when viewing the ``view`` tab of a "
"folderish object. This is **not** the same as the ``contents`` view."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:39
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:45
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:81
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:109
msgid "``footer``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:40
msgid "By default, this is where Archetypes puts the byline."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:42
msgid "``label``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:42
msgid "This template generates field labels."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:44
msgid ""
"For any of these macros that is not defined in the custom view template, "
"Archetypes will use the default behavior in its place, taken from ``base`` "
"or ``widgets/field``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:49
msgid "Widget Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:51
msgid ""
"Use custom widget templates by naming them in the schema - insert a "
"``macro`` parameter into the widget's constructor in the schema, and set the"
" value to the name of the template. For example, "
"``macro=\"my_widget_template\"``. Widget templates must have the following "
"three macros:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:61
msgid ""
"Widget templates have the following local variables available within TALES "
"expressions:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:65
msgid ""
"The accessor method for the current field. The code ``<p "
"tal:content=\"accessor\" />`` will cause the field's value to be written "
"within the ``<p>`` tag."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/reference.rst:73
msgid ""
"Will always be ``view`` for view templates, but is useful for, say, error "
"checking."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:2
msgid "Total Control: The View Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:4
msgid ""
"This page describes how you can control every portion of the HTML output in "
"the content area by creating a custom view template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:7
msgid ""
"Okay, so you've hacked up some custom widget templates, and they're basking "
"in the glory of your newfound power, yet you're still not satisfied. You "
"want to control it **all**! Well, *I've* got the information for *you*!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:13
msgid "Archetypes and Type-Specific View Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:15
msgid ""
"Archetypes automatically recognizes templates with specific names, and uses "
"the code within those templates to display your AT-based object. All of this"
" magic happens within the ``base_view`` template. To create a custom view "
"template, convert your type name to lowercase (the name that's listed in "
"``portal_types``, or what's returned from ``myObject.portal_type``). Now, "
"replace spaces with underscores ( \\_ ). Finally, add ``_view`` to the end "
"of the name, and you've *almost* got a custom view template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:24
msgid ""
"See below for examples of type names and their corresponding view templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:27
msgid "Type Name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:29
msgid "View Template Name"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:31
msgid "My Type"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:33
msgid "``my_type_view``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:35
msgid "SomeTypeV2"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:37
msgid "``sometypev2_view``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:39
msgid ""
"Now, to remedy that \"almost\" part of the above paragraph, define one or "
"more of the following macros in your template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:47
msgid ""
"Voila! You've got a custom view template. To see how this works, create a "
"simple template (named appropriately, of course) that contains the following"
" code:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:61
msgid "And, just like magic, you should see, rendered in your content area:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:67
msgid "The Infamous \"Foo\" View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:69
msgid "But Wait! Where Are All My Fields?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:71
msgid ""
"So now you want your data back. You said you wanted total control, and now "
"you don't want total control. But the point of this tutorial isn't control, "
"it's *shine*. So, let's explore how to mix and match existing AT templates "
"with your custom code to make a shiny template that renders exactly how "
"*you* want it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:77
msgid ""
"First, keep the above \"Foo\" template around. It's very useful when you "
"aren't quite sure which of the four macros is generating a portion of the "
"content area. Simply comment out one or more of the macros, and you'll see "
"which macro generates what portion."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:82
msgid ""
"Now, do you remember when I talked about using the ``base`` template as a "
"starting point for creating custom templates? Well, that's what we'll do. "
"Let's start by customizing the footer. The ``footer`` macro in the following"
" template is copied directly from 'base':"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:91
msgid ""
"Now, let's add something below the byline, say, some important information "
"that applies to every instance of your custom type::"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:96
msgid ""
"Get the byline - contains details about author and modification date. "
"Important information that applies to every instance of my custom type."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:99
msgid ""
"Notice that all we had to do was copy the macro from ``base`` , and add the "
"`` <p>`` tag with some text in it. Notice that, for example, we could have "
"used ``tal:content=\"here/getCustomFooterData\"`` in the ``</p> <p>`` tag if"
" we had defined a ``getCustomFooterData()`` method in our class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:105
msgid ""
"Now, let's apply this concept to the ``body`` macro, and play around with "
"displaying fields. First, we'll start by coping the ``body`` from ``base`` "
"into our template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:109
msgid ""
"Now, we'll change up some things by adding a little bit of code into the "
"macro. First, notice that the ``tal:repeat`` is repeating over all the "
"fields that are not metadata. Therefore, if you want to do something for "
"every field, put it inside this macro. You could (conceivably) rearrange the"
" macro so that the ``tal:repeat`` loop is inside another containing block, "
"and put TAL code before and after the display of the fields, or make use of "
"the ``first`` and ``last`` ``repeat`` variables to achieve the same thing. "
"So, let's do two things to customize our ``body`` macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:118
msgid ""
"Surround all the fields with a ``</p> <div>`` that has a custom CSS class, "
"``my-custom-at-body``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:120
msgid ""
"Surround each field with a `` <div>`` that has a different custom CSS class,"
" ``my-custom-at-field``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:123
msgid ""
"These changes, as I'm sure you've figured out, aren't going to make much of "
"a difference (if any) in the look of the rendered page without actually "
"writing some custom CSS code. We now introduce the ``css`` macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:135
msgid ""
"Now, we can define a CSS stylesheet called ``my_custom_css.css`` that "
"contains our custom CSS code:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:150
msgid ""
"Archetypes inserts the ``css`` macro into the '' tag of the rendered page, "
"making our custom CSS code, linked files, and includes available within the "
"page. Our end-result would look something like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:158
msgid "Custom Body Macro"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:159
msgid ""
"If we had created custom widget templates, those would be applied to the "
"rendered page as well."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:163
msgid "Customizing Labels"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:165
msgid ""
"There's still one element of control that we're missing: we still can't "
"override the display of a field label. By customizing the display of the "
"label, we can insert images, links, etc. into the page instead of the "
"default label."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:170
msgid ""
"The macro included in our custom view template below will do that magic for "
"us:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:181
msgid ""
"Notice that I've only overridden the default label for fields labeled "
"\"myfield\". The ``label`` macro in ``widgets/field`` is where the default "
"behavior can be found. The final result looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:189
msgid "Customized Label"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/total-control-the-view-template.rst:190
msgid ""
"Also, don't forget that you have the power to omit ``head``,\\ ``body``,\\ "
"``folderlisting``, and ``footer`` by simply writing in do-nothing macros "
"into your view template. Furthermore, you can reach into your object and "
"retrieve field values without using the widget framework."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:2
msgid "What Makes It Tick?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:4
msgid ""
"This page describes how Archetypes uses different templates to generate "
"HTML, and how AT-based template customization can be applied."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:7
msgid ""
"Archetypes has a very clever system for generating HTML pages for AT-based "
"objects. The same set of templates generates **all** of the content areas "
"for **all** AT-based objects. This buys you the following benefit, useful "
"for site consistency:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:12
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:16
msgid "All the pages look the same."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:14
msgid "However, it also has the following drawback:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:18
msgid ""
"Different types of content need to be displayed differently. Let's dig into "
"how Archetypes does things, so we can figure out how to make your content "
"types *shine*!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:23
msgid "The ``base_view`` Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:25
msgid ""
"The ``base_view`` template (found in the archetypes skin) handles selecting "
"the appropriate macros from the appropriate templates, and using those "
"macros to display content objects. If you look at this piece of code from "
"'base\\_view':"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:38
msgid ""
"You can see that it defines the variable ``view_template`` as the object's "
"Portal Type Name converted to lowercase, with spaces replaced with "
"underscores (\\_), followed by ``_view``. So, MyType's view template, for "
"instance, would be called ``mytype_view``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:43
msgid ""
"Now, before we move on, I must warn you: don't edit ``base_view``. "
"Seriously. Don't.\\ `[1] <http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin/templates/customizing-at-templates/what-makes-"
"it-tick#ref1>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:47
msgid ""
"No, really. Don't customize ``base_view``. If you think you need to "
"customize ``base_view``, first, well... don't. Keep reading the tutorial. If"
" you're certain, after reading the tutorial, that you need to customize "
"``base_view``, again, **don't!** Write a clear, concise example indicating "
"why, after reading this tutorial, you believe you should customize "
"``base_view``, and send it to the ``archetypes-users`` mailing list. If you "
"*really do* need to customize ``base_view``, you've found a shortcoming in "
"Archetypes, and the people on the list will inform you if that's the case. "
"So, repeat after me: \"Don't customize ``base_view``.\" Good!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:58
msgid ""
"Now, there are six important macros to be aware of. These six macros give "
"you the power to insert template code that is customized for your class. "
"These macros are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:63
msgid "``js``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:63
msgid ""
"A macro to insert javascript into the ``<head>`` tag of the generated HTML "
"page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:66
msgid ""
"A macro to insert CSS includes and style code into the ``<head>`` tag of the"
" page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:69
msgid ""
"The macro that defines the topmost portion of the content area. By default, "
"this macro has an ``<h1>`` tag that contains the title, and links for "
"printing, emailing, etc. on the right."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:73
msgid ""
"The macro that defines the \"body\" area of the content. This is where the "
"fields and their values are displayed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:76
msgid ""
"This macro shows a list of the child content for the object. Don't confuse "
"this with ``folder_contents``, this is what the ``view`` tab shows for "
"folderish objects. Folderish objects use both the ``body`` macro and the "
"``folderlisting`` macro."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:81
msgid "This is where AT puts the byline."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:88
msgid ""
"This image shows the areas generated by the header, body, and folderlisting "
"macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:90
msgid ""
"As you can see, the ``header`` macro generates what's outlined in the area "
"marked ''header'' in red, the ``body`` macro generates the content just "
"beneath it, and the ``folderlisting`` macro generates the listing of the "
"objects within the folderish object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:95
msgid ""
"The ``base_view`` template automatically pulls the appropriate macro from "
"the custom view template (``mytype_view``, from our earlier ad-hoc example),"
" or from the next template that we are going to explore: ``base``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:101
msgid "The ``base`` Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:103
msgid ""
"The ``base`` template contains four of the six macros that ``base_view`` "
"looks for:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:111
msgid ""
"The only reason why I mention ``base`` is so that you know where AT's "
"default behavior comes from. This is important if you only want to change a "
"little bit of a type's view. It's often helpful to copy the macro from "
"``base`` into your custom view template, and then start tweaking and "
"customizing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:120
msgid ""
"Widgets are what Archetypes uses to display fields. Widgets have two parts:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:125
msgid "The widget class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:124
msgid ""
"This class defines data and behavior for the widget. In most cases, you'll "
"never need to create a custom 'Widget'-derived class. See "
"Archetypes/Widget.py for examples."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:132
msgid "The widget template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:128
msgid ""
"This is a ZPT that provides three macros: ``view``, ``edit``, and "
"``search``. These macros display the field. Some of the macros depend on "
"certain variables being defined in the calling template, so pay close "
"attention. Most often, you'll only need to provide a custom widget template,"
" and not a custom widget class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:134
msgid ""
"There are all kinds of widgets out there to do all kinds of things. The "
"`Archetypes Quick Reference Manual "
"<http://plone.org/products/archetypes/documentation/manual/quickref>`_ "
"covers the details for the various widgets in Archetypes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/customizing-at-templates/what-makes-it-tick.rst:139
msgid "[1] Unless you're wiggy."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:2
msgid "Getting started"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:4
msgid ""
"Page Templates are a web page generation tool. In this part, we'll go "
"through their basics and show how to use them in your web site to create "
"dynamic web pages easily."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:8
msgid ""
"The goal of Page Templates is natural workflow. A designer will use a "
"WYSIWYG HTML editor to create a template, then a programmer will edit it to "
"make it part of an application. If required, the designer can load the "
"template *back* into his editor and make further changes to its structure "
"and appearance. By taking reasonable steps to preserve the changes made by "
"the programmer, he will not disrupt the application."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:15
msgid "Page Templates aim at this goal by adopting three principles:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:17
msgid "Play nicely with editing tools."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:19
msgid "What you see is very similar to what you get."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:21
msgid "Keep code out of templates, except for structural logic."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:23
msgid ""
"A Page Template is like a model of the pages that it will generate. In "
"particular, it is a valid HTML/XHTML page. Since HTML is highly structured, "
"and WYSIWYG editors carefully preserve this structure, there are strict "
"limits on the ways in which the programmer can change a page and still "
"respect the first principle."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:29
msgid ""
"Although Page Templates are suited for programmers and designers who need to"
" work together to create dynamic web pages, they form the basis for most of "
"Plone's pages, so you should learn them a bit at least, if you need to "
"customize the Plone look or layout. Moreover, they can be simpler to use and"
" understand than the alternative, DTML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:36
msgid "Why Yet Another Template Language?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:38
msgid ""
"There are plenty of template systems out there, some of them quite popular, "
"such as ASP, JSP, and PHP. Since the beginning, Zope has come with a "
"template language called DTML. Why invent another?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:42
msgid ""
"First, none of these template systems are aimed at HTML designers. Once a "
"page has been converted into a template, it is invalid HTML, making it "
"difficult to work with outside of the application. Each of them violates the"
" first or second principle of Zope Page Templates to one degree or another. "
"Programmers should not \"hijack\" the work of the designers and turn HTML "
"into software. XMLC, part of the Enhydra project, shares our goal, but "
"requires the programmer to write substantial amounts of Java support code "
"for each template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:51
msgid ""
"Second, all of these systems suffer from failure to separate presentation, "
"logic, and content (data). Their violations of the third principle decrease "
"the scalability of content management and website development efforts that "
"use these systems."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:57
msgid "Applying The Principles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:59
msgid ""
"Page Templates use the **Template Attribute Language (TAL)**. TAL consists "
"of special tag attributes. For example, a dynamic page title might look like"
" this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:67
msgid ""
"The ``tal:content`` attribute is a TAL statement. Since it has an XML "
"namespace (the ``tal:`` part) most editing tools will not complain that they"
" don't understand it, and will not remove it. It will not change the "
"structure or appearance of the template when loaded into a WYSIWYG editor or"
" a web browser. The name ``content`` indicates that it will set the content "
"of the ``title`` tag, and the value \"context/title\" is an expression "
"providing the text to insert into the tag."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:75
msgid ""
"To the HTML designer using a WYSIWYG tool, this is perfectly valid HTML, and"
" shows up in the editor looking the way a title should look. The designer, "
"not caring about the application details of TAL, only sees a *mockup* of the"
" dynamic template, complete with dummy values like \"Page Title\" for the "
"title of the document."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:81
msgid ""
"When this template is saved in Zope and viewed by a user, Zope turns this "
"static content into dynamic content and replaces \"Page Title\" with "
"whatever \"context/title\" resolves to. In this case, \"context/title\" "
"resolves to the title of the object to which to the template is applied. "
"This substitution is done dynamically, when the template is viewed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:87
msgid ""
"This example also demonstrates the second principle. When you view the "
"template in an editor, the title text will act as a placeholder for the "
"dynamic title text. The template provides an example of how generated "
"documents will look."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:92
msgid ""
"There are template commands for replacing entire tags, their contents, or "
"just some of their attributes. You can repeat a tag several times or omit it"
" entirely. You can join parts of several templates together, and specify "
"simple error handling. All of these capabilities are used to generate "
"document structures. You **can't** create subroutines or classes, write "
"loops or multi-way tests, or easily express complex algorithms. For these "
"tasks, you should use Python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:100
msgid ""
"The template language is deliberately not as powerful and general-purpose as"
" it could be. It is meant to be used inside of a framework (such as Zope) in"
" which other objects handle business logic and tasks unrelated to page "
"layout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:105
msgid ""
"For instance, template language would be useful for rendering an invoice "
"page, generating one row for each line item, and inserting the description, "
"quantity, price, and so on into the text for each row. It would not be used "
"to create the invoice record in a database or to interact with a credit card"
" processing facility."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:112
msgid "Creating a Page Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:114
msgid ""
"If you design pages, you will probably use FTP or WebDAV instead of the Zope"
" Management Interface (ZMI) to create and edit Page Templates, or you will "
"be developing templates on the filesystem for later installation. If you're "
"not the Zope site owner, ask your Zope administrator for instructions. For "
"the very small examples in this article, it is much easier to use the ZMI. "
"For more information on using FTP or WebDAV with Zope, see `The Zope Book "
"<http://www.zope.org/Documentation/Books/ZopeBook/current/ExternalTools.stx>`_"
" or Jeffrey Shell's `WebDAV article "
"<http://www.zope.org/Documentation/Articles/WebDAV>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:125
msgid ""
"You may also use `Emacs <http://www.gnu.org/software/emacs/>`_, `cadaver "
"<http://www.webdav.org/cadaver/>`_, or some other client, but if you are a "
"Zope administrator or a programmer, you will probably use the ZMI anyway at "
"least occasionally. See the Zope Book for instructions on setting up Zope to"
" to work with various clients."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:131
msgid ""
"Use your web browser to log into the Zope management interface as you "
"normally would with Zope. Choose a Folder (the root is fine) and pick \"Page"
" Template\" from the drop-down add list. Type \"simple\\_page\" in the add "
"form's ``Id`` field, then push the \"Add and Edit\" button."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:136
msgid ""
"You should now see the main editing page for the new Page Template. The "
"title is blank, the content-type is ``text/html``, and the default template "
"text is in the editing area."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:140
msgid ""
"Now you will create a very simple dynamic page. Type the words \"a Simple "
"Page\" in the ``Title`` field. Then, edit the template's body text to look "
"like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:148
msgid ""
"Now push the \"Save Changes\" button. The edit page should show a message "
"confirming that your changes have been saved. If  an error message appears "
"above the code area, or some text starting with ``<-- Page Template "
"Diagnostics`` is added to the template, then check to make sure you typed "
"the example correctly and save it again. You don't need to erase the error "
"comment: once the error is corrected it will go away."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:156
msgid ""
"Click on the ``Test`` tab. You should see a mostly blank page with \"This is"
" a Simple Page.\" at the top."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:159
msgid ""
"Back up, then click on the \"Browse HTML source\" link under the content-"
"type field. This will show you the *unrendered* source of the template. You "
"should see \"This is **the Title**.\" Back up again, so that you are ready "
"to edit the example further."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:165
msgid "Simple Expressions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:167
msgid ""
"The text \"template/title\" in your simple Page Template is a *path "
"expression*. This the most commonly used of the expression types defined by "
"the TAL Expression Syntax (TALES). It fetches the ``title`` property of the "
"template. Here are some other common path expressions:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:172
msgid "request/URL: The URL of the current web request."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:174
msgid "user/getUserName: The authenticated user's login name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:176
msgid ""
"container/objectIds: A list of Ids of the objects in the same Folder as the "
"template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:179
msgid ""
"Every path starts with a variable name. If the variable contains the value "
"you want, you stop there. Otherwise, you add a slash (``/``) and the name of"
" a sub-object or property. You may need to work your way through several "
"sub-objects to get to the value you're looking for."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:184
msgid ""
"There is a small built in set of variables, such as ``request`` and "
"``user``, that will be listed and described later. You will also learn how "
"to define your own variables."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:189
msgid "Inserting Text"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:191
msgid ""
"In your \"simple\\_page\" template, you used the ``tal:replace`` statement "
"on a bold tag. When you tested it, it replaced the entire tag with the title"
" of the template. When you browsed the source, instead, you saw the template"
" text in bold. We used a bold tag in order to highlight the difference."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:197
msgid ""
"In order to place dynamic text inside of other text, you typically use "
"``tal:replace`` on a ``span`` tag. Add the following lines to your example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:206
msgid ""
"The ``span`` tag is structural, not visual, so this looks like \"The URL is "
"URL.\" when you view the source in an editor or browser. When you view the "
"rendered version, it may look something like:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:215
msgid ""
"Remember to take care when editing not to destroy the ``span`` or place "
"formatting tags such as ``b`` or ``font`` inside of it, since they would "
"also be replaced."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:219
msgid ""
"If you want to insert text into a tag but leave the tag itself alone, you "
"use ``tal:content``. To set the title of your example page to the template's"
" title property, add the following lines above the other text:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:229
msgid ""
"If you open the \"Test\" tab in a new window, the window's title will be \"a"
" Simple Page\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:233
msgid "Repeating Structures"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:235
msgid ""
"Now you will add some context to your page, in the form of a list of the "
"objects that are in the same Folder. You will make a table that has a "
"numbered row for each object, and columns for the id, meta-type, and title. "
"Add these lines to the bottom of your example template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:254
msgid ""
"The ``tal:repeat`` statement on the table row means \"repeat this row for "
"each item in my container's list of object values\". The repeat statement "
"puts the objects from the list into the ``item`` variable one at a time, and"
" makes a copy of the row using that variable. The value of \"item/id\" in "
"each row is the Id of the object for that row."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:260
msgid ""
"You can use any name you like for the \"item\" variable, as long as it "
"starts with a letter and contains only letters, numbers, and underscores "
"(``_``). It only exists in the <tr> tag; If you tried to use it above or "
"below that tag you would get an error."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:265
msgid ""
"You also use the ``tal:repeat`` variable name to get information about the "
"current repetition. By placing it after the builtin variable ``repeat`` in a"
" path, you can access the repetition count starting from zero (``index``), "
"from one (``number``), from \"A\" (``Letter``), and in several other ways. "
"So, the expression ``repeat/item/number`` is ``1`` in the first row, ``2`` "
"in the second row, and so on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:272
msgid ""
"Since one ``tal:repeat`` loop can be placed inside of another, more than one"
" can be active at the same time. This is why you must write "
"``repeat/item/number`` instead of just ``repeat/number``. You must specify "
"which loop you are interested in by including the loop name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:278
msgid "Conditional Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:280
msgid ""
"View the template, and you'll notice that the table is very dull looking. "
"Let's improve it by shading alternate rows. Copy the second row of the "
"table, then edit the code so that it looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:306
msgid ""
"The ``tal:repeat`` has not changed, you have just moved it onto the new "
"``tbody`` tag. This is a standard HTML tag meant to group together the body "
"rows of a table, which is how you are using it. There are two rows in the "
"body, with identical columns, and one has a grey background."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:311
msgid ""
"View the template's source, and you see both rows. If you had not added the "
"``tal:condition`` statements to the rows, then the template would generate "
"both rows for every item, which is not what you want. The ``tal:condition`` "
"statement on the first row ensures that it is only included on even-indexed "
"repetitions, while the second row's condition only lets it appear in odd-"
"indexed repetitions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:318
msgid ""
"A ``tal:condition`` statement does nothing if its expression has a true "
"value, but removes the entire statement tag, including its contents, if the "
"value is false. The ``odd`` and ``even`` properties of ``repeat/item`` are "
"either zero or one. The number zero, a blank string, an empty list, and the "
"builtin variable ``nothing`` are all false values. Nearly every other value "
"is true, including non-zero numbers, and strings with anything in them (even"
" spaces!)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:327
msgid "Defining Variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:329
msgid ""
"Note: In Plone 4 or newer, use *container/value*\\ s instead of "
"*container/objectValues* below."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:332
msgid ""
"Your template will always show at least one row, since the template itself "
"is one of the objects listed. In other circumstances, you might want to "
"account for the possibility that the table will be empty. Suppose you want "
"to simply omit the entire table in this case. You can do this by adding a "
"``tal:condition`` to the table:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:343
msgid ""
"Now, when there are no objects, no part of the table will be included in the"
" output. When there are objects, though, the expression "
"\"container/objectValues\" will be evaluated twice, which is mildly "
"inefficient. Also, if you wanted to change the expression, you would have to"
" change it in both places."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:349
msgid ""
"To avoid these problems, you can define a variable to hold the list, and "
"then use it in both the ``tal:condition`` and the ``tal:repeat``. Change the"
" first few lines of the table to look like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:363
msgid ""
"The ``tal:define`` statement creates the variable ``items``, and you can use"
" it anywhere in the table tag. Notice also how you can have two TAL "
"attributes on the same ``table`` tag. You can, in fact, have as many as you "
"want. In this case, they are evaluated in order. The first assigns the "
"variable ``items`` and the second uses ``items`` in a condition to see "
"whether or not it is false (in this case, an empty sequence) or true."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:371
msgid ""
"Now, suppose that instead of simply leaving the table out when there are no "
"items, you want to show a message. To do this, you place the following above"
" the table:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:380
msgid ""
"You can't use your ``items`` variable here, because it isn't defined yet. If"
" you move the definition to the ``h4`` tag, you can't use it in the "
"``table`` tag any more, because it becomes a *local* variable of the ``h4`` "
"tag. You could place the definition on some tag that enclosed both the "
"``h4`` and the ``table``, but there is a simpler solution. By placing the "
"keyword ``global`` in front of the variable name, you can make the "
"definition last from the ``h4`` tag to the bottom of the template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:396
msgid ""
"The ``not:`` in the first ``tal:condition`` is an expression type prefix "
"that can be placed in front of any expression. If the expression is true, "
"``not:`` is false, and vice versa."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:401
msgid "Changing Attributes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:403
msgid ""
"Most, if not all, of the objects listed by your template have an ``icon`` "
"property, that contains the path to the icon for that kind of object. In "
"order to show this icon in the meta-type column, you will need to insert "
"this path into the ``src`` attribute of an ``img`` tag, by editing the meta-"
"type column in both rows to look like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:417
msgid ""
"The ``tal:attributes`` statement replaces the ``src`` attribute of the image"
" with the value of ``item/icon``. The value of ``src`` in the template acts "
"as a placeholder, so that the image is not broken, and is the correct size."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:422
msgid ""
"Since the ``tal:content`` attribute on the table cell would have replaced "
"the entire contents of the cell, including the image, with the meta-type "
"text, it had to be removed. Instead, you insert the meta-type inline in the "
"same fashion as the URL at the top of the page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/getting-started.rst:427
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:362
msgid ""
"Based on the `Zope Book "
"<http://www.zope.org/Documentation/Books/ZopeBook/>`_, © `Zope Corporation "
"<http://www.zope.com/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:2
msgid "Global Template Variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:4
msgid ""
"Plone defines a few useful global variables to use them in your templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:7
msgid ""
"Note: This page covers the methods for referencing variables for Plone 3. It"
" has changed slightly for Plone 4 (see "
"https://plone.org/documentation/manual/upgrade-guide/version/upgrading-"
"plone-3-x-to-4.0/updating-add-on-products-for-plone-4.0/no-more-global-"
"definitions-in-templates/)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:11
msgid ""
"While writing templates for Plone, you will notice a set of variables you "
"use more often, like the URL of the portal or the currently authenticated "
"member."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:15
msgid ""
"For your convenience, Plone defines a few global template variables that are"
" pulled into main\\_template via global\\_defines. Some of the most useful "
"ones are:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:21
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:121
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:125
msgid "portal\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:22
msgid "The url of the portal."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:24
msgid "The current user (``None`` if user is anonymous)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:27
msgid "checkPermission"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:26
msgid ""
"A function to check if the current user has a certain permission in the "
"current context, e.g. ``checkPermission('View portal content', context)``."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:29
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:165
msgid "isAnon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:30
msgid "True if the current user is not logged in."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:31
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:278
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:282
msgid "is\\_editable"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:32
msgid "True if the current user has edit permissions in the context."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:33
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:137
msgid "default\\_language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:34
msgid "The default language of the portal."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:36
msgid "here\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:36
msgid "The URL of the current object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/global-template-variables.rst:38
msgid ""
"To see the full list list of these variables, see `the docstring for "
"``globalize()`` in the interface "
"``Products.CMFPlone.browser.interfaces.IPlone`` "
"<http://dev.plone.org/plone/browser/Plone/branches/3.2/Products/CMFPlone/browser/interfaces.py#L199>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:2
msgid "How to customise view or edit on archetypes content items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:4
msgid ""
"Explains one way to customise the view or edit templates without having to "
"change the action of an object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:8
msgid "Reasons/Use Cases"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:10
msgid ""
"I usually like to customise as little as possible so that more of my page "
"templates are just like the plone default templates. I find this helps when "
"I move to a new version and also makes doing styling using CSS easier."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:15
msgid ""
"Another use case is if I want to generate a form using the schema but I need"
" it to do different things based on which button is pushed, you can "
"accomplish this with putting named buttons on the form in combination by "
"using portal\\_formcontroller to override what happens on a submit. E.g. "
"importing data from CSV, in a seperate schemata I have a form.button.Import "
"button and on this schemata I only show this button and the cancel button "
"(instead of save, nex previous etc.) and then I customise the "
"portal\\_formcontroller action (and validation) so content\\_edit (the "
"script that does the saving) goes to a script that does the importing before"
" going back to the view action."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:27
msgid "Archetypes base\\_view and base\\_edit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:29
msgid ""
"Both of these templates have several macros which are gotten by from other "
"page templates. They are setup in such a way that they will look for a "
"template named with the content type for these macros and then default to "
"the generic archetypes macros. I.e. say you have a content type 'Newsletter'"
" base\\_view looks for a template named 'newsletter\\_view' if it finds it "
"and it contains the right macros it will use those instead of the default "
"'view\\_macros' (found in 'portal\\_skins/archetypes' skin folder."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:38
msgid ""
"Below is a skeleton example of a custom view template showing the different "
"things you can customise. See base.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:105
msgid "Below is an skeleton of a custom edit template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:240
msgid ""
"See the templates into Products.Archetypes:skins/archetypes for examples "
"about how does Archetypes work by default: get the field lists, hook up "
"translation, handle form processing and more. Using them as a base and "
"customizing only the neccessary bits can make the job much easier than "
"starting from scratch."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:247
msgid "How to do it"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:249
msgid "Lets say your content type is '**Newsletter**\\ '"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:252
msgid "Steps for View"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:254
msgid ""
"Create a page template (either file system of in ZMI) called "
"'newsletter\\_view'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:256
msgid ""
"Use the skeleton and comment out the macros you wish to keep the same. I.e. "
"the ones you want to use from view\\_macros template (in "
"portal\\_skins/archetypes)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:259
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:268
msgid "Put your code into the relevant macros/slots."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:260
#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:269
msgid "Test and you are done."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:263
msgid "Steps for Edit"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:265
msgid "Create a page template called 'newsletter\\_edit'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-archetypes-content-items.rst:266
msgid ""
"Use the skeleton and then comment out the macros you wish to use the default"
" for. (from edit\\_macros)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:2
msgid "Macros and Slots"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:5
msgid "Macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:7
msgid ""
"So far, you've seen how Page Templates can be used to add dynamic behavior "
"to individual web pages. Another feature of page templates is the ability to"
" reuse look and feel elements across many pages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:11
msgid ""
"For example, with Page Templates, you can have a site that has a standard "
"look and feel. No matter what the \"content\" of a page, it will have a "
"standard header, side-bar, footer, and/or other page elements. This is a "
"very common requirement for web sites, and this is exactly how Plone works."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:17
msgid ""
"You can reuse presentation elements across pages with **macros**. Macros "
"define a section of a page that can be reused in other pages. A macro can be"
" an entire page, or just a chunk of a page such as a header or footer. After"
" you define one or more macros in one Page Template, you can use them in "
"other Page Templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:24
msgid "Using Macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:26
msgid ""
"You can define macros with tag attributes similar to TAL statements. Macro "
"tag attributes are called **Macro Expansion Tag Attribute Language (METAL)**"
" statements. Here's an example macro definition:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:36
msgid ""
"This metal:define-macro statement defines a macro named \"copyright\". The "
"macro consists of the p element (including all contained elements, ending "
"with the closing p tag)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:40
msgid ""
"Macros defined in a Page Template are stored in the template's *macros* "
"attribute. You can use macros from other Page Templates by referring to them"
" through the *macros* attribute of the Page Template in which they are "
"defined. For example, suppose the *copyright* macro is in a Page Template "
"called \"master\\_page\". Here's how to use the *copyright* macro from "
"another Page Template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:54
msgid ""
"In this Page Template, the b element will be completely replaced by the "
"macro when Zope renders the page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:64
msgid ""
"If you change the macro (for example, if the copyright holder changes) then "
"all Page Templates that use the macro will automatically reflect the change."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:68
msgid ""
"Notice how the macro is identified by a path expression using the metal:use-"
"macro statement. The metal:use-macro statement replaces the statement "
"element with the named macro."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:73
msgid "Macro Details"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:75
msgid ""
"The metal:define-macro and metal:use-macro statements are pretty simple. "
"However there are a few subtleties to using them which are worth mentioning."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:79
msgid ""
"A macro's name must be unique within the Page Template in which it is "
"defined. You can define more than one macro in a template, but they all need"
" to have different names."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:83
msgid ""
"It should also be noted that, despite the define-macro attribute, the macro "
"is anyway a regular section of the template; so, when you call the whole "
"template, the macro section is rendered in the output page just like any "
"other section in the template. By using the define-macro attribute you are "
"simply **adding** some sort of \"anchor\" to that section, so that you can "
"call it from outside; but you are not changing anything regarding the "
"behaviour of that same section in the template itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:92
msgid ""
"Normally you'll refer to a macro in a metal:use-macro statement with a path "
"expression. However, you can use any expression type you wish so long as it "
"returns a macro. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:103
msgid ""
"In this case the path expression returns a macro defined dynamically by the "
"getMacro script. Using Python expressions to locate macros lets you "
"dynamically vary which macro your template uses."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:107
msgid "You can use the default variable with the metal:use-macro statement:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:115
msgid ""
"The result is the same as using default with tal:content and tal:replace. "
"The \"default\" content in the tag doesn't change when it is rendered. This "
"can be handy if you need to conditionally use a macro or fall back on the "
"default content if it doesn't exist."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:120
msgid ""
"If you try to use the nothing variable with metal:use-macro you will get an "
"error, since nothing is not a macro. If you want to use nothing to "
"conditionally include a macro, you should instead enclose the metal:use-"
"macro statement with a tal:condition statement."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:125
msgid ""
"Zope handles macros first when rendering your templates. Then Zope evaluates"
" TAL expressions. For example, consider this macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:135
msgid ""
"When you use this macro it will insert the title of the template in which "
"the macro is used, not the title of the template in which the macro is "
"defined. In other words, when you use a macro, it's like copying the text of"
" a macro into your template and then rendering your template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:142
msgid "Using Slots"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:144
msgid ""
"Macros are much more useful if you can override parts of them when you use "
"them. You can do this by defining **slots** in the macro that you can fill "
"in when you use the template. For example, consider a side bar macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:161
msgid ""
"This macro is fine, but suppose you'd like to include some additional "
"information in the sidebar on some pages. One way to accomplish this is with"
" slots:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:178
msgid "When you use this macro you can choose to fill the slot like so:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:188
msgid ""
"When you render this template the side bar will include the extra "
"information that you provided in the slot:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:206
msgid ""
"Notice how the span element that defines the slot is replaced with the b "
"element that fills the slot."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:210
msgid "Customizing Default Presentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:212
msgid ""
"A common use of slot is to provide default presentation which you can "
"customize. In the slot example in the last section, the slot definition was "
"just an empty span element. However, you can provide default presentation in"
" a slot definition. For example, consider this revised sidebar macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:233
msgid ""
"Now the sidebar is fully customizable. You can fill the links slot to "
"redefine the sidebar links. However, if you choose not to fill the links "
"slot then you'll get the default links, which appear inside the slot "
"definition."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:238
msgid ""
"You can even take this technique further by defining slots inside of slots. "
"This allows you to override default presentation with a fine degree of "
"precision. Here's a sidebar macro that defines slots within slots:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:259
msgid ""
"If you wish to customize the sidebar links you can either fill the *links* "
"slot to completely override the links, or you can fill the "
"*additional\\_links* slot to insert some extra links after the default "
"links. You can nest slots as deeply as you wish."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:265
msgid "Combining METAL and TAL"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:267
msgid ""
"You can use both METAL and TAL statements on the same elements. For example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:281
msgid ""
"In this case, getLinks is a (imaginary) Script that assembles a list of link"
" objects, possibly using a Catalog query."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:284
msgid ""
"Since METAL statements are evaluated before TAL statements, there are no "
"conflicts. This example is also interesting since it customizes a macro "
"without using slots. The macro calls the getLinks Script to determine the "
"links. You can thus customize your site's links by redefining the getLinks "
"Script at different locations within your site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:290
msgid ""
"It's not always easy to figure out the best way to customize look and feel "
"in different parts of your site. In general you should use slots to override"
" presentation elements, and you should use Scripts to provide content "
"dynamically. In the case of the links example, it's arguable whether links "
"are content or presentation. Scripts probably provide a more flexible "
"solution, especially if your site includes link content objects."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:299
msgid "Whole Page Macros"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:301
msgid ""
"Rather than using macros for chunks of presentation shared between pages, "
"you can use macros to define entire pages. Slots make this possible. Here's "
"an example macro that defines an entire page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:327
msgid ""
"This macro defines a page with three slots: *headline*, *body*, and "
"*footer*. Notice how the *headline* slot includes a TAL statement to "
"dynamically determine the headline content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:331
msgid ""
"You can then use this macro in templates for different types of content, or "
"different parts of your site. For example here's how a template for news "
"items might use this macro:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:351
msgid ""
"This template redefines the *headline* slot to include the words \"Press "
"Release\" and call the getHeadline method on the current object. It also "
"redefines the *body* slot to call the getBody method on the current object."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/macros-and-slots.rst:356
msgid ""
"The powerful thing about this approach is that you can now change the *page*"
" macro and the press release template will be automatically updated. For "
"example you could put the body of the page in a table and add a sidebar on "
"the left and the press release template would automatically use these new "
"presentation elements."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:2
msgid "Templates and the Templating Language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:4
msgid ""
"The main elements of a skin are page templates, images, Python scripts, CSS "
"files, and JavaScript files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:8
msgid "(Zope) Page Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:10
msgid ""
"Page templates (.pt files or ZPT) are an essential part of a Plone theme and"
" are probably the easiest aspect of Plone to get to grips with. They are "
"written in an elegant XML-based templating language called TAL, sometimes "
"make use of macros (METAL), and sometimes incorporate Python expressions "
"(small one-line calculations) or Python scripts."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:16
msgid ""
"There are several excellent introductions to ZPT, and it doesn't take long "
"to learn TAL. Try these:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:19
msgid ""
"`Zope Page Templates tutorial on plone.org "
"<http://plone.org/documentation/tutorial/zpt/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:21
msgid ""
"`ZPT Reference on Zope.org "
"<http://www.zope.org/Documentation/Books/ZopeBook/2_6Edition/AppendixC.stx>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:24
msgid ""
"TAL is the one language that we really recommend you learn properly. The "
"rest you can pick your way through or familiarise yourself with as you go "
"along."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:28
msgid ""
"`Zope Page Template Tutorial on plone.org - Advanced Usage "
"<http://plone.org/documentation/tutorial/zpt/advanced-usage>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:31
msgid ""
"A Plone web page is delivered via an aggregation of templates, rather than "
"just one, and there a couple of aspects of Zope Page Template that you'll "
"need to be aware of."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:36
msgid "1. Slot"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:38
msgid ""
"A slot is a predefined section of a template. This can be left empty, or "
"given some default content, but it is available to be filled on the fly. A "
"slot is defined in a template in code like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:48
msgid "And filled via another template like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:58
msgid ""
"The ZPT tutorial on plone.org talks you through this in more detail, and the"
" `Templates and Components to Page <http://plone.org/documentation/manual"
"/theme-reference/buildingblocks/page/templates>`_ section of this manual "
"gives you an example."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:64
msgid "2. Content view templates (\\_view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:66
msgid ""
"Note: the term \"view\" also has a more technical application, so in the "
"context of Components (discussed later in this manual) it will mean "
"something different."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:70
msgid ""
"From the user's, contributor's, or visitor's perspective, a view is the way "
"in which a content item is presented on the page. There's a `useful "
"introduction <http://plone.org/documentation/plone-2.5-user-manual/managing-"
"content/folder-view/>`_ to this in the Plone User Manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:75
msgid ""
"Templates that are used to render a content item for a view have \\_view "
"appended to their name (e.g., document\\_view.pt) and may have a title such "
"as \"Standard View.\" These templates are, in fact, sets of information "
"ready to drop into slots."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:83
msgid ""
"These are small stand-alone functions for times when you need a few lines of"
" code to perform your calculation. On the file system, they have a .py "
"extension; you'll find them in the Zope Management Interface as Script "
"(Python)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/buildingblocks/skin/templates/overview.rst:88
msgid ""
"Here's a snippet from the event\\_view template (the content view for the "
"event content type) which uses a Python script to format the a time field "
"according to the default format for the site. If you look in "
"CMFPlone/skins/plone\\_scripts, you'll find toLocalizedTime.py - just a few "
"lines of code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:4
msgid "Google analytics code snippet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:7
msgid ""
"Provide the code snippet for your site through the web: Site Setup > Site "
"settings"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:6
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:8
msgid "Snippet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:10
msgid "``(code snippet defined by the site manager)``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:10
msgid "CSS:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:47
msgid "none"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:8
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:12
msgid "Name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:22
msgid "plone.analytics"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:15
msgid "Type:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:15
msgid ""
"`viewlet <http://plone.org/documentation/manual/theme-"
"reference/elements/elements/viewlet>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:18
msgid "Use:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:21
msgid "Go to:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:24
msgid "Customizing in your own product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:26
msgid ""
"The following details will help you locate the files that you will need to "
"copy into your own product. They will also help you to provide the correct "
"information to create your own zcml directives, Python classes, and "
"interfaces.See `viewlet <http://plone.org/documentation/manual/theme-"
"reference/elements/elements/viewlet>`_ for more information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:33
msgid "Located in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:36
msgid "[your egg location]/plone/app/layout/analytics/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:37
msgid ""
"[your egg "
"location]/plone.app.layout-[version].egg/plone/app/layout/analytics/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:39
msgid "Template Name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:41
msgid "Class Name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:43
msgid "plone.app.layout.analytics.view.AnalyticsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:45
msgid "Manager:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:42
msgid ""
"plone.portalfooter (name) plone.app.layout.viewlets.interfaces.IPortalFooter"
" (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:44
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:53
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:55
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:48
msgid "Sample files & directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:47
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:52
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:62
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:53
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:56
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:57
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:52
msgid ""
"Create your own version of the class in [your theme package]/browser/[your "
"module].py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:62
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:58
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:64
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:70
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:62
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:64
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:60
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:66
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:70
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:69
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:62
msgid "Wire up your viewlet in [your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:71
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:70
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:71
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:61
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:71
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:80
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:66
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:90
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:80
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:75
msgid "In [your theme package]/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:63
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:73
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:76
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:78
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:68
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:65
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:65
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:65
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:86
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:75
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:77
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:80
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:77
msgid "Hide the original viewlet (if you wish)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.analytics.rst:85
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:81
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:87
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:72
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:93
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:82
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:85
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:87
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:91
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:77
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:83
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:74
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:95
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:84
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:101
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:86
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:89
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:93
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:91
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:92
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:86
msgid "Insert your new viewlet in a viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:2
msgid "Dublin Core Metadata"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:4
msgid "The Dublin Core metadata in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:7
msgid "``<meta .... />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:19
msgid "plone.htmlhead.dublincore"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:35
msgid "[your egg location]/plone/app/layout/viewlets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:32
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:35
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:46
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:36
msgid ""
"[your egg "
"location]/plone.app.layout-[version].egg/plone/app/layout/viewlets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:38
msgid "dublin\\_core.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:40
msgid "plone.app.layout.viewlets.common.DublinCoreViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.dublincore.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:42
msgid ""
"plone.htmlhead (name) plone.app.layout.viewlets.interfaces.IHtmlHead "
"(interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:2
msgid "KSS Base Url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:4
msgid "Link rel tag in the HTML head with the real url of the published page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:7
msgid "``<link rel=\"kss-base-url\" .... />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:19
msgid "plone.htmlhead.kss-base-url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:33
msgid "[your egg location]/plone/app/kss/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:34
msgid "[your egg location]/plone.app.kss-[version].egg/plone/app/kss/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.kss-base-url.rst:39
msgid "plone.app.kss.headerViewlet.KSSBaseUrlViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:2
msgid "HTML Head Title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:4
msgid "The page title in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:7
msgid "``<title> ...</title>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:19
msgid "plone.htmlhead.title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.htmlhead.title.rst:40
msgid "plone.app.layout.viewlets.common.TitleViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:2
msgid "RSS Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:4
msgid "The RSS link in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:7
msgid "``<link rel=\"alternate\" title=\"RSS 1.0\" ... />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:19
msgid "plone.links.RSS"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:33
msgid "[your egg location]/plone/app/layout/links/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:34
msgid ""
"[your egg location]/plone.app.layout-[version].egg/plone/app/layout/links/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:38
msgid "rsslink.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:40
msgid "plone.app.layout.links.viewlets.RSSViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:42
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:42
msgid ""
"plone.htmlhead.links (name) "
"plone.app.layout.viewlets.interfaces.IHtmlHeadLinks (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.RSS.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:48
msgid ""
"Put a version of navigation.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:2
msgid "Author Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:4
msgid "The author link in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:7
msgid "``<link rel=\"author\" …  />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:19
msgid "plone.links.author"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:38
msgid "author.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:40
msgid "plone.app.layout.links.viewlets.AuthorViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.author.rst:48
msgid "Put a version of author.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:2
msgid "Favicon Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:4
msgid "The favicon link in HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:7
msgid "``<link rel=\"shortcut icon\" … />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:19
msgid "plone.links.favicon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:38
msgid "favicon.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:40
msgid "plone.app.layout.links.viewlets.FaviconViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.favicon.rst:48
msgid "Put a version of favicon.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:2
msgid "Navigation Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:4
msgid "The navigation link in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:7
msgid "``<link title=\"Front Page\" …> and <link title=\"Site Map\" ..>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:19
msgid "plone.links.navigation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:38
msgid "navigation.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.navigation.rst:40
msgid "plone.app.layout.links.viewlets.NavigationViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:2
msgid "Search Link"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:4
msgid "The search link in HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:7
msgid "``<link rel=\"search\" … />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:19
msgid "plone.links.search"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:38
msgid "search.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:40
msgid "plone.app.layout.links.viewlets.SearchViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.links.search.rst:48
msgid "Put a version of search.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:2
msgid "Next Previous Links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:4
msgid "Provides next/previous links in the HTML head."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:7
msgid "``<link title=\"Go to previous item\" … />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:19
msgid "plone.nextprevious.links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:33
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:35
msgid "[your egg location]/plone/app/layout/nextprevious/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:36
msgid ""
"[your egg "
"location]/plone.app.layout-[version].egg/plone/app/layout/nextprevious/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:38
msgid "links.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:40
msgid "plone.app.layout.nextprevious.view.NextPreviousLinksViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.nextprevious.links.rst:48
msgid "Put a version of links.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:2
msgid "Skip Links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:4
msgid ""
"Hidden links at the top of the page to skip to the content and the "
"navigation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:10
msgid "``<p class=\"hiddenStructure\"> … </p>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:12
msgid "invisibles.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:22
msgid "plone.skip\\_links"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:41
msgid "skip\\_links.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:43
msgid "plone.app.layout.viewlets.common.SkipLinksViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:54
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:50
msgid ""
"plone.portalheader (name) plone.app.layout.viewlets.interfaces.IPortalHeader"
" (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/hiddenelements/plone.skip_links.rst:51
msgid ""
"Put a version of skip\\_links.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:2
msgid "Anatomy of a Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:4
msgid ""
"The bits that go to make up a portlet renderer (which is the bit of a "
"portlet you'll want to customize)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:7
msgid ""
"Customizing a portlet is similar to overriding a viewlet, but rather more "
"straightforward. There is a specific ZCML directive for customization."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:7
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:7
msgid "Directive in ZCML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:14
msgid "<plone:portletRenderer />"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:12
msgid "Attributes in ZCML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:18
msgid "layer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:19
msgid "a marker interface for your particular theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:22
msgid "the interface of the portlet you wish to customize"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:23
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:28
msgid "template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:24
msgid "location of the template you wish to override"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/anatomy.rst:26
msgid ""
"your custom class (use this if you don't specify a template) for rendering "
"the portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:2
msgid "Moving, Removing or Hiding a Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:4
msgid "Some tips on moving or hiding portlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:6
msgid ""
"Whether or not portlets appear on your site is highly customizable through "
"the web, you can use the manage portlets link in most contexts. For more "
"information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:10
msgid ""
"`http://plone.org/documentation/tutorial/where-is-what/portlets-1/ "
"<http://plone.org/documentation/tutorial/where-is-what/portlets-1/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:12
msgid ""
"It's assumed that you wouldn't want to *fix* portlets on a page (otherwise "
"they'd probably be viewlets). However, if you wish to set up an initial "
"assignment of portlets on installation of your theme product, use"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:17
msgid "[your theme package]/profiles/default/portlets.xml."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:19
msgid ""
"Here's an extract from the Plone Default portlets.xml, setting up the login "
"and navigation portlet for the left-hand column, and the review and news "
"portlets for the right-hand column."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:68
msgid ""
"The attributes for the assignment directive are described in full here: "
"`http://plone.org/products/plone/roadmap/203/ "
"<http://plone.org/products/plone/roadmap/203/>`_. In brief:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:74
msgid "manager and type"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:73
msgid ""
"The names for these can be looked up in "
"plone.app.portlets.portlets.configure.zcml (for type of portlet) or in the "
"Plone Default profiles/default/portlets.xml file."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:77
msgid ""
"This can be one of four values \"context\", \"content\\_type\", \"group\" or"
" \"user\" - depending on where you wish to assign your portlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:82
msgid "key"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:80
msgid ""
"This will depend on the value given in category above. In the case of "
"\"context\", the location in the site is indicated (the examples above "
"specify the site root)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/move.rst:84
msgid ""
"If you wish to configure the portlet in more detail, you can nest property "
"directives within the assignment directive. Here's a tweak to ensure the "
"navigation portlet appears at the root of the site:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:2
msgid "Overriding a Portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:4
msgid "A quick cheat sheet of how to override or customize a portlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:9
msgid ""
"Use Site Setup > Zope Management Interfaces > portal\\_view\\_customizations"
" to customize the template of an existing Plone Default portlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:27
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:29
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:14
msgid "In your own product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:16
msgid "There is a detailed tutorial available here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:20
msgid ""
"You can also look up the details of the portlet you want to override in the "
"Elements section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:24
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:12
msgid "Quick Cheat Sheet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:26
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:19
msgid "You will need to know the name of"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:28
msgid "Your theme-specific interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:29
msgid ""
"This is optional but ensures that your portlet is only available for your "
"theme. If you used the plone3\\_theme paster template, then the name will "
"probably be IThemeSpecific."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:33
msgid ""
"You will need to create the following (you should be able to locate the "
"originals to copy by looking them up in the Elements section):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:36
msgid "plone portlet renderer directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:37
#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:30
msgid "[your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:38
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:47
msgid "page template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:39
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:48
msgid "[your theme package]/browser/[your template name].pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:41
msgid "Python class \\*"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:41
msgid "[your theme package]/browser/[your module name].py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:43
msgid "\\* in most cases you won't need a Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:46
msgid "Sample configuration.zcml directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:62
msgid "Sample Python class for navigation portlet override"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override.rst:64
msgid ""
"If you want to customize the navigation portlet, you may need to supply the "
"class as well as the template. Two templates are involved: the first is the "
"usual display template; the second handles the recursion through the "
"navigation tree. If you need to make your own version of the second, then "
"you'll need to assign it to the recurse method in the class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:2
msgid "Override the portlets in Plone 3.0"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:4
msgid ""
"Customizing the portlets is a regular task, working with Plone theme. In "
"this how-to we will find out how-to do this in Plone 3.0 with it's new "
"mechanism for managing portlets (contributed by Denys Mishunov)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:9
msgid "Purpose"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:11
msgid ""
"It was pretty easy to customize one of the standard portlet in times of "
"Plone versions prior 3.0. You just had to copy a page template for "
"appropriate portlet to your theme product and do whatever you want, changing"
" it's XHTML. You could also create a new portlet the same easy way - just "
"create a template for the new portlet and register this portlet with your "
"site's Properties."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:18
msgid ""
"In Plone 3.0 portlets became slightly more complex. But don't be afraid. "
"They became much more powerful at the same time! The advantage becomes "
"obvious now, right? ;) They are served from separate python package and have"
" really flexible management possibilities. So, it's worth to try this new "
"mechanism to realize how powerful it is."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:25
msgid "Prerequisities"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:27
msgid ""
"First thing we should mention - this is not about TTW (Through The Web) "
"customization. If you need a fast and dirty trick, have a look at "
"portal\\_view\\_customizations tool. This how-to assumes you want to have "
"your changes in a repeatable way, so that you could have the same changes on"
" any site where you install your product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:33
msgid ""
"Another thing you might consider is worth a mentioning - you don't need this"
" technique in **any** case you want to customize a portlet in Plone 3.0. If "
"you have hardly customized portlets used in previous versions of Plone or "
"you want to continue using portlets in \"pre-3.0-era-way\" (that we strongly"
" don't recommend) you might need to have a look at ClassicPortlet that is "
"shipped with Plone 3.0. It deals with the regular page templates the same "
"way you have worked with portlets before Plone 3.0."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:42
msgid ""
"And the last before we move on. If you want to customize any of the standard"
" portlets removing all back-end logic from it (making a static portlet), "
"don't do this. We mean that - **don't** do this. Wise people thought about "
"you. Better install plone.portlet.static and play with it, creating the "
"static portlets when you need it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:48
msgid "So, for all those who are still with us... we move on finally."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:50
msgid ""
"We assume you have created **MyTheme** Plone 3 theme with either "
"DIYPloneStyle or ZopeSkel generators. We do not cover explanations of all "
"aspects of creating a theme for Plone 3.0. To find out more about core ideas"
" of making a theme, managing the viewlets in Plone 3.0 and many more, check "
"an excellent tutorial by David Convent - `Customizing the viewlets in "
"main\\_template <http://plone.org/how-to/override-the-portlets-in-"
"plone-3.0/.org/documentation/tutorial/customizing-main-template-viewlets>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:58
msgid ""
"The key concept in working with portlets in Plone 3.0 is the use of Zope 3 "
"skin layer - the same as we have when overriding a viewlet. We assume you "
"have at least the following minimum set of files in **MyTheme/browser** "
"folder:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:67
msgid "In common, portlets' overriding process looks like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:69
msgid "choose the portlet you want to override;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:70
msgid "register a skin layer if you don't have one yet in **interfaces.py**;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:71
msgid ""
"add the special <plone:portletRenderer/> directive to "
"**MyTheme/browser/configure.zcml**;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:73
msgid ""
"define **portlet** attribute for <plone:portletRenderer /> directive. This "
"is a portlet data provider type for which this override is used. This can be"
" either class or interface. For example "
"plone.app.portlets.portlets.navigation.INewsPortlet;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:77
msgid ""
"define a new **template** attribute for <plone:portletRenderer /> directive."
" When you add this the default renderer for portlet you are overriding will "
"be used, but with your template;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:80
msgid ""
"in case you need to customize the default behavior for the portlet, you "
"should use **class** attribute instead of simple template. This new class "
"will be acting as the renderer for the portlet instead of the default one;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:84
msgid ""
"define **layer** attribute for <plone:portletRenderer /> directive with "
"**MyTheme** browser layer. The **layer** attribute of the portletRenderer "
"attribute associates a particular IPortletRenderer with a particular browser"
" layer (**MyTheme** layer in our case). When our layer is in effect (i.e. "
"MyTheme is installed) the new renderer will be used instead of the default "
"one;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:90
msgid ""
"add a new template to **MyTheme/browser** that will implement the renderer;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:92
msgid "restart Zope and enjoy."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:98
msgid "1. Choose the portlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:100
msgid ""
"First of all we should decide what portlet we would like to customize. Let's"
" choose the News portlet. If you will have a look at the standard news "
"portlet, you will see those news\\_icon images in-front of the titles. Let's"
" get rid of them in the XHTML just for the test."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:105
msgid ""
"Plone default portlets are declared in the **plone.app.portlets.portlets** "
"package. The core Plone 3.0 portlets can be found in "
"**$INSTANCE\\_HOME/lib/python/plone/app/portlets/portlets/**. It might be "
"located somewhere else in the $PYTHONPATH though. Depending on the zope "
"installation (win32 or unix like operating system, installation from source,"
" installer, eggs or else…), you may need to use the search tools available "
"in your operating system to locate the package."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:114
msgid ""
"**plone.app.portlets.portlets** package contains python modules, page "
"templates and ZCML configuration file - **configure.zcml**. This file "
"contains a set of <plone:portlet /> directives that define the standard "
"portlets like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:123
msgid ""
"Attributes in the above code are pretty self-explanatory. But if they are "
"not clear to you or you want to know more about additional attributes for "
"<plone:portlet />, have a look at **IPortletDirective** interface in "
"**metadirectives** module inside the plone.app.portlets package."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:130
msgid "2. Register a skin layer if you don't have one yet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:132
msgid ""
"We can register an override for a portlet only for one theme (one skin "
"selection) thanks to the **plone.theme** package. Thanks to **plone.theme**,"
" we can set a Zope 3 skin layer that corresponds to a particular skin "
"selection in portal\\_skins (a theme)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:137
msgid ""
"Add the following code to **MyTheme/browser/interfaces.py** if you don't "
"have it yet:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:145
msgid "3. Add the directive to configure.zcml with appropriate attributes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:147
msgid ""
"Along with <plone:portlet /> directive, plone.app.portlets package defines "
"another one - <plone:portletRenderer />. The last one is used to override "
"the portlets, defined in your site. It has quite a few possible attributes "
"that can be found in **metadirectives** module inside the plone.app.portlets"
" package. We will not list them all here, so just spend 5 minutes and have a"
" look at those attributes, so that you could understand the following "
"code..."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:155
msgid "... 5 minutes later..."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:157
msgid ""
"Ok, let's get back to work. So, to override the standard News portlet for "
"MyTheme product we should add <plone:portletRenderer /> directive to "
"**MyTheme/browser/configure.zcml**. Let's have a look how this should look "
"like (be sure you have xmlns:plone=\"http://namespaces.plone.org/plone\" "
"namespace defined in your **<configure>** top node.):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:168
msgid ""
"First of all we include plone.app.portlets package to be sure that default "
"portlets are enabled before we override anything."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:171
msgid ""
"Then we make browser layer interface for **MyTheme**, defined in "
"**MyTheme/browser/interfaces.py**, available. If you have customized any "
"viewlet you should already have this in **configure.zcml** so no need to add"
" it twice in the same theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:176
msgid "Next, let's sort out what attributes we use here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:178
msgid ""
"**portlet** - define the portlet that we are going to override. In our case "
"we define the full dotted path to INewsPortlet interface, that is "
"implemented by news portlet;"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:181
msgid ""
"**template** - the name of a template that implements the renderer. The "
"default renderer for this news portlet will be used, but with "
"\"mytheme\\_news.pt template instead of the default one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:184
msgid "**layer** - our browser layer for which this renderer is used."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:185
msgid ""
"one more attribute you might need to remember here is **class**. You will "
"need to use it in case you want to change the default behavior of the "
"portlet. This attribute will define the class that will be used as a "
"renderer for this portlet instead of the default one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:190
msgid "That's it with **configure.zcml**. Let's move on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:193
msgid "4. Add a new template for portlet's renderer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:195
msgid ""
"So, in previous part we have defined mytheme\\_news.pt as a value for "
"**template** attribute. But we don't have that template on file-system. "
"Let's add it to **MyTheme/browser/**. Just copy **news.pt** template for "
"news portlet from **plone.app.portlets.portlets** to **MyTheme/browser/** "
"and rename it to mytheme\\_news.pt. Open this template in your favorite "
"editor and let's play with it a little bit."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:202
msgid ""
"As you remember we should get rid of standard news\\_icon.gif icons we get "
"for news items by default. Find the following line in your template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:209
msgid ""
"and comment it out so that we do not un-recoverable steps and could revert "
"our changes later. So, we get:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:217
msgid "That's all folks!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:219
msgid ""
"So, that's it. Restart your Zope and have a look at your news items portlet "
"- no images! Cool! Yeah! Actually not that cool just to remove the images, "
"that might be useful for community portals :)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:226
msgid ""
"This example is really simple and not pretty useful for sure. But you "
"definitely can do much better customizations now. When using **class** "
"attribute in <plone:portletRenderer/> directive you can do portlets that "
"will really differ from default one. And that's where the beauty of portlets"
" in Plone 3.0 goes - you will not need to put a load of python to your page "
"templates as you had to do before. All python will be exactly where it "
"should be - in python class. And template will just get the results from "
"different python methods within that class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portlet/override-the-portlets-in-plone-3.0.rst:235
msgid "Enjoy!"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:2
msgid "Creating a New Portlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:4
msgid "How to create a new portlet manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:6
msgid ""
"A practical example of creating a new portlet manager can be found here"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:10
msgid "Here's a quick checklist of what you need to do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:18
msgid "You cannot create a new portlet manager through the web."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:23
msgid "You will need to provide the name of"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:26
msgid ""
"This is optional but ensures that your portlet manager is available for your"
" theme only. If you used the plone3\\_theme paster template, then the name "
"will probably be IThemeSpecific."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:30
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:26
msgid ""
"You will need to create the following (you should be able to locate the "
"originals to copy by looking them up in the elements section):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:35
msgid "Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:34
msgid ""
"This will go in [your theme package]/browser/interfaces.py. You can give it "
"any name you like, but by convention, it should be prefaced with \"I\"."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:37
msgid "configuration directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:38
msgid "[your theme package]/profiles/default/portlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:39
msgid "browser:page directive (for the management view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:42
msgid "page template (for the management view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:42
msgid "[your theme package]/browser/[your template].pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:45
msgid "Sample interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:55
msgid "Sample portlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/createnew.rst:68
msgid "Sample configure.zcml directive (for the management view)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:2
msgid "Hiding a Portlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:4
msgid "There are several methods for hiding a portlet manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:6
msgid ""
"A portlet manager won't display if there are no portlets assigned to it to "
"display or if the assigned portlets have no data."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:9
msgid ""
"In the case of the portlet columns, if the portlet manager is empty, then it"
" is also useful to have the surrounding block elements disappear too, so "
"that you don't get a wide blank margin on your page. For this reason, the "
"columns containing the portlet managers in the main\\_template are wrapped "
"around with slots. Hiding the portlet managers is, therefore, a matter or "
"manipulating these slots. There are various techniques:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:21
msgid "Defining an empty slot"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:18
msgid ""
"Use the following in a content view template to ensure that the right hand "
"column is removed:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:21
msgid "``<metal:column_one fill-slot=\"column_one_slot\" />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:25
msgid "Using the sl and sr global variables"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:24
msgid ""
"These are set as conditions on the slots; they check the respective portlet "
"managers for content and, if they are empty, evaluate to false. You can "
"override these in the template itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:33
msgid "Using show\\_portlets option"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:28
msgid ""
"show\\_portlets=false can be passed as an option to a template to set both "
"sl and sr to false. To see this in action, have a look at"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:31
msgid "CMFPlone/skins/plone\\_templates/standard\\_error\\_message.py and"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/hide.rst:32
msgid "CMFPlone/browser/ploneview.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:2
msgid "Moving or Removing a Portlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:4
msgid "Tips on how to move or remove portlet managers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:6
msgid ""
"Portlet managers are called by main\\_template. Moving or removing them is "
"simply a case of customizing the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:12
msgid ""
"Site Setup > Zope Management Interface > portal\\_skins > plone\\_templates "
"> main\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:14
msgid "Customize this, and look for"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:25
msgid ""
"(use the Elements key to identify exactly which manager you're interested "
"in)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/move.rst:26
msgid "Put your own version of main\\_template in [your theme product]/skins."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:2
msgid "Adding Portlet Managers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:4
msgid ""
"You need portlets at an additional place in your Plone. In this example we "
"put contextual portlets above the content (contributed by Jens Klein)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:7
msgid ""
"This is about adding Portlet MANAGERS, hint: **PortletManager != "
"Portlet.**\\ A PortletManager is a kind of container for the portlets, like "
"the ViewletManager is for Viewlets. So, after reducing the momentum of "
"misunderstanding, lets start:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:13
msgid "Prerequsites"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:15
msgid ""
"I assume you're familar with GenericSetup based setups for Plone 3. Take a "
"look at *DIYPloneStyle* and related tutorials if not."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:18
msgid ""
"You need Plone 3 installed and a Product NEWTHEME for your own skin (based "
"on DIYPloneStyle works fine)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:22
msgid "Strategy"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:24
msgid ""
"In my example I don't want to customize the main-template. So the idea is to"
" add a viewlet to the *plone.app.layout.viewlets.interfaces.IContentViews* "
"viewletmanager. So the steps need to be done is"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:29
msgid "Add a viewlet to the viewlet-manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:30
msgid "Add a portlet-manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:31
msgid "Add a management view for the portlet-manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:34
msgid "Step One: Add a viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:36
msgid "in Products.NEWTHEME add a file *abovecontentportlets.pt* containing:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:42
msgid ""
"Here we call the portlet manager, we create it in step two. But first lets "
"register our new viewlet for the viewletmanager. Edit your "
"Products/NEWTHEME/configure.zcml and add:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:56
msgid "Step Two: Add a portlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:58
msgid ""
"Create a marking interface for the manager and add or edit "
"*Products/NEWTHEME/interfaces.py*"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:69
msgid ""
"Add (or edit) your *Products/NEWTHEME/profiles/default/portlets.xml* and "
"register a portlet manager:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:82
msgid ""
"Thats all you need if you don't want to manage the portlets through the web."
" Oh, you want to? So you need a third step:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:86
msgid "Step Three: Add a management view for the portlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:88
msgid ""
"The management view is rendered for the left and right slots directly on the"
" main-template. But we use a viewlet and in here we have a different view. "
"so we need to call explicitly our view and call the our manager within its "
"context."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:95
msgid ""
"We need to register a new browser view for an own page template directly "
"calling our manager. Again add some lines to your *configure.zcml*:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:108
msgid ""
"And finally we need the template, so add an file *managemyabove.pt* and edit"
" it:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:135
msgid ""
"That's it. After restarting your zope you can call "
"*http://DOMAIN.TLD/plone/path/to/some/context/@@manage-myabove*"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/portletmanager/practical/adding-portlet-managers.rst:138
msgid "and assign portlets over your content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:2
msgid "Header"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:4
msgid "Calls the viewlet managers for the site header."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:7
msgid "``<div id=\"portal-header\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:17
msgid "plone.header"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:36
msgid "portal\\_header.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:40
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:48
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:51
msgid ""
"plone.portaltop (name) plone.app.layout.viewlets.interfaces.IPortalTop "
"(interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/structuralelements/plone.header.rst:46
msgid ""
"Put a version of portal\\_header.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:2
msgid "Anatomy of a Viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:4
msgid "The bits that go to make up a viewlet component."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:9
msgid "<browser:viewlet />"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:15
msgid "e.g. [your namespace].[your viewlet name]"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:16
#: ../../reference_manuals/old/portlets/architecture.rst:143
msgid "manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:17
msgid "a manager interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:21
msgid ""
"a Python class. This class requires a 'render' attribute, which, in most "
"cases, will point to a template. You don't need to specify the template in "
"the ZCML, however, in Plone version 3.1.3 and higher, you can override this "
"template using the template attribute below"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:26
msgid ""
"in Plone version 3.1.2 and lower, you can only use this if you aren't using "
"a class; in Plone version 3.1.3 and higher, you can use this to override the"
" template you've set in the class you specified above"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:23
msgid "in most cases this will be Zope.Public"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:25
msgid "for"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:33
msgid ""
"specify an interface marking a group of content types, if you wish. The "
"viewlet will then be restricted to those content types (for an example see "
"the `Presentation viewlet <http://plone.org/documentation/manual/theme-"
"reference/elements/visibleelements/plone.presentation>`_ in the Elements "
"section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/anatomy.rst:39
msgid ""
"specify an interface marking a specific browser view, if you wish. The "
"viewlet will be restricted to items with that specific view (for an example "
"investigate the source code of the Content Actions viewlet - you'll find "
"directions on where to locate this code on the `Content Actions "
"<http://plone.org/documentation/manual/theme-"
"reference/elements/visibleelements/plone.contentactions>`_ page of the "
"Elements section)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:2
msgid "Move viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:4
msgid ""
"A cheat sheet of what you need to do to move viewlets in your page layout, "
"or remove or hide them from your page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:7
msgid ""
"You'll find detailed information and a tutorial on how to move viewlets "
"here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:10
msgid ""
"`http://plone.org/documentation/tutorial/customizing-main-template-viewlets"
"/reordering-and-hiding-viewlets "
"<http://plone.org/documentation/manual/tutorial/customizing-main-template-"
"viewlets/reordering-and-hiding-viewlets>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:13
msgid "Quick Cheat Sheet of the Basics"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:18
msgid "Add @@manage-viewlets to your site URL."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:19
msgid ""
"If you want to move viewlets that only appear on a page, be sure to append "
"@@manage-viewlets to the URL of the page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:21
msgid ""
"You will find that you can move, hide or remove viewlets with this method, "
"but that you cannot move them from one viewlet manager to another."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:28
msgid "Moving or removing viewlets is part of your site configuration:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:30
msgid "Add or edit [your theme package]/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:32
msgid ""
"You'll find general information about the site configuration in the "
"`Configuration <http://plone.org/documentation/manual/theme-"
"reference/elements/buildingblocks/configuration>`_\\ section of this manual."
" It's worth reading this through before you launch in here, as configuring "
"viewlets and viewlet managers can be a bit tricky. It will tell you"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:38
msgid ""
"how you can get the Generic Setup tool to write out the configuration for "
"you"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:40
msgid "why things might not be working as you expect"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:42
msgid ""
"`GloWorm <http://plone.org/products/gloworm>`_ is a useful tool here too. It"
" will help you move the viewlets around through the Plone user interface and"
" inspect the resulting configuration."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:47
msgid "Removing a viewlet from a viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:49
msgid ""
"You can't do anything more than hide your viewlet in the viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:59
#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:76
msgid ""
"Note that you can do this process through the web and then get the Generic "
"Setup tool to write out the configuration for you to transfer into your own "
"theme package."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:64
msgid "Moving a viewlet within a viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:81
msgid "Moving a viewlet from one viewlet manager to another"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:83
msgid ""
"If you are basing your theme on the Plone Default theme, then you'll find "
"that reassigning a Plone Default viewlet is a two step process"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:86
msgid "hide it in its current viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:87
msgid "add it and give it a position in a different viewlet manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:108
msgid ""
"you can also use 'insert-after=\"[Name of Viewlet Above]\"' or use an "
"asterisk to place the viewlet at the top or bottom of the manager (e.g "
"'insert-after'=\\*)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:111
msgid ""
"based-on=\"Plone Default\" means that it will take the Plone Default "
"ordering and then apply the insert-after and insert-before adjustments "
"you've specified."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:116
msgid "Registering a viewlet / non-std. theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/move/overview.rst:118
msgid ""
"If youare basing your theme on the Plone Default theme, then you'll find "
"that reassigning a Plone Default viewlet is a two step process \\* hide it "
"in its current viewlet manager \\* add it and give it a position in a "
"different viewlet manager If your theme is not based on Plone Default you "
"need `to register the viewlet in your theme <http://collective-"
"docs.readthedocs.org/en/latest/views/viewlets.html#creating-a-viewlet-"
"manager-zcml-way>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:2
msgid "Override viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:4
msgid "A quick cheat sheet on how to customize or create a new viewlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:6
msgid ""
"You can customize a viewlet template through the web, but you can't alter "
"the underlying Python class."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:9
msgid ""
"On the file system, rather than customize, the process is to wire up a new "
"viewlet, or re-wire an existing viewlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:12
msgid ""
"You'll find a detailed tutorial on creating a viewlet in `this article "
"<http://plone.org/documentation/kb/customizing-main-template-"
"viewlets/adding-a-viewlet/>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:21
msgid ""
"Use Site Setup > Zope Management Interfaces > portal\\_view\\_customizations"
" to customize the template of an existing Plone Default viewlet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:24
msgid "You cannot create a new viewlet through the web."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:29
msgid "You will need to know the name of:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:31
msgid "The viewlet manager interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:32
msgid "Look this up in the Elements section of this manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:36
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:24
msgid "Your theme specific interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:34
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:22
msgid ""
"This is optional, but ensures that your viewlet is only available for your "
"theme. If you used the plone3\\_theme paster template, then the name will "
"probably be IThemeSpecific."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:38
msgid ""
"You will need to create the following (you should be able to locate the "
"originals to copy by looking at the Elements section or by using `GloWorm "
"<http://plone.org/documentation/products/gloworm>`_):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:42
msgid "browser viewlet directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:43
msgid "This will go in [your theme package]/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:45
msgid "configuration file"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:34
msgid "[your theme package]/profiles/default/viewlets.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:52
msgid "Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:50
msgid ""
"This is optional (but see the note below for Plone version 3.1.2 or lower) "
"put this in [your theme package]/browser/[your module].py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:55
msgid "Sample configuration.zcml directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:57
msgid ""
"Re-wiring a Plone Default viewlet to use your own template (note the layer "
"attribute is really important here)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:71
msgid "Wiring up a new viewlet but borrowing a Plone Default viewlet class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:84
msgid ""
"Wiring up with a brand new viewlet with your own class or your own template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:99
msgid "Notes for Plone version 3.1.2 or lower:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:102
msgid "Sample Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewlet/override/overview.rst:104
msgid ""
"In Plone version 3.1.2 or lower, you will need to use this to override a "
"Plone Default viewlet, even if you only want to change the page template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:2
msgid "Anatomy of a Viewlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:4
msgid "The bits that go to make up a Viewlet Manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:9
msgid "<browser:viewletManager />"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:15
msgid "e.g., [your namespace].[your viewlet manager name]"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:16
msgid "provides"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:17
msgid "a marker interface defining what this manager does"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:21
msgid "this will be plone.app.viewletmanager.manager.OrderedViewletManager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:25
msgid ""
"specify an interface marking a group of content types, if you wish. The "
"viewlet manager will then be restricted to those content types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/anatomy.rst:28
msgid ""
"specify an interface marking a view, if you wish. The viewlet manager will "
"be restricted to items with those views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:2
msgid "Moving, Removing or Hiding a Viewlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:4
msgid "Some hints on moving or hiding viewlet managers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:6
msgid ""
"Viewlet managers are called by page templates. Moving or removing them is "
"simply a case of customizing the template. Most are called by the "
"main\\_template, but you may also need to look into specific content views "
"for some of them."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:17
msgid ""
"Site Setup > Zope Management Interface > portal\\_skins > plone\\_templates "
"or plone\\_content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:19
msgid "Click the Customize button, and look for"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/move.rst:31
msgid ""
"Put your own version of main\\_template or of the content views in [your "
"theme package]/skins."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:2
msgid "Creating a New Viewlet Manager"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:4
msgid "A quick cheat sheet for creating a new viewlet manager."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:9
msgid ""
"You cannot create a new viewlet manager through the web. To override the "
"order in which viewlets appear in a viewlet manager, use the instructions "
"for viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:16
msgid ""
"If you're basing your new viewlet manager on a Plone Default viewlet "
"manager, look up the details in the Elements section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:29
msgid "browser viewletManager directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:31
msgid "Your viewlet manager interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:32
msgid "[your theme package]/browser/interfaces.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:34
msgid "configuration file directives"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:37
msgid "Sample Interface"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/viewletmanager/override.rst:47
msgid "Sample configure.zcml directive"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:2
msgid "Document Actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:4
msgid "The Print and RSS links."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:7
msgid "You can reorder, add, or remove individual document actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:9
msgid ""
"through the web: Site Setup >Zope Management Interface > portal\\_actions > "
"document\\_actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:11
msgid "In your product: profiles/default/actions.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:14
msgid "``<div class=\"documentActions\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:16
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:17
msgid "public.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:26
msgid "plone.abovecontenttitle.documentactions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:31
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:22
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:25
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:28
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:27
msgid "Further information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:28
msgid ""
"`http://plone.org/documentation/kb/where-is-what/document-actions "
"<http://plone.org/documentation/kb/where-is-what/document-actions'>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:47
msgid "document\\_actions.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:49
msgid "plone.app.layout.viewlets.content.DocumentActionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:43
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:45
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:42
msgid ""
"plone.belowcontentbody (name) "
"plone.app.layout.viewlets.interfaces.IBelowContentBody (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:57
msgid ""
"Put a version of document\\_actions.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.abovecontenttitle.documentactions.rst:104
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:98
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:106
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:112
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:100
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:104
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:102
msgid "'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:2
msgid "Language Selector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:4
msgid "Provides a drop down list to select a different language."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:7
msgid "``<ul id=\"portal-languageselector\"> … </ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:17
msgid "plone.app.i18n.locales.languageselector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:31
msgid "[your egg location]/plone/app/i18n/locales/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:32
msgid ""
"[your egg "
"location]/plone.app.i18n-[version].egg/plone/app/i18n/locales/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:36
msgid "languageselector.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:38
msgid "plone.app.i18n.locales.browser.selector.LanguageSelector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:40
msgid ""
"Portal Top (name) plone.app.layout.viewlets.interfaces.IPortalTop "
"(interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.app.i18n.locales.languageselector.rst:46
msgid ""
"Put a version of languageselector.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:2
msgid "Content History"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:4
msgid ""
"Summarizes workflow transitions and version history on the current content "
"item (this replaces the workflow viewlet in Plone 3.3)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:8
msgid "``<div class=\"contentHistory\" id=\"content-history\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:9
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:9
msgid "authoring.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:20
msgid "plone.belowcontentbody.contenthistory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:39
msgid "content\\_history.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:41
msgid "plone.app.layout.viewlets.content.ContentHistoryViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.contenthistory.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:48
msgid ""
"Put a version of review\\_history.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:2
msgid "Related Items"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:4
msgid "Items related to the content"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:7
msgid ""
"This viewlet displays links to additional content items selected by the "
"editor under the categorization tab."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:10
msgid "``<div class=\"relatedItems\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:14
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:22
msgid "plone.belowcontentbody.relateditems"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:41
msgid "document\\_relateditems.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:43
msgid "plone.app.layout.viewlets.content.ContentRelatedItems"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.relateditems.rst:51
msgid ""
"Put a version of document\\_relateditems.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:2
msgid "Workflow History"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:4
msgid "Summarizes workflow transitions on the current content item."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:7
msgid "``<div class=\"reviewHistory\" id=\"review-history\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:19
msgid "plone.belowcontentbody.workflowhistory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:38
msgid "review\\_history.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontentbody.workflowhistory.rst:40
msgid "plone.app.layout.viewlets.content.WorkflowHistoryViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:2
msgid "Byline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:4
msgid ""
"The 'about' information (who created a content item and when it was "
"modified)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:8
msgid "You can turn off the Byline for anonymous viewers"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:10
msgid "through the web: Site Setup > Security"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:11
msgid "In your product: profiles/default/propertiestool.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:14
msgid "``<div id=\"plone-document-byline\" class=\"documentByLine\">...  </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:26
msgid "plone.belowcontenttitle.documentbyline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:45
msgid "document\\_byline.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:47
msgid "plone.app.layout.viewlets.content.DocumentBylineViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:49
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:46
msgid ""
"plone.belowcontenttitle (name) "
"plone.app.layout.viewlets.interfaces.IBelowContentTitle (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.documentbyline.rst:55
msgid ""
"Put a version of document\\_byline.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:2
msgid "Keywords"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:4
msgid ""
"The categories (a.k.a. keywords / tags / labels) that have been assigned to "
"the item."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:8
msgid ""
"This will only appear if some categories have been assigned using Edit > "
"Categories."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:11
msgid "``<div id=\"category\" class=\"documentByLine\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:23
msgid "plone.belowcontenttitle.keywords"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:42
msgid "keywords.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.belowcontenttitle.keywords.rst:52
msgid ""
"Put a version of keywords.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:2
msgid "Colophon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:4
msgid "Contains links to plone.org etc."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:7
msgid "`` <div id=\"portal-colophon\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:19
msgid "plone.colophon"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:38
msgid "colophon.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.colophon.rst:48
msgid ""
"Put a version of colophon.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:2
msgid "Comments"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:4
msgid "Supplies the commenting interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:7
msgid "Comments can be turned on or off"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:9
msgid ""
"through the web: on an individual item (Edit > Settings > Allow Comments )"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:12
msgid "or Site Setup > Types (site-wide per type)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:12
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:13
msgid "in your product: profiles/default/types (per type)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:15
msgid "``<div class=\"discussion\"> … </div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:27
msgid "plone.comments"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:46
msgid "comments.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:48
msgid "plone.app.layout.viewlets.comments.CommentsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:50
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:44
msgid ""
"plone.belowcontent (name) plone.app.layout.viewlets.interfaces.IBelowContent"
" (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.comments.rst:56
msgid ""
"Put a version of comments.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:2
msgid "Content Actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:4
msgid ""
"Provides the display drop-down and other actions in editing mode. There are "
"three content actions components, registered for different view interfaces "
"(as different sets of actions are required in different contexts)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:10
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:18
msgid "plone.contentactions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:37
msgid "contentactions\\_blank.pt & contentactions.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:39
msgid "plone.app.layout.viewlets.common.ContentActionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:41
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:42
msgid ""
"plone.contentviews (name) plone.app.layout.viewlets.interfaces.IContentViews"
" (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentactions.rst:47
msgid ""
"Put a version of contentactions\\_blank.pt & contentactions.pt in [your "
"theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:2
#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:11
msgid "Content Views"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:4
msgid "The View, Edit, and other tabs in the editing interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:7
msgid "``<ul class=\"contentViews\"> … </ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:19
msgid "plone.contentviews"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:38
msgid "contentviews.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.contentviews.rst:48
msgid ""
"Put a version of contentviews.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:2
msgid "Footer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:4
msgid "Contains copyright information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:7
msgid "``<div id=\"portal-footer\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:19
msgid "plone.footer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:38
msgid "footer.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.footer.rst:48
msgid "Put a version of footer.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:2
msgid "Global Sections"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:4
msgid "The top level sections of the site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:7
msgid ""
"The sections are either auto-generated from top level content items or can "
"be set up manually"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:10
msgid ""
"through the web: Site Setup > Navigation (for auto-generation) Site Setup > "
"Zope Management Interface > portal\\_tabs (for manually defined sections)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:13
msgid "in your product: profiles/default/actions.xml and propertiestool.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:17
msgid ""
"``<h5 class=\"hiddenStructure\">Sections</h5> <ul id=\"portal-globalnav\"> …"
" </ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:21
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:29
msgid "plone.global\\_sections"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:31
msgid ""
"`http://plone.org/documentation/kb/where-is-what/the-navigation-tabs "
"<http://plone.org/documentation/kb/where-is-what/the-navigation-tabs>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:50
msgid "sections.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:52
msgid "plone.app.layout.viewlets.common.GlobalSectionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.global_sections.rst:60
msgid ""
"Put a version of sections.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:2
msgid "Lock"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:4
msgid "Indicates that the content item is locked for editing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:7
msgid "``<div id=\"plone-lock-status\" />``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:19
msgid "plone.lockinfo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:33
msgid "[your egg location]/plone/locking/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:34
msgid "[your egg location]/plone.locking-[version].egg/plone/locking/browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:38
msgid "info.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:40
msgid "plone.locking.browser.info.LockInfoViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:42
msgid ""
"plone.abovecontent (name) plone.app.layout.viewlets.interfaces.IAboveContent"
" (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.lockinfo.rst:48
msgid "Put a version of info.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:2
msgid "Logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:4
msgid "The site logo."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:7
msgid "``<a id=\"portal-logo\" ...>... </a>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:11
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:19
msgid "plone.logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:21
msgid ""
"`http://plone.org/documentation/kb/where-is-what/the-logo "
"<http://plone.org/documentation/kb/where-is-what/the-logo>`_ See also the "
"Quick Start Section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:41
msgid "logo.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:43
msgid "plone.app.layout.viewlets.common.LogoViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:51
msgid "Put a version of logo.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.logo.rst:53
msgid ""
"Modify the logo.pt to suit your needs. For example, if you want to use an "
"image named something other than logo.jpg, you could use this code and style"
" #header in your mytheme.css file."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:2
msgid "Next Previous"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:4
msgid "Provides next/previous functionality for a folder."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:7
msgid "Turn this on per folder using Edit > Settings."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:9
msgid "``<div class=\"listingBar\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:21
msgid "plone.nextprevious"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:40
msgid "nextprevious.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:42
msgid "plone.app.layout.nextprevious.view.NextPreviousViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.nextprevious.rst:50
msgid ""
"Put a version of nextprevious.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:2
msgid "Path Bar (Portal Breadcrumbs)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:4
msgid "Provides the breadcrumb trail."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:7
msgid "``<div id=\"portal-breadcrumbs\">...</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:9
msgid ""
"In the Sunburst theme, the breadcrumbs have been styled not to appear until "
"the third level down. Customize the CSS to change this behaviour."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:15
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:23
msgid "plone.path\\_bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:25
msgid ""
"`http://plone.org/documentation/kb/where-is-what/the-path-bar "
"<http://plone.org/documentation/kb/where-is-what/the-path-bar'>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:44
msgid "path\\_bar.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:46
msgid "plone.app.layout.viewlets.common.PathBarViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.path_bar.rst:54
msgid ""
"Put a version of path\\_bar.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:2
msgid "Personal Bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:4
msgid "Provides the Log in link and further links for users once logged in."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:7
msgid "You can reorder, add, or remove specific links in the personal bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:9
msgid ""
"through the web: Site Setup >Zope Management Interface > portal\\_actions > "
"user"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:14
msgid "``<div id=\"portal-personaltools-wrapper\"> …</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:18
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:26
msgid "plone.personal\\_bar"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:28
msgid ""
"`http://plone.org/documentation/kb/where-is-what/the-personal-bar "
"<http://plone.org/documentation/kb/where-is-what/the-personal-bar'>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:47
msgid "personal\\_bar.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:49
msgid "plone.app.layout.viewlets.common.PersonalBarViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.personal_bar.rst:57
msgid ""
"Put a version of personal\\_bar.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:2
msgid "Presentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:4
msgid "Provides a link to a presentation view of a document."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:7
msgid ""
"Only available for a document. The link to a presentation view can be turned"
" on or off"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:10
msgid ""
"through the web: on an individual item (Edit > Settings > Presentation )"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:16
msgid "``<p id=\"link-presentation\">...</p>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:20
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:28
msgid "plone.presentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:42
msgid "[your egg location]/plone/app/layout/presentation/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:43
msgid ""
"[your egg "
"location]/plone.app.layout-[version].egg/plone/app/layout/presentation/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:49
msgid "plone.app.presentation.PresentationViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.presentation.rst:51
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:44
msgid ""
"plone.abovecontentbody (name) "
"plone.app.layout.viewlets.interfaces.IAboveContentBody (interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:2
msgid "Search Box"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:4
msgid "Site search facility."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:7
msgid "To customise the search box behaviour"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:9
msgid "through the web: Site Setup > Search"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:10
msgid "in your product: profiles/default/propertiestool.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:13
msgid "``<div id=\"portal-searchbox\">…</div>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:17
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:25
msgid "plone.searchbox"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:27
msgid ""
"`http://plone.org/documentation/kb/the-search-box "
"<http://plone.org/documentation/tutorial/where-is-what/the-search-box>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:46
msgid "searchbox.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:48
msgid "plone.app.layout.viewlets.common.SearchBoxViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.searchbox.rst:56
msgid ""
"Put a version of searchbox.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:2
msgid "Site Actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:4
msgid ""
"Links, available on every page, to provide specific functionality or "
"information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:8
msgid "You can reorder, add, or remove individual site actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:10
msgid ""
"through the web: Site Setup >Zope Management Interface > portal\\_actions > "
"site\\_actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:12
msgid "in your product: profiles/default/actions.xml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:15
msgid "``<ul id=\"portal-siteactions\">...</ul>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:19
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:27
msgid "plone.site\\_actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:46
msgid "site\\_actions.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:48
msgid "plone.app.layout.viewlets.common.SiteActionsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.site_actions.rst:56
msgid ""
"Put a version of site\\_actions.pt in [your theme "
"package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:2
msgid "Table of Contents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:4
msgid "Provides a set of bookmarks for the current page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:7
msgid "Turned on per content item through Edit > Settings."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:9
msgid ""
"``<dl id=\"document-toc\" class=\"portlet toc\"    style=\"display: none\"> "
"… </dl>``"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:11
msgid "portlets.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:13
#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:21
msgid "plone.tableofcontents"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:40
msgid "toc.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:42
msgid "plone.app.layout.viewlets.common.TableOfContentsViewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/elements/visibleelements/plone.tableofcontents.rst:50
msgid "Put a version of toc.pt in [your theme package]/browser/templates)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:3
msgid "Theming guide for Plone 3"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:10
msgid ""
"This is a theming guide for Plone 3. The technologies here work directly on "
"Zope Page Templates (TAL) and viewlets. On Plone 4.2+ versions of Plone the "
"suggested approach for theming your site is `plone.app.theming "
"<http://pypi.python.org/pypi/plone.app.theming>`_ where you can create your "
"theme through-the-web and with less needed low level programming "
"information."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:17
msgid ""
"Even if not recommended the techniques described are still useful and might "
"be needed with new versions of Plone. Please consult `stackoverflow.com "
"(plone tag) <http://stackoverflow.com/questions/tagged/plone>`_ or `plone-"
"users mailing list <http://plone.org/support/forums/general>`_ when in "
"confusion."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:35
msgid "Quick start"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:46
msgid "Approaches"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:66
msgid "Building blocks"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:68
msgid ""
"Skin, Components, Configuration. The three main building blocks of a theme; "
"interconnected, but each with a distinctive way of behaving."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:71
msgid "**Overview**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:79
msgid "**Templates**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:98
msgid "**Skin layers**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:107
msgid "**CSS stylesheets on skin layers**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:114
msgid "**Components**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:130
msgid "**Configuration**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:143
msgid ""
"How do all these bits and pieces go together to make up a web page? And, "
"more importantly, how do you get content onto the page?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:159
msgid "Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:161
msgid ""
"A reference for the viewlets, portlets, viewlet managers, and portlet "
"columns which make up a page. There's a quick reference to each component "
"type with links and reminders on how to handle them, a visual index of page "
"elements plus code snippets to make your life easier."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:166
msgid "**Viewlet**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:175
msgid "**Viewlet manager**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:184
msgid "**Portlet**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:194
msgid "**Portlet manager**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:204
msgid "**Structural elements**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:211
msgid "**Visible elements**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:239
msgid "**Hidden elements**"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:257
msgid "Where is what?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/index.rst:259
msgid ""
"How to locate the bits and pieces you need. Links to useful visual aids for "
"identifying page elements, pointers to locating your product and eggs "
"directories, diagrams of a theme egg on the file system."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:2
msgid "Aims and Prerequisites"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:4
msgid ""
"The aim of this manual is to give you an overview of the theory, tools, and "
"techniques involved in customizing Plone's look and feel or creating your "
"own theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:9
msgid "Aims"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:11
msgid ""
"Don't read this manual from beginning to end. Think of it as a guide or "
"phrase book to help you get your bearings in the rather complicated world of"
" Plone themes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:15
msgid ""
"We'll introduce you to the theory, but there's no substitute for practice; "
"so we'll point you to the many excellent tutorials, books, and resources on "
"this site and elsewhere, which will walk you through various aspects of "
"themes for Plone 3. We aim to complement those resources by filling in gaps,"
" providing brief overviews of theory, setting things in context, and giving "
"you a quick reference for bits you find confusing or can't remember clearly "
"from the last time you tried them out."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:27
msgid ""
"This manual is written for integrators and customizers, and we're not "
"assuming any development experience. We do however imagine that you are "
"experienced with XHTML and CSS, know a little about XML, and have some "
"knowledge of scripting languages. We're working from the premise that you "
"are entirely new to Plone, though if you are familiar with Plone 2, you'll "
"find one or two new things."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/intro.rst:34
msgid ""
"It will help if you have installed Plone and have looked briefly at the "
"directories that ended up on your file system when you did this. It is also "
"useful to have investigated the Site Setup link on your Plone website and to"
" have clicked through to the Zope Management Interface for a brief look "
"behind the scenes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:4
msgid "Here's a quick overview of what this manual covers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:8
msgid "Section 1: Introduction"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:10
msgid ""
"A theme is a distinct look and feel for Plone, which is often based "
"structurally on the out-of-the box Default Plone theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:13
msgid "Section 2: Approaches"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:15
msgid ""
"What's the best way to go about it - what are the pros and cons of working "
"through the web or on the file system?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:18
msgid "Section 3: Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:20
msgid ""
"What tools are required and what's available to help you build your theme?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:23
msgid "Section 4: Building Blocks"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:25
msgid ""
"There are three main building-blocks in a Plone 3 theme. While there are a "
"few overlaps between them, in general, it helps to see them as discrete "
"entities."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:29
msgid "skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:30
msgid "components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:31
msgid "configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:33
msgid "This section will give you an overview of"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:35
msgid "the terminology involved in each of these building blocks"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:36
msgid "the languages you'll need to work with each of them"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:37
msgid ""
"the techniques / approaches required to customize these building blocks or "
"create new ones"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:39
msgid "how you can locate the files you need"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:41
msgid "Section 5: Putting a Page Together"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:43
msgid "How is everything pulled together to create a page? We'll look at"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:45
msgid "how a page is constructed"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:46
msgid "how content reaches the page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:47
msgid "how style sheets and JavaScript reach the page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:48
msgid "how you can get hold of other information about your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:50
msgid "Sections 6: Elements Reference"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:52
msgid ""
"There's a quick reference to page elements and a brief summary of how to "
"tackle customization and creation of components."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:55
msgid "Section 7: Where is What?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/overview.rst:57
msgid ""
"It's often difficult to identify the location of the files you need. This "
"section gives you a quick reference to the file layout of a theme product. "
"There are also pointers to other diagrams on the web which should help you "
"to map the visual page elements to components, templates and styles."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:2
msgid "What's a Plone Theme?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:4
msgid "A brief description of what we're talking about."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:6
msgid ""
"A theme is a collection of page templates, style sheets, components, and "
"configuration settings that go to make up the individual look and feel of a "
"Plone site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:10
msgid ""
"Plone gives you the option of embedding your theme changes and additions "
"into a single site by working through the web. Or, alternatively, by "
"packaging your theme into your own product, you can then install and "
"uninstall it at will and apply it to a number of sites. There are pros and "
"cons to both approaches, and this manual runs through them in later "
"sections."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:17
msgid "Plone 3 comes with with two themes:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:19
msgid "an inbuilt, ready-made theme - Plone Default"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:20
msgid "and an additional optional replacement - NuPlone."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:22
msgid "Things are somewhat different in Plone 4:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:24
msgid ""
"Two themes are available -  Plone Classic and Sunburst (with Sunburst being "
"the active theme when you first install Plone)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:26
msgid ""
"Plone Default still exists as the core on which both Plone Classic and "
"Sunburst are built and should prove a useful basis for any theme product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:29
msgid ""
"NuPlone has been removed but is still available for download if required"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:32
msgid ""
"If you're at all skeptical about what can be achieved, have a look at the "
"wealth of different sites showcased on `plone.net <http://plone.net/>`_ or "
"at the downloadable themes available from the `Products section "
"<http://plone.org/documentation/products>`_ of this site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/intro/what.rst:38
msgid ""
"If you already have a Plone 3 theme and want to know how to upgrade it to "
"work with Plone 4 then the `upgrade guide "
"<http://plone.org/documentation/manual/upgrade-guide>`_ has further "
"information and guidance."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:2
msgid "Content to Template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:4
msgid "How content reaches a Page Template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:6
msgid ""
"There are three ways in which content from your content items can reach a "
"page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:9
msgid "directly from a content item"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:10
msgid "from the catalog"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:11
msgid "via a view component (using Python)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:14
msgid "Getting content directly from a content item"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:16
msgid ""
"A page template can pull data directly from the content item it is "
"displaying. Here’s a snippet of the RSS template, calling the description "
"field of a Collection content item:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:30
msgid "*context*\\ refers to the current content item"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:31
msgid "*Description*\\ is the accessor of the description field"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:34
msgid "Accessors"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:36
msgid ""
"An accessor is simply the method by which data in a field is extracted. In "
"most cases the name of an accessor is the field name with the first letter "
"capitalized and prefaced by 'get' (e.g., getStartTime). There's an exception"
" to this rule. The title and description field, common to most content "
"types, have 'Title' and 'Description' as their accessors (i.e. no 'get', but"
" the first letter is capitalized)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:46
msgid ""
"This snippet from the news item template does exactly the same thing but "
"calls a specific display \"widget\" macro for the field rather than just the"
" data."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:59
msgid "Getting content from the catalog"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:61
msgid ""
"Every content item is catalogued on creation and editing. Some of its fields"
" are indexed for quick searching and sorting, while the values of others are"
" stored in what's called the \"brains\" or \"metadata\" for quick access."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:66
msgid ""
"Pages pulling together a number of content types - a folder or collection "
"listing for instance - often get their content from a catalog query and the "
"brains, rather than waking up every content item in turn. You'll normally "
"find a variable defined somewhere which holds the results of a catalog "
"query:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:76
msgid ""
"Then the template will loop through the results and call values from the "
"brains/metadata:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:84
msgid ""
"These look pretty much like normal accessors, in fact they are the names of "
"fields in the catalog brains/metadata. This can get confusing - if you try "
"to access a field which isn't in the brains/metadata you'll get an error."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:89
msgid "You can see what fields are available to you via"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:91
msgid "Site Setup > Zope Management Interface > portal\\_catalog > metadata tab"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:94
msgid ""
"If you want to understand more about the catalog, there is a useful, general"
" overview in the `Zope book "
"<http://www.plope.com/Books/2_7Edition/SearchingZCatalog.stx>`_, and a more "
"Plone-specific runthrough in `The Definitive Guide to Plone "
"<http://docs.neuroinf.de/PloneBook/ch11.rst#searching-and-categorizing-"
"content>`_ (this book is for Plone 2 only, but the catalog section is still "
"relevant to Plone 3)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:103
msgid "Getting content via Python (using a view component)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:105
msgid ""
"It is often more efficient to use a view to process the data from the "
"content item (or a group of content items) and then drop it into the page "
"template. In this case, by \"view\" we mean a specific component defined in "
"ZCML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:110
msgid "Here’s a snippet calling a view to render the sitemap:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:120
msgid ""
"*context/@@sitemap\\_view* is assigned to a variable called (helpfully) "
"'view'"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:122
msgid "*createSiteMap* is a method of @@sitemap\\_view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:123
msgid "@@ indicates that this is a view component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:125
msgid "Here's the wiring in ZCML that creates @@sitemap\\_view:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:141
msgid "In summary"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:143
msgid "the content is processed by a Python class"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:144
msgid "ZCML wires this class up into a component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/content/overview.rst:145
msgid "the template calls this component"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:2
msgid "Using Other Information about your Site on a Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:4
msgid ""
"How to get information about the state of your site and other global "
"variables."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:7
msgid ""
"At some point or other you'll find you need to use the title of your site in"
" a template; or you'll want your template to deliver something depending on "
"the roles or permissions of your visitor or user. There are two approaches "
"for obtaining this information:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:13
msgid "1. Browser Views (recommended)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:15
msgid ""
"The first, newer, and recommended approach is to use the methods available "
"in one of three browser views:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:18
msgid "@@plone\\_portal\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:19
msgid "@@plone\\_context\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:20
msgid "@@plone\\_tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:22
msgid "These are kept in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:24
msgid "[your egg location]/plone/app/layout/globals OR"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:25
msgid ""
"[your egg location]/plone.app.layout-[version]/plone/app/layout/globals"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:28
msgid ""
"You can find a description of each method in interfaces.py in that "
"directory, but the main methods are outlined below. This excerpt from the "
"main\\_template in the core Plone Default templates in Plone 4, demonstrates"
" how these views, or their individual methods, are made available to every "
"page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:48
msgid ""
"Here's an excerpt from the newsitem\\_view template in the core Plone "
"Default templates illustrating how the @@plone\\_context\\_state can be used"
" to establish whether an item is editable or not:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:62
msgid "2.  Global Defines (deprecated)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:64
msgid ""
"The second approach has been around for a long time, but is being phased out"
" (as it is slower) in Plone 3 and has been pretty much removed in Plone 4. "
"This is to use a set of variables that are available to every single page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:69
msgid "In Plone 3:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:71
msgid "These are called by main\\_template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:77
msgid "If you want to investigate them further, you'll find them in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:79
msgid "[your products directory]/CMFPlone/browser/ploneview.py."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:81
msgid ""
"These variables are used in a number of the default Plone templates in Plone"
" 3 and so they are listed below alongside their equivalent in the available "
"views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:85
msgid "In Plone 4:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:87
msgid ""
"The global\\_defines macro is not used at all and the variables have been "
"entirely replaced in all Plone templates. However, should it be required, "
"the global\\_defines macro is still available in the core Plone Default skin"
" layers in the plone\\_deprecated folder.  For more information on making a "
"Plone 3 theme compatible with Plone 4, consult the `upgrade guide "
"<http://plone.org/documentation/manual/upgrade-guide/version/upgrading-"
"plone-3-x-to-4.0/updating-add-on-products-for-plone-4.0/no-more-global-"
"definitions-in-templates>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:96
msgid "Available Views and Methods"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:99
msgid "About the site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:101
msgid "View @@plone\\_portal\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:103
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:176
msgid "Method"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:105
msgid "What you get"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:107
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:180
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:315
msgid "global defines"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:111
msgid "Portal Object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:115
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:119
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:175
msgid "portal\\_title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:117
msgid "The title of your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:123
msgid "The URL of your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:127
msgid "navigation\\_root\\_path"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:129
msgid "Path of the navigation root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:131
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:135
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:166
msgid "navigation\\_root\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:133
msgid "The URL of the navigation root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:139
msgid "The default language of the site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:141
msgid "language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:143
msgid "The current language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:145
msgid "locale"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:147
msgid "The current locale"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:149
msgid "is\\_rtl"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:151
msgid "Whether the site is being viewed in an RTL language"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:153
msgid "isRTL"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:157
msgid "The current authenticated member"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:161
msgid "anonymous"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:163
msgid "Whether or not the current visitor is anonymous"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:167
msgid "friendly\\_types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:169
msgid "Get a list of types that can be deployed by a user"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:172
msgid "About the current context"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:174
msgid "View @@plone\\_context\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:178
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:313
msgid "what you get"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:182
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:186
msgid "current\\_page\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:184
msgid "The URL of the current page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:188
msgid "current\\_base\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:190
msgid "The actual URL of the current page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:194
msgid "canonical\\_object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:196
msgid "The current object itself"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:200
msgid "canonical\\_object\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:202
#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:226
msgid "The URL of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:206
msgid "view\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:208
msgid "The URL used for viewing the object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:212
msgid "view\\_template\\_id"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:214
msgid "The id of the view template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:218
msgid "is\\_view\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:220
msgid "True if the current URL refers to the standard view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:224
msgid "object\\_url"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:230
msgid "object\\_title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:232
msgid "The 'prettified' title of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:236
msgid "workflow\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:238
msgid "The workflow state of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:240
msgid "wf\\_state"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:242
msgid "parent"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:244
msgid "The direct parent of the current object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:250
msgid "The current folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:254
msgid "is\\_folderish"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:256
msgid "True if this is a folderish object"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:258
msgid "isFolderish"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:260
msgid "is\\_structural\\_folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:262
msgid "True if this is a structural folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:264
msgid "isStructuralFolder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:266
msgid "is\\_default\\_page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:268
msgid "True if this is the default page in a folder"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:272
msgid "is\\_portal\\_root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:274
msgid "True if this is the portal root or the default page in the portal root"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:280
msgid "True if the current object is editable"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:284
msgid "is\\_locked"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:286
msgid "True if the current object is locked"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:288
msgid "isLocked"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:290
msgid "actions (Plone 4)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:293
msgid ""
"The filtered actions in the context. You can restrict the actions to just "
"one category."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:298
msgid "portlet\\_assignable (Plone 4)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:301
msgid ""
"Whether or not the context is capable of having locally assigned portlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:309
msgid "view @@plone\\_tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:317
msgid "actions"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:319
msgid "The portal actions tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:321
msgid "atool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:323
msgid "catalog"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:325
msgid "The portal\\_catalog tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:329
msgid "membership"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:331
msgid "The portal\\_membership tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:333
msgid "mtool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:335
msgid "properties"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:337
msgid "The portal\\_properties tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:341
msgid "syndication"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:343
msgid "The portal\\_syndication tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:345
msgid "syntool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:347
msgid "types"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:349
msgid "The portal\\_types tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:355
msgid "The portal\\_url tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:357
msgid "utool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:359
msgid "workflow"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:361
msgid "The portal\\_workflow tool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/otherinfo.rst:363
msgid "wtool"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:2
msgid "How to show full content in folder views"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:4
msgid ""
"This how-to only makes sense for folders, smart folder, or other similar "
"views with a reasonably small number of items. It shows how to display the "
"full view of content in listings by using the macros already defined for the"
" content types. The same approach can be used to define viewlets for layout "
"products like compositepack."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:10
msgid ""
"I was looking for a layout product for the front page of a site I am working"
" on, and the existing products did not meet my needs out of the box because "
"they only showed summary views of content rather than the full view. Instead"
" of writing viewlets for different content types from scratch, I used the "
"existing view macros of the content types as follows, in a new folder view I"
" called folder\\_full\\_view (this is just a code snippet):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:35
msgid ""
"The setting of actions to nothing is so that the action icons are not "
"displayed for every content item. The on-error=\"nothing\" may not be "
"necessary for you. I have it because I allow the catalog to return results "
"for which there is no View permission."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:40
msgid "Similarly, for the CompositePack product, I defined a viewlet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:55
msgid "so that complete content can be displayed in a layout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/folder-views-example.rst:59
msgid "Use these ideas at your own risk. Seems to work for me so far."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:2
msgid "How to scale images using PiL in Page Templates"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:4
msgid ""
"A quick description of how to scale images from an image field using the "
"Python Image Library in your Page Templates using TAL."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:7
msgid "PROBLEM:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:9
msgid ""
"I have a custom type with an ImageField.  I'm customizing a folder listing "
"of these types and I wanted a thumbnail of each image shown in the folder "
"listing.  This is very straightforward using PiL (Python Imaging Library), "
"if you know what to do.  I was also presented with the problem of working "
"with brains rather than the object itself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:15
msgid "ASSUMPTIONS:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:17
msgid "You have PiL installed and working."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:18
msgid "You know how to make a custom Archetype"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:20
msgid "OVERVIEW:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:22
msgid ""
"When you get the folder contents for a folder listing, brains objects are "
"returned and iterated over to produce the list.  This is of course, much "
"more efficient than waking up each object.  The problem being, you cannot "
"get to your Image field in a brain (that I know of).  The following is a "
"snippet from 'folder\\_listing.pt' showing this."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:42
msgid ""
"As you can see, while iterating over 'item' you're accessing brains-y things"
" in a brains-y way, like 'item/getURL'.  But you'll notice that you cannot "
"do 'item/my\\_image' because it's not in the brain.  What to do?! you may "
"wail.  Well, you could wake up the objects, get the image field, and then "
"call the image scaling on it in a pythonic way, but this is a performance "
"hit, puts python in your TAL, which you should avoid."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:49
msgid ""
"Instead you'll just be crafty.  You already have 'item\\_url' and you know "
"the name of your image field (my-image) so put those together and you'll get"
" right at the image.  Try this in your browser:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:53
msgid "http://full/url/to/your/object/my-image"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:55
msgid ""
"and you should see your image! Translating this into TAL, you would go:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:61
msgid ""
"Now to add the image scaling bit, and this is where I went wrong.  Much of "
"the Plone documentation about PiL assume you're working with an ATImage "
"object, but you're not.  You're working with an AT ImageField. An AT "
"ImageField only defines ONE image scale size by default:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:70
msgid "whereas ATImage defines a bunch:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:90
msgid ""
"To make matters worse, notice that the sizes defined for the same size key "
"are different.  Bad dog.  No cookie.  Anyhow, what this means is that in "
"order to access the size you want, you have to define it in your schema in "
"advance, like so:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:129
msgid ""
"Ok, so now that you have defined the sizes you want in your custom type's "
"schema, you're ready to use it in your Page Template.  Remember the way we "
"accessed it before?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:137
msgid ""
"To access the sizes defined in your schema, just add the name to the end of "
"your image, preceded by an underscore."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:144
msgid ""
"It's that easy, and it should be.  You shouldn't have to access and "
"therefore wake up your objects!  There are also other ways to get at PiL's "
"image scaling, but this I found was easiest and didn't throw any bizarro "
"\"Unauthorized\" or \"TypeError: a float is required\" errors."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:149
msgid "Enjoy! ~Spanky"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:152
msgid "ALSO SEE:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/how-to-scale-images-using-pil-in-page-templates.rst:154
msgid ""
"`http://plone.org/documentation/manual/archetypes-developer-manual/fields"
"/fields-reference <http://plone.org/kb/manual/archetypes-developer-"
"manual/fields/fields-reference>`_\\ "
"`http://plone.org/documentation/tutorial/richdocument/pil "
"<http://plone.org/kb/tutorial/richdocument/pil>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:2
msgid "Templates and Components to Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:4
msgid ""
"An overview of how templates, viewlets, and portlets mesh together to create"
" a page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:7
msgid ""
"Plone's page templates can be frustrating at first. There's no single "
"template which seems to contain everything you need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:13
msgid ""
"Since each content type is likely to have a different combination of fields,"
" each content type requires a separate template for display. As we saw in "
"the `templates and templating language "
"<http://plone.org/documentation/manual/theme-"
"reference/page/buildingblocks/skin/templates>`_ section, these usually have "
"\\_view appended to their name. You can find those for the standard Plone "
"content types in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:20
msgid "[your zope instance]/Products/CMFPlone/Skins/plone\\_content."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:23
msgid "main\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:25
msgid ""
"Knowing about content views only gets you so far, however. It is the main "
"template (main\\_template.pt) which draws the content together with the page"
" furniture and design. You can find this in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:29
msgid "[your zope instance]/Products/CMFPlone/skins/plone\\_templates."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:31
msgid ""
"It is important to remember that the content view templates aren't complete "
"in themselves, they merely provide a snippet of content which is dropped "
"into a \"slot\" in the main\\_template - called 'main'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:39
msgid ""
"If you feel unsure about slots, then have a look back at the `templates and "
"templating language section <http://plone.org/documentation/manual/theme-"
"reference/page/buildingblocks/skin/templates>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:43
msgid ""
"Around this main slot, the components - viewlets and portlets come into play"
" - supplying the page furniture and decoration around the content. The main "
"template simply pulls these in via viewlet managers and portlet managers."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:48
msgid ""
"Viewlets are so flexible that they can even be pulled into the content view."
" The abovecontentbody manager, for instance, is used in a number of content "
"views, and handles, amongst other things, the presentation viewlet we looked"
" at in previous sections."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:54
msgid "In more detail"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:56
msgid "You might find it helpful to look at an example in context."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:58
msgid "Have a look at:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:60
msgid "Products/CMFPlone/Skins/plone\\_templates/main\\_template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:64
msgid "Products/CMFPlone/Skins/plone\\_content/document\\_view"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:67
msgid "About document\\_view (a content view template)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:69
msgid ""
"1. Although document\\_view looks like a complete HTML page, ignore this. "
"Just note that right at the top it calls the main\\_template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:76
msgid ""
"The code that gets used from document\\_view is actually the bit between "
"these tags:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:83
msgid "This gets dropped into a slot in the main\\_template:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:92
msgid ""
"2. Going back to the fill-slot in the document\\_view you’ll see a few tags "
"calling the relevant fields from the content type – like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:101
msgid ""
"You’ll also see a few tags like calling viewlet managers which, in turn, "
"will summon up groups of viewlets:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:108
msgid ""
"These enable you to drop extra bits of page furniture around the specific "
"content from the fields (e.g., the presentation mode link)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:112
msgid "About the main template"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:114
msgid ""
"1. Jump back to main\\_template and you’ll see similar calls to other "
"viewlet managers managing groups of viewlets for more page furniture:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:121
msgid ""
"2. And calls to portlet managers to pull up the portlets defined for that "
"particular page:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:128
msgid ""
"3. You’ll also see a number of additional slots (define-slot), which could "
"also be filled (fill-slot) from the content view template if you wanted. "
"Here's one you could use to add a bit of css:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:136
msgid ""
"Jump back to your content view template and simply add an additional fill-"
"slot (outside of the main fill-slot):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/templates/overview.rst:145
msgid ""
"We'll go into other ways of providing styles in more detail in the next "
"section."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:2
msgid "Using jQuery and jQuery Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:4
msgid ""
"Plone includes the jQuery and jQuery Tools JavaScript libraries out of the "
"box, which you can use in your own scripts right away."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:7
msgid ""
"`jQuery <http://jquery.com/>`_ is a popular JavaScript Library that "
"simplifies HTML document traversal, event handling, animating, and Ajax "
"interactions. `jQuery Tools <http://flowplayer.org/tools/index.html>`_ is a "
"collection of user-interface components including overlays, tabs, accordions"
" and tooltips."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:13
msgid ""
"jQuery has been shipped with Plone since 3.1. jQuery Tools was added with "
"Plone 4.0."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:17
msgid "Using jQuery"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:19
msgid ""
"jQuery has excellent documentation available at `http://api.jquery.com "
"<http://api.jquery.com>`_. Note, though, that it is never wise to depend on "
"the availability of the \"$\" alias for the jQuery function since other "
"libraries may redefine it."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:24
msgid "So, Instead of:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:34
msgid ""
"you should embed and jQuery code that uses the \"$\" alias in a wrapper "
"like:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:48
msgid "Using jQuery Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:50
msgid ""
"jQuery Tools is a jQuery plugin, and Plone 4 includes the tabs, tooltip, "
"scrollable, overlay and expose toolset. The remainder of the jQuery Tools "
"kit plugins are available by enabling the plone.app.jquerytools.plugins.js "
"resource Plone's JavaScript registry."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/page/using-jquery-and-jquery-tools.rst:55
msgid ""
"The integration with jQuery Tools is provided through the package "
"`plone.app.jquerytools "
"<http://pypi.python.org/pypi/plone.app.jquerytools/>`_, which includes a set"
" of overlay helpers for common AJAX overlay needs. This kit is used to "
"provide many of Plone's overlayed forms. See the `plone.app.jquerytools pypi"
" page <http://pypi.python.org/pypi/plone.app.jquerytools/>`_ for "
"documentation and examples."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:2
msgid "Change the Font Colours"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:4
msgid "How to change the font colours - a through-the-web approach."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:6
msgid ""
"You'll be introduced to some very simple techniques here for through-the-web"
" customizations of Plone's CSS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:9
msgid "How to locate the styles you want to change"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:10
msgid "How to override these styles using the ploneCustom.css style sheet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:12
msgid ""
"In this case we'll change the colour of page titles from black to turquoise."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:16
msgid "Before you start"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:18
msgid ""
"For convenience, Plone themes often comprise a number of separate style "
"sheets, but for speed and efficiency, in production mode, Plone has a "
"mechanism (portal\\_css) for packaging these up into just one or two files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:23
msgid ""
"You'll need to disable this when making changes to your site or customizing "
"CSS. So make sure you've followed the instructions on how to put your site "
"into :doc:`debug mode </getstarted/debug_mode>`."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:28
msgid "Locating the styles you want to change"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:30
msgid ""
"If you don't already have a page in your Plone site, add one, save it and "
"inspect it in view mode."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:32
msgid ""
"Use `Firebug, or a similar tool, <firefox-mozilla-ui-development-tools>`_ to"
" locate the class name of the page title - in this case its "
"h1.documentFirstHeading."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:38
msgid "Locating the ploneCustom.css style sheet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:40
msgid ""
"As a matter of course, the last style sheet to load on every Plone page is "
"ploneCustom.css. You'll see this if you inspect the HTML head tag of your "
"page using Firebug. If you dig further, you'll probably find that this style"
" sheet is completely empty. By the rules of precedence in the CSS Cascade, "
"any styles in this sheet will override styles specified in the preceding "
"sheets. So you have a \"blank sheet\" here for your own customizations."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:48
msgid ""
"The trick now is to locate this file, so that you can make it available for "
"editing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:51
msgid ""
"To make life easier for yourself, you might like to open a second tab or "
"browser window at this point - you can then quickly switch back to the first"
" tab to see your changes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:55
msgid "Go to Site Setup > Zope Management Interface and click portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:57
msgid ""
"Use the Find option in the tabs across the top to locate ploneCustom.css:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:60
msgid "Type *ploneCustom.css* in the \"with ids:\" box and click Find"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:61
msgid ""
"You may get more than one result, it doesn't matter which you choose to "
"click on, however best practice is to choose the one flagged with the red "
"asterisk."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:66
msgid "Customizing and Editing ploneCustom.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:68
msgid ""
"When you click on ploneCustom.css you'll find that you can't edit it. The "
"next stage is to put the ploneCustom.css in a place where it can be edited. "
"You'll see a Customize option just above the grey text area, click the "
"Customize button and you'll find that the style sheet has been automatically"
" copied to portal\\_skins/custom."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:74
msgid ""
"You're now free to edit the file as you like. To change the colour of our "
"page titles, add:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:83
msgid "and save."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:85
msgid ""
"If you've installed Plone 4 with the Sunburst theme, the ploneCustom.css "
"comes with a number of commented out pre-packaged styles that you might like"
" to experiment with. You can override the layout styles to a fixed width and"
" alter the colours of the links."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:91
msgid "Rolling back your changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:93
msgid "You've got a couple of options for reverting back to the original CSS:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:95
msgid ""
"comment out your styles in the ploneCustom.css - the usual CSS commenting "
"syntax applies"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:98
msgid ""
"delete (or, if you want to keep a note of what you did, rename) your version"
" of ploneCustom.css, you'll find it here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:101
msgid "Site Setup > Zope Management Interface > portal\\_skins > custom"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:102
msgid ""
"you can choose the delete or rename options - try renaming to "
"ploneCustom.css.old"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:104
msgid ""
"you can then go back to the beginning of the process of locating and "
"customizing ploneCustom.css"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:108
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:231
msgid "Further Information"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:110
msgid "You've actually encountered two types of customization here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:112
msgid ""
"The first is a standard method of using order of precedence - the Cascade - "
"to overwrite CSS styles as they reach the browser."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:114
msgid ""
"The second is a Plone/Zope specific method of overriding the style sheets "
"themselves by dropping them into the custom folder of portal\\_skins. This "
"method can also be used for templates and other resources and is explained "
"in more `depth in the section on Skin Layers "
"<http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin/layers/precedence>`_ in this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:121
msgid ""
"More advanced techniques, including incorporating your own style sheets into"
" a theme product, are covered later in this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-font-colours.rst:124
msgid ""
"You can find out more about how the CSS Registry (portal\\_css) packages up "
"the style sheets to deliver them to the page in the `Templates and "
"Components to Page <http://plone.org/documentation/manual/theme-"
"reference/page/css/overview>`_ section of this manual."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:2
msgid "Change the Logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:4
msgid ""
"How to substitute the standard Plone logo with your own logo - a through-"
"the-web approach."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:8
msgid "The Basics"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:10
msgid ""
"In Plone 3 and 4, the logo is simply an image with a link to the home page "
"of your site wrapped around it (there's just one small difference between "
"versions, the name is logo.jpg in Plone 3, logo.png in Plone 4)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:20
msgid ""
"If you're happy with this approach, then you won't need to touch the HTML as"
" all the attributes in this snippet are generated automatically. Follow the "
"instructions in Section 1: Changing the Image and its Title."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:24
msgid ""
"If you just want to tweak the styles a little bit, then go to Section 2: "
"Changing the portal\\_logo style."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:27
msgid ""
"If you would rather deliver your logo in a different fashion and need to "
"rewrite the HTML, then you can do this by customizing the logo template, "
"follow the instructions in Section 3: Changing the HTML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:32
msgid "1. Changing the Image and its Title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:34
msgid ""
"The logo image - logo.jpg (Plone 3) logo.png (Plone 4) - can be found in the"
" plone\\_images folder in portal\\_skins. The quickest way to replace this "
"is simply to upload your own image and give it the same name:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:38
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:59
#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:101
msgid ""
"Go to the Zope Management Interface (Site Setup > Zope Management Interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:40
msgid "Go to portal\\_skins > plone\\_images"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:41
msgid ""
"Click logo.jpg (Plone 3) or logo.png (Plone 4) and then click the customize "
"button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:43
msgid ""
"Now replace the image by clicking the browse button and choosing your own "
"image from your file system"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:45
msgid ""
"Edit the Title field (this will ensure that the title attribute changes in "
"the HTML)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:47
msgid ""
"Save your changes and refresh your browser to see the changes on your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:51
msgid "Alternative Approach (Plone 3 only)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:53
msgid ""
"The name (ID) of the logo image is specified in base\\_properties - a list "
"of useful values that, in Plone 3, are picked up and used across the Plone "
"Default theme style sheets. This gives you the ability to upload your own "
"logo image, give it any name you like, and then customize the "
"base\\_properties with that name."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:61
msgid ""
"Make sure that you've switched your css registry to debug mode "
"(portal\\_css)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:63
msgid ""
"Go to portal\\_skins > custom and choose Image from the drop down list on "
"the right"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:65
msgid "Upload your own image giving it an ID and a Title e.g.:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:72
msgid ""
"Go to portal\\_skins > plone\\_styles, click base\\_properties and then "
"click the customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:74
msgid ""
"You'll now have a customized version of base\\_properties in the custom "
"folder of portal\\_skins which you can change as you like. Find the logoName"
" field and replace the value *logo.jpg* with the ID you gave your image (if "
"you gave your ID a .jpg or .gif suffix, make sure you include that, and "
"remember that it is case-sensitive) e.g.:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:84
msgid "Save your changes and refresh your browser"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:86
msgid ""
"In Plone 4 base\\_properties still exists but has only a very limited use."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:89
msgid ""
"**Note** that when you go back to your customized base\\_properties in "
"portal\\_skins > custom, it will look like an empty folder. Click the "
"properties tab to get back to the list of properties."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:94
msgid "2. Changing the portal\\_logo style"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:96
msgid ""
"There are no styles set for *#portal-logo*, but there are some for *#portal-"
"logo img* in basic.css. Use the Firebug extension for Firefox to investigate"
" these. The simplest approach is to override these with your own styles in "
"ploneCustom.css."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:103
msgid ""
"Make sure you have debug mode / development mode turned on in the CSS "
"Registry (portal\\_css)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:105
msgid ""
"Click portal\\_skins > plone\\_styles > ploneCustom.css and then click the "
"Customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:107
msgid ""
"You will now have an editable version of ploneCustom.css in the custom "
"folder of portal\\_skins"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:109
msgid ""
"Add your own styles here, click Save, and refresh your browser to see the "
"changes"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:113
msgid "3. Changing the HTML"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:115
msgid ""
"The HTML for the logo is generated by logo.pt - a page template which is "
"part of a viewlet called plone.logo. To customize this through the web, "
"you'll need to use portal\\_view\\_customizations."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:119
msgid ""
"Go to the portal\\_view\\_customizations in the Zope Management Interface "
"(Site Setup > Zope Management Interface)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:122
msgid "Click plone.logo and then click the Customize button"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:123
msgid ""
"You'll now have a template you can rewrite - we've highlighted the "
"significant bits in the theory section below and given you a couple of "
"examples to get you started."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:126
msgid "Save your changes and refresh your browser to see them"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:128
msgid ""
"**Note**: if you want to go back and make further changes later, you'll see "
"that plone.logo is highlighted in the portal\\_view\\_customizations list, "
"click on it to edit it. If you want to remove your customizations "
"completely, use the contents tab of portal\\_view\\_customizations, tick the"
" box next to your template and click Delete."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:135
msgid "The Theory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:137
msgid ""
"Here's the logo.pt template. It is written in the templating language used "
"by Plone - TAL (or ZPT). It helps to know this (and it doesn't take long to "
"learn), but we'll talk you through this example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:152
msgid "First we have the link tag:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:154
msgid ""
"You can disregard *metal:define-macro=\"portal\\_logo\"*\\ this is just "
"wrapping the code into something that can be re-used again if necessary."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:157
msgid ""
"The important bit is *tal:attributes=\"href view/navigation\\_root\\_url\"*,"
" this is the code that supplies your site URL to the href attribute."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:160
msgid ""
"There is a magic variable here, *view/navigation\\_root\\_url,*\\ that seems"
" to have appeared from nowhere. In fact, *view* is a collection of "
"properties computed by the plone.logo viewlet and seamlessly passed to the "
"logo.pt template. Here are the available properties:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:166
msgid ""
"supplies the URL of your site (it could potentially be something different "
"if you've set up a different navigation root)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:172
msgid "logo\\_tag"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:169
msgid ""
"looks up the name of the logo image from base\\_properties, finds the image,"
" collects its dimensions and title and turns all of this into an HTML image "
"tag with the appropriate attributes Check back to the alternative approach "
"in Section 1 of this How To for more information about base\\_properties."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:175
msgid "looks up and supplies the title of your site"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:177
msgid "Now look at the image tag in the template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:179
msgid ""
"The key here is *tal:replace=\"structure view/logo\\_tag\"*. This means that"
" the template won't deliver the image tag actually written out here, "
"instead, it will **replace the whole thing** with the tag generated by the "
"plone.logo viewlet. If you don't want this to happen, then you should delete"
" this line."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:185
msgid ""
"Note: *structure* means treat the value as HTML rather than a text string."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:189
msgid "Example 1: A plain text title"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:191
msgid ""
"Here's a customized version of the template, using *view/portal\\_title* "
"rather than *view/logo\\_tag*, to give you a text header instead (if you've "
"used Plone 2, then you might recognize this):"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:205
msgid ""
"Of course you'll want to supply your own styles, look back at Section 2 of "
"this How To for information on defining these in ploneCustom.css. You could "
"adjust this example to use an accessible image replacement technique in your"
" CSS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:211
msgid "Example 2: Supplying your own image tag"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:213
msgid "You don't have to use logo\\_tag if you don't want to:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:227
msgid ""
"You will, of course, need to upload your own logo to the custom folder in "
"portal\\_skins, see the instructions in Section 1 of this How To."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:233
msgid ""
"There are further How Tos in the Logo section of the Plone documentation "
"dealing with more advanced customization methods."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:235
msgid "More guidance on TAL and ZPT can be found in the ZPT tutorial."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/change-the-logo.rst:236
msgid ""
"If you want to transfer your changes to the file system in your own theme "
"product, then the further sections in this reference manual will give you an"
" outline of the files and templates you'll need (`Logo viewlet section "
"<http://plone.org/documentation/manual/theme-reference/elements>`_)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:2
msgid "Firefox/mozilla UI development tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:4
msgid ""
"Firefox and mozilla have a number of extensions that can greatly help your "
"UI development work. A basic set is listed here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:7
msgid ""
"Using trusty old \"view source\" used to be the way to debug bad-looking "
"html. Now there are mozilla/firefox extensions that make html development "
"much more productive. A basic set is listed here to get you up to speed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:17
msgid "Web developer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:13
msgid ""
"`Web developer <http://chrispederick.com/work/firefox/webdeveloper/>`_ adds "
"a web development toolbar to your firefox with almost everything you'd want "
"to do or know. CSS info, validation, resizing to test other screen "
"resolutions, converting POSTs to GETs. **An essential**."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:23
msgid "Aardvark"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:20
msgid ""
"`Aardvark <http://www.karmatics.com/aardvark/>`_, when enabled for a page, "
"shows you the class/id information when you hover over an element. Pressing "
"``v`` for instance, gives you the source for the item you hover over. Start "
"the demo on their site and experiment with the keystrokes. It is a "
"lightweight and elegant tool."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:30
msgid "ColorZilla"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:26
msgid ""
"`ColorZilla <https://addons.mozilla.org/firefox/271/>`_ is surprisingly "
"handy. It does what the name suggest: providing a color picker that displays"
" the hex code of the pixel you hover over in the status bar. There's more: "
"showing the box size of the current box element; showing the element, class "
"and ID of the current element; distance between two points. All in the "
"status bar."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:36
msgid "FireBug"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:33
msgid ""
"`FireBug <http://getfirebug.com/>`_ constantly displays the number of errors"
" it finds in your page. Handy during development for finding that mis-"
"spelled css class or the faulty javascript statement. Also includes some css"
" and source examination, but aardvark tends to be a bit handier for that."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:42
msgid "X-ray"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:39
msgid ""
"The `x-ray firefox extension <https://addons.mozilla.org/en-"
"US/firefox/addon/1802?id=1802>`_ is pretty handy in figuring out the layout "
"of a plone site. It displays the tags, the IDs and the classes inline, "
"giving you a surprisingly good idea of what's happening behind the scenes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:49
msgid "View formatted source"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:45
msgid ""
"`View formatted source "
"<https://addons.mozilla.org/extensions/moreinfo.php?id=697>`_ gives you a "
"well-rendered view of the page's source. More important, when you hover over"
" an opening tag, it shows you the css that gets used for that tag. And with "
"multiple css files (plone anyone?) it shows them in the order in which "
"they're used (and overwritten)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:57
msgid "View source with"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:52
msgid ""
"`View source with <https://addons.mozilla.org/firefox/394>`_ allows you to "
"right-click on every textarea or source view and select a program to "
"edit/view it with. A bit like ExternalEditor, but then for **every** "
"textarea. Not 100% developer oriented, but handy for small changes to test "
"css files in the custom skin folder and so anyway."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:60
msgid "Another type of useful gadgets are **bookmarklets**."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:62
msgid ""
"Two sources of these are http://squarefree.com and http://slayeroffice.com "
"See for example:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:70
msgid "Web development bookmarklets"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:66
msgid ""
"The `Web development bookmarklets "
"<http://www.squarefree.com/bookmarklets/webdevel.html>`_ provide the same "
"kind of functionality as the web developer toolbar. The `JavaScript Shell "
"<http://www.squarefree.com/shell/>`_ and `JavaScript Development Environment"
" <http://www.squarefree.com/jsenv/>`_ deserve mention."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:76
msgid "Mouse-over DOM Inspector"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:73
msgid ""
"The `Mouseover DOM Inspector "
"<http://slayeroffice.com/tools/modi/v2.0/modi_help.html>`_ , or MODI for "
"short, is a favelet (also known as a bookmarklet) that allows you to view "
"and manipulate the DOM of a web page simply by mousing around the document."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:83
msgid "Javascript Object Tree Favelet"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:79
msgid ""
"The `Javascript Object Tree Favelet "
"<http://slayeroffice.com/?c=/content/tools/js_tree.html>`_ will overlay your"
" current document with a DIV element containing a collapsed list of all the "
"javascript object types currently referenced by the page, from functions to "
"strings to booleans and all else that falls between."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:91
msgid "Favelet Suite"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/firefox-mozilla-ui-development-tools.rst:86
msgid ""
"This is a `favelet that combines most of [the slayeroffice] development "
"favelets <http://slayeroffice.com/?c=/content/tools/suite.html>`_ . When "
"invoked, a div element will appear in the top left corner of your browser "
"window with a list of all the favelets I've included. Simply click the link "
"you want to invoke the favelet."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:4
msgid ""
"Once you have your new shiny Plone site installed and running, the first "
"thing we recommend you do is try out a few through the web customizations - "
"changing the font colours and replacing the Plone logo with your own."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:9
msgid ""
"You probably have greater ambitions than this for the look and feel of your "
"site, but editing the CSS and replacing the logo is a good way of making a "
"start in learning theming techniques."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:16
msgid ""
"We're assuming that you are familiar with HTML and CSS - although the very "
"basic customizations outlined here, don't require much knowledge of that. It"
" will help if, as a manager, you've had a chance to investigate the Site "
"Setup section of Plone."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:22
msgid "Outline"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:29
msgid "First Sharpen Your Pencils"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:25
msgid ""
"There are a number of tools out there that will make the process of theming "
"Plone a great deal easier, :doc:`so we run through them here <firefox-"
"mozilla-ui-development-tools>`. To see your customizations, you'll also need"
" to be sure that you are running your site in :doc:`debug/development mode "
"</getstarted/debug_mode>`."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:34
msgid "Next Try Som se CSS Customizations"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:32
msgid ""
"We'll walk you through the :doc:`process of overriding the page title style "
"<change-the-font-colours>`, by customizing and editing the ploneCustom.css "
"style sheet. All of this is done through-the-web via the Zope Management "
"Interface."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:45
msgid "Finally Replace the Logo"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/quick-start/overview.rst:37
msgid ""
"We'll revisit the techniques of customization and CSS editing and expand on "
"them to :doc:`replace the Plone logo <change-the-logo>`. image with your own"
" logo."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:2
msgid "Authoring Tools"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:4
msgid ""
"If you're working through the file system, you can use any text editor to "
"write templates, configuration files (xml, zcml) and the small amounts of "
"Python code you'll need."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:8
msgid "You might find the following useful:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:11
msgid "Zope/Plone TextMate support"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:13
msgid ""
"`http://plone.org/products/textmate-support/ <http://plone.org/products"
"/textmate-support/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:14
msgid ""
"`http://dev.plone.org/collective/browser/textmate-support "
"<http://dev.plone.org/collective/browser/textmate-support>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:16
msgid ""
"You will have to check this out of the collective svn - instructions on how "
"to do this can be found on http://svn.plone.org. There is also a Windows "
"version of Textmate (`http://www.e-texteditor.com/ "
"<http://www.e-texteditor.com/>`_)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:22
msgid "Checking template syntax"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:24
msgid ""
"A quick and dirty route to finding out what's wrong with a template you've "
"written yourself is to customize it through the Zope Management Interface. "
"However you can also set up your own checking, to run before you install a "
"template on your site:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:29
msgid ""
"`http://docs.neuroinf.de/PloneBook/ch6.rst#conducting-syntax-checks "
"<http://docs.neuroinf.de/PloneBook/ch6.rst#conducting-syntax-checks>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:31
msgid ""
"this is a little complex if you're not comfortable with Python, but it's "
"worth the effort in the long run."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:35
msgid "Python code editors"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:37
msgid ""
"Something a little more advanced than Notepad will give you code "
"highlighting for Python. You'll find a comprehensive listing here"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:40
msgid ""
"`http://wiki.python.org/moin/PythonEditors "
"<http://wiki.python.org/moin/PythonEditors>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:43
msgid "Integrated Development Environments"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:45
msgid ""
"If you fancy using an IDE, then there are plenty of options, though these "
"are directed towards Python development rather than writing or customizing "
"templates:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:49
msgid ""
"`http://plone.org/documentation/how-to/developing-plone-with-eclipse-ide "
"<http://plone.org/documentation/how-to/developing-plone-with-eclipse-ide>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:50
msgid ""
"`http://plone.org/documentation/tutorial/debugging-plone-products-with-pida "
"<http://plone.org/documentation/tutorial/debugging-plone-products-with-"
"pida>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/authoring.rst:52
msgid ""
"Other IDEs include Wing (`http://www.wingware.com/ "
"<http://www.wingware.com/>`_), BoaConstructor and Komodo "
"(`http://www.activestate.com/Products/komodo\\_ide/index.mhtml "
"<http://www.activestate.com/Products/komodo_ide/index.mhtml>`_)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/debug.rst:2
msgid "Debug Mode"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/debug.rst:4
msgid ""
"Inevitably you won't get things right first time, so you need to make sure "
"your site is running in debug mode."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/debug.rst:7
msgid ""
"For further information see the :doc:`debug mode </getstarted/debug_mode>`."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:2
msgid "Creating a Python package for theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:4
msgid ""
"If you want to work on the file system, here's the magic required to get "
"yourself set up with a skeleton set of files and code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:7
msgid ""
"This section will talk you through the processes required to create your own"
" theme on the file system and to install this in your own Plone site."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:11
msgid ""
"The good news is that you don't have to write substantial amounts of code "
"yourself to create the framework for your own file system theme, you can use"
" a generator (Paster from ZopeSkel) to do this for you. This will give you a"
" directory containing a number of pre-prepared directories and files, which "
"you can augment or re-write with your own customizations."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:18
msgid ""
"In **Practical 1: How to Create a Plone 3 Theme Product on the File "
"System**, you'll use the code generator to make your skeleton framework. "
"This practical will also talk you through the files you've been given and "
"what they do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/overview.rst:31
msgid ""
"In **Practical 2: How to Install your Plone 3 Theme Using Buildout**, you'll"
" make this product available for your Plone site to install and use."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:2
msgid "Anatomy of a Plone Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:4
msgid "The directory structure and an explanation of what all these files do."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:8
msgid ""
"Assuming that you've created your theme product successfully, you should "
"have a directory structure that looks roughly like this:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:15
msgid ""
"Things may seem a little complicated at this point, but not to worry. Let's "
"take closer look at the main files and directories according to their "
"respective functions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:20
msgid "Documentation"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:23
msgid "docs/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:23
msgid ""
"The docs directory contains installation instructions (INSTALL.txt), license"
" files, and the development log (HISTORY.txt)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:28
msgid "README.txt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:26
msgid ""
"The top-level text file contains the one-line description of the product you"
" entered during the interactive session with ZopeSkel. Other README files "
"exist throughout the product."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:31
msgid "Python Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:33
msgid "plonetheme/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:34
msgid "This is a namespace package, which serves to group other packages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:36
msgid "mytheme/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:36
msgid ""
"This is the actual name of your theme, usually the name of the client or "
"project you are working on."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:39
msgid "tests.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:39
msgid ""
"Python tests for our package go here. Typically themes don't have much "
"python code, and so don't have much in the way of testing."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:43
msgid "version.txt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:42
msgid ""
"The version of our product. This information is also contained in "
"/profiles/default/metadata.xml."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:46
msgid "Python Egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:48
msgid "plonetheme.mytheme.egg-info/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:49
msgid "The egg metadata is stored here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:51
msgid "setup.cfg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:51
msgid ""
"This configuration file contains information used to create egg-info files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:56
msgid "setup.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:54
msgid ""
"If we wanted setuptools to handle the installation of the package and "
"dependencies we could install via \"python setup.py install\" (for now, we "
"don't)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:61
msgid "profiles.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:62
msgid "Register appropriate GenericSetup profiles."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:64
msgid ""
"\"Default\" is the current configuration profile (only one profile is "
"automatically created, but more could be added). Within our configuration "
"profile we have XML files which tell GS how to configure CSS files "
"(cssregistry.xml), Javascript files (jsregistry.xml), skin layers "
"(skins.xml), and viewlets (viewlets.xml). Metadata.xml tracks the product "
"version number and other metadata, import\\_steps.xml \\_\\_\\_\\_\\_ and "
"the presence of plonetheme.mytheme-various.txt tells GS to look to "
"setuphandlers.py for additional methods."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:75
msgid "Zope 3"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:77
msgid "plonetheme.mytheme-configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:79
msgid ""
"This is the ZCML slug which must be placed in the etc/package-includes if "
"the theme is installed as a python package (ours won't be)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:84
msgid "skins.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:86
msgid ""
"Register skin layers (images, styles, templates) as filesystem directory "
"views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:89
msgid "browser/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:92
msgid "Stylesheets, Templates and More"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:94
msgid ""
"Once you've got your theme product in place, the next step is to modify the "
"pieces that Plone gives us, specifically templates, stylesheets, and "
"viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:104
msgid "Templates/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:99
msgid ""
"Plone templates, specifically the main\\_template that controls the layout "
"of a Plone site, can be grabbed from the "
"parts/plone/CMFPlone/skins/plone\\_templates directory. Most of the "
"templates that were contained here in 2.5 have been moved to eggs and are "
"controlled by viewlets. To modify a template from this directory, copy it to"
" your theme product, into your theme's skins/templates folder and make your "
"modifications there."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:114
msgid "Stylesheets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:107
msgid ""
"Plone's default stylesheets can be found in your "
"buildout/parts/plone/CMFPlone/skins/plone\\_styles directory. It's usually "
"advisable to create a stylesheet specific to your theme product, e.g. "
"\"mytheme.css\" (where \"mytheme\" is the name of your theme product), and "
"then take any relevant styles from CMFPlone's stylesheets and customize them"
" in your own theme product, rather than overriding entire CMFPlone "
"stylesheets. The one exception here may be IEFixes.css, which you likely "
"want to keep intact as a single file, since it is called in explicitly from "
"the main\\_template."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:126
msgid "Viewlets/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:117
msgid ""
"It is a great oversimplification to state that most often you will be "
"overriding viewlets from eggs commonly known as plone.app.layout, "
"plone.app.portlets, and plone.app.content. Those viewlets, can be found in "
"your buildout/eggs/ in packages named \"plone.app.layout[xx],\" "
"\"plone.app.portlets[xx],\" and \"plone.app.content[xx],\" where [xx] is a "
"version number. When modified, these viewlets and their related code belong "
"in your theme product's browser/ directory. For more information on how to "
"work with viewlets, `read this tutorial "
"<http://plone.org/documentation/tutorial/customizing-main-template-"
"viewlets>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:128
msgid ""
"If modifying page templates, you won't need to restart Zope in order to see "
"your changes take effect. Changes to python, XML or ZCML, however, will "
"require a restart."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/anatomy.rst:132
msgid ""
"`Customization for developers <http://plone.org/documentation/how-to/how-to-"
"create-a-plone-3-theme-product-on-the-"
"filesystem/plone.org/documentation/tutorial/customization-for-developers>`_ "
"An overview of Plone 3 customization by Martin Aspeli."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:2
msgid "Python Eggs, Generic Setup and Zope 3"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:4
msgid "Background notes on changes between Plone 2.5 and Plone 3."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:6
msgid ""
"Products, in Plone's parlance, are analogous to modules or extensions for "
"other applications. In the move from Plone 2.5 to Plone 3, several important"
" changes were made in the way Plone handles products. First, some products "
"began to be packaged as Python eggs, which made them easier to manage, "
"distribute and install. Second, products began to use GenericSetup as a "
"means for installation. And third, products increasingly incorporated Zope 3"
" (Z3) technologies like browser views."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:15
msgid "Python Eggs"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:17
msgid ""
"A python egg is simply a bundle of files and directories which constitute a "
"python package. Eggs can either be compressed, in which case they appear as "
"a single \\*.egg file, or uncompressed. Eggs are similar in concept and "
"function to Java's JAR files."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:22
msgid ""
"Eggs are installed via the setuptools framework, a side project of the "
"Python Enterprise Application Kit (PEAK), which provides for package (and "
"dependendency) management and distribution."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:26
msgid ""
"If you're using version control, you'll want to add \\*.egg-info and \\*.pyc"
" to the ignore patterns for your setup so that the egg metadata and compiled"
" python files aren't added to your repository."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:30
msgid ""
"`A Quick Guide to Python Eggs "
"<http://peak.telecommunity.com/DevCenter/PythonEggs>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:33
msgid "A good overview of eggs and setuptools from the folks at PEAK."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:35
msgid ""
"`Hatch Python Eggs with SetupTools "
"<http://www.ibm.com/developerworks/library/l-cppeak3.html>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:38
msgid "David Metz takes a look at the setuptools framework."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:43
msgid ""
"GenericSetup (GS) is a tool for managing site configuration in Plone using "
"xml files. GS makes it possible to export customizations from one Plone site"
" and import them into another. And to some extent, GS replaces the Portal "
"QuickInstaller (QI) post-Plone 2.5 in that GS can be used to install "
"products. In products which rely on GS, we find xml configuration files; in "
"products which use the older, venerable QI for installation, by comparison, "
"we find install methods written in python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:51
msgid ""
"Keep in mind that GenericSetup does not currently allow you to undo the "
"profile applied during installation. You can uninstall your theme using the "
"QuickInstaller, however, assuming that an uninstall method is present."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:56
msgid ""
"Because our skeleton theme product utilizes GenericSetup to install itself, "
"we will shortly be configuring several xml files needed by GS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:59
msgid ""
"`Understanding and Using GenericSetup in Plone "
"<http://plone.org/documentation/tutorial/genericsetup>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:62
msgid ""
"Now a bit dated, Rob Miller's tutorial on GS remains a useful resource for "
"background on GS."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:65
msgid ""
"`GenericSetup Improvements <http://theploneblog.org/blog/archive/2007/06/21"
"/genericsetup-improvements>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:68
msgid "More information about GS from Rob Miller."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:70
msgid ""
"`Benefit NOW from Using GenericSetup and Z3 Technologies "
"<http://plone.org/documentation/tutorial/benefit-now-from-using-"
"genericsetup-and-zope-3-technologies/?searchterm=benefit%20NOW>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:73
msgid ""
"Impress your colleagues by using GenericSetup and Zope 3 views efficiently "
"and with minimal effort! This tutorial shows you how to add a new view, how "
"to use it, how to add a new content type and how to hook it all up."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:79
msgid "Zope 3 Technology"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:81
msgid ""
"Despite any version number-induced miasma, remember that Plone 3 runs on "
"Zope 2. Zope 3 is a dramatic rewrite of Zope 2 and some Zope 3 functionality"
" has been backported to work under Zope 2. (And yes, Plone 3.) For a full "
"explanation of the Zope 3 technologies involved, consult this tutorial:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:87
msgid ""
"`Customization for developers <http://plone.org/documentation/how-to/how-to-"
"create-a-plone-3-theme-product-on-the-"
"filesystem/plone.org/documentation/tutorial/customization-for-developers>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/background.rst:90
msgid "An overview of Plone 3 customization by Martin Aspeli."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:2
msgid "Jumpstart Your Theme Development Using Paster"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:4
msgid ""
"The quickest and most efficient way to get started is not to create your "
"theme product folders and associated files from scratch, but to take "
"advantage of a product generator which will automatically create the "
"framework for a theme product based on your responses to a few interactive "
"questions."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:11
msgid "Using Paster on Your Local Machine"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:13
msgid ""
"For users more comfortable using the command line, you are more likely to "
"use a tool called ZopeSkel and the paster templates it contains. ZopeSkel is"
" a collection of PasteScript templates which can be used to quickly generate"
" Zope and Plone projects like buildouts, archetypes products and, most "
"pertinently for us, Plone themes."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:19
msgid ""
"`Please refer to this manual page for up-to-date instructions how to include"
" Paster with ZopeSkel templates in your Plone configuration <http"
"://collective-docs.readthedocs.org/en/latest/tutorials/paste.html>`_. Plone "
"Unified Installer should ship with a working Paster command."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:25
msgid "Create your Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:27
msgid ""
"If you have paster and ZopeSkel installed, navigate to the directory where "
"you'd like to create your product (we'd recommend [your "
"buildout]/[zinstance\\|zeocluster/src]) and run from the command line:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:35
msgid "or, if you have paster in your Plone installation:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:41
msgid ""
"This will initiate a series of questions by the paster script. The defaults "
"are largely appropriate for your first theme, so in many cases you can "
"simply hit return. Here is example output from the interactive session."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:50
msgid ""
"You cannot use 'delete' to correct a typo during the interactive session. If"
" you make a mistake, ctrl-c to stop the script and start over."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:55
msgid "Paster Options"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:57
msgid "Some of these questions warrant further explanation:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:62
msgid "Enter namespace\\_package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:60
msgid ""
"It is good practice to use the 'plonetheme' namespace for your theme. You "
"can use other namespaces, of course ('products' might be another), but "
"unless you have a compelling reason to do otherwise, use 'plonetheme'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:65
msgid "Enter package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:65
msgid ""
"The 'package' is simply the lowercase name of your theme product, sans "
"spaces or underscores."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:68
msgid "Enter skinname"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:68
msgid ""
"The 'skinname' is the human-readable name for your theme. Spaces and "
"capitalization are appropriate."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:70
msgid "Enter skinbase"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:71
msgid "In nearly all cases, you'll want to leave this as 'Plone Default'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:76
msgid "Enter empty\\_styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:73
msgid ""
"Answering 'True' will cause empty stylesheets to be added to your product "
"which will override the default base.css, public.css, and portlets.css "
"included in any Plone site using the 'Plone Default' skin. 'False' will not "
"add empty stylesheets. For the purposes of this practical, we recommend "
"entering 'False'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:80
msgid "Enter include\\_doc"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:79
msgid ""
"Answering 'True' will cause inline documentation to be added to the files "
"created by ZopeSkel. It is worth doing this at least once, as some of the "
"documentation is quite useful."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:88
msgid "Enter zope2product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:83
msgid ""
"Answering 'True' means that the package will be useable as an egg, it will "
"be listed in the ZMI, skin folders will be registered as layers with the "
"Skins Tool ('portal\\_skins'), and the Generic Setup profile for the product"
" can be loaded via the Setup Tool ('portal\\_setup'). We'll explore some of "
"this further; for now, suffice to say that you'll always want to enter "
"'True' here when generating a Plone theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:91
msgid "Enter zip\\_safe"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:91
msgid "Stick with the default here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:93
msgid ""
"`Creating new eggs and packages quickly with paster "
"<http://plone.org/documentation/how-to/how-to-create-a-plone-3-theme-"
"product-on-the-filesystem/use-paster>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical1/jumpstart.rst:96
msgid ""
"How to use the paster command to create new packages with proper setuptools-"
" and egg-compliant filesystem layout quickly and easily."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:2
msgid "Installing your Egg-Based Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:4
msgid ""
"In this section, we will look at how to install egg-based themes using "
"buildout. As of Plone 3.1.2, all of the Plone installers create a buildout "
"that contains your Plone instance. When installing or developing themes, "
"buildout is highly recommended."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:9
msgid "To install the theme product you created in Practical 1:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:11
msgid ""
"First, if it isn't already there, copy your theme product to [your "
"buildout]/[zinstance\\|zeocluster]/src (if you find that this directory "
"doesn't exist, you can create it yourself)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:14
msgid ""
"Then, using a text editor, edit your buildout.cfg (you'll find it in [your "
"buildout]/[zinstance\\|zeocluster]) and add the following information into "
"the buildout, instance, and zcml sections. The actual buildout.cfg file will"
" be much longer than the snippets below:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:35
msgid ""
"The last line tells buildout to generate a ZCML snippet (slug) that tells "
"Zope to recognize your theme product. The dots [...] indicate that you may "
"have additional lines of ZCML code here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:39
msgid ""
"After updating the configuration, stop your site and run the "
"''bin/buildout'' command, which will refresh your buildout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:41
msgid ""
"Then, restart your site and go to the 'Site Setup' page in the Plone "
"interface and click on the 'Add-on Products' link. The 'Site Setup' area is "
"also known as plone\\_control\\_panel, as this is the URL used to get to "
"'Site Setup'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:45
msgid ""
"Choose the product (My Theme 1.0) by selecting the checkbox next to it and "
"click the 'Install' button."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:48
#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:91
msgid ""
"Note: You may have to empty your browser cache to see the effects of the "
"product installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:52
msgid "Uninstalling a Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/installation.rst:54
msgid ""
"Uninstalling can be done from the 'Site Setup' / 'Add/Remove Products' page,"
" but only if you installed it from the 'Add/Remove Products' screen. Not all"
" themes uninstall cleanly, but reinstalling the Default Plone product "
"generally cures any issues here."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:2
msgid "Background: Third Party Theme Products"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:4
msgid ""
"In this section, we will look at how to install a Plone theme that you have "
"downloaded from Plone.org/products, PyPi, etc. We will also show how you can"
" distinguish between an old-style 2.5 product and a new egg-based one."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:9
msgid ""
"There are two kinds of theme products: newer **egg-based products**, and "
"older theme products that are in the **\"magical Products namespace\"**. The"
" type of theme product you are working with determines the steps you must "
"take to install your theme. We'll now see how to tell the difference between"
" the two."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:16
msgid "Is the Theme Product Egg-Based or in the Product's Namespace?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:18
msgid ""
"First, we need to understand what egg-based means. If the theme, when "
"unzipped, is named plonetheme.whatever, or you generate a new theme using "
"the `Paster <http://plone.org/how-to/use-paster>`_ recipe and answer \"yes\""
" to the \"is this a Zope2 product\", then your theme product is egg-based. "
"On an even simpler note, if the root folder contains setup.py, it's an egg. "
"In a typical egg-based theme product, setup.py would look something like "
"this, where the highlighted text is the name of the egg."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:37
msgid ""
"If the product looks like it was created using DIYPloneStyle 3.x (now "
"outdated), it lives in the Products namespace. You can also tell that you "
"are working with a theme in the Products namespace because there is no "
"setup.py file in the root."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:43
msgid "Installing an Egg-based Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:45
msgid ""
"We recommend using buildout to install an egg-based product. You can decide "
"whether you want to download the package yourself or leave buildout to do it"
" for you. If the former, then follow the instructions in the previous "
"section. If you want to leave the download up to buildout, then buildout "
"configuration is simpler:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:53
msgid "[configuration here]"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:56
msgid "Dependencies"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:58
msgid ""
"If another package depends on the theme egg or includes its ZCML directly, "
"you do not need to specify anything in the buildout configuration; buildout "
"will detect this automatically. This is considered a more advanced topic. "
"Similarly, if the theme egg depends on another product, then buildout will "
"take care of this too."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:65
msgid "Installing a Product if it is in the 2.x Products namespace"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:67
msgid ""
"Assuming the theme product is an older 3.x theme and that it is in the "
"Products namespace, all you have to do is place the theme product in your "
"buildout's \"products/\" directory and restart your Zope instance. There is "
"no need to rerun your buildout, because we have not changed any ZCML code."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:73
msgid ""
"Then, after your Zope has restarted, go to the 'Site Setup' page in the "
"Plone interface and click on the 'Add/Remove Products' link. The 'Site "
"Setup' area is also known as plone\\_control\\_panel, as this is the URL "
"used to get to 'Site Setup'."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:78
msgid ""
"Choose the product by selecting the checkbox next to it and click the "
"'Install' button."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/tools/egg1/practical2/thirdparty.rst:81
msgid ""
"Older themes in the Products namespace may show up twice in the "
"portal\\_quickinstaller, but this is a bug that is fixed in a more recent "
"version of ZopeSkel. You can either ignore the bug or resolve it by removing"
" this line from your theme product's configure.zcml file and restarting your"
" Zope instance:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:2
msgid "Files for Components"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:4
msgid ""
"These files and directories will be relevant when working on the Components "
"part of your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:7
msgid "/browser/viewlet.py \\| viewlet.pt"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:13
msgid ""
"This is used to create your theme interface (and any other interfaces you "
"might need)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:20
msgid "/browser/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:26
msgid ""
"These directories can be used for templates, styles, and images. You will "
"need to register these as directories as resources in configure.zcml."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/components.rst:34
msgid "your theme egg - the components files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:2
msgid "Files for Configuration"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:4
msgid ""
"These files and directories will be relevant when working on the "
"Configuration part of your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:7
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:8
msgid "/profiles/default/"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:9
msgid ""
"This directory holds the xml for Generic Setup. The plone3\\_theme paster "
"template will have provided you with some ready-made files - for setting up "
"your skin layers, registering your style sheets and JavaScripts, and "
"ordering your viewlets."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/configuration.rst:23
msgid "your theme egg - the configuration files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egg.rst:2
msgid "Files for Installing your Egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egg.rst:4
msgid ""
"These are the files and directories required to install your egg in your "
"python path and make it available to Zope on start up."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egg.rst:11
msgid "your theme egg - the files used for installing the egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:2
msgid "Where's my Egg Location?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:4
msgid "It is easy enough for Zope to find your eggs, harder for humans."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:7
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:16
msgid "Plone version 3.1.2 onwards"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:15
msgid "Core Plone Default Products"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:10
msgid ""
"For core products used in the Plone Default Theme, buildout has an eggs "
"directory"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:13
msgid "[your buildout]/eggs"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:15
msgid "which is where eggs are automatically dropped when Plone is installed."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:21
msgid "Your own theme product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:18
msgid ""
"Because your own theme product will be under development, this will go in a "
"separate place in your buildout"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:21
msgid "[your buildout]/[zinstance\\|zeocluster\\|]/src"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:23
msgid ""
"(note that to share eggs between buildouts you can specify a different "
"location for this in a buildout defaults file, check the `buildout tutorial "
"on plone.org <http://plone.org/documentation/tutorial/buildout/creating-a"
"-buildout-defaults-file>`_ for more information)."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:30
msgid "Using Omelette to get at your eggs quickly"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:32
msgid ""
"It is a bit of a drag navigating your way around all the eggs used by Plone."
" David Glick's Omelette recipe creates a unified directory structure of all "
"namespace packages, symlinking to the actual contents, via buildout. Full "
"instructions and documentation on this can be found here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:38
msgid ""
"`http://pypi.python.org/pypi/collective.recipe.omelette "
"<http://pypi.python.org/pypi/collective.recipe.omelette>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:40
msgid ""
"Once you've re-run buildout with the omelette recipe, you'll find that you "
"have a new section here:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:43
msgid "[your buildout]/[zinstance\\|zeocluster]/parts/omelette"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:45
msgid "and eggs such as plone.app.layout can be found in:"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:47
msgid "[your buildout]/[zinstance\\|zeocluster]/parts/omelette/plone/app/layout"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:51
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:43
msgid "Plone version 3.1.1 or lower"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:59
#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:29
msgid "Plone Installer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:54
msgid ""
"If you have installed Plone with an installer, then the eggs will probably "
"have been dropped into"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:57
msgid "[your plone installation]/Python/Lib/site-packages."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:59
msgid ""
"However, if you've used the Plone 3.1 universal installer, then you will "
"have a buildout based installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:66
msgid "The Plone Product Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:62
msgid ""
"If you used the product package (i.e. installed from source), then you may "
"well find them in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/egglocation.rst:65
msgid "[your Zope instance]/lib/python."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:2
msgid "Where is What on the Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:4
msgid ""
"How can you track down the files related to an individual page element?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:6
msgid ""
"At the time of writing, there's no in-built magic wand to point at an "
"element on a Plone web page and find out exactly what templates and code are"
" involved in its creation. There may be soon though, and the adventurous "
"might like to explore `Weblion's Gloworm tool "
"<http://weblion.psu.edu/blog/esteele/gloworm-0-1-alpha1-now-available>`_."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:12
msgid ""
"If you're not ready for an adventure yet, then there are a number of good "
"tutorials available with diagrams and guides to where is what."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:16
msgid "Understanding how the CSS maps to the Page"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:18
msgid "The Weblion project has an excellent Wiki page to help you with this"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:22
msgid ""
"`https://weblion.psu.edu/trac/weblion/wiki/PloneThreeWhereIsWhat "
"<https://weblion.psu.edu/trac/weblion/wiki/PloneThreeWhereIsWhat>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:26
msgid ""
"Firebug (an add-on for Firefox), of course, is an essential tool for "
"inspecting code and CSS for a page."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:31
msgid "`http://www.getfirebug.com/ <http://www.getfirebug.com/>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:36
msgid "Page Elements"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:38
msgid ""
"Page elements are consistently named in Plone, so once you know the name of "
"an area of the page, you're well on the way to tracking down the relevant "
"files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:42
msgid ""
"you can find a visual key to page elements in the Elements section of this "
"manual"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:44
msgid ""
"you'll also find an excellent overview in the `What Controls What You See "
"<http://plone.org/documentation/tutorial/where-is-what/introduction>`_\\ "
"tutorial on Plone.org"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/page.rst:47
msgid ""
"and a mapping of the viewlet and portlet managers on the `Weblion wiki "
"<https://weblion.psu.edu/trac/weblion/wiki/PloneThreeWhereIsWhat>`_"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:2
msgid "Location of files in your own Theme Product"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:4
msgid ""
"The egg created for you by the plone3\\_theme paster template should have a "
"file system layout very similar to this diagram."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:7
msgid ""
"If the diagram doesn't help, then consult the next few pages where sections "
"of the diagram are combined with a text explanation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productlocation.rst:14
msgid "your theme egg"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:2
msgid "Where's my Products Directory?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:4
msgid ""
"How to track down your products directory. It'll differ according to the "
"Plone installer or installation process you used."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:7
msgid ""
"The products directory is where old-style 2.5 products live. To track this "
"down, you'll need to know where your Zope Instance or your Buildout is "
"first."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:11
msgid ""
"For theming purposes, the main reason you'll need to investigate the "
"products directory is to locate Plone Default theme files - as parts of "
"Plone are still in old-style product form."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:18
msgid ""
"In a Buildout based installation, you'll find products in various "
"directories."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:24
msgid "Core Plone products (such as CMFPlone)"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:22
msgid "For these, have a look in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:24
msgid "[your buildout]/parts/plone."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:31
msgid "Products you download yourself"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:27
msgid "These should go in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:29
msgid "[your buildout]/products."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:31
msgid ""
"If you find you haven't got a products directory there, then it is OK to "
"create one yourself."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:40
msgid "Products you asked buildout to download"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:34
msgid ""
"If you asked buildout to go and fetch some old-style products, then these "
"will have been dropped into"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:37
msgid "[your buildout]/parts/[directory name]."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:39
msgid ""
"(Buildout will also have created the directory and will have called it "
"something like \"productdistros\")."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:52
msgid "Plone Installer and Plone Product Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:46
msgid ""
"It should be easy to locate all your products (those belonging to the core "
"Plone installation and those you've downloaded yourself) in"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:49
msgid "[your zope instance]/products"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/productsdirectory.rst:51
msgid ""
"However, if you used the Plone 3.1 Universal Installer your installation "
"will be buildout based."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:2
msgid "Files for the Skin"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:4
msgid ""
"These files and directories will be relevant when working on the Skin part "
"of your theme."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:7
msgid ""
"/skins/[your theme namespace].[your theme name]\\_custom\\_templates \\| "
"custom\\_images \\| styles"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:10
msgid ""
"These directories will form your skin layers. Your templates, images, and "
"stylesheets can go here. If you asked it to, the plone3\\_theme paster "
"template will have provided blank style sheets to override the Plone Default"
" ones."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:22
msgid ""
"When your theme is installed in your Plone site, this sets up the hierarchy "
"of skin layers, and registers your style sheets and JavaScript with the "
"registries"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/skin.rst:30
msgid "your theme egg - the skin files"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:2
msgid "Files for Installing your Theme"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:4
msgid ""
"These are the files used when you install your theme product using Site "
"Setup > Add / Remove Products or Zope Management Interface > "
"portal\\_quickinstaller"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:10
msgid ""
"Generic Setup will install your theme profile when your theme is installed. "
"import\\_steps.xml points to a 'handler' for installation steps which aren't"
" yet part of Generic Setup or can't be expressed as XML."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:15
msgid "/setuphandlers.py"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:17
msgid "This contains the handler for non-Generic Setup installation steps."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/theme.rst:23
msgid "your theme egg - the files used by quick installer"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:2
msgid "Where's my Zope Instance?"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:4
msgid ""
"Where your Zope instance lives depends on the Plone installer or "
"installation process you used."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:8
msgid "Plone Version 3.1.2 onwards"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:11
msgid ""
"In a Buildout based installation, you don't need to worry much about your "
"Zope instance. If you really want to investigate you'll find the actual "
"instance in [your buildout]/parts/instance. However most of the key bits "
"(your Plone products, 3\\ :sup:`rd` party products, your Data.fs) don't "
"actually live there. They are all assembled together from various parts of "
"your file system by the zope.conf file which is generated when you run "
"buildout."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:20
msgid "Plone Version 3.1.1 or lower"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:23
msgid ""
"The Plone installers (apart from the Plone 3.1 Universal Installer) usually "
"drop a Zope instance directory alongside the Zope and Python software "
"directories. So, for example, a standard Windows installation, locates your "
"Zope instance at c:\\\\Program Files\\\\Plone 3\\\\Data. On a Mac, it will "
"be called 'instance' and will probably live in a Plone folder in your "
"applications folder. The Plone 3.1 Universal Installer, however, will have "
"given you a buildout based installation."
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:34
msgid "Plone Product Package"
msgstr ""

#: ../../reference_manuals/old/plone_3_theming/whereiswhat/zopeinstance.rst:32
msgid ""
"If you've installed Zope yourself, you'll have been prompted to create a "
"Zope instance, so you should have a good idea of where that is on your "
"system."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:3
msgid "Authorisation algorithm"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:7
msgid ""
"These are the steps the PAS user folder follows in its ``validate`` method:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:9
msgid ""
"extract all credentials. This looks for any possible form of authentication "
"information in a request: HTTP cookies, HTTP form parameters, HTTP "
"authentication headers, originating IP address, etc. A request can have "
"multiple (or no) sets of credentials."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:15
msgid "for each set of credentials found:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:17
msgid ""
"try to authorise the credentials. This checks if the credentials correspond "
"to a known user and are valid."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:20
msgid "create a user instance"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:21
msgid ""
"try to authorise the request. If successful, use this user and stop further "
"processing."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:24
msgid "create an anonymous user"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:26
msgid ""
"try to authorise the request using the anonymous user. If successful use "
"this, if not:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/authorisation-algorithm.rst:29
msgid "issue a challenge."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:3
msgid "Challenges"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:9
msgid ""
"If the current (possibly anonymous) user is not authorised to access a "
"resource Zope asks PAS to challenge the user. Generally this will result in "
"a login form being shown, asking the user with a appropriately priviliged "
"account."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:13
msgid ""
"The IChallengeProtocolChooser and IChallengePlugins plugins work together to"
" do this. Since Zope can be accessed via various protocols (browsers, "
"WebDAV, XML-RPC, etc.) PAS first needs to figure out what kind of protocol "
"it is dealing with. This is done by quering all IChallengeProtocolChooser "
"plugins. The default implementation is ChallengeProtocolChooser, which asks "
"all IRequestTypeSniffer plugins to test for specific protocols."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:15
msgid ""
"Once the protocol list has been build PAS will look at all active "
"IChallengePlugins plugins. Writing a plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:18
msgid ""
"The IChallengePlugin interface is very simple: it only contains one method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:32
msgid ""
"The plugin can look at the request object to determine what, or if, it needs"
" to do. It can then modify the response object to issue its challenge to the"
" user. For example::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/challenges.rst:38
msgid ""
"this will redirect a user to the Disney homepage every time he tries to "
"access something he is not authorised for."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:3
msgid "Concepts"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:9
msgid ""
"PAS has a few basic concepts that you must understand in order to develop "
"PAS related code."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:12
msgid "There are a few basic concepts used in PAS:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:18
msgid "**credentials**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:15
msgid ""
"Credentials are a set of information which can be used to authenticate a "
"user. This can be a login name and password, an IP address, a session cookie"
" or something else."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:23
msgid "**user name**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:21
msgid ""
"The user name is the name used by the user to log into the system. To avoid "
"confusion between \"user id\" and \"user name\" this tutorial will use the "
"term login name instead."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:27
msgid "**user id**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:26
msgid ""
"All users must be uniquely identified by their user id. A user's id can be "
"different than the login name."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:33
msgid "**principal**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/concepts.rst:30
msgid ""
"A principal is an identifier for any entity within the authentication "
"system. This can be either a user or a group. This implies that it is not "
"legal to have a user and a group with the same id!"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:3
msgid "Configuring an individual PAS plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:9
msgid ""
"In addition to enabling and disabling plugins via the plugins object each "
"plugin can also have its own configuration. You can access this by opening a"
" plugin in the ZMI."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:13
msgid ""
"Taking the ``credentials_cookie_auth`` as example again you will see the "
"screen for the :guilabel:`Activate` tab. This tab is mandatory and allows "
"you to enable and disable PAS interfaces for a plugin. This corresponds to "
"the plugin configuration we saw earlier, but does not allow you to change "
"the ordering of different plugins for an interface. If you enable a new "
"interface for a particular plugin, it will be activated and placed last in "
"the list of plugins for a particular interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:27
msgid ""
"You can also go to the :guilabel:`properties` tab to edit settings specific "
"for this plugin:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-an-individual-pas-plugin.rst:34
msgid ""
"What you can configure will differ per plugin. Some plugins do not have any "
"configurations options, others can be very complex."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:3
msgid "Configuring PAS"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:9
msgid ""
"There is no Plone interface to configure PAS: you will need to use the Zope "
"Management Interface (:term:`ZMI`). In the ZMI you will see a ``acl_users`` "
"folder in the site root. This is your PAS object."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:14
msgid ""
"If you open the ``acl_users`` folder you will see a number of different "
"items. Each item is a PAS plugin, which implements some PAS functionality."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:22
msgid ""
"There is one special item: the ``plugins`` object manages all administrative"
" bookkeeping within PAS. It remembers which interfaces are active for each "
"plugin and in what order the plugins should be called."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:27
msgid ""
"Let's take a look to see how this works. If you open the ``plugins`` object "
"you will see a list of all the PAS interfaces, along with a short "
"description of what they do."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:32
msgid ""
"We will take a look at the extraction plugins. These plugins take care of "
"extracting the credentials such as your username and password from a "
"request. These credentials can then be used to authenticate the user. If you"
" click on the Extraction Plugins header you will see a screen which shows "
"the plugins which implement this interface and allows you to configure which"
" plugins will be used and in what order."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:44
msgid ""
"In the default Plone configuration there are two plugins enabled for this "
"interface:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:47
msgid ""
"the ``credentials_cookie_auth`` plugin can extract the login name and "
"password from an HTTP cookie and HTTP form values from the login form or "
"portlet;"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:50
msgid ""
"the ``credentials_basic_auth`` plugin can extract the login name and "
"password from standard HTTP authentication headers."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:53
msgid ""
"In the default configuration the cookie plugin takes preference over the "
"basic authentication plugin. This means that credentials from a HTTP cookie "
"will be preferred over credentials from HTTP authentication headers if both "
"are present. You can try this by first logging in using standard HTTP "
"authentication in the Zope root, and then visiting your Plone site and "
"logging in with a different user there: you will see that the new user is "
"now the active user."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/configuring-pas.rst:62
msgid ""
"You can change the order of the plugins by clicking on a plugin and moving "
"it up or down with the arrows. Using the left and right arrows you can "
"enable and disable a plugin for this interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:3
msgid "Credential authentication"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:9
msgid ""
"The credentials as returned by the credential extraction plugins only "
"reflect the authentication information provided by the user. These "
"credentials need to be authenticated by an authentication plugin to check if"
" they are correct for a real user."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:13
msgid "The IAuthenticationPlugin interface is a simple one::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:23
#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:27
#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:27
#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:17
msgid "Here is a simple example::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-authentication.rst:39
msgid ""
"This plugin allows the users *hanno*, *martin* and *philipp* to login with "
"their nickname as password."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:3
msgid "Credential extraction"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:9
msgid ""
"Within PAS credentials are a set of information which can identify and "
"authenticate a user. A users login name and password are for example very "
"common credentials. You may also use an HTTP cookie to track users; if you "
"do so the cookie will be your credential."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:13
msgid ""
"PAS user credential extraction plugins to find all credentials in a request."
" Authentication of these credentials is done at a later stage by seperate "
"authentication plugin."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:16
msgid "Writing a plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:18
msgid ""
"If you want to write your own credential extraction plugin it has to "
"implement the IExtractionPlugin interface. This interface only has a single "
"method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/credential-extraction.rst:39
msgid ""
"This plugin extracts the login name and password from fields with the same "
"name in the request object."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:3
msgid "Features and interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:9
msgid ""
"A user folder such as PAS provides a number of different services: it takes "
"care of user authentication, it asks users to login if needed, and it allows"
" you to search for users and groups."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:14
msgid ""
"In order to make both configuration and implementation simpler and more "
"powerful, all these different tasks have been divided into different "
"interfaces. Each interface describes how a specific feature, such as "
"authenticating a user, has to be implemented."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:20
msgid ""
"Within PAS, plugins are used to provide these features. Plugins are small "
"pieces of logic which implement one or more functions as defined by these "
"interfaces."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:24
msgid "This separation is useful for different reasons:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:26
msgid ""
"it makes it possible to configure different aspects of the system "
"separately. For example *how* users authenticate (cookies, login forms, "
"etc.) can be configured separately from *where* user information is stored "
"(ZODB, LDAP, RADIUS, SQL, etc.). This flexibility makes it very easy to tune"
" the system to specific needs."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/features-and-interfaces.rst:32
msgid ""
"it makes it possible for developers to write small pieces of code that only "
"perform a single task. This leads to code that is easier to understand, more"
" testable and better maintainable."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:3
msgid "Group plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:7
msgid ""
"Group plugins return the identifiers for the groups a principal is a member "
"of. Since a principal can be either a user or a group this means that PAS "
"can support nested group members. The default PAS configuration does not "
"support this though."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:12
msgid ""
"Like other PAS interfaces, the ``IGroupsPlugin`` interface is simple and "
"only specifies a single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/group-plugins.rst:41
msgid ""
"This puts the current user in the Manager group if the site is being "
"accessed from the Zope server itself."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/index.rst:3
msgid "Pluggable Authentication Service"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/index.rst:7
msgid ""
"The Pluggable authentication service (PAS) provides an easy way to customize"
" the way your users are authenticated and assigned roles."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:9
msgid ""
"The Pluggable Authentication Service (PAS) is an alternative to the standard"
" Zope User Folder or the popular Group User Folder (GRUF). PAS has a highly "
"modular design, which is very powerful, but also a lot harder to understand."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:15
msgid ""
"PAS is built around the concepts of interfaces and plugins: all possible "
"tasks related to user and group management and authentication are described "
"in separate interfaces. These interfaces are implemented by plugins which "
"can be selectively enabled per interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/introduction.rst:21
msgid ""
"Plone uses PlonePAS, which extends PAS with a couple of extra plugin types "
"and which adds GRUF compatibility. Since PlonePAS extensions are rarely "
"needed and are subject to change in new Plone releases, this tutorial will "
"focus only on pure PAS features."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:3
msgid "PAS eats exceptions"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:7
msgid ""
"A broken user folder is one of the worst things that can happen in Zope: it "
"can make it impossible to access any objects underneath the user folders "
"level."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:9
msgid ""
"In order to secure itself against errors in plugins PAS ignores all "
"exceptions of the common exception types: NameError, AttributeError, "
"KeyError, TypeError and ValueError."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:11
msgid ""
"This can make debugging plugins hard: an error in a plugin can be silently "
"ignored if its exception is swallowed by PAS."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:14
msgid "Do not swallow"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:16
msgid ""
"You can tell PAS not to swallow your exceptions by setting the "
"``_dont_swallow_my_exceptions`` attribute on the plugin class."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:19
msgid ""
"From ``Products/PluggableAuthService/PluggableAuthService.py`` line 86::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/pas-eats-exceptions.rst:30
msgid ""
"Which means to take advantage of this feature, do something like this in "
"your plugin class::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/index.rst:3
msgid "Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/index.rst:7
msgid ""
"Detail about the stock plugins provided by PAS and how to create new ones"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/index.rst:3
msgid "Plugin interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/index.rst:7
msgid ""
"PAS Plugins are broken down by the different functionalities they provide."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:3
msgid "List of Plugin Interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:9
msgid ""
"PAS Plugins are broken down by the different functionalities they provide. A"
" particular plugin may provide one or many of the following interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:11
msgid ":ref:`pas-extraction-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:13
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:11
msgid ""
"Extraction plugins are responsible for extracting credentials from the "
"request."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:15
msgid ":ref:`pas-authentication-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:11
msgid ""
"Authentication plugins are responsible for validating credentials generated "
"by the Extraction Plugin."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:19
msgid ":ref:`pas-challenge-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:11
msgid ""
"Challenge plugins initiate a challenge to the user to provide credentials."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:23
msgid ":ref:`pas-update-credentials-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:11
msgid "Credential update plugins respond to the user changing credentials."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:27
msgid ":ref:`pas-reset-credentials-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:29
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:11
msgid "Credential clear plugins respond to a user logging out."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:31
msgid "Userfactory Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:33
msgid "Create users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:35
msgid "Anonymoususerfactory Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:37
msgid "Create anonymous users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:39
msgid ":ref:`pas-properties-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:41
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:11
msgid "Properties plugins generate property sheets for users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:43
msgid ":ref:`pas-groups-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:45
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:11
msgid "Groups plugins determine the groups to which a user belongs."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:47
msgid ":ref:`pas-roles-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:49
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:11
msgid "Roles plugins determine the global roles which a user has."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:51
msgid "Update Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:53
msgid ""
"Update plugins allow the user or the application to update the user's "
"properties."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:55
msgid "Validation Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:57
msgid ""
"Validation plugins specify allowable values for user properties (e.g., "
"minimum password length, allowed characters, etc.)"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:59
msgid ":ref:`pas-user-enumeration-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:61
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:11
msgid ""
"Enumeration plugins allow querying users by ID, and searching for users who "
"match particular criteria."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:63
msgid ":ref:`pas-user-adder-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:65
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:11
msgid "User Adder plugins allow the Pluggable Auth Service to create users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:67
msgid ":ref:`pas-group-enumeration-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:69
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:11
msgid "Enumeration plugins allow querying groups by ID."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:71
msgid ":ref:`pas-role-enumeration-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:73
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:11
msgid "Enumeration plugins allow querying roles by ID."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:75
msgid ":ref:`pas-role-assigner-plugins`"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-interfaces/list-of-plugin-interfaces.rst:77
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:11
msgid "Role Assigner plugins allow the Pluggable Auth Service to assign"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:5
msgid "Authentication Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:15
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:14
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:15
msgid "Stock Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:18
msgid "Delegating Multi Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:20
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:19
msgid ""
"This plugin delegates a PAS interface to some other acl_user folder, "
"typically a \"legacy\" folder that implements some specific authentication "
"functionality. For example, you can delegate the IAuthenticationPlugin "
"interface to a legacy user folder via a Delegating Multi Plugin."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:23
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:21
msgid "Domain Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:22
msgid ""
"Authenticates users based on their IP address. Has nothing to do with "
"Windows \"Domain\" Authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:28
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:26
msgid "ZODB User Manager"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/authentication-plugins.rst:30
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:27
msgid ""
"ZODB-based user storage. Does authentication, enumeration and properties for"
" users and stores its data in the ZODB."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:5
msgid "Challenge Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:17
msgid "Cookie Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:19
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:18
msgid ""
"This plugin helps manage the details of Cookie Authentication. Allows you to"
" extract credentials from a cookie, update them, reset them, etc."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:25
msgid "HTTP Basic Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:23
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:26
msgid ""
"Multi-plugin for managing details of HTTP Basic Authentication. Extracts "
"credentials from request and implements the HTTP Auth challenge."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:26
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:29
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:25
msgid "Inline Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/challenge-plugins.rst:26
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:27
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:30
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:26
msgid "Manages credentials for inline authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:5
msgid "Extraction Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:15
msgid "The following stock plugins provide the IExtractionPlugin Interface."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:30
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:33
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:29
msgid "Session Auth Helper"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:31
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:34
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:30
msgid "Extracts and manages credentials for session authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:34
msgid "Methods"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:35
msgid "Each plugin implements the following methods:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:37
msgid ""
"extractCredentials() -- gets credential info from the relevant request, "
"cookie, session, etc."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:38
msgid "updateCredentials() -- responds to a change of credentials"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:39
msgid "resetCredentials() -- empties out currently stored values"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/extraction-plugins.rst:41
msgid ""
"if appropriate, the plugin will also implement a challenge() method which "
"will challenge the user for authentication."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:5
msgid "Group_Enumeration Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:17
msgid "Dynamic Groups Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:18
msgid "This plugin allows you to create dynamic groups via business rules."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:21
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:22
msgid "Search Principals Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:22
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:23
msgid ""
"Plugin to delegate enumerateUsers and enumerateGroups requests to another "
"PluggableAuthService"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:25
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:25
msgid "ZODB Group Manager"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/group-enumeration-plugins.rst:26
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:26
msgid "This plugin lets you manage groups and groups of groups in the ZODB."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:5
msgid "Groups Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:21
msgid "Recursive Groups Plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/groups-plugins.rst:22
msgid "This plugin will recursively flatten a collection of groups."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/index.rst:3
msgid "Plugin Types"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/index.rst:9
msgid "A list of the different types of plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/properties-plugins.rst:5
msgid "Properties Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/reset-credentials-plugins.rst:5
msgid "Reset Credentials Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:5
msgid "Role_Assigner Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:17
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:25
msgid "ZODB Role Manager"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-assigner-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:18
#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:26
msgid ""
"Stores role information for users in the ZODB. Handles roles storage, role "
"enumeration, and role assignment."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/role-enumeration-plugins.rst:5
msgid "Role_Enumeration Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/roles-plugins.rst:5
msgid "Roles Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/update-credentials-plugins.rst:5
msgid "Update Credentials Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-adder-plugins.rst:5
msgid "User_Adder Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/plugins/plugin-types/user-enumeration-plugins.rst:5
msgid "User_Enumeration Plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:3
msgid "Properties plugins"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:7
msgid ""
"Properties are stored in property sheets: mapping-like objects, such as a "
"standard python dictionary, which contain the properties for a principal. "
"The property sheets are ordered: if a property is present in multiple "
"property sheets only the property in the sheet with the highest priority is "
"visible."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:14
msgid ""
"Property sheets are created by plugins implementing the "
"``IPropertiesPlugin`` interface. This interface contains only a single "
"method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/properties-plugins.rst:32
msgid ""
"this adds an *email* property to a user which is hardcoded to the user id "
"followed by a company's domain name."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:3
msgid "Repositories"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:8
msgid "PAS"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:10
msgid ""
"Generic Zope code base http://svn.zope.org/Products.PluggableAuthService/"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:12
msgid ""
"`Plone codebase "
"<https://github.com/plone/Products.PlonePAS/tree/master/README.txt>`_"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:15
msgid "Plugin repository for PAS"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:17
msgid "Ready or half-baked plug-ins:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:19
msgid "http://svn.plone.org/svn/collective/PASPlugins/"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/repositories.rst:21
msgid "Lots of examples for dynamic group configuration."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:3
msgid "Roles plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:7
msgid ""
"The ``IRolesPlugin`` plugins determine the global roles for a principal. "
"Like the other interfaces the ``IRolesPlugin`` interface contains only a "
"single method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/roles-plugin.rst:32
msgid ""
"This gives the current user in Manager role if the site is being accessed "
"from the Zope server itself."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:3
msgid "The important interfaces"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:9
msgid "PAS has a number of interfaces that are important for everyone."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:11
msgid "The most important interfaces that you may want to configure are:"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:17
msgid "**Authentication**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:14
msgid ""
"Authentication plugins are responsible for authenticating a set of "
"credentials. Usually that will mean verifying if a login name and password "
"are correct by comparing them with a user record in a database such as the "
"ZODB or an SQL database."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:22
msgid "**Extraction**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:20
msgid ""
"Extraction plugins determine the credentials for a request. Credentials can "
"take different forms, such as a HTTP cookie, HTTP form data or the user's IP"
" address."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:25
msgid "**Groups**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:25
msgid "These plugins determine which group(s) a user (or group) belongs to."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:35
msgid "**Properties**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:28
msgid ""
"Property plugins manage all properties for users. This includes the standard"
" information such as the user's name and email address but can also be any "
"other piece of data that you want to store for a user. Multiple properties "
"plugins can be used in parallel, making it possible for example to use some "
"information from a central system such as active directory while storing "
"data specific to your Plone site in the ZODB."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:37
msgid "**User Enumeration**"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-important-interfaces.rst:38
msgid "User enumeration plugins implement the searching logic for users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:3
msgid "The user object"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:9
msgid ""
"In contrast to other user folders, a user in a PAS environment does not have"
" a single source. Various aspects of a user (properties, groups, roles, "
"etc.) are managed by different plugins. To accommodate this, PAS features a "
"user object which provides a single interface to all different aspects."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:16
msgid ""
"There are two basic user types: a normal user (as defined by the "
"``IBasicUser`` interface) and a user with member properties (defined by the "
"``IPropertiedUser`` interface). Since basic users are not used within Plone "
"we will only consider ``IPropertiedUser`` users."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:24
msgid "``getId()``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:24
msgid "returns the user id. This is a unique identifier for a user."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:27
msgid "``getUserName()``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:27
msgid "Return the login name used by the user to log into the system."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:30
msgid "``getRoles()``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:30
msgid "Return the roles assigned to a user \"globally\"."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:33
msgid "``getRolesInContext(context)``"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/the-user-object.rst:33
msgid ""
"Return the roles assigned to the user within a specific context. This "
"includes the global roles as returned by ``getRoles()``."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:3
msgid "User creation"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:9
msgid "PAS uses a multi-phase algorithm to create a user object"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:11
msgid "An ``IUserFactoryPlugin`` plugin is used to create a new user object."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:12
msgid ""
"All ``IPropertiesPlugin`` plugins are queried to get the property sheets."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:13
msgid "All ``IGroupsPlugin`` plugins are queried to get the groups."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-creation.rst:14
msgid "All ``IRolesPlugin`` plugins are queried to get the global roles."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:3
msgid "User factory plugin"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:7
msgid ""
"PAS supports multiple user types. The two default user types are: "
"``IBasicUser`` and ``IPropertiesUser``. ``IBasicUser`` is a simple user type"
" which supports a user id, login name, roles and domain restrictions. "
"``IPropertiedUser`` extends this type and adds user properties."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:13
msgid ""
"A user factory plugin creates a new user instance. PAS will add properties, "
"groups and roles to this instance as part of its user creation process."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:17
msgid ""
"If no user factory plugin is able to create a user, PAS will fall back to "
"creating a standard ``PropertiedUser`` instance."
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:20
msgid ""
"The ``IUserFactoryPlugin`` interface is a simple one containing a single "
"method::"
msgstr ""

#: ../../reference_manuals/old/pluggable_authentication_service/user-factory-plugin.rst:28
msgid "The default PAS behaviour is demonstrated by this code::"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:3
msgid "How to make portlets availability configurable via adapters"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:7
msgid ""
"Sometimes you may want to make specific portlets available only on some "
"pages, like the portal root. This describes, how to implement such a "
"functionality for custom portlets."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:13
msgid ""
"The interface IPortletRenderer in plone.portlets.interfaces specifies an "
"available property, which is used to decide if an portlet should be shown or"
" not. The Renderer class in plone.app.portlets.base, from which most "
"Renderer classes derive, implements the available property which always "
"returns True. You can override this property in you own Renderer class. And "
"if you use the adapter pattern to calculate the available property, it gets "
"configurable also outside the package, your portlet is defined in."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:22
msgid "Define a default adapter including the adapter interface"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:42
msgid ""
"Register the adapter with zcml. The default adapter is registered as "
"multiadapter to a portlet assignment, a portlet manager and a generic "
"context. The portlet assignment specifies for which portlet type the adapter"
" is registered (in this case IMyPortlet). The portlet manager adapted in "
"this example is IPortletManager - the most generic one which includes "
"IDashBoard, ILeftColumn and IRightColumn. The context in this example is "
"also very generic - any content which can display portlets."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:59
msgid "Use the adapter in your custom portlet:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:83
msgid ""
"The first adapter lookup is a named one. So it's possible to register an "
"adapter for one specific portlet only, whereas the second adapter lookup can"
" apply to more than one portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:87
msgid ""
"The default adapter registered above always returns True. But we can "
"override this behavior in another package, e.g. an Pone integration package "
"(call it \"policy product\")."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:92
msgid "Define custom adapters:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:109
msgid "Register the adapters:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/available_adapter.rst:138
msgid ""
"Here, if the portlet is registered on ILeftColumn and IRightColumn, it is "
"only shown on ILeftColumn, if the context is the portal root. Otherwise, "
"it's shown on IRightColumn."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/moving.rst:3
msgid "Moving portlet assignments from one item to another"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/moving.rst:7
msgid "This gives some example code for moving portlets and their settings."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/moving.rst:11
msgid ""
"The following method moves portlet assigned from one item to another and "
"copies over it blocking settings as well for good measure."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:3
msgid "How to update schemas for already registered portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:7
msgid ""
"This describes how an Portlet schema can be updated for portlets, which are "
"already registered in the Portal."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:12
msgid ""
"Note: David Glick suggested an really easy fix, so this one might become "
"obsolete:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:15
msgid ""
"Add the new attribute as a class attribute of the portlet assignment class. "
"e.g."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:19
msgid "class Assignment(base.Assignment):"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:19
msgid "image_size = 42"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:21
msgid ""
"Then existing assignment instances which don't have that attribute will "
"still get them from the class."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:24
msgid ""
"Once a portlet with a specific schema is registered, the schema cannot "
"easily be modified. Because zope.formlib will try to get the value for the "
"new field in the schema when you visit the edit screen, it will throw an "
"error since there is no attribute for that object yet. So, you have to "
"update every instance of that specific portlet type and add the missing "
"attributes."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:30
msgid "And here is how, in a generic way:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:68
msgid ""
"Just pass the function update_portlet_schema any plone content context (e.g."
" the portlet root object itself), the portlet's schema interface which was "
"modified, the attribute name as string and the value which should set "
"initially. Done."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:73
msgid ""
"You can find this function among other useful tools in the package "
"`collective.setuphandlertools "
"<http://pypi.python.org/pypi/collective.setuphandlertools>`_ and on `github "
"<https://github.com/collective/collective.setuphandlertools>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/schema_update.rst:78
msgid ""
"A fix, so that zope.formlib accepts schema updates is beeing discussed in "
"the zope mailing list (see `here <http://www.gossamer-"
"threads.com/lists/zope/dev/230105>`_)."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:3
msgid "Subclassing new portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:7
msgid ""
"This how-to briefly explains how to create new portlets based on another "
"existing portlet class. (Mikko Ohtama)"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:14
msgid ""
"Portlet subclassing is not trivial due to explict references between portlet"
" engine parts. Here are short instructions minimal steps to needed to a "
"subclass a portlet to another portlet. Instead of modifying the existing "
"portlet, we need to create a new invariant with little changed properties. "
"`See this general briefing about Plone 3.x portlet mechanism. "
"<http://martinaspeli.net/articles/an-introduction-to-plone-portlets>`_ This "
"example modifies the render behavior of static text portlet, by adding a "
"grey backgroundd CSS class for it."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:24
msgid ""
"Create a portlet interface stub and portlets Python module: To define a new "
"portlet. Refer this in your product ZCML."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:26
msgid ""
"Create a new assigment class: To make new portlet assignable through portlet"
" manager"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:28
msgid ""
"Create a new add form class: To make new portlet creatable, returning your "
"custom portlet instances"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:30
msgid ""
"Create a configure.xml ZCML entry: To make Zope to find the new portlet "
"definition"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:32
msgid ""
"Create a portlets.xml installer entry: To make the portlet appear in the "
"portlet manager menu"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:35
msgid ""
"The portlet interface class is fixed to a portlet when the portlet is "
"created. Thus, if you make changes any of above, you might need to create a "
"new portlet to see the effect - old portlet instances don't necessarily see "
"the changees."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:40
msgid "Our portlet code lies in *myproduct/browser/portlets/misc.py*:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:68
msgid ""
"*myproduct/browser/portlets/configure.zcml* snippet. Note that we do not "
"need to override all (EditForm) views:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:93
msgid "*myproducts/profiles/default/portlets.xml* quick installer snippet:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:108
msgid ""
"*myproduct/browser/portlets/grey\\_static.pt*. We have added one new CSS "
"class (portletGrey) which has a CSS class definition defined in "
"ploneCustom.css (through-the-web) or some of the product's CSS files:"
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:154
msgid ""
"*myproduct/browser/portlets/\\_\\_init\\_\\_.py*. Create empty file to a "
"mark a Python module."
msgstr ""

#: ../../reference_manuals/old/portlets/appendix/subclassing.rst:157
msgid "*myproduct/configure.zcml*. Add following snippet:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:3
msgid "Basic plone.portlets architecture"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:7
msgid ""
"This section describes the general architecture of a portlet through an "
"example. You can checkout the example code `from the collective "
"<http://svn.plone.org/svn/collective/ploneexample.portlet/trunk/>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:12
msgid "The use case"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:14
msgid ""
"As an example, we will develop a portlet to display the last *n* (where *n* "
"is a positive integer ;) modified content items to logged-in users, which "
"will be available to add it to any portlet manager (left or right column by "
"default)."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:19
msgid "[screenshot follows]"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:22
msgid "The configuration data"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:24
msgid ""
"When a portlet is first created, there are often customizations which can be"
" made which tailor the portlet's behaviour to meet the user's needs: eg. "
"which content type to display, how many items to list, etc... In our "
"example, we want the person configuring the portlet to be able to specify "
"how many of the most recent items will be displayed inside the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:31
msgid ""
"First, we have to describe the interface schema of the configuration data we"
" want to store using ``zope.schema`` (see `this page "
"<http://wiki.zope.org/zope3/schema.html>`_ for more info on schemas). By "
"convention, this interface derives from ``IPortletDataProvider``, which is "
"just a marker interface. In the package's *interfaces.py* file, type:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:49
msgid ""
"The ``PloneMessageFactory`` makes our code ready to be localized using the "
"Plone i18n machinery."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:52
msgid ""
"After defining the configuration schema interface, we implement it in a "
"class called the Assignment class. This is a persistent \"content\" class "
"which stores the persistent configuration data (if any) of the portlet. Even"
" when a portlet is not configurable, it needs to have an Assignment class, "
"because the presence of an Assignment instance in various places is what "
"determines what portlets show up where."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:60
msgid ""
"The Assignment class has a ``title`` attribute that is used in the portlet "
"management UI to distinguish different instances of the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:81
msgid "The add and edit forms"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:83
msgid ""
"To add the portlet and edit its configuration, we have to define appropiate "
"add and edit forms."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:86
msgid ""
"This is typically done using *zope.formlib* and the portlet schema, together"
" with some base form classes to save us from designing the forms template "
"and logic ourselves. If the portlet is not configurable, this can use the "
"special ``base.NullAddForm``, which is just a view that creates the portlet "
"and then redirects back to the portlet management screen."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:93
msgid ""
"For more information about *zope.formlib*, check `this tutorial "
"<../../../tutorial/writing-forms-easily-with-zope-formlib>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:96
msgid ""
"The edit form can be omitted if the portlet configuration is not editable."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:115
msgid ""
"As it can be seen above, the add form must return an Assignment instance of "
"the portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:119
msgid "The portlet presentation"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:121
msgid "Next, we define how the portlet will be rendered."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:123
msgid ""
"The Portlet Renderer is the \"view\" of the portlet. This is just a content "
"provider (in the zope.contentprovider sense), in that it has an ``update()``"
" and a ``render()`` method, which will be called upon the rendering of the "
"portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:128
msgid ""
"It's a multi-adapter that takes a number of parameters which makes it "
"possible to vary the rendering of the portlet:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:132
msgid ""
"The current content object. Mind the type of content object that's being "
"shown."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:135
msgid "The current request. Mind the current theme/browser layer."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:137
msgid ""
"The current (full page) view. Mind the current view, and whether or not this"
" is the canonical view of the object (as indicated by the ``IViewView`` "
"marker interface) or a particular view, like the manage-portlets view."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:142
msgid ""
"The portlet manager where this portlet was rendered (for now, think of a "
"portlet manager as a column). Mind where in the page the portlet was "
"rendered."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:148
msgid "data"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:146
msgid ""
"The portlet data, which is basically an instance of the portlet assignment "
"class. Mind the configuration of the portlet assignment."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:150
msgid ""
"The Renderer base class relieves us from having to remember all these "
"parameters."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:153
msgid ""
"The Renderer class must have an ``available`` property, which is used to "
"determine whether this portlet should be shown or not. Note you shouldn't "
"include checks for the user id, group or content-type here, since you can "
"perform these assignments later by registering the portlet under a certain "
"category (more on this later)."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:205
msgid "When reading the previous code, note that:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:208
msgid ""
"``plone_portal_state`` and ``plone_tools`` are helper views providing some "
"useful attributes to gather information from."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:210
msgid ""
"The ``memoize`` decorator is used here to cache the results of the catalog "
"query to avoid the perfomance hit of re-generating them in each request. See"
" the `plone.memoize doctests "
"<http://dev.plone.org/plone/browser/plone.memoize/trunk/plone/memoize/README.txt>`_"
" for more information."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:217
msgid "Registering the portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:219
msgid ""
"A convenient ZCML directive is provided to glue all components of the "
"portlet in the Zope Component Architecture. In the package's "
"*configure.zcml* file (or any other ZCML file included from it), write:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:246
msgid ""
"Note you have to define/reference the plone XML namespace for the directive "
"to work. There is also a ``<plone:portletRenderer />`` directive to override"
" the renderer for a particular context/layer/view/manager."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:251
msgid ""
"You can see the descriptions of all these directives together with their "
"arguments in the `metadirectives.py file of the plone.app.portlets package "
"<http://dev.plone.org/plone/browser/plone.app.portlets/trunk/plone/app/portlets/metadirectives.py>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:255
msgid ""
"This ZCML directive is read at the Zope startup, so to register each class "
"appropiately into the Component Architecture, but you won't be able to add "
"your new portlet yet. You first need to install its portlet type into your "
"Plone site, as described in the section which follows."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:262
msgid "Installing the portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:264
msgid ""
"The components and registration above make a new type of portlet available "
"for installation. To install the portlet type into a particular Plone site, "
"use GenericSetup."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:268
msgid ""
"First, register a new GenericSetup extension profile using a registerProfile"
" ZCML directive:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:302
msgid ""
"Next, create the folder profiles/default and place a ``portlets.xml`` file "
"inside with the following content:"
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:322
msgid ""
"When this is run, it will create a local utility in the Plone site of the "
"``IPortletType``. This just holds some metadata about the portlet for UI "
"purposes."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:326
msgid "``Title`` and ``description`` should be self-explanatory."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:328
msgid ""
"The ``addview`` is the name of the view used to add the portlet, which helps"
" the UI to invoke the right form when the user asks to add the portlet. This"
" should match the portlet name."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:332
msgid ""
"``for`` is an interface or list of interfaces that describe the type of "
"portlet managers that this portlet is suitable for. This means that we can "
"install a portlet that's suitable for the dashboard, say, but not for the "
"general columns. In this case, we're making the portlet suitable for the "
"dashboard and for any (either left or right) column. Current portlet manager"
" interfaces include ``IColumn``, ``ILeftColumn``, ``IRightColumn`` and "
"``IDashboard``, all of them defined inside the plone.app.portlets package."
msgstr ""

#: ../../reference_manuals/old/portlets/architecture.rst:342
msgid ""
"Again, this is primarily about helping the UI construct appropriate menus."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:3
msgid "How and where are Portlet Assignments stored?"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:7
msgid ""
"When you choose a portlet to be displayed somewhere, for example, using the "
"interface that appears when you hit the Manage Portlets button, what you're "
"doing is storing a persistent instance of the Portlet Assignment class into "
"your site, together with all its associated configuration data."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:16
msgid ""
"Portlet Assignments are stored in what's called an Assignment Mapping. This "
"is an ordered container with a dict-like interface. The keys are unique "
"string names, and the values are instances of the assignment class."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:21
msgid ""
"Assignment mappings can be stored in two different kinds of locations "
"depending on their type: site-wide or contextual."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:25
msgid "Site-wide"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:27
msgid ""
"Site-wide assigned portlets are shown in the whole site, unless blocked. "
"They're stored in Portlet Managers. Portlet Managers define a column or "
"other area that can be filled with portlets, and are analogous to the "
"viewlet manager for viewlets. They are named persistent local utilites "
"providing the ``IPortletManager`` interface."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:34
msgid "You can look up a portlet manager like this:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:40
msgid ""
"By default, there are two standard portlet managers, ``plone.leftcolumn`` "
"and ``plone.rightcolumn``, as well as four portlet managers for the four "
"columns on the dashboard, from ``plone.dashboard1`` to ``plone.dashboard4``."
" You can create your own in ``portlets.xml`` like this:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:53
msgid ""
"The \"type\" is a marker interface that can be used to install particular "
"portlets only for particular types of portlet managers, as explained above. "
"Example: ``plone.app.portlets.interfaces.IDashboard``."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:58
msgid ""
"Portlets in global categories (site-wide) are stored directly inside the "
"``IPortletManager`` utility, under a particular category - e.g. \"group\" - "
"a category-specific key - e.g. the group id - and finally a unique portlet "
"id. Putting this together, we could access a particular portlet assignment "
"like this:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:70
msgid ""
"Here we look up the left column portlet manager and get the portlet "
"assignment named *recent* assigned to the *Administrators* group."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:73
msgid ""
"Each of the lookups here has a dict interface, so you can iterate, call "
"``keys()`` and so on. You can store assignments under any string as "
"category, but the default portlet retriever is only aware of the three site-"
"wide assignment categories defined as constants in "
"*plone.portlet.constants*, ``USER_CATEGORY``, ``GROUP_CATEGORY`` and "
"``CONTENT_TYPE_CATEGORY``, which should be enough for most use-cases. More "
"on portlet retrievers later."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:82
msgid "Contextual"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:84
msgid ""
"Location-specific portlet assignments are stored on annotations on objects "
"providing the ``ILocalPortletAssignable`` marker interface."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:88
msgid ""
"To get hold of the assignment in this case, we multi-adapt the content "
"object and the manager instance to the ``IPortletAssignment`` interface, "
"like so:"
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:98
msgid ""
"There are two functions in plone.app.portlets.utils to make it easier to "
"find the appropriate mapping for a portlet, or to get a portlet assignment "
"directly: ``assignment_mapping_from_key()`` and ``assignment_from_key()``."
msgstr ""

#: ../../reference_manuals/old/portlets/assignments.rst:103
msgid ""
"We can use GenericSetup to assign portlets to particular portlet managers "
"upon the installation of a product. Read the `Theme Reference Manual`_ for "
"info about how to do that. Read the `Generic Setup tutorial`_ for further "
"info about what's GenericSetup and how it works."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:3
msgid "Order and blacklisting"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:7
msgid ""
"How to change the order of the different types of portlets (group, user, "
"contextual) inside a portlet manager, and how portlet blocking works."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:12
msgid "!!! Warning: Incomplete Material !!!"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:16
msgid ""
"When giving a key for the context assignment, the root of the site can be "
"referred to this way:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:24
msgid ""
"Refer to the default 'news' folder in the site (NOTE: Prior to Plone 3.3.5, "
"this required a full path like /Plone/news):"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:31
msgid "Delete a portlet assignment using the remove attribute:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:44
msgid ""
"Remove all the portlet assignments for a specific manager assigned to the "
"news object using the purge attribute:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:56
msgid ""
"Add or move an existing portlet at the top of the column using insert-"
"before:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:70
msgid "Add or move an existing portlet before the 'news' portlet:"
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:83
msgid ""
"Pro Tip: Quickest way to find out the name of a portlet: go to @@manage- "
"portlets and hover over the 'X'. The name for that assignment will appear in"
" the URL."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:89
msgid "Looted from Six Feet Up's QuickReferenceCard_."
msgstr ""

#: ../../reference_manuals/old/portlets/blacklisting.rst:94
msgid "Blacklisting portlets (from ``plone.app.portlets``'s test suite):"
msgstr ""

#: ../../reference_manuals/old/portlets/index.rst:3
msgid "Portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/index.rst:5
msgid ""
"An introduction to the portlets architecture of Plone 3, with practical "
"examples."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:3
msgid "How are portlets rendered?"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:7
msgid ""
"The process to find, update and render portlets from the main views is "
"rather complex. Here we describe how does it all work, step by step."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:13
msgid ""
"Portlets are always rendered inside a portlet manager. From a template, we "
"can ask a portlet manager to render itself and all its portlets. This is "
"achieved using a *zope.contentprovider* 'provider:' expression. In Plone's "
"*main\\_template*, for example, you will find:"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:23
msgid ""
"Behind the scenes, this will look up a local adapter on (context, request, "
"view) with name ``plone.leftcolumn`` (this is just how the provider "
"expression works)."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:27
msgid ""
"As it happens, this local adapter factory was registered when the portlet "
"manager was installed (via ``portlets.xml``), and is a callable that returns"
" an ``IPortletManagerRenderer``. The portlet manager renderer is the "
"\"view\" of the portlet manager."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:32
msgid ""
"The default implementation will simply output each portlet wrapped in a div "
"tag with some helpful attributes to support AJAX via KSS. You can of course "
"register your own portlet manager renderers. A portlet manager renderer is a"
" multi-adapter on (context, request, view, manager). The ``@@manage-"
"portlets`` view, for example, relies on a portlet manager renderer override "
"for this particular view that renders the add/move/delete operations. For "
"most people, the standard renderer will suffice, though."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:41
msgid ""
"The portlet manager renderer asks an ``IPortletRetriever`` to fetch and "
"order the portlet assignments that it should render. This is a multi-adapter"
" on (context, manager), which means that the fetch algorithm can be "
"overridden either based on the type of content object being viewed, or the "
"particular manager. There are two default implementations - one for "
"\"placeful\" portlet managers (those which know about contextual portlets, "
"such as the standard left/right column ones) and one for \"placeless\" ones "
"that only deal in global categories. This latter retriever is used by the "
"dashboard, which stores its portlets in a global \"user\" category."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:52
msgid ""
"The ``IPortletRetriever`` algorithm is reasonably complex, especially when "
"contextual blacklisting/blocking is taken into account (see below). To make "
"it possible to re-use this algorithm across multiple configurations, it is "
"written in terms of an ``IPortletContext``. The context content object will "
"be adapted to this interface. The portlet context provides:"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:60
msgid ""
"A universal identifier for the current context (usually just the physical "
"path) - the ``uid`` property."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:62
msgid ""
"A way to obtain the parent object of the current context (for acquiring "
"portlets and blacklist information in a placeful retriever) - the "
"``getParent()`` method."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:65
msgid ""
"A list of global portlet categories to look up, and the keys to look under "
"(obtainable by using the ``globalPortletCategories()`` method on the adapted"
" context)."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:69
msgid ""
"The last parameter is best described by an example. Let's say we're logged "
"in as \"testuser\", a member of both the \"Administrators\" and "
"\"Reviewers\" groups, and were looking at a Folder. The return value of "
"``globalPortletCategories()`` would then be:"
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:82
msgid ""
"This informs the retriever that it should first look up any portlets in the "
"current portlet manager in the \"content\\_type\" category under the "
"\"Folder\" key, and then portlets in the \"group\" category under the "
"\"Administators\" and \"Reviewers\" key, and finally portlets in the "
"\"user\" category under the \"testuser\" key, all in that order. Thus, if we"
" wanted to add a new category, or change the order of categories, we could "
"override the ``IPortletContext``, either everywhere or just for one "
"particular type of context."
msgstr ""

#: ../../reference_manuals/old/portlets/rendered.rst:91
msgid ""
"Once the ``IPortletRetriever`` has retrieved the assignments that should be "
"shown for the current portlet manager, the portlet manager renderer will "
"look up the portlet renderer for each assignment, ensure that it should "
"indeed be rendered by checking its ``available`` property, and finally call "
"``update()`` and ``render()``, placing the output in the reponse."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:3
msgid "Testing the portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:7
msgid "Ensure everything's working as it should."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:9
msgid ""
"If the portlet was registered and installed correctly, it should now show up"
" in the list of portlets available for addition into the type of portlet "
"managers specified in the for argument of the portlet type (``IColumn`` and "
"``IDashboard`` in our case), under the ``@@manage-portlets`` view (*Manage "
"Portlets* link)."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:15
msgid ""
"However, to ensure everything's working as it should without having to test "
"it through the web, we can write some integration tests. This is recommended"
" practice in the Plone universe. Moreover, once you've understood how the "
"portlet infrastructure and its API work, you will be able to write tests "
"first (you can copy&paste tests from other portlets products) and then start"
" coding the portlet. More info on testing in the `Testing in Plone`_ "
"tutorial."
msgstr ""

#: ../../reference_manuals/old/portlets/testing.rst:23
msgid "Run them using ``bin/instance test -s ploneexample.portlet``"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:3
msgid "Portlet tips (advanced)"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:7
msgid ""
"How to create and subclass portlets in Plone. How to look-up and modify "
"portlets on the site programmatically."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:15
msgid ""
"Please read `Portlets developer manual "
"<http://developer.plone.org/reference_manuals/old/portlets/architecture.html>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:18
msgid "Creating a portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:20
msgid ""
"You need a paster-compatible product skeleton created using *paster create "
"-t plone* or *paster create -t archetypes* commands."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:23
msgid ""
"Use project specific paster command *paster addcontent portlet* to create a "
"code skeleton for your new portlet."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:27
msgid "Subclassing a portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:29
msgid ""
"You can subclass a portlet to create a new portlet type with your enhanced "
"functionality."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:31
msgid ""
"http://developer.plone.org/reference_manuals/old/portlets/appendix/subclassing.html"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:34
msgid "Using z3c.form in portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:36
msgid ""
":doc:`z3c.form </forms/z3c.form>` is a modern form library for Plone. The "
"out of the box Plone portlets use older *zope.formlib*."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:39
msgid "Discussion related to the matter"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:41
msgid ""
"http://stackoverflow.com/questions/5174905/can-i-use-z3c-form-on-plone-"
"portlets-instead-of-zope-formlib"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:44
msgid "Overriding portlet rendering"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:46
msgid ""
"Use ``<plone:portletRenderer>`` directive. Specify 1) layer, 2) template "
"and/or 3) class 4) portlet interface."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:49
msgid ""
"You need ``<include package=\"\">`` directive for the package whose portlet "
"you are going to override."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:68
msgid "More information"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:70
msgid ""
"http://developer.plone.org/reference_manuals/old/plone_3_theming/elements/portlet"
"/override-the-portlets-in-plone-3.0.html"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:73
msgid "update() and render()"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:75
msgid ""
"These methods should honour "
"`zope.contentprovider.interfaces.IContentProvider call contract "
"<http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:78
msgid "available property"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:80
msgid ""
"The portlet renderer can define available property to hint the portlet "
"manager when the portlet should be rendered."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:82
msgid "Example ::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:92
msgid "Iterate portlets assigned to the portal root"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:94
msgid ""
"Below is an simple example how to print all portlets which have been "
"assigned to the portal root::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:121
msgid "Looking up a portlet by id"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:123
msgid ""
"Here are some tips how to extract the portlet id data in the portlet "
"renderer to pass around to be consumed elsewhere."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:126
msgid "portlets.py::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:150
msgid ""
"Then we can re-look-up this portlet and its image field, based on the field "
"name, in the downloader view::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:245
msgid "See *imageportlet* add-on for the complete example."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:249
msgid "Walking through every portlet on the site"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:251
msgid ""
"The following code iterates through all portlets assigned directly to "
"content items. This excludes dashboard, group and content type based "
"portlets. Then it prints some info about them and renders them."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:255
msgid "Example code::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:325
msgid "For more information about portlet assignments and managers, see"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:327
msgid ""
"https://github.com/plone/plone.app.portlets/tree/master/plone/app/portlets/tests/test_mapping.py"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:329
msgid ""
"https://github.com/plone/plone.app.portlets/tree/master/plone/app/portlets/tests/test_traversal.py"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:331
msgid ""
"https://github.com/plone/plone.app.portlets/tree/master/plone/app/portlets/configure.zcml"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:333
msgid ""
"https://github.com/plone/plone.portlets/tree/master/plone/portlets/interfaces.py"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:335
msgid ""
"http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto"
" (for portlet renderers)"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:338
msgid "Checking if a certain context portlet is active on a page"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:340
msgid "Iterate through portlet managers by name"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:342
msgid "Get portlet retriever for the manager"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:344
msgid "Get portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:346
msgid ""
"Check if the portlet assignment provides your particular portlet marker "
"interface"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:375
msgid "Rendering a portlet"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:377
msgid "Below is an example how to render a portlet in Plone"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:379
msgid "A portlet is assigned to some context in some portlet manager"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:381
msgid ""
"We can dig these assignments up by portlet id (not user visible) or portlet "
"type (portlet assignment interface)"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:383
msgid "How to get your portlet HTML::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:455
msgid "How to use this code in your own view::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:476
msgid "How to call view helper function from page template"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:484
msgid ""
"http://blog.mfabrik.com/2011/03/10/how%C2%A0to-render-a-portlet-in-plone/"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:487
msgid "Hiding unwanted portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:489
msgid "Example portlets.xml::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:508
msgid "Portlet na,es can be found in ``plone.app.portlets/configure.zcml``."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:510
msgid "More info:"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:512
msgid ""
"http://stackoverflow.com/questions/5897656/disabling-portlet-types-site-"
"wide-in-plone"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:515
msgid "Disabling right or left columns in a view or template"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:517
msgid ""
"Sometimes, when you work with custom views and custom templates you need to "
"disable right or left column for portlets."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:520
msgid "This is how you do from within a template:"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:528
msgid "And this is how you do it from within a view::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:540
msgid ""
"Source: http://stackoverflow.com/questions/5872306/how-can-i-remove-"
"portlets-in-edit-mode-with-plone-4"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:543
msgid "Disabling right or left columns on a context"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:545
msgid ""
"Sometimes you just want to turn off the portlets in a certain context that "
"doesn't have a template or fancy view.  To do this in code do this::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:565
msgid "Or just do it using GenericSetup like a sane person:"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:567
msgid ""
"http://developer.plone.org/components/genericsetup.html#module-"
"plone.app.portlets.exportimport.portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:569
msgid "http://plone.org/products/plone/roadmap/203"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:572
msgid "Creating a new portlet manager"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:574
msgid ""
"If you need additional portlet slots at the site. In this example we use "
"``Products.ContentWellCode`` to provide us some facilities as a dependency."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:578
msgid ""
"Create a viewlet which will handle portlet rendering in a normal page mode. "
"Have several portlet slots, a.k.a. wells, where you can drop in portlets. "
"Wells are rendered horizontally side-by-side and portlets going in from top "
"to bottom."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:583
msgid ""
"Register this viewlet in a viewlet manager where you wish to show your "
"portlets on the main template"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:586
msgid ""
"Have a management view which allows you to shuffle portlets around. This is "
"borrowed from ``Products.ContentWellPortlets``."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:589
msgid ""
"Register portlet wells in ``portlets.xml`` - note that one management view "
"can handle several slots as in the example below"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:592
msgid ""
"The code skeleton works against `this Plone add-on template "
"<https://github.com/miohtama/sane_plone_addon_template>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:594
msgid "Example portlet manager viewlets.py::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:718
msgid "Example ZCML bit"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:742
msgid ""
"The page template for the manager ``manage-portlets-colophon.pt`` is the "
"following"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:824
msgid ""
"Then we have ``portlets-colophon.pt`` page template for the viewlet which "
"renders the portlets and related management link"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:855
msgid ""
"Finally there is ``portlets.xml`` which lists all the portlet managers and "
"associates them with the used interface"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:895
msgid ""
"https://weblion.psu.edu/svn/weblion/weblion/Products.ContentWellPortlets/trunk/Products/ContentWellPortlets/"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:897
msgid ""
"http://stackoverflow.com/questions/9766744/dynamic-tal-provider-expressions"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:900
msgid "Fixing relative links for static text portlets"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:904
msgid ""
"This should be no longer issue with Plone 4.1 and TinyMCE 1.3+ when using "
"UID links."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:907
msgid "Example how to convert links in all static text portlets::"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:951
msgid "Other resources and examples"
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:953
msgid ""
"`Static text portlet "
"<https://github.com/plone/plone.portlet.static/tree/master/plone/portlet/static/>`_."
msgstr ""

#: ../../reference_manuals/old/portlets/tips.rst:955
msgid ""
"`Templated portlet "
"<https://svn.plone.org/svn/collective/collective.easytemplate/trunk/collective/easytemplate/browser/portlets/templated.py>`_"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:3
msgid "What's a Portlet?"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:7
msgid ""
"This manual covers what a developer needs to know to create new portlet "
"types or customise existing ones."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:10
msgid ""
"Portlets are UI elements that can be shown in addition to the main content "
"of a page. They usually appear in the left of right columns, but are "
"sometimes also used instead of or below the main content.  They are usually "
"boxes of different kinds, which content editors can add, configure, and set "
"policies for showing."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:16
msgid "(Screenshot)."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:19
msgid "Differences with viewlets"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:21
msgid ""
"A portlet is like a viewlet but with persistent configuration (i.e. "
"persistent in the ZODB) and runtime changeable assignments."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:24
msgid "Use a viewlet for:"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:26
msgid ""
"General content which is always displayed; for example: breadcrumbs, the "
"logo, or the footer. This is not limited to visible elements, but can also "
"include CSS, javascript, etc.  (actually, that's how ``ResourceRegistries`` "
"work)."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:30
msgid ""
"Displaying elements based on the interface provided by the current context."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:33
msgid "Use a portlet when:"
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:35
msgid ""
"You need to specify the configuration data for an item; e.g. the number of "
"entries to show."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:37
msgid ""
"You want to give the content editors a choice about when and where to "
"display it."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:39
msgid "You want to display it only from inside a specific folder."
msgstr ""

#: ../../reference_manuals/old/portlets/whats_a_portlet.rst:40
msgid ""
"You'd like to show it only to some groups or users; e.g. the *Review* "
"portlet is only shown to users who belong to the *Reviewers* group."
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:2
msgid "A brief example"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:6
msgid "Just so that you know what we're talking about"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:8
msgid "Try to find the bug in the following piece of code:"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:30
msgid ""
"Found it yet? Did you have to spend more than a few seconds thinking about "
"it? Any developer could have written that code and not seen the problem. "
"Furthermore, the bug is an edge case that you may not have tested using "
"manual/through-the-web testing."
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:35
msgid ""
"Let us write a test (actually, a doc/unit test) for this code. Don’t worry "
"too much about how this is set up and executed just yet."
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:60
msgid ""
"As it happens, the last test would fail. It would print You are not an "
"employee currently., unless we fixed the code:"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:83
msgid "The moral of the story?"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:85
msgid "you rarely catch problems like these with manual testing"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:86
msgid ""
"put the time you waste catching silly bugs and typos into writing tests"
msgstr ""

#: ../../reference_manuals/old/testing/brief_example.rst:87
msgid ""
"with decent test coverage, you end up saving lots of time when you refactor"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:2
msgid "Determining the Code Coverage of your Test Suite"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:6
msgid ""
"Explanation for how to use the Zope test runner's built in code coverage "
"features to prove the quality of your test suite."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:10
msgid ""
"The better your test suite’s coverage, the lower the likelihood that some "
"modification to your code will break another piece of functionality in some "
"unanticipated way.  But, how do you **know the quality** of your test "
"coverage?  Zope’s test runner comes with several features to help you do "
"just that."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:18
msgid ""
"But first, let’s say you’ve written some code with a Python conditional like"
" the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:30
msgid ""
"The comments and function call in the else clause are symbolic of some "
"advanced coding that’s required to handle all odd numbers."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:35
msgid ""
"Now, as you’ve no doubt learned while reading this tutorial, testing is "
"important.  But what if for one reason or another, all the test cases you’ve"
" come up with during testing amount to even numbers when you get to the "
"aforementioned block of code. If this were the case, you’d have a big risk "
"of unanticipated code breakage to the way that you handle odd numbers.  This"
" is something that you’d ideally cover in your test suite."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:45
msgid "Discovering the untested sections of your code"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:47
msgid ""
"You’ve learned how to run your test suite in this tutorial.  Zope’s test "
"runner accepts an optional parameter called –coverage.  When passed a path "
"to a directory, Zope will generate some high-level output and produce a "
"coverage file for each of the Python modules in your product or package."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:53
msgid ""
"In full, running your test suite with the coverage option enabled looks "
"like:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:60
msgid ""
"**Note**: Running your tests with the coverage option enabled takes "
"significantly longer (as in ~10 times or more) than without, so this is "
"something to be done occasionally to gauge your work, rather than each time "
"you run your tests."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:65
msgid ""
"At the end of running your test suite, you’ll get some immediate output like"
" the following, which includes lines of code and your coverage percentage:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:83
msgid ""
"If all you’re looking for is a quick status report, this should suffice."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:86
msgid ""
"However, if you want to dig deeper, head to the directory you listed in the "
"–coverage option.  **Note:** The files may be preceded with dots, thus "
"requiring an ls -a in order to reach the coverage files."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:90
msgid "A sample file may look like the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:110
msgid ""
"It's really just your file with some meaningful data proceeding each line.  "
"Anything with a 1: signifies that your code was at least touched during the "
"running of the test suite.  The higher the number, the more often your code "
"was touched.  Perhaps this is intentional and signifies really good coverage"
" in other cases, it's may be either unavoidable or could even signify that "
"the high level of coverage wouldn't actually be required.  The >>>>>> means "
"that you've missed a line and you should consider coming up with a test "
"scenario or more that will touch the line of code in question.  The number "
"of untested lines divided by total lines gives you your coverage percentage."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:122
msgid "If what you really want is eye-candy"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:124
msgid ""
"If you want pretty graphs to provide for you boss to include in a report or "
"to make a client feel better about the quality of code they are receiving, "
"z3c.coverage takes the contents of the output files and creates pretty "
"summaries.  Get z3c.coverage from subversion via the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:133
msgid ""
"Create a directory within your previously created coverage directory.  We "
"call it reports.  Run the coveragereport.py module with the source being you"
" coverage output and the destination, your newly created reports directory."
"  See the following:"
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:142
msgid ""
"You should now be able to open $HOME/coverage/reports/all.html within your "
"browser for a pretty output like the one below."
msgstr ""

#: ../../reference_manuals/old/testing/code_coverage.rst:149
msgid ""
"With this information available, you can start to make conclusions about how"
" you may work your way towards better coverage of your product."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:2
msgid "Testing a Zope 3 component with a separate doctest file"
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:6
msgid ""
"Sometimes, we may need to perform additional set-up for our tests to run "
"properly."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:8
msgid ""
"In the previous example, we wrote a doctest in a docstring. As tests become "
"more complex or require more involved configuration, it is usually better to"
" separate the actual test into a text file. Sometimes, this can be the "
"README.txt file of a package. This is the approach favoured by Zope 3 "
"components."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:14
msgid ""
"In this example, we will register an adapter that is used in a doctest. This"
" doctest also serves to illustrate how this particular adapter should be "
"used.  This style of test is great when the emphasis is on the documentation"
" as well as the test. Note that we do not load the package’s ZCML in its "
"entirely. Instead, we register the required components explicitly. This "
"means that we retain control over what is executed in the test. We use the "
"zope.component.testing.tearDown method to ensure that our test environment "
"is properly cleaned up."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:23
msgid ""
"In the example.tests package, we have the following test setup in "
"tests/test\\_zope3\\_doctest.py:"
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:67
msgid ""
"Notice how we use a custom setUp() method to register the custom adapter, "
"and then reference zope.component.testing.tearDown for the tear-down method."
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:71
msgid "This refers to the file zope3.txt, which looks like this:"
msgstr ""

#: ../../reference_manuals/old/testing/doctest_zope3.rst:104
msgid "To run just this test, we may do:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:2
msgid "Telling stories with doctests"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:6
msgid ""
"Doctests bring code and test closer together, and makes it easier to "
"describe what a test does, and why."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:8
msgid ""
"By their nature, tests should exercise an API and demonstrate how it is "
"used. Thus, for other developers trying to understand how a module or "
"library should be used, tests can be the best form of documentation. Python "
"supports the notion of **doctests**, otherwise known as **executable "
"documentation**."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:14
msgid ""
"Doctests look like Python interpreter sessions. They contain plain text "
"(normally in reStructedText, which can be rendered to HTML or PDF easily) as"
" well as **examples**. The idea is to show something that could have been "
"typed in an interpreter session and what the expected outcome should be. In "
"the Zope 3 world, doctests are extremely prevalent and are used for most "
"unit and integration testing."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:21
msgid ""
"Doctests come in two main flavours: You can write a simple text file, such "
"as a README.txt, that explains your code along with verifiable examples, or "
"you can add doctests for a given method or class into the docstring of that "
"method or class."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:26
msgid ""
"The full-file approach - sometimes known as **documentation-driven "
"development** - is the most common. This type of test is very well suited "
"for explaining how an API should be used and ensuring that it works as "
"expected at the same time. However, note that these are not technically "
"proper unit tests, because there is no guarantee of isolation between the "
"steps of the “script” that the doctest describes. The docstring version uses"
" the same basic syntax, but each docstring is executed as its own test "
"fixture, guaranteeing full isolation between tests."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:36
msgid ""
"Here is a trivial example of a doctest. We will learn how to set up such a "
"test shortly."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:75
msgid ""
"Each time the doctest runner encounters a line starting with >>>, the prompt"
" of the Python interpreter (i.e. what you get by running python without any "
"arguments in a terminal), it will execute that line of code. If that "
"statement is then immediately followed by a line with the same level of "
"indentation as the >>> that is not a blank line and does not start with >>>,"
" this is taken to be the expected output of the statement. The test runner "
"will compare the output it got by executing the Python statement with the "
"output specified in the doctest, and flag up an error if they don’t match."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:85
msgid ""
"Note that *not* writing an output value is equivalent to stating that the "
"method has no output. Thus, this is a failure:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:94
msgid ""
"The reference to foo on its own will print the value of foo. The correct "
"DocTest would read:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:104
msgid ""
"Notice also the … (ellipsis) element in the expected otuput. These mean “any"
" number of characters” (anologus to a .\\* statement in a regular "
"expression, if you are familiar with those). They are usually convenient "
"shorthand, but they can sometimes be necessary. For example:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:116
msgid ""
"Here, the ... in the expected output replaces a hexadecimal memory address "
"(0x0x4523a0 on the author's computer at the time of writing), which cannot "
"be predicted in advance. When writing doctests in particular (but also when "
"writing regular unit tests), you need to be careful about values you cannot "
"predict, such as auto-generated ids based on the current time or a random "
"number. The ellipsis operator can help you work around those."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:122
msgid ""
"Do not confuse the ellipsis operator in the expected output with the syntax "
"of using ... underneath a >>> line. This is the standard Python interpreter "
"syntax used to designate statments that run over multiple lines, normally as"
" the result of indentation. You can, for example, write:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:132
msgid "if that is necessary in your test."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:135
msgid "Doctest tips and tricks"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:137
msgid ""
"As with all testing, you will get better at doctests over time. Below are a "
"few tips that may help you get started."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:141
msgid "Read the documentation"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:141
msgid ""
"doctests have been in Python for a long time. The `doctest module "
"<http://docs.python.org/2/library/doctest.html>`_ comes with more "
"documentation on how they work."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:153
msgid "A test is just a bunch of python statements!"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:144
msgid ""
"Never forget this. You can, for example, reference helper methods in your "
"own product, for example, imagine you have a method in "
"Products.MyProduct.tests.utils that has a method setUpSite() to pre-populate"
" your site with a few directories and users. Your doctest could contain:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:157
msgid "The test suite can perform additional initialisation"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:156
msgid ""
"A test suite can have setUp() and/or tearDown() handlers that perform "
"additional set-up or clean-up. We will see further examples of this later."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:162
msgid "PDB is still your friend"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:160
msgid ""
"You can put the standard import pdb; pdb.set\\_trace() on a line in doctest."
" Unfortunately, you can’t step through a doctest line by line, but you can "
"print variables and examine the state of the test fixture."
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:173
msgid "You can catch exceptions"
msgstr ""

#: ../../reference_manuals/old/testing/doctests.rst:165
msgid ""
"If you need to debug a doctest that is throwing an exception, this statement"
" is often useful:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:2
msgid "Integration doctests using PloneTestCase"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:6
msgid "The PloneTestCase integration test setup can also be used in doctests"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:8
msgid ""
"The choice of test case classes over doctest is purely one of syntactic "
"preference. We can use the test setup from the previous section (in base.py)"
" in a doctest as well. This type of test is more useful for documenting the "
"integration of your code with Zope/Plone in a narrative fashion."
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:14
msgid ""
"There is no change to tests/base.py for this type of setup. However, we must"
" be careful to use a test class that derives from FunctionalTestCase, since "
"this performs the initialisation necessary for doctests. The test setup is "
"found in tests/test\\_integration\\_doctest.py:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:58
msgid ""
"Here, we set ExampleFunctionalTestCase from base.py as the test\\_class, "
"which means that self in the doctest will be the same as self in the test "
"class we saw in the previous section. In particular, we can access variables"
" such as self.portal and self.folder. We also set some common doctest option"
" flags - reporting only the first failure (to avoid overly long error output"
" when an example early on in the doctest fails), normalising whitespace (so "
"that we can use newlines freely) and allowing the ellipsis operator "
"everywhere (as opposed to having to turn it on each time we want to use it)."
" Look at the doctest module documentation for more information."
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:69
msgid ""
"The test itself, in tests/integration.txt, is written much like the other "
"doctests we have seen:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:104
msgid "To run this test on its own, we would do:"
msgstr ""

#: ../../reference_manuals/old/testing/doctests_using_ptc.rst:113
msgid "Again, we have cut out some of the output from PloneTestCase."
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:3
msgid "PloneTestCase tests"
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:7
msgid ""
"This tutorial will explain how to write safer, better code that makes you "
"look more professional. That's right - it's time to write tests, for "
"everything you do. Don't worry, it's not boring or complicated, you just "
"need to learn how."
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:14
msgid "Technologies presented here are for Plone 3.x and older."
msgstr ""

#: ../../reference_manuals/old/testing/index.rst:16
msgid ""
"For `up-to-date testing best pratices read about plone.app.testing "
"<http://pypi.python.org/pypi/plone.app.testing>`_."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:6
msgid "What is this thing called testing anyway?"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:8
msgid "\"I know I should write tests, but …"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:10
msgid "… they take time to write"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:11
msgid "… I’m a good developer"
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:12
msgid "… my customer / the community does the testing\""
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:14
msgid ""
"Sound familiar? No matter how good you think you are, you will make "
"mistakes. Your code will contain bugs and someone will come after you "
"demanding an explanation. Without some methodical way of testing, you are "
"guaranteeing your code with nothing more than guesswork and arrogance. "
"Clicking around the Plone interface for a few minutes before you ship your "
"code off to the customer or user is simply not enough."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:21
msgid ""
"Testing is an art, it needs to be built into your development cycle from the"
" very beginning - it is not something you do only after all the other work "
"is finished, it is something you do continuously. Unfortunately, testing "
"often evokes emotions of dread in developers. It’s slow, it’s boring, it’s "
"not what they signed up to do. But the art of testing has evolved beyond "
"that - there is considerable elegance and fun to be found in well-conceived "
"test strategies."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:29
msgid ""
"This tutorial aims to give you the tools you need to write tests and "
"testable software in Plone. If you are writing software for Plone core "
"itself, don’t even think about committing any bug fix or feature without "
"test coverage. If you are writing an add-on product or doing a "
"customisation, holding yourself to the same high standards that the Plone "
"core team do will give you better confidence in your software and will "
"likely save you considerable pain down the road."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:40
msgid ""
"This tutorial contains several examples of the various types of tests. They "
"are available in the `example.tests "
"<http://dev.plone.org/collective/browser/examples/example.tests/trunk>`_ "
"package, which you can install as a develop egg in a Plone 3 buildout. The "
"examples of running tests use the standard commands for buildouts, since "
"this is the only way that works reliably on Windows (that is, plain zopectl "
"test will not work on Windows)."
msgstr ""

#: ../../reference_manuals/old/testing/introduction.rst:48
msgid ""
"Take a look at the :doc:`buildout docs "
"</reference_manuals/old/buildout/index>` for more information."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:2
msgid "Running tests"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:6
msgid ""
"It is not much good writing a test or relying on someone else's tests if you"
" don't know how to run them."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:9
msgid ""
"The easiest way to run tests in Zope is to use zopectl or the equivalent "
"control script."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:16
msgid ""
"This would run all tests in the Products.RichDocument module. If you are "
"using a `buildout <http://www.buildout.org/>`_ with an instance control "
"script called instance, this would be:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:24
msgid ""
"Using buildout is probably a good idea - see `the buildout tutorial "
"<http://www.buildout.org/docs/tutorial.html>`_ - not at least because this "
"is the only way that works reliably on Windows. We will use this syntax from"
" now on."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:28
msgid ""
"To execute a single test or a set of tests matched by regular expression, "
"you can use:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:35
msgid ""
"This would run tests in files like test\\_setup.py. To run all doctests in "
"README.txt (presuming there was a test suite for this file) you would write:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:43
msgid ""
"The new test runner also includes a few debugging options. For example:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:49
msgid ""
"This will stop execution at the first failing test and drop into a PDB post-"
"mortem."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:52
msgid "To see the other options that are available, run:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:58
msgid ""
"When the tests you think are relevant all pass, it’s time to run all tests "
"and make sure nothing else broke. (No, we don’t care that you are writing "
"your code in a totally different python module than what those other tests "
"are supposed to test, and that they were all fine and good and all you "
"changed was a docstring. Run the tests when you think you’re done.)"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:65
msgid "When tests finish running, you will see a report like:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:74
msgid ""
"(it may look slightly different, depending on which test runner you are "
"using)"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:77
msgid ""
"Rehearse a satisfied sigh as you read the line “OK”, as opposed to seeing a "
"count of failed tests. With time, this will be the little notifier that lets"
" you go to bed, see your friends again or generally get back to real life "
"with an svn commit."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:82
msgid "If you’re not so lucky, you may see:"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:90
msgid ""
"(again, the output may look slightly different depending on your test "
"runner, but the same information should always be there)"
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:93
msgid ""
"This means that there were 1 python error and 1 failed test during test "
"execution."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:96
msgid ""
"A python error means that some of your test code, or some code that was "
"called by a test, raised an exception. This is bad, and you should fix it "
"right away."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:100
msgid ""
"A failed test means that your test was trying to assert something that "
"turned out not to be true. This could be OK. It could mean you haven't "
"written the code the test is testing yet (well done, you wrote the test "
"first!), or that you don't yet know why it's failing. Sometimes you may be "
"radically refactoring or rewriting parts of your code, and the tests will "
"keep on failing until you're done. Incidentally, this is part of the reason "
"why unit tests are so good - you can do that kind of stuff."
msgstr ""

#: ../../reference_manuals/old/testing/running_tests.rst:108
msgid ""
"It's sometimes (not always - don't try this on Plone core unless you've been"
" told it's OK by the release manager) acceptable to go to bed and check in a"
" failing test if you are not in a position to know how to fix it. At least "
"other developers will be aware of the problem and may be able to fix it."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:2
msgid "Testing examples"
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:6
msgid ""
"Here, we list a few packages and projects that demonstrate good test "
"coverage"
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:8
msgid ""
"Testing is best learned by example. It can be very instructive to read "
"through the tests written by other developers and learn what they test, what"
" they don’t test and how they write their tests."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:12
msgid ""
"`example.tests "
"<http://dev.plone.org/collective/browser/examples/example.tests/trunk>`_, "
"which we have already mentioned, contains an example of each of the "
"different types of tests covered in this tutorial. The test setup code is "
"well-commented, with the intention that this package should provide good "
"boilerplate for developers setting up a new project."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:18
msgid ""
"`Plone itself "
"<http://dev.plone.org/plone/browser/Plone/trunk/Products/CMFPlone/tests>`_ "
"has more than 1,600 tests at the time of writing. Most of these are "
"integration tests using unit-test syntax with PloneTestCase."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:22
msgid ""
"`RichDocument "
"<http://dev.plone.org/collective/browser/RichDocument/trunk/tests/testSetup.py>`_"
" has a basic test\\_setup.py integration test. This is a good example of the"
" kind of testing you may want to do to ensure that your package installs "
"cleanly."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:26
msgid ""
"`borg.project "
"<http://dev.plone.org/collective/browser/borg/components/borg.project/trunk>`_"
" contains a `README.txt "
"<http://dev.plone.org/collective/browser/borg/components/borg.project/trunk/borg/project/README.txt>`_"
" file with an integration doctest demonstrating how it is used. It has only "
"a single test module, `tests.py "
"<http://dev.plone.org/collective/browser/borg/components/borg.project/trunk/borg/project/tests.py>`_,"
" which performs the same setup as base.py and "
"test\\_integration\\_doctest.py from example.tests."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:32
msgid ""
"Many of the tests in the `plone.app.controlpanel "
"<http://dev.plone.org/plone/browser/plone.app.controlpanel/trunk/plone/app/controlpanel/tests>`_"
" package use basic test-browser functional tests to verify that the Plone "
"control panels work as expected."
msgstr ""

#: ../../reference_manuals/old/testing/testing_examples.rst:37
msgid ""
"Feel free edit or comment on this page if you have more examples to add!"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:2
msgid "Functional and system tests with zope.testbrowser"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:6
msgid ""
"Whilst unit tests and doctests verify the correctness of individual methods "
"and modules, functional tests test portions of the application as a whole, "
"often from the point of view of the user, and typically aligned with use "
"cases. System tests, in comparison, test the entire application as a black "
"box."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:11
msgid ""
"No developer likes to click around the browser to check if that button that "
"was only supposed to show up in some cases really did show up. "
"Unfortunately, these are also the types of problems that most often suffer "
"from regressions, because templates are difficult (and slow) to test."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:17
msgid ""
"Zope 3 has an elegant library called zope.testbrowser which lets you write "
"doctests that behave like a real web browser (almost… it cannot yet handle "
"JavaScript, which means that testing dynamic UIs that depend on JavaScript "
"is not possible, although `Selenium <http://seleniumhq.org/>`_ may be a "
"viable alternative here). You can open URLs, click links, fill in form "
"fields and test the HTTP headers, URLs and page contents that are returned "
"from Plone. In fact, you could test any website, not just Zope or Plone "
"ones."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:25
msgid ""
"Functional tests are no replacement for unit tests. They test a slice of "
"functionality, typically as the user sees it. Thus, they may not "
"systematically include every aspect of the application. For example, a "
"functional test may check whether a “Delete” button is present, and even "
"that it works as expected, but should not be used to exhaustively test "
"whether the delete operation works in every possible edge case. Where they "
"excel, however, is in testing things like which options appear to which "
"users depending on roles and permissions, or simply to exercise all the "
"various templates used in a given product to make sure they don’t break."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:36
msgid ""
"Here is an example from the example.tests package. The test setup is in "
"tests/test\\_functional\\_doctest.py:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:82
msgid ""
"This code is actually identical to the test setup for the integration "
"doctest in the previous section. The differences are found in the actual "
"test itself, which uses Products.Five.testbrowser.Browser, a Zope 2 "
"compatibility wrapper around zope.testbrowser.Browser:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:146
msgid ""
"All the action happens with the browser object. This simulates a web browser"
" (though as stated above, one that does not support JavaScript), and has a "
"pleasant API for finding form controls and links and clicking on them. The "
"variables browser.url and browser.contents represent what would've been in "
"the URL bar and the rendered view of the page, respectively, and can be "
"examined like any other variable."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:152
msgid ""
"zope.testbrowser has pretty comprehensive documentation in its README.txt "
"file - which is, of course, a runnable doctest. In brief, the most important"
" methods of the IBrowser interface (and thus the Browser class) are:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:156
msgid "open(url)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:157
msgid "Open a given URL."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:158
msgid "reload()"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:159
msgid ""
"Reload the current page, much as the Refresh button in your browser would "
"do."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:160
msgid "goBack(count=1)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:161
msgid "Simulate pressing the Back button count times."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:162
msgid "getLink(text=None, url=None, id=None)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:163
msgid ""
"Get an ILink (which you can then call click() on), either by the text inside"
" the <a> tags, by the URL in the href attribute, or the id of the link."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:165
msgid "getControl(label=None, name=None, index=None)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:165
msgid ""
"Get an IControl, representing a form control, by label (either the value of "
"a submit button or the contents of an associated <label> tag) or form name. "
"The index argument is used to disambiguate if there is more than one control"
" (e.g. index=0 gets the first one). Again, you can call click() on the "
"control object to simulate clicking on it."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:167
msgid ""
"The IBrowser interface also provides some properties that can be used to "
"examine the state of the current page. The most important ones are:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:171
msgid "The full URL to the current page."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:172
msgid "contents"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:173
msgid ""
"The full contents of the current page, as a string (usually containing HTML "
"tags)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:175
msgid "headers"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:175
msgid "A dict of HTTP headers"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:177
msgid ""
"Please refer to the `interfaces`_ and the `README file`_ for details on the "
"other methods and attributes, the interfaces for various types of links and "
"controls, and further examples."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:186
msgid "Debugging functional tests"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:188
msgid ""
"Sometimes you will get errors from Zope resulting from some command executed"
" using the testbrowser. In this case, it can sometimes be difficult to know "
"what the underlying cause is. Two debugging aids exist to make this a bit "
"easier."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:192
msgid "First of all, make sure you see all errors in full by setting:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:198
msgid ""
"If handleErrors is True (the default) you will get errors like HTTPError: "
"HTTP Error 404: Not Found or HTTPError: HTTP Error 500: Internal Server "
"Error. Those are probably not very useful to you. Setting handleErrors to "
"False will show the full exceptions Zope (or possibly the HTML rendering of "
"the error page, depending on the type of error)."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:204
msgid ""
"Secondly, if you are using PloneTestCase, you can use Plone's error log. At "
"the top of the example, we do:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:210
msgid ""
"This means that errors such as NotFound and Unauthorized will be shown in "
"the error log. It may also be useful to enable Verbose Security in zope.conf"
" (see the comments in that file for details). Now, when a line appears that "
"is throwing an error you can't debug, you can do:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:224
msgid ""
"This will print the most recent entry in the error log, and set a PDB break "
"point."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:227
msgid "Using a real browser to render the results of your tests"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:229
msgid ""
"Sometimes you would like to see the output of browser.contents in a browser "
"to easily debug what's happening in your functional tests. To do so, place a"
" PDB break point in your tests as described above (import pdb; "
"pdb.set_trace()) and type the following when you get to the PDB prompt while"
" running the tests:"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:236
#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:241
msgid "::"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:238
msgid "This will print a tuple like"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:241
msgid "('127.0.0.1', 55143)"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:243
msgid ""
"containing an IP address and port where you can access the same test site "
"that the testbrowser is working with, in a real browser."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:247
msgid "Functional tests vs. system tests"
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:249
msgid ""
"A system test is one which treats the entire system as a black box, "
"interacting with it as a user would. A functional test is more focused on a "
"single \"vertical\" of functionality, typically linked to a particular use "
"case."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:253
msgid ""
"For a functional test, it may be acceptable to examine the internal state of"
" the portal (using self.portal and the PloneTestCase.FunctionalTestCase "
"class to build a test suite) to provide assertions. A system test, by "
"contrast, makes no such assumptions. Ideally, you should be able to point a "
"zope.testbrowser test at a remote site running a fresh installation of your "
"system, and have the tests pass."
msgstr ""

#: ../../reference_manuals/old/testing/tests_with_zope_testbrowser.rst:259
msgid ""
"Beyond that, the tools used to write a system test are the same. It is only "
"the approach to testing that changes. Whether you need one, or the other, or"
" both, will depend on the level of rigour you need in your tests, and how "
"your system is constructed. In general, though, true system tests are more "
"rare than functional (integration) tests and unit tests."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:2
msgid "Types of tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:6
msgid "Some terminology you should be familiar with"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:8
msgid "Broadly speaking, there are four main types of tests:"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:14
msgid "Unit tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:11
msgid ""
"These are written from the programmer’s perspective. A unit test should test"
" a single method or function in isolation, to ensure that it behaves "
"correctly. For example, testing that a given calculation is performed "
"correctly given a variety of input is a good unit test for that one method."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:23
msgid "Integration tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:17
msgid ""
"Whereas unit tests try to remove or abstract away as many dependencies as "
"possible to ensure that they are truly only concerned with the method under "
"test, integration tests exercise the integration points between a method or "
"component and the other components it relies on. For example, testing that a"
" method performs some calculation and then correctly stores the result in "
"the ZODB is an integration test in that it tests the integration between "
"that component and the ZODB."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:29
msgid "Functional tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:26
msgid ""
"A functional test is typically demonstrating a use case, exercising a "
"“vertical” of functionality. For example, testing that filling in a form and"
" clicking “Save” then makes the resulting object available for future use, "
"is a functional test for the use case of using that form to create content "
"objects."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:36
msgid "System tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:32
msgid ""
"These are written from the user’s perspective, and treat the system as a "
"black box. A system test may be simulating a user interacting with the "
"system according to expected usage patterns. By their nature, they are "
"typically less systematic than the other types of tests."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:38
msgid ""
"Furthermore, functional tests may be **white box**, in which case they can "
"make assertions about things like the underlying data storage (but only if "
"this is specified clearly; implementation details should never affect "
"functional tests). Such tests are also called **functional integration "
"tests** (you can see where the lines start to blur, but don’t worry too much"
" about the naming). Alternatively, functional tests can be **black box** in "
"which case they only perceive the system from the point of view of an actor "
"(usually the end user) and make assertions only on what is presented in the "
"(user) interface to that actor. Such tests, also known as **acceptance "
"tests** would not make assumptions about the underlying architecture at all."
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:51
msgid "Tests and documentation"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:53
msgid ""
"In a post to the Zope 3 mailing list, Jim Fulton explains the importance of "
"tests and documentation, and how they go hand-in-hand:"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:56
msgid ""
"One of the important things about this is that most doctests should be "
"written as documentation.  When you write new software components and you "
"need to write tests for the main functionality of your software you need to:"
" - Get your head into the mode of writing documentation. This is very very "
"very important. - You need to document how to use the software.  Include  "
"examples, which are tests"
msgstr ""

#: ../../reference_manuals/old/testing/types_of_tests.rst:63
msgid ""
"We will learn more about doctests, and how they are used for unit testing "
"and functional testing later. The important thing to note is that good tests"
" often serve as documentation describing how your component is supposed to "
"be used. Thinking about the story they tell is just as important as thinking"
" about the number of input and output states they cover."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:2
msgid "Writing unit tests"
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:6
msgid ""
"Now that you understand the principle of tests and how to run them, it's "
"time to write some. We will start with simple unit tests using doctest "
"syntax."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:9
msgid ""
"We will start by showing how to create a simple unit test with doctest "
"syntax. There is nothing Zope- or Plone-specific about this test. This type "
"of test is ideal for methods and classes that perform some kind of well-"
"defined operation on primitives or simple objects. The doctest syntax is "
"well-suited for explaining the inputs and outputs. Since the tests are "
"relatively few and/or descriptive, keeping the tests, documentation and code"
" close together makes sense."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:17
msgid ""
"Tests are usually found in a tests/ sub-package. In the example.tests "
"package, we have created a file called tests/test\\_simple\\_doctest.py. "
"This sets up a test suite to run doctests in the doc strings in the module "
"example.tests.context. Let’s look at the test setup first:"
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:67
msgid ""
"There are a lot of comments here, and we show how to use setUp() and "
"tearDown() methods for additional initialisation and clean-up, if necessary."
" The test runner will call the test\\_suite() method and expect a TestSuite "
"object back. If desired, we could have put multiple test suites referring to"
" multiple modules into the TestSuite that is being returned."
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:74
msgid "Here is the actual code under test, in context.py:"
msgstr ""

#: ../../reference_manuals/old/testing/unit_tests.rst:110
msgid "Here is how we may run the tests from a buildout:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:2
msgid "Writing a PloneTestCase unit/integration test"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:6
msgid ""
"Sometimes, we need access to a full-blown Plone instance in order to "
"effectively write tests"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:8
msgid ""
"PloneTestCase, which in turn uses ZopeTestCase, is used to set up a full "
"Zope environment, including a Plone instance, for testing. This type of test"
" is very convenient and often necessary because content types, tools and "
"other parts of Plone have hard dependencies on various underlying Zope, CMF "
"and Plone components. It is generally better to write simpler tests, "
"however, both because they provide better isolation (thus testing the "
"component more directly and under better controlled circumstances) and "
"because they execute faster."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:17
msgid ""
"PloneTestCase-tests are often referred to as “unit tests”, but in truth they"
" are *integration* tests, since they depend on a “live” Zope instance and "
"thus test the integration between your code and the underlying framework. We"
" can use the PloneTestCase setup to run doctests, as we will see in the next"
" section."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:23
msgid ""
"Here, however, we will demonstrate how to use unittest.TestCase classes, "
"where each test is a method on a class (with a name beginning with test) "
"This type of test is not as good for documentation, but can be very useful "
"for systematically executing many variations on the same test. Some "
"developers also find this type of test easier to debug, since it is plain "
"Python code which can be stepped through using the debugger."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:30
msgid ""
"In the example.tests package, we have tests/base.py. This does not contain "
"any tests, but performs the necessary configuration to set up the test "
"fixture:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:115
msgid ""
"Notice how we can explicitly install third party products (and egg-based "
"packages which use product semantics) and then tell PloneTestCase to quick-"
"install these into the test fixture site. The test runner will not "
"automatically load all products in the Products.* namespace, nor will it "
"execute ZCML for packages outside Products.* automatically."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:117
msgid ""
"The test class which uses this environment is found in "
"tests/test_integration_unit.py:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:192
msgid ""
"Here, we have a test suite with one test class - we could have added more "
"classes if necessary. The afterSetUp() and beforeTearDown() methods - if "
"present - are called immediately before and after each test. After a test is"
" run, the transaction is rolled back, causing tests to run in isolation. You"
" only really need explicit teardown if your tests make permantent changes "
"that are not covered by the ZODB transaction machinery."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:198
msgid ""
"You are free to add whatever helper methods you wish to your unit test "
"class, but any method with a name starting with test will be executed as a "
"test. Tests are usually written to be as concise (not to be confused with "
"\"obfuscated\") as possible."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:202
msgid ""
"Notice the calls to methods like self.assertEqual() or self.assertTrue(). "
"These are the assertion methods that do the actual testing. If any of these "
"fail, that test is counted as a failure and you'll get an ugly F in your "
"test output."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:206
msgid "To run the test, we would do:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:215
msgid ""
"There is actually more output than this, as PloneTestCase installs a number "
"of products and processes ZCML."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:218
msgid "Rules of thumb"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:220
msgid ""
"There are some basic rules of thumb for writing unit tests with "
"PloneTestCase you should be aware of:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:223
msgid ""
"Write test first, don't put it off, and don't be lazy (did we say this "
"enough already?)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:224
msgid "Write one test (i.e. one method) for each thing you want to test"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:225
msgid "Keep related tests together (i.e. in the same test case class)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:226
msgid ""
"Be pragmatic. If you want to test every combination of inputs and outputs "
"you will probably go blue in the face, and the additional tests are unlikely"
" to be of much value. Similarly, if a method is complicated, don't just test"
" the basic case. This comes with experience, but in general, you should test"
" common cases, edge cases and preferably cases in which the method or "
"component is expected to fail (i.e. test that it fails as expected - you "
"still shouldn't get any F's in your test output!)."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:232
msgid ""
"Keep tests simple. Don't try to be clever, don't over-generalise. When a "
"test fails, you need to easily determine whether it is because the test "
"itself is wrong, or the thing it is testing has a bug."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:237
msgid "Assertion and utility methods in the unit testing framework"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:239
msgid ""
"There are quite a few assertion methods, most of which do basically the same"
" thing - check if something is True or False. Having a variety of names "
"allows you to make your tests read the way you want. The list of assertion "
"methods can be found in the Python documentation for unittest.TestCase. The "
"most common ones are:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:244
msgid "assertTrue(expr)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:245
msgid "Ensure expr is true"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:246
msgid "assertEqual(expr1, expr2)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:247
msgid "Ensure expr1 is equal to expr2"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:256
msgid "assertRaises(exception, callable, …)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:249
msgid ""
"Make sure exception is raised by the callable. Note that callable here "
"should be the name of a method or callable object, not an actual call, so "
"you write e.g. self.assertRaises(AttributeError, myObject.myMethod, "
"someParameter). Note lack of () after myMethod. If you included it, you’d "
"get the exception raised in your test method, which is probably not what you"
" want. Instead, the statement above will cause the unit testing framework to"
" call myMethod(someParameter) (you can pass along any parameters you want "
"after the calalble) and check for an AttributeError."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:261
msgid "fail()"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:259
msgid ""
"Simply fail. This is useful if a test has not yet been completed, or in an "
"if statement inside a test where you know the test has failed."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:263
msgid ""
"In addition to the unit testing framework assertion methods, ZopeTestCase "
"and PloneTestCase include some helper methods and variables to help you "
"interact with Zope. It's instructive to read the source code for these two "
"products, but briefly, the key variables you can use in unit tests are:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:266
msgid "self.portal"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:266
msgid "The Plone portal the test is executing in"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:269
msgid "self.folder"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:269
msgid "The member folder of the member you are executing as"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:271
msgid "And the key methods are:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:273
msgid "self.logout()"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:274
msgid "Log out, i.e. become anonymous"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:275
msgid "self.login()"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:276
msgid "Log in again. Pass a username to log in as a different user."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:277
msgid "self.setRoles(roles)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:278
msgid ""
"Pass in a list of roles you want to have. For example, "
"self.setRoles(('Manager',)) lets you be manager for a while. How nice."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:279
msgid "self.setPermissions(permissions)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:280
msgid ""
"Similarly, grant a number of permissions to the current user in self.folder."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:282
msgid "self.setGroups(groups)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:282
msgid "Set which groups the test user is in."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:285
msgid "Tips & Tricks"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:287
msgid ""
"Good unit testing comes with experience. It's always useful to read the unit"
" tests of code with which you are fairly familiar, to see how other people "
"unit test. We'll cover a few hints here to get you thinking about how you "
"approach your own tests:"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:289
msgid ""
"Don’t be timid! Python, being a dynamic scripting language, lets you do all "
"kinds of crazy things. You can rip a function right out from the Plone core "
"and replace it with your own implementation in afterSetUp() or a test if "
"that serves your testing purposes."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:293
msgid ""
"Similarly, replacing things like the MailHost with dummy implementations may"
" be the only way to test certain features. Look at CMFPlone/tests/dummy.py "
"for some examples of dummy objects."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:296
msgid ""
"Use tests to try things out. They are a safe environment. If you need to try"
" something a bit out of the ordinary, writing them in a test is often the "
"easiest way of seeing how something works."
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:299
msgid ""
"During debugging, you can insert print statements in tests to get traces in "
"your terminal when you execute the tests. Don’t check in code with printing "
"tests, though. :)"
msgstr ""

#: ../../reference_manuals/old/testing/writing_ptc_test.rst:302
msgid ""
"Similarly, the python debugger is very valuable inside tests. Putting import"
" pdb; pdb.set\\_trace() inside your test methods lets you step through "
"testing code and step into the code it calls. If you’re not familiar with "
"the python debugger, your life is incomplete."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:2
msgid "Using zope.testrecorder to record functional tests"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:6
msgid ""
"The zope.testrecorder product brings us full-circle: functional tests are "
"recorded from within the browser, and saved to a runnable test."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:10
msgid ""
"Functional tests using zope.testbrowser save us from clicking around the "
"browser to regression test UI, but writing them could still be easier. With "
"complex templates, it can sometimes be difficult to find out what actual "
"links and form fields the testbrowser test should be looking for, and what "
"text to use in assertions."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:16
msgid ""
"This is where zope.testrecorder comes in. The theory is that you click "
"around the UI only once, and then render the history of what you did to a "
"runnable testbrowser test. zope.testrecorder can even create `Selenium "
"<http://seleniumhq.org/>`_ tests - an alternative form of functional tests "
"which runs in the browser (i.e. it automates your browser right before your "
"eyes) and thus supports JavaScript, but which cannot be run as part of an "
"automated test run without a browser."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:24
msgid ""
"Installing zope.testrecorder is simple. First, check it out from Zope’s "
"subversion repository:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:33
msgid ""
"See INSTALL.txt for further instructions, but the easiest way to install it "
"in a Zope 2 instance is just to put it in your Products directory: Copy "
"zope.testrecorder/src/zope/testrecorder as a product into "
"Products/testrecorder and restart Zope. Then, go to the ZMI and add a Test "
"Recorder object in the root of your Zope instance. Call it e.g. test-"
"recorder."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:40
msgid ""
"Presuming you run Zope on localhost:8080, you should now be able to go to "
"http://localhost:8080/test-recorder/index.html. You should see a page "
"something like this:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:48
msgid ""
"**NOTE:** Like most things, zope.testrecorder seems to work better in "
"Firefox than in other browsers."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:51
msgid ""
"Now, enter the address of your Plone site (or indeed any web site), e.g. "
"http://localhost:8080/Plone and click Go. You can perform any number of "
"operations, e.g. logging in and clicking around the UI. If you wish to add a"
" comment to your test run, as you would add free text inside a doctest, "
"click the Add comment button. If you wish to verify that some text appears "
"on the page, highlight that text, shift-click on it, and select “Check text "
"appears on page”:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:63
msgid "Screenshot of text verification"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:65
msgid ""
"When you are done, click Stop recording. You can then choose to render the "
"test as a Python doctest and you will get something like:"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:81
msgid ""
"You can then paste this into a doctest file, and perform any post-processing"
" or make any changes that may be necessary to make the test more generally "
"valid."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:86
msgid "Tips for using zope.testrecorder"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:91
msgid "Plan, plan, plan"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:89
msgid ""
"It's best if you have a rough script in front of you before you start "
"recording tests, or you may get lost afterwards. Make good use of the Add "
"comment button to state what you are testing before you test it, so that the"
" final doctest will make sense."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:96
msgid "Careful where you click"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:94
msgid ""
"Some parts of the Plone UI are more ephemeral than others. It may not be a "
"good idea to rely on links in the Recent portlet, for example. Think about "
"what operations will provide the most general and valid test. It will save "
"you time in the long run."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:103
msgid "Set up your site beforehand"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:99
msgid ""
"Recall from the section on zope.testbrowser that we set up users and basic "
"site structure with calls to the Python APIs instead of using testbrowser to"
" manipulate the \"site setup\" screents. When using zope.testrecorder you "
"may want to set up the same users with the same user names and passwords, "
"and the same site structure before you start recording to test. Otherwise, "
"you may need to change some of the values of the test."
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:111
msgid "Check the doctest"
msgstr ""

#: ../../reference_manuals/old/testing/zope_testrecorder.rst:106
msgid ""
"zope.testrecorder is a time-saving tool. Sometimes, it may end up referring "
"to parts of the page that can't be guaranteed to be consistent (such as "
"randomly generated ids of content objects), and sometimes you may have gone "
"on a detour and ended up with a test that contains irrelevant or duplicate "
"sections. Always fix up your test (and run it!) afterwards, to make sure "
"that the test remains valid for the future - otherwise, you will end up "
"clicking around the UI in anger again before you know it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:3
msgid "The ExtensionClass"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:7
msgid "What is ``ExtensionClass.Base`` used for?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:12
msgid "What is an ``ExtensionClass``?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:14
msgid ""
"Before Python 2.2 and \"new-style\" classes, the "
"``ExtensionClass.ExtensionClass`` metaclass provided features now found in "
"Python itself. Nowadays, it mainly provides three features:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:18
msgid ""
"Support for a class initialiser. Classes deriving from "
"``ExtensionClass.Base`` can define a method ``__class_init__(self)``, which "
"is called when the class is initialised (usually at module import time). "
"Note that ``self`` here is the class object, not an instance of the class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:22
msgid ""
"Ensuring that any class that has ``ExtensionClass`` as a ``__metaclass__`` "
"implicitly gets ``ExtensionClass.Base`` as a base class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:24
msgid ""
"Providing an ``inheritedAttribute`` method, which acts a lot like "
"``super()`` and is hence superfluous except for in legacy code."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:27
msgid ""
"The base class ``ExtensionClass.Base`` provides the ``__of__`` protocol that"
" is used by acquisition. It is similar to the ``__get__`` hook used in "
"Python descriptors, except that ``__of__`` is called when an implementor is "
"retrieved from an instance as well as from a class. Here is an example:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:62
msgid ""
"There is probably little reason to use ``ExtensionClass.Base`` in new code, "
"though when deriving from ``Acquisition.Implicit`` or "
"``Acquisition.Explicit``, it will be included as a base class of those "
"classes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:67
msgid "How does acquisition work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/extensionclass.rst:69
msgid "Black magic."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:3
msgid "Zope's many hooks"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:7
msgid "What hooks does Zope provide for application code?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:9
msgid ""
"Zope provides many different hooks that can be used to execute code at "
"various times during its lifecycle. The most important ones are outlined "
"below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:15
msgid "Process lifecycle"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:17
msgid "``zope.processlifetime`` defines three events:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:20
msgid "``IDatabaseOpened``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:20
msgid ""
"notified when the main ZODB has been opened, but before the root application"
" object is set."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:23
msgid "``IDatabaseOpenedWithRoot``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:23
msgid ""
"notified later in the startup cycle, when the application root has been set "
"and initalised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:27
msgid "``IProcessStarting``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:26
msgid ""
"notified when the Zope startup process has completed, but before the Zope "
"server runs (and so can listen to requests)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:30
msgid "ZODB connection lifecycle"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:32
msgid ""
"Functions that should be called just after traversal over the "
"``ZApplicationWrapper`` as it opens a ZODB connection for the request should"
" be added to the ``App.ZApplication.connection_open_hooks`` list. They are "
"called with a ZODB connection as their sole argument."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:37
msgid ""
"The ZODB transaction provides two methods to register hooks |---| "
"``addBeforeCommitHook()`` and ``addAfterCommitHook()``. These can be passed "
"functions and a (static) set of arguments and will be called just before, "
"and just after, a transaction is committed. The hook function must take at "
"least one argument, a boolean indicating whether the transaction succeeded."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:43
msgid ""
"Use ``transaction.get()`` to get hold of the transaction object. See "
"``transaction.interfaces.ITransaction`` for more details."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:47
msgid "Request lifecycle"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:49
msgid ""
"Request-scoped items may be protected from garbage collection using "
"``request._hold()``. If applicable, the item held can implement "
"``__del__()``, which will be called when the request is destroyed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:53
msgid ""
"The event ``zope.publisher.events.EndRequestEvent`` is triggered at the end "
"of an event, just before any held items are cleared."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:57
msgid "Publication"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:59
msgid ""
"The publisher notifies a number of events, which can be used to hook into "
"various stages of the publication process. These are all defined in the "
"module ``ZPublisher.pubevents``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:63
msgid ""
"When an exception is raised, a view registered for the exception type as "
"context (and a generic request) named ``index.html`` will be rendered as an "
"error message, if it exists."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:68
msgid "Traversal"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:70
msgid ""
"If an object has a method ``__bobo_traverse__(self, request, name)``, this "
"will be used during traversal in lieu of attribute or item access. It is "
"expected to return the next item to traverse to given the path segment "
"``name``. A more modern approach is to register an adapter to "
"``IPublishTraverse`` although this only applies to publication (URL) "
"traversal, not path traversal."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:76
msgid ""
"The method ``__before_publishing_traverse__(self, object, request)`` can be "
"implemented to be notified when traversal first finds an object. Implemented"
" on a class, the ``self`` and ``object`` parameters will be the same."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:80
msgid ""
"See also the ``SiteAccess`` package, which implements a through-the-web "
"manageable, generic multi-hook to let any callable be invoked before access "
"through an \"AccessRule\"."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:84
msgid ""
"The event ``zope.traversing.interfaces.IBeforeTraverseEvent`` is notified "
"when traversing over something that is a local component site, e.g. the "
"Plone site root."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:88
msgid ""
"The ``__browser_default__`` method can be implemented to specify a \"default"
" page\" (akin to an ``index.html`` in a folder). A more modern way to do "
"this is to register an adapter to ``IBrowserPublisher``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/hooks.rst:92
msgid ""
"An adapter to ``ITraversable`` can be used to implement namespace traversal "
"(``.../++<namespace>++name/...``). See above for further details."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:3
msgid "Zope 2 internals"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:5
msgid ""
"This documentation will attempt to explain some of Zope's internals. It may "
"be useful for debugging purposes, or simply to better understand how Zope "
"works."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:8
msgid "The guide pertains to Zope 2.13."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/index.rst:10
msgid ""
"If you only want to know how to *use* the APIs and features described below,"
" you are probably better served reading the `Zope Developer's Guide "
"<http://docs.zope.org/zope2/zdgbook/>`_."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:3
msgid "Requests and traversal"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:7
msgid ""
"How does Zope handle requests and translate paths to published objects?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:13
msgid "What happens when a request is received?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:15
msgid ""
"A request is received either via a WSGI pipeline or the Medusa web server. "
"Using Medusa, it first hits ``handle_request()`` in the ``zhttp_handler`` "
"used by ``zhttp_server``, which consumes the request until it has enough to "
"act on. At this point ``continue_request()`` is called. This constructs a "
"``ZPublisher.HTTPRequest`` from the Medusa ``http_request`` environment and "
"prepares a ``ZServerHTTPResponse``, a subclass of ``ZPublisher``'s "
"``HTTPResponse``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:23
msgid ""
"The actual request is delegated to a threadpool. In a non-WSGI setup, this "
"is managed by ``ZServer.PubCore.ZRendezvous.ZRendevous`` (note the typo in "
"the module name!). This keeps track of the requests and (skeletal) responses"
" to be processed, and passes them to an instance of a "
"``ZServer.PubCore.ZServerPublisher`` for handling. ``ZRendevous`` also deals"
" with thread locking."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:30
msgid ""
"The ``ZServerPublisher`` will call either ``ZPublisher.publish_module`` or "
"``ZPublisher.WSGIPublisher.publish_module``, depending on the deployment "
"mode, with the request and the response. The non-WSGI version also takes a "
"module name to publish, which is ``Zope2``. This is a relic of the Bobo "
"publisher, which could publish other modules with a ``bobo_application`` "
"variable set (recall that this variable was set in the startup phase "
"described above)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:37
msgid ""
"The remainder of this section will describe the non-WSGI publisher. The WSGI"
" publisher performs the same actions, but deals in WSGI environs and "
"response body iterators."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:41
msgid ""
"There are two versions of ``publish_module``, one with profiling and one "
"without. ``publish_module_standard`` (without profiling) performs the "
"following actions:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:45
msgid ""
"Set the default ZTK skin on the request, by adapting the request to "
"``IDefaultSkin``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:47
msgid "Call ``publish()``, which does the real publication."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:48
msgid "Handle errors."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:49
msgid ""
"Write the response body to ``stdout``, which is wired up to be the HTTP "
"response stream."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:54
msgid ""
"The more interesting function is ``publish()``. This starts by calling "
"``get_module_info()`` to get the information about the published module "
"(which, recall, is almost always going to be ``Zope2``). The results are "
"cached, so this will only do its work once:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:70
msgid "The returned variables are:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:72
msgid ""
"``bobo_before``, set via a module level variable ``__bobo_before__``. This "
"is a callable that will be invoked immediately before publication."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:74
msgid ""
"``bobo_after``, set via a module level variable ``__bobo_after__``. This is "
"a callable that will be invoked immediately after publication."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:76
msgid ""
"``object`` to publish, which defaults to the module itself, but can be set "
"via the module-level variable ``bobo_application`` (or ``web_objects``)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:78
msgid ""
"``realm``, set via the module level variable ``__bobo_realm__``, or a global"
" default which can be set the ``ZConfig`` configuration file."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:80
msgid ""
"``debug_mode``, a boolean set using the module level variable "
"``__bobo_debug_mode__``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:82
msgid ""
"``err_hook``, set via the module level variable "
"``zpublisher_exception_hook``. This is used to handle error responses (more "
"below)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:84
msgid ""
"``validated_hook``, set via the module level variable "
"``zpublisher_validated_hook``. This is used to initialise a security manager"
" once authentication and authorisation have taken place (more below)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:87
msgid ""
"``transactions_manager``, set via the module level variable "
"``zpublisher_transactions_manager``, but defaulting to the "
"``DefaultTransactionsManager`` which uses the ``transaction`` API to manage "
"transactions."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:92
msgid "The publisher then performs the following steps:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:94
msgid "Notify the ``ZPublisher.pubevents.PubStart`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:95
msgid "Create a new ``zope.security`` interaction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:96
msgid ""
"Call ``processInputs()`` on the request to process request parameters and "
"the request body so that the Zope request object works as advertised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:98
msgid ""
"If the request contains a key ``SUBMIT`` with the value ``cancel`` and a key"
" ``cancel_action`` with a path, a ``Redirect`` exception is raised, which "
"will cause an HTTP 302 redirect to be raised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:101
msgid ""
"Set ``debug_mode`` and ``realm`` on the response, as returned by "
"``get_module_info()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:103
msgid "If ``bobo_before()`` is set, it is called with no arguments."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:104
msgid ""
"Set the inital value for ``request['PARENTS']`` to be the published object. "
"This will be the ``ZApplicationWrapper`` set during the startup phase."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:107
msgid "Begin a transaction using the ``transactions_manager``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:108
msgid ""
"Traverse to the actual object being published (e.g. a view) by calling "
"``object=request.traverse(path, validated_hook=validated_hook)``, where "
"``path`` is ``request['PATH_INFO']``. More on traversal below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:111
msgid "Notify the ``ZPublisher.pubevents.PubAfterTraversal`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:112
msgid "Note the path and authenticated user in the transaction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:113
msgid "Call the object being pusblished using ``mapply()``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:123
msgid ""
"The ``ZPublisher.mapply.mapply()`` method is somewhat complicated, but in "
"essence all it does is to call either a published method, or a published "
"instance with a ``__call__()`` method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:127
msgid ""
"``request.args`` can contain positional arguments supplied in an XML-RPC "
"call, but is usually empty. The ``request`` is passed to act as a dictionary"
" of keyword arguments, which allows request parameters to be turned into "
"method parameters to a published method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:132
msgid ""
"The other parameters are about policy |---| we call any object (e.g. a "
"method or object with a ``__call__`` method) to resolve it, but we don't "
"publish class objects (which would in effect instantiate them). We do allow "
"binding of ``self`` for methods on objects, and we pass the ``request`` as "
"context for debugging."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:137
msgid ""
"Set the result of the ``mapply()`` call as the response body. As a marker, "
"the response object itself can be returned from the callable that "
"``mapply()`` invokes to bypass this behaviour, i.e. if the published object "
"set the response body itself."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:141
msgid "Notify the ``ZPublisher.pubevents.PubBeforeCommit`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:142
msgid "Commit the transaction using the ``transactions_manager``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:143
msgid "End the ``zope.security`` interaction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:144
msgid "Notify the ``ZPublisher.pubevents.PubSuccess`` event."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:145
msgid ""
"Return the response object, which is then used by the ZServer to write to "
"stdout."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:148
msgid ""
"If an exception happens during this process, the ``err_hook`` is called. "
"This is allowed to raise a ``Retry`` exception. Regardless, the event "
"``ZPublisher.pubevents.PubBeforeAbort`` is notified before the transaction "
"is aborted, and then ``ZPublisher.pubevents.PubFailure`` is raised after the"
" ``zope.security`` interaction is ended."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:154
msgid ""
"If the request supports retry, it will be retried by cloning it and calling "
"``publish`` recursively. All HTTP requests support retry, but only up to a "
"limit of ``retry_max_count``, which by default is 3. Retry is mainly used to"
" retry in the case of write-conflict errors."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:159
msgid ""
"If there is no error hook installed, a simple abort is encountered, with no "
"retry."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:162
msgid ""
"The default error hook is an instance of "
"``Zope2.startup.ZPublisherExceptionHook``. This handles exceptions by "
"performing the following checks:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:166
msgid "``SystemExit`` or ``Redirect`` exceptions are re-raised."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:167
msgid ""
"A ``ConflictError``, which indicates a write-conflict in the ZODB, is turned"
" into a ``Retry`` exception so that request can be retried."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:169
msgid ""
"Other exception are stored in the ``__error_log__`` acquired from the "
"published object, if possible."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:171
msgid ""
"If a view named ``index.html`` is registered with the exception type as its "
"context, this is resolved and returned as the response."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:173
msgid ""
"If the published object or any of its acquisition parents have a method "
"``raise_standardErrorMessage()``, this will be called to create an error "
"message instead of using the view approach. This is called with a first "
"argument of whichever object in the acquisition chain has an attribute "
"``standard_error_message``, as well as the request and traceback "
"information."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:179
msgid ""
"When handling an exception by returning an error message, the "
"``ZPublisherExceptionHook`` will call ``response.setStatus()`` with the "
"exception type (class) as an argument. The *name* of the exception class is "
"then used to look up the status code in the ``status_reasons`` dictionary in"
" ``ZPublisher.HTTPResponse``. Hence, raising an exception called "
"``NotFound`` will automatically set the response code to 404."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:187
msgid "How does publication traversal work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:189
msgid ""
"Traversal is the process during which the path elements of a URL are "
"resolved to an actual object to publish (there is also *path traversal*, "
"used in TAL expressions in page templates, which is similar, but implemented"
" differently |---| see below)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:194
msgid ""
"Traversal is invoked during object publication, which calls "
"``request.traverse()`` with the path from the request (the ``PATH_INFO`` CGI"
" variable). This method is inordinately complicated, mostly because it "
"caters for a lot of edge cases. The basic idea is pretty simple, though: "
"each path element represents an item to traverse to, from the preceding "
"object (its parent). Traversal can mean dictionary-like access "
"(``__getitem__``), attribute-like access (``__getattr__``), or one of a "
"number of different hooks for overiding or extending traversal. Once the "
"final element on the path is found, the user's access to it is validated, "
"before it is returned to be passed to ``mapply()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:204
msgid "Here are the gory details:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:206
msgid ""
"Clean up the path up by stripping leading and trailing slashes, explicitly "
"disallowing access to things like ``REQUEST``, ``aq_base`` and ``aq_self``, "
"and resolving ``.`` or ``..`` elements as in filesystem paths."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:209
msgid ""
"Check if the top-level object (the application root) has a "
"``__bobo_traverse__`` method (it almost certainly will |---| as shown above,"
" there is a wrapper around the application root that implements this method "
"to open and close the ZODB connection upon traversal). If so, call it to "
"obtain a new top level object (which will be the real Zope application root "
"in the ZODB)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:214
msgid ""
"Aquisition-wrap the top-level object in a ``RequestContainer``. This is the "
"fake root object that makes it possible to acquire the attribute ``REQUEST``"
" from any traversed-to context."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:217
msgid ""
"Record the request variable ``ACTUAL_URL``, which is the inbound URL plus "
"the original path. Hence, this variable provides access to the URL as the "
"user saw it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:220
msgid ""
"Set up (and later, pop from) the request variable "
"``TraversalRequestNameStack``. This is a stack of path elements still to be "
"processed. Traversal hooks sometimes use this to look ahead at the path "
"elements that have not been traversed to and, in some cases, modify the "
"stack to trick traversal into going somewhere other than what the inbound "
"path specified."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:226
msgid "In a loop, process the traversal name stack:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:228
msgid ""
"Check if the current object (initially the application root) has a method "
"``__before_publishing_traverse__``. If so, call it with the request as an "
"argument. This hook is used by many parts of Zope, CMF and Plone to support "
"things like content object method aliases, setting the CMF skin from the "
"request, or making the ``portal_factory`` tool work. This method cannot "
"easily change the traversal path, except by modifying "
"``request['TraversalRequestNameStack']``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:235
msgid "If there are more elements in the path, pop the next element."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:236
msgid ""
"Append this to the variable ``request['URL']``, which contains the traversal"
" URL. Various traversal tricks may mean this is not quite the same as what "
"the user sees in their address bar, but it should be a valid, traversable "
"URL."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:239
msgid ""
"Attempt to traverse to the next object using the name popped from the path "
"stack. This takes place in the ``traverseName()`` method of the request:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:242
msgid ""
"If the name starts with a ``+`` or an ``@``, parse it as a traversal "
"namespace. (A name starting with an ``@`` is taken as a shorthand for "
"``++view++<name>``, i.e. an entry in the ``++view++`` traversal namespace. "
"Other namespaces include ``++skin++`` and ``++etc++``.) If a traversal "
"namespace is found, attempt to look up an adapter from the current traversal"
" object and the request to ``zope.traversing.interfaces.ITraversable`` with "
"a name matching the traversal namespace (e.g. ``view``). Then call its "
"``traverse()`` method with the name of the next entry on the traversal stack"
" as an argument. This is expected to return an object to traverse to next. "
"If this succeeds, acquisition-wrap the returned object in the parent object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:254
msgid ""
"**Note**: As this implies, objects returned from the ``traverse()`` method "
"of an ``ITraversable`` adapter are *not* expected to be acquisition-wrapped."
" This is in contrast to objects returned by ``__bobo_traverse__()``, "
"``__getitem__()``, ``__getattr__()``, or a custom ``IPublishTraverse`` "
"adapter (see below), which *are* expected to be wrapped."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:261
msgid ""
"If there is no namespace traversal adapter, find an ``IPublishTraverse`` "
"object in one of three places:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:264
msgid "If the current traversal object implements it directly, use that;"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:265
msgid ""
"if there is an adapter from the current object and the request to "
"``IPublishTraverse``, use that; or,"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:267
msgid ""
"fall back to the ``DefaultPublishTraverse`` implementation found in "
"``ZPublisher.BaseRequest``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:270
msgid ""
"Then call the ``publishTraverse()`` method to find an object to traverse to "
"and return that (without acquisition-wrapping it)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:274
msgid ""
"Implementing ``IPublishTraverse`` is a common way to allow further traversal"
" from a view, with paths like ``.../@@foo/some/path``, where the ``@@foo`` "
"view either implements or is adaptable to ``IPublishTraverse``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:279
msgid ""
"``DefaultPublishTraverse`` is used in most cases, either directly or as a "
"fallback from custom implementations. It works like this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:282
msgid "If the name starts with an underscore, raise a ``Forbidden`` exception"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:283
msgid ""
"If the object has a ``__bobo_traverse__`` method, call it with the request "
"and the name of the next entry on the traversal stack as arguments. It may "
"return either an object, or a tuple of objects. In the latter case, amend "
"the request parents list as if traversal had happened over all the elements "
"in the tuple except the last one, and treat that as the next object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:289
msgid ""
"If the ``__bobo_traverse__`` call fails by raising an ``AttributeError``, "
"``KeyError`` or ``NotFound`` exception, attempt to look up a view with the "
"traversal name (which would have been given without the explicit ``@@`` "
"prefix). If this succeeds, set the status code to 200 (the preceding failure"
" may have set it to 404), acquisition-wrap the view if applicable, and "
"return it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:295
msgid ""
"If there was no ``__bobo_traverse__``, or if it raised the special exception"
" ``ZPublisher.interfaces.UseTraversalDefault``, try the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:299
msgid ""
"Attempt to look up the name as an attribute of the current object, using "
"``aq_base`` (i.e. explicitly not acquiring from parents of the current "
"object). If this succeeds, return the attribute, which is expected to be "
"acquisition-wrapped if applicable (i.e. the parent object extends "
"``Acquisition.Implicit`` or ``Acquisition.Explicit``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:305
msgid "Next, try to look up a view using the same semantics as above"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:306
msgid ""
"Next, try ``getattr()`` without the ``aq_base`` check, i.e. allowing "
"acquired attributes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:308
msgid "Next, try ``__getitem__()`` (dictionary-like) access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:309
msgid ""
"If that fails, raise a ``KeyError`` to indicate the object could not be "
"found (this is later turned into a 404 response)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:312
msgid ""
"If we now have a sub-object, check that it has a docstring. If it does not, "
"raise a ``Forbidden`` exception."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:315
msgid ""
"The requirement for a docstring is an ancient and primitive security "
"restriction, since Zope can be used to publish all kinds of Python objects. "
"It is mostly a nuisance these days, but note that views and custom "
"``ITraversable`` and ``IPublishTraverse`` traversal do not have this "
"restriction."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:320
msgid ""
"Next, raise a ``Forbidden`` exception if traversal resolved a primitive or "
"built-in list, tuple, set or dict |---| these are not directly traversable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:323
msgid "Finally, return the object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:324
msgid ""
"If a ``KeyError``, ``AttributeError`` or ``NotFound`` exception is raised "
"during name resolution, return a 404 response by raising an exception. "
"Similarly, if a ``Forbidden`` exception is raised, set and return a 403 "
"response."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:328
msgid ""
"Once the end of the path is reached, we have the most specific item "
"mentioned in the (possibly mutated) path. However, this may choose to "
"delegate to another object (usually a subobject) through a mechanism known "
"as \"browser default\", which is similar to the way web servers often serve "
"an ``index.html`` file by default when traversing to a folder."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:334
msgid ""
"A browser publisher is described by the interface ``IBrowserPublisher``, "
"which is a sub-interface of ``IPublishTraverse`` and is implemented by the "
"``DefaultPublishTraverse`` class. Again, the ``IBrowserPublisher`` for the "
"traversed-to object is found in one of three ways: * the object may "
"implement it itself; or * it may be adaptable, with the request, to this "
"interface; or * the fallback ``DefaultPublishTraverse`` may be used. The "
"``browserDefault()`` method on the ``IBrowserPublisher`` is then called with"
" the request as an argument."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:344
msgid ""
"The return value from ``browserDefault()`` is a tuple of a parent object "
"(usually the most recently traversed-to object, i.e. ``self.context`` in the"
" adapter) and a tuple of further names to traverse to from this parent."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:348
msgid "The default implementation in ``DefaultPublishTraverse`` does this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:350
msgid ""
"If the object has a method ``__browser_default__()``, delegate to this."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:351
msgid ""
"If an ``IDefaultViewName`` has been registered for the context in ZCML, look"
" up and use this. This is deprecated, however."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:353
msgid ""
"Otherwise, return ``self.context, ()``, i.e. no further traversal required."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:356
msgid ""
"If a further path is returned and it has more than one element, add its "
"elements to the ``TraversalRequestNameStack`` and continue traversal as if "
"these elements had been part of the original path all along."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:359
msgid ""
"If there is only one element in the further path returned by "
"``browserDefault()``, use this as the next entry name and continue traversal"
" to this."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:362
msgid ""
"If no further path is used, fall back on the default method name "
"``index_html()`` (applicable for HTTP ``GET`` and ``POST`` requests |---| "
"there is special handling of other HTTP verbs for WebDAV that we won't go "
"into here) and continue traversal to this."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:366
msgid ""
"If there is no ``index_html()`` method, use the traversed-to object itself "
"as the final entry, so break out of the traversal loop. We always end up "
"here eventually: if the browser default element or ``index_html()`` method "
"is the last item we traverse to, eventually we reach something publishable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:371
msgid ""
"This object will most likely be called (through ``mapply()``), so we ensure "
"the roles used in security checks are obtained from the ``__call__()`` "
"method of the traversed-to object (note: function and method objects also "
"have a ``__call__()`` in Python)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:375
msgid ""
"Once we have reached the end of the traversal stack (phew!), we make sure "
"the ``parents`` list is in the right order (it is built in reverse order), "
"even if there was a failure. Hence, ``request['PARENTS']`` is always a "
"useful indicator of what objects have been traversed over, with the last "
"item being the special request container and the penultimate item being the "
"application root."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:381
msgid ""
"We then set ``request['PUBLISHED']`` to be the published callable. Note that"
" this is usually a view or page template, though for content types like "
"``File`` or ``Image`` it is the ``index_html()`` method of the content "
"object itself."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:385
msgid ""
"Next, we validate that the current user has sufficient permissions to call "
"the published object. If not, a 403 response is returned by calling "
"``response.unauthorized()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:389
msgid "The authentication works as follows:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:391
msgid ""
"The roles required to access the traversed-to object are fetched by calling "
"``getRoles()``, first on the application root, and, if applicable, on the "
"``__call__()`` method of the traversed-to object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:394
msgid ""
"A user folder (i.e. ``acl_users``) is obtained by looking for the special "
"attribute ``__allow_groups__`` on the published object or one of its "
"parents. This attribute is set by user folders on their parent container "
"when they are added."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:398
msgid ""
"The ``validate()`` method of the user folder is called (there is a fallback "
"called ``old_validate()``, used if there is no user folder, but that should "
"never happen in a modern Zope installation). This either returns a user "
"object or ``None``, if the user is not found in this user folder, or there "
"is a user, but the user cannot be authorised by this user folder."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:403
msgid ""
"If ``None`` is returned, the search continues up the list of traversal "
"parents until a suitable user folder is found. If no such user folder is "
"found, an ``Unauthorized`` exception is raised, unless there are no security"
" declarations on the context."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:407
msgid ""
"If a user with permissions is found, and the ``validated_hook`` is set "
"(found via ``get_module_info()`` as described above), it is called with the "
"request and user as arguments. The standard ``validated_hook`` calls "
"``newSecurityManager()`` with the user, which sets the security context for "
"the remainder of the request."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:412
msgid ""
"The user is then saved in the request variable ``AUTHENTICATED_USER``. The "
"true traversal path is saved in the request variable "
"``AUTHENTICATION_PATH``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:416
msgid ""
"Finally, if any post-traverse functions have been registered (by using the "
"``post_traverse()`` method of the request to register functions and optional"
" static arguments), they are called in the order they were registered. If "
"any post-traverse function returns a value other than ``None``, no further "
"post-traverse functions are called, and the return value is used as the "
"return value of the ``traverse()`` function, discarding the actual object "
"that was traversed to and security checked."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:425
msgid "How does *path* traversal work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:427
msgid ""
"Path traversal is invoked when using path expressions in page templates or "
"action expressions (e.g. ``context/Title``). It may be invoked explicitly in"
" code using the methods ``restrictedTraverse()`` (which performs security "
"checks) or ``unrestrictedTraverse()`` (which does not), defined in "
"``OFS.Traversable.Traversable`` and mixed into most persistent items in "
"Zope. This is semantically similar to publication (URL) traversal as "
"described above, but is not identical |---| see below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:435
msgid ""
"All the logic is in the ``unrestrictedTraverse()`` method, which takes an "
"optional argument ``restricted`` that is set to ``True`` when called via "
"``restrictedTraverse()``. It takes a ``path`` string or element list as an "
"argument, and optionally a default to return if traversal fails. If no "
"default is specified, an exception will be raised if traversal fails. This "
"may either be an ``AttributeError``, ``KeyError`` or ``NotFound`` exception,"
" depending on what type of traversal failed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:443
msgid ""
"If ``restricted`` is ``True``, ``unrestrictedTraverse()`` will perform a "
"security check using ``getSecurityManager().validate()`` for every step of "
"traversal. This is different to URL traversal, which only validates at the "
"end of traversal."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:448
msgid "The implementation does the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:450
msgid "Strip any trailing slash from the ``path``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:451
msgid ""
"If the path starts with a slash, begin traversal from the physical "
"application root. Otherwise, start from ``self``. If performing restricted "
"traversal from the application root, validate access to it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:454
msgid "For each slash-separated name element of the path:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:456
msgid ""
"If the name starts with an underscore, raise a ``zExceptions.NotFound`` "
"exception |---| traversal to names starting with an underscore is never "
"allowed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:458
msgid ""
"If the name is ``..``, get the acqusition parent of the current traversal "
"object and continue traversal from here after validating access if "
"applicable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:461
msgid ""
"Otherwise, if the name starts with a ``+`` or ``@``, perform traversal "
"namespace lookup as described for publication traversal above. If this "
"throws a ``LocationError``, fail with an ``AttributeError``. If it suceeds, "
"acquisition-wrap the result if possible and validate access to it if "
"applicable before continuing traversal from this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:466
msgid ""
"Otherwise, if the object has a ``__bobo_traverse__()`` hook, invoke it to "
"get the next object to traverse to. If this succeeds, validate access to the"
" result if applicable, taking into account that it could be a method or non-"
"security aware object, and that it may or may not be acquisition-wrapped. "
"Then continue traversal from this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:471
msgid ""
"If there was no ``__bobo_traverse__()``, or if it returned or raised the "
"sentinel ``ZPublisher.interfaces.UseTraversalDefault``, attempt to obtain a "
"non-acquired attribute of the current object with the applicable name. If "
"one is found, continue traversal from this. If security checking is being "
"performed, use ``guarded_getattr()`` from ``AccessControl.ZopeGuards`` to "
"get the attribute, which may raise ``Unauthorized``. (This is the special "
"``getattr()`` that is also used for all attribute access by untrusted Python"
" code.) Otherwise, use standard ``getattr()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:479
msgid ""
"Otherwise, attempt dictionary-like (``__getitem__``) access and validate the"
" result if applicable before continuing traversal from this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:481
msgid ""
"If any of the above failed with an ``AttributeError``, ``NotFound`` or "
"``KeyError``, attempt to look up a view on the current traversal object with"
" the given name. If one is found, acquisition-wrap it if possible and "
"validate access if applicable, before continuing traversal from the view "
"instance."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:486
msgid ""
"If there is no view, but there was a ``__bobo_traverse__``, fail by re- "
"raising the original exception. The logic behind this is that if there is a "
"``__bobo_traverse__()``, we should not attempt to acquire attributes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:489
msgid ""
"Assuming we still don't have a value and there was no "
"``__bobo_traverse__()``, attempt to acquire an attribute, using either "
"``getattr()`` or ``guarded_getattr()`` depending on whether security checks "
"are being made and continue traversal from the result if this suceeds."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:493
msgid ""
"If we reach the end of the path, return the most recently traversed-to "
"object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:494
msgid ""
"If an exception of any kind (other than a ``ConflictError``) is thrown and a"
" ``default`` was passed in, return this rather than letting the exception "
"bubble up to the caller."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/request.rst:498
msgid ""
"Note: This logic does *not* check for the publication/request-orientated "
"``IPublishTraverse`` or ``IBrowserPublisher`` hooks, although they *do* "
"allow traversal to a view (e.g. ``context.restrictedTraverse('@@some-"
"view')``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:7
msgid "How does Zope handle permissions, roles and users?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:9
msgid ""
"Much of Zope security is implemented in C, for speed, but there is a Python "
"implementation in ``AccessControl.ImplPython``, which can be enabled by "
"setting ``security-policy-implementation python`` in ``zope.conf``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:13
msgid ""
"Note: We will not discuss RestrictedPython, used to apply security "
"restrictions to through-the-web python scripts and page templates, here."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:19
msgid "Declaring object roles and attribute permissions"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:21
msgid ""
"The permissions required to access a given attribute are stored on classes "
"and modules in a variable called ``__ac_permissions__``. This contains a "
"tuple of tuples that map a permission name to a list of attributes (e.g. "
"methods) protected by that permission, e.g.:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:46
msgid ""
"The roles reuqired to access an object (e.g. a content object), are stored "
"in a class or instance variable ``__roles__``. This may contain a tuple or "
"list of role names, an ``AccessControl.PermissionRole.PermissionRole`` "
"object, or one of the following special variables:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:51
msgid "``AccessControl.SecurityInfo.ACCESS_NONE``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:52
msgid "Inaccessible from any context."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:53
msgid "``AccessControl.SecurityInfo.ACCESS_PRIVATE``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:54
msgid "Accessible only from Python code."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:57
msgid "``AccessControl.SecurityInfo.ACCESS_PUBLIC``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:56
msgid ""
"Accessible from restricted Python code and publishable through the web "
"(provided the object has a docstring)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:59
msgid ""
"For attributes (including methods), the roles are stored on the parent class"
" in a variable called ``<name>__roles__``, where ``<name>`` is the attribute"
" name. Again, the special variables ``ACCESS_NONE``, ``ACCESS_PRIVATE`` and "
"``ACCESS_PUBLIC`` can be used."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:64
msgid ""
"These variables are rarely set manually. Instead, declarative security info "
"is typically used. For example:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:86
msgid ""
"There is also ``security.declareObjectProtected(<permission>)``, "
"``security.declareObjectPrivate()``, "
"``security.declarePrivate(<attribute>)`` and "
"``security.declarePublic(attribute)``, which do as their names suggest to "
"make an object or attribute protected, private or public."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:91
msgid ""
"Attribute security can be set in ZCML using the ``<class />`` directive with"
" one or more ``<require />`` sub-directives:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:103
msgid ""
"Behind the scenes, this simply creates a ``ClassSecurityInfo`` instance and "
"invokes it on the attributes listed as applicable. This will also call "
"``InitializeClass`` on the given class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:107
msgid ""
"Note that the ``<require />`` directive, in common with all ZCML directives,"
" uses ZTK-style permission names, not Zope 2-style permission strings. A ZTK"
" permission is a named utility providing "
"``zope.security.interfaces.IPermission``, with an ``id`` that is the short "
"(usually dotted) name that is also the utility name, and a ``title`` that "
"matches the Zope 2 name. New permissions can be registered using the "
"``<permission />`` directive:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:122
msgid ""
"Zope 2-style permission names spring into existence whenever used in a "
"security declaration, which makes them susceptible to typos (ZTK-style "
"``IPermission`` utilities must be explicitly registered before they can be "
"used)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:126
msgid ""
"Permissions are also represented by \"mangled\" permission names, which "
"simply turn the arbitrary string name of a permission into a valid Python "
"identifier. For example, the permission ``\"Access contents information\"`` "
"becomes ``_Access_contents_information_Permission``. The mangling is done by"
" the function ``AccessControl.Permission.pname``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:132
msgid ""
"``ClassSecurityInfo`` does little except record information until the "
"``InitializeClass()`` call is made with the class as an arugment. This will:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:135
msgid ""
"Loop over all attributes and assign a ``__name__`` attribute to the value of"
" any attribute in the class's ``__dict__`` that has the ``_need__name__`` "
"marker set (this is used by through-the-web DTML and Zope Page Template "
"objects that may not have a name until they are assigned to their parent)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:139
msgid ""
"Look for any function with the name ``manage()`` or a name starting with "
"``manage_``. If this does not have a corresponding ``<name>__roles__`` "
"attribute, one is created with the roles ``('Manager',)``, as a way to "
"automatically protect such methods."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:143
msgid ""
"Look for any security info object (i.e. an attribute that has an attribute "
"``__security_info__``). If one is found, call its ``apply()`` method with "
"the class as an argument, and then delete it."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:147
msgid "The ``apply()`` method of ``ClassSecurityInfo`` does this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:149
msgid ""
"Collect any explicitly set ``__ac_permissions__`` tuple and turn it into "
"internal state, as if the ``ClassSecurityInfo`` had been used to set it, so "
"that it is not lost."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:152
msgid ""
"For any attribute declared with ``declarePublic()`` or ``declarePrivate()``,"
" set ``<name>__roles__`` to ``ACCESS_PUBLIC`` or ``ACCESS_PRIVATE`` as "
"appropriate."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:155
msgid ""
"Build an ``__ac_permissions__`` tuple from the saved declarations of any "
"protected attributes."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:158
msgid ""
"As a special case, a call to "
"``security.declareObjectProtected(<permission>)`` will result in a value "
"stored with an empty attribute name, which later translates as setting "
"``__roles__`` directly on the class."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:163
msgid ""
"Find any ``__ac_permissions__`` on the class (probably created by the "
"security info ``apply()`` call) and call "
"``AccessControl.Permission.registerPermissions`` with it as an argument. "
"This will register the permission in a global list of known permissions with"
" their default roles (usually ``('Manager',)``) held in that module under "
"the variable ``_ac_permissions``. The mangled permission name (see above) "
"will also be set as a class attribute on the class "
"``AccessControl.Permission.ApplicationDefaultPermissions``, which is a base "
"class of the application root (``OFS.Application.Application``), hence "
"making the mangled permission names available as (acquirable) class "
"attributes on the application root. The value of this class variable is a "
"tuple with the default roles for that permission."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:175
msgid ""
"For all permissions in ``__ac_permissions__`` and for all attribute (method)"
" names assigned to each permission, set a class attribute "
"``<name>__roles__`` to a ``PermissionRole`` object. If a default list/tuple "
"of roles was supplied, record this in the ``PermissionRole``, otherwise "
"default to ``('Manager',)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:181
msgid "Determining which roles have a given permission"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:183
msgid ""
"To perform security checks, it is necessary to compare the roles a user has "
"with the roles required for a given permission. The method to determine the "
"roles of a permission on a given object is called "
"``rolesForPermissionOn()``. It is found in ``AccessControl.ImplPython``, "
"though a C implementation may also be in use."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:189
msgid ""
"``rolesForPermissionOn()`` can be called directly, but it should be imported"
" from ``AccessControl.PermissionRole`` to ensure the correct implementation "
"(C or Python) is used. Alternatively, the correct implementation can be "
"accessed by using the ``rolesForPermissionOn()`` method of a "
"``PermissionRole`` object, which will supply the correct permission name and"
" default roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:195
msgid "The default ``rolesForPermissionOn()`` does the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:197
msgid "Mangle the permission name (see above)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:198
msgid ""
"Traverse from the object up the inner (containment) acquisition chain to "
"find an object with the mangled permission name as an attribute. Then:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:201
msgid ""
"If the attribute is ``None``, this is actually the ``ACCESS_PUBLIC`` marker."
" Return ``('Anonymous',)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:203
msgid ""
"If the sequence of roles is a tuple, this is a signal to not acquire roles "
"from parent objects. Stop and return any roles collected by walking the "
"acquisition chain so far plus the roles at the current object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:206
msgid ""
"If the sequence of roles is a list, this is a signal to acquire roles from "
"parent objects. Hence, collect the roles at the current object and continue "
"the walk up the acquisition chain."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:209
msgid ""
"If roles is a string, assumed to be a different mangled permission name, "
"this is a signal to delegate to another permission. Continue acquisition "
"from the parent, but discard any roles acquired so far."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:213
msgid ""
"If no object with the managled permission attribute is found, return the "
"default roles. Applicable default roles are stored in each "
"``PermissionRole`` object, but for other types of roles, use "
"``('Manager',)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:216
msgid ""
"In all cases, if the global variable ``_embed_permission_in_roles`` is true,"
" include the mangled permission name in the list of roles returned (even if "
"an empty list). This is used as a debugging aid."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:221
msgid "Checking a permission in a context"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:223
msgid "The most basic permission check can be done using:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:231
msgid ""
"This returns either ``1`` or ``None`` to indicate whether the current user "
"has such a permission."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:234
msgid ""
"The call to ``getSecurityManager()`` returns a security manager instance for"
" the current request. A security manager is created using "
"``newSecurityManager()`` in the ``validated_hook`` at the end of traversal "
"(hence note that it is *not* set during traversal itself; specifically it is"
" not set when a view adapter is being looked up and instantiated and so "
"there is no security information available in the ``__init__()`` of a view),"
" which creates a new security manager with a context that is aware of the "
"current authenticated user (or ``Anonymous`` if there is none)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:243
msgid ""
"Again, the security manager may use a C implementation, but the default one "
"is defined in ``AccessControl.ImplPython``. The two most important methods "
"on this object are ``checkPermission()`` (seen above) and ``validate()``, "
"which is used during traversal to validate access to an object and will "
"throw an ``Unauthorized`` exception if not valid. Both of these delegate to "
"a security policy, which will invariably be the ``ZopeSecurityPolicy`` also "
"found in ``ImplPython`` (or C code) and instantiated once with a module-"
"level call to ``setDefaultBehaviors()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:252
msgid ""
"The ``checkPermission()`` implementation in ``ZopeSecurityPolicy`` is "
"relatively simple. It uses ``rolesForPermissionOn()`` to discover the roles "
"on the object, and then obtains the current user from the security context "
"(passed as a parameter to its version of ``checkPermission()``) and calls "
"the user object's ``allowed()`` method with the object and its roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:258
msgid ""
"Additionally, if the security policy allows for it (which it will by "
"default), checks are made to ensure that if the \"execution context\" has an"
" owner (e.g. it is a through-the-web Python script or template owned by a "
"particular user), the owner as well as the current user has the appropriate "
"roles, otherwise access is disallowed. Also, if proxy roles are set (again "
"applicable to through-the-web scripts), these are allowed to be used in lieu"
" of the user's actual roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:265
msgid ""
"There are various user implementations that can treat ``allowed()`` "
"differently. The most common use in Plone is the ``PropertiedUser`` from "
"``Products.PluggableAuthService`` (PAS), though there is also a basic "
"implementation in ``AccessControl.users.BasicUser``, and a class called "
"``SpecialUser`` in the same module that is used for the ``Anonymous`` user."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:271
msgid ""
"The PAS version is only marginally more complex than the ``BasicUser`` "
"implementation (it deals with roles obtained from groups a user belongs to),"
" so we will describe the ``allowed()`` implementation from ``BasicUser`` "
"here:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:275
msgid ""
"If the object's required roles is the special variable "
"``_what_not_even_god_should_do``   (you couldn't make this up), which "
"corresponds to the ``ACCESS_NONE`` security declaration (as used by "
"``declareObjectPrivate()``), immediately disallow access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:279
msgid ""
"If the object's required roles is ``None``, which corresponds to the "
"``ACCESS_PUBLIC`` security declaration (as used by "
"``declareObjectPublic()``), or if ``Anonymous`` is one of the roles (even if"
" the user is not ``Anonymous``), immediately allow access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:283
msgid ""
"If ``Authenticated`` is one of the required roles and the user is not "
"``Anonymous``, immediately allow access unless the object does not share an "
"acquisition parent with the user folder (this is to avoid users with the "
"same id in different user folders trying to steal each other's access "
"through acquisition tricks). This is referred to as the \"context check\" "
"below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:288
msgid ""
"Check if the user's global roles intersect with the roles required to access"
" the object, and allow access if the user passes the context check."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:290
msgid ""
"Check if there are any local roles, as defined in the attribute "
"``__ac_local_roles__``, granted to the user and check these against the "
"required roles (and perform the context check). ``__ac_local_roles__`` may "
"be a dictionary or a callable that returns a dictionary, containing a "
"mapping of user ids (or group ids, if PAS is used) to local roles granted. "
"The local role check is performed iteratively by walking up the acquisition "
"chain and checking the instances of bound methods, up to the root of the "
"acquisition chain."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:297
msgid ""
"If none of the above succeed, return ``None`` to indicate that the user is "
"not allowed to access the object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:301
msgid "Validating access to an object"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:303
msgid ""
"The second type of security operation provided by the ``SecurityManager`` is"
" to check whether the user should be able to access a particular context. "
"This is most commonly used during traversal, by way of the user folder's "
"``validate()`` method. The version in "
"``Products.PluggableAuthService.PluggableAuthService`` does this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:309
msgid ""
"Get all applicable user ids from the request. Most likely, there is only "
"one, but PAS's modular nature means it is possible more than one plugin will"
" supply a user id."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:312
msgid ""
"Extract the following information from the published object "
"(``REQUEST['published']``):"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:315
msgid ""
"``accessed``, the object the published object was accessed through, i.e. the"
" first traversal parent (``request['PARENTS'][0]``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:317
msgid ""
"``container``, the physical container of the object, i.e. the inner "
"acquisition parent. If the published object is a method, the container is "
"also set to be the method, but stripped of any outer acquisition chains by a"
" call to ``aq_inner()``. If the published object does not have an inner "
"acquisition parent, the traversal parent is used in the same way as it is "
"used to set ``accessed``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:323
msgid ""
"``name``, the name used to access the object, e.g. a traversal path element."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:324
msgid ""
"``value``, the object we are validating access to, i.e. the published "
"object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:327
msgid ""
"If this is the top-level user folder and the user is the emergency user, "
"return the user immediately without further authorisation."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:329
msgid ""
"Otherwise, attempt to authorise the user by creating a new security manager "
"for this user and calling its ``validate()`` method with ``accessed``, "
"``container``, ``name``, and ``value`` as arguments."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:333
msgid ""
"The default security manager ``validate()`` method delegates to the "
"equivalent method on the ``ZopeSecurityPolicy``. This is a charming 200+ "
"line bundle of ``if`` statements that does something like this:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:337
msgid ""
"If the ``name`` is an ``aq_*`` attribute other than ``aq_parent``, "
"``aq_inner`` or ``aq_explicit``, raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:339
msgid ""
"Obtain the ``aq_base``'d version of ``container`` and ``accessed``. If the "
"``accessed`` parent was not acquisition-wrapped, treat the ``aq_base``'d "
"container as the ``aq_base``'d ``accessed``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:342
msgid ""
"The caller may have passed in the required roles already as an optimisation."
" If not, attempt to get the required roles by calling ``getRoles(container, "
"name, value)``. The Python version of this is defined in "
"``AccessControl.ZopeSecurityPolicy``. It does the following:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:347
msgid ""
"If the ``value`` has a ``__roles__`` attribute, and it is ``None`` "
"(``ACCESS_PUBLIC``) or a list or tuple of roles, return them. (This probably"
" means the ``value`` is a content object or similar.)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:350
msgid ""
"If it is a ``PermissionRole`` object or another object with a "
"``rolesForPermissionOn()`` method (described above), call this with the "
"``value`` as an argument and return the results. (This probably means the "
"value is a method.)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:354
msgid ""
"If there is no ``__roles__`` attribute, check if we have a ``name``. Return "
"\"no roles\" if not."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:356
msgid ""
"Attempt to find a class for the ``value``'s ``container``. If ``value`` is a"
" method, go via the ``im_self`` attribute to get an instance to use as the "
"``container``. Then look for a ``<name>__roles__`` attribute on the class. "
"If this is a ``PermissionRole``, call ``rolesForPermissionOn()`` as above; "
"if it is a list, tuple or one of the sentinel values (``ACCESS_PUBLIC``, "
"``ACCESS_PRIVATE`` or ``ACCESS_NONE``, return it directly."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:365
msgid ""
"If we still have no roles, we may have a primitive or other simple object"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:364
msgid ""
"that is not directly security-aware. We can still try to get security "
"information from the ``container``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:367
msgid ""
"If there is no ``container`` passed in, we have no way of inferring one, so "
"all bets are off. Raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:369
msgid ""
"Attempt to get a ``__roles__`` value from the ``container``. If it is "
"acqusition-wrapped, also try to explicitly acquire ``__roles__`` if it does "
"not have a ``__roles__`` attribute itself."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:373
msgid ""
"If this fails, then we may still be able to get some security assertions "
"from the container (see below), but we only allow this if the ``accessed`` "
"parent is the ``container``. If the ``value`` was accessed through a more "
"convoluted acquisition chain, say, we cannot rely solely on container "
"assertions, so we raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:378
msgid ""
"At this point, there are two possibilities: we have some roles required to "
"access the ``container``, or we have no roles at all, but we accessed the "
"``value`` directly from its parent ``container``. In both cases, we check "
"container security assertions:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:383
msgid ""
"If the ``container`` is a tuple or string, and we have gotten this far, we "
"consider access to be allowed and return true. (This can't really happen "
"through URL traversal, but could occur with path traversal)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:386
msgid ""
"If the ``container`` is an object with an attribute "
"``__allow_access_to_unprotected_subobjects__``, obtain this. It can be of "
"three things:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:391
msgid "An integer or boolean"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:391
msgid ""
"if set to a true value, allow access and return ``True``, otherwise raise "
"``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:396
msgid "A dictionary"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:394
msgid ""
"Attempt to look up a truth value in this dictionary by using the accessed "
"``name`` as a key. If not found or false, raise ``Unauthorized``, otherwise "
"allow access and return ``True``. If the name is not found, default to "
"allowing access."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:401
msgid "A callable"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:399
msgid ""
"Call it with the ``name`` and ``value`` as arguments, and use the return "
"value to determine whether to allow access or raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:403
msgid ""
"If there is no ``__allow_access_to_unprotected_subobjects__``, raise "
"``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:406
msgid ""
"If we did manage to get some roles from the container, we still check "
"``__allow_access_to_unprotected_subobjects__`` as above, but only as a "
"negative: we raise ``Unauthorized`` if access is not allowed, and continue "
"security checking against the roles we found otherwise. In this case, we use"
" the ``container`` (probably a content object) as the ``value`` to check."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:411
msgid ""
"At this point, we have roles, and we know the container in theory allows "
"access to the attribute that did not have its own security assertions. We "
"set ``value`` to be the ``container`` so that we can check whether we are in"
" fact allowed to access the container."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:415
msgid ""
"We can now check whether the user has the appropriate roles. This is "
"essentially the same logic as in ``checkPermission()`` above, although "
"stated slightly differently:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:419
msgid ""
"If ``__roles__`` is ``None`` (``ACCESS_PUBLIC``) or contains ``Anonymous``, "
"allow access immediately."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:421
msgid ""
"If the execution context is something like a through-the-web Python script "
"owned by a user, we raise ``Unauthorized`` if the owner does not have any of"
" the required roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:424
msgid ""
"If the execution context has proxy roles, these are allowed to be used to "
"validate access intead of the user's actual roles."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:426
msgid ""
"Otherwise, call ``user.allowed()`` to validate access and either return true"
" or raise ``Unauthorized``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:429
msgid ""
"The remainder of the logic in ``validate()`` concerns the case where "
"``verbose-security`` is enabled in ``zope.conf``. Various checks are made in"
" an attempt to raise ``Unauthorized`` exceptions with meaningful "
"descriptions about where in the validation logic access was denied."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:435
msgid "Changing permissions"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:437
msgid ""
"The mapping of permissions to roles can be managed persistently at any "
"object by setting the mangled permission attribute (see the description of "
"``rolesForPermissionOn()`` above) to a list of roles as an instance "
"variable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:441
msgid ""
"The most basic API to do so is the class "
"``AccessControl.Permission.Permission``. This is a transient helper class "
"initialised with a (non-mangled) permission name (i.e. the first element in "
"an ``__ac_permissions__`` tuple), a tuple of attributes the permission "
"applies to (i.e. the second element in an ``__ac_permissions__`` item) |---|"
" referred to as the variable ``data`` |---| and an object where the "
"permission is being managed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:448
msgid ""
"The methods ``getRoles()``, ``setRoles()`` and ``setRole()`` on the "
"``Permission`` class allow roles to be obtained and changed."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:451
msgid ""
"``getRoles()`` will first attempt to get the mangled permission name "
"attribute and return its value."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:454
msgid ""
"If it is not set, it will fall back to looping over all the listed "
"attributes (``data``) and obtaining the roles from the first one found, "
"taking into account the various ways in which ``__roles__`` can be stored. "
"Note that an empty string in the tuple of attributes means \"check the "
"object itself for a ``__roles__`` attribute\". If ``__roles__`` is a list, "
"it is returned, though if it contains the legacy role ``Shared``, this is "
"removed first. The sentinel ``None`` (``ACCESS_PUBLIC``) is turned into "
"``['Manager', 'Anonymous']``. If no roles are set, the default return value "
"is ``['Manager']``, though another default can be supplied as the optional "
"last parameter to ``getRoles()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:464
msgid ""
"``setRoles()`` will set the mangled permission name as an instance variable "
"on the object (or delete the variable, if setting to an empty list of "
"roles). Next, it will ensure no other ``__roles__`` or ``<name>__roles__`` "
"*instance* variables have been set (class variables are left alone, of "
"course), so that the managled permission name attribute is the unambiguous "
"statement of the permission-to- role mapping."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:472
msgid ""
"Note that for both ``getRoles()`` and ``setRoles()``, the difference between"
" a tuple (don't acquire roles) and a list (do acquire) is significant, and "
"preserved."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:476
msgid ""
"``setRole()`` is used to manage a single role. It takes a role name and a "
"boolean to decide whether the role should be set or not. It simply builds "
"the appropriate list or tuple based on the current value of ``getRoles()`` "
"and then calls ``setRoles()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:481
msgid ""
"In most cases, it is easier to use the API provided by "
"``AccessControl.rolemanager.RoleManager`` to manipulate roles in a "
"particular context, rather than using ``Permission`` directly. This class, "
"usually via the more specific ``OFS.roles.RoleManager``, is a mixin to most "
"persistent objects in Zope. It contains a number of relevant methods:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:495
msgid "``ac_inherited_permissions(all=0)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:490
msgid ""
"Returns a list of permissions applicable to this class, but not defined on "
"this class directly, by walking the ``__bases__`` of the class. (Note that "
"this is not inheritance in the persistent acquisition sense!). If ``all`` is"
" set to a truth value, the permissions on this class are included as well. "
"The return value is an ``__ac_permissions__``-like tuple of tuples. For "
"inherited permissions, the attribute list of each permission entry will be "
"an empty tuple."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:498
msgid "``permission_settings(permission=None)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:498
msgid ""
"Returns the settings for a single permission or all permissions, returning a"
" list of dicts. Used mainly by ZMI screens."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:501
msgid "``manage_role(role, permissions=[])``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:501
msgid ""
"Uses the ``Permission`` API to grant the role to the permissions passed in, "
"and take it away from any other permissions where the role may be set."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:505
msgid "``manage_acquiredPermissions(permissions=[])``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:504
msgid ""
"Uses the ``Permission`` API to set the roles lists for each of the passed-in"
" permissions to a list (acquire), and for all other permissions to a tuple "
"(don't acquire)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:510
msgid "``manage_permission(permission, roles=[], acquire=0)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:508
msgid ""
"Uses the ``Permission`` API to set roles for the given permission to either "
"a tuple or list (it does not matter what type of sequence the ``roles`` "
"parameter contains, the ``acquire`` parameter is used), but only if the "
"permission is known to this object."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:514
msgid "``permissionsOfRole(role)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:513
msgid ""
"Uses the ``Permission`` API to get the permissions of the given role. "
"Returns a list of dicts with keys ``name`` and ``selected`` (set to either "
"an empty string or the string ``SELECTED``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:516
msgid "``rolesOfPermission(permission)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:517
msgid ""
"The inverse of ``permissionsOfRole()``, returning a similar data structure."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:520
msgid "``acquiredRolesAreUsedBy(permission)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:519
msgid ""
"Returns either ``CHECKED`` or an empty string, depending on whether the "
"roles sequence of the given permission is a list or tuple."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:522
msgid ""
"The use of the strings ``CHECKED`` or ``SELECTED`` as booleans is an "
"unfortunate side-effect of these methods being used quite literally by ZMI "
"templates."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:526
msgid "Global and local roles"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:528
msgid ""
"The list of known (valid) roles in any context is set in the attribute "
"``__ac_roles__``. On the initialisation of the application root during "
"startup, in ``install_required_roles()`` in "
"``OFS.Application.AppInitializer``, this is made to include at least "
"``Owner`` and ``Authenticated``. The ``RoleManager`` base class sets it as a"
" class variable with the value ``('Manager', 'Owner', 'Anonymous', "
"'Authenticated')``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:535
msgid ""
"In ``AccessControl.rolemanager.RoleManager``, the method ``valid_roles()`` "
"can be used to obtain the list of valid roles in any given context. It will "
"also include roles from any parent objects referenced via a ``__parent__`` "
"attribute."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:540
msgid ""
"User-defined roles can be set through the ZMI or the method ``_addRole()`` "
"in the ``OFS.roles.RoleManager`` specialisation, which simply manipulates "
"the ``__ac_roles__`` tuple as an instance variable. There is also "
"``_delRoles()`` to delete roles. The method ``userdefined_roles()`` on the "
"base ``AccessControl.rolemanager.RoleManager`` class will return a list of "
"all roles that were set as instance variables rather than class variables."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:547
msgid ""
"The global roles of a given user is determined by the ``getRoles()`` "
"function on the user object (see the description of the ``allowed()`` method"
" above). The default ``ZODBRoleManager`` plugin for PAS stores a mapping of "
"users and roles persistently in the ZODB, though other implementations are "
"possible, e.g. querying an LDAP repository."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:553
msgid ""
"Users may also have local roles, granted in a particular container and its "
"children. These can be discovered for a given user most easily by calling "
"the ``getRolesInContext()`` function on a user object, which takes a context"
" object as a parameter."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:558
msgid ""
"Local roles are stored in the instance variable ``__ac_local_roles__``. This"
" may be a dictionary or a callable that returns a dictionary, containing a "
"mapping of user (or group) ids to local roles granted. The local role check "
"is performed iteratively by walking up the acquisition chain and checking "
"the instances of bound methods, until the root of the acquisition chain is "
"reached."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:564
msgid ""
"The API to manage local role assignments in a given context is found in "
"``AccessControl.rolemanager.RoleManager``, through the following methods:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:569
msgid "``get_local_roles()``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:568
msgid ""
"Return a tuple of local roles, each represented as a tuple of user ids and a"
" tuple of local roles for that user id. With PAS, this may also include "
"group ids."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:572
msgid "``users_with_local_role(role)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:572
msgid ""
"Inspect ``__ac_local_roles__`` to get a list of all users with the given "
"local role."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:575
msgid "``get_local_roles_for_userid(userid)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:575
msgid ""
"Inspect ``__ac_local_roles__`` to get a tuple of all local roles for the "
"given user id."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:578
msgid "``manage_addLocalRoles(userid, roles)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:578
msgid ""
"Modify ``__ac_local_roles__`` to add the given roles to the given user id. "
"Any existing roles are kept."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:581
msgid "``manage_setLocalRoles(userid, roles)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:581
msgid ""
"Modify ``__ac_local_roles__`` to add the given roles to the given user id. "
"Any existing roles are replaced."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:584
msgid "``manage_delLocalRoles(userids)``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:584
msgid "Remove all local roles for the given user ids."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:587
msgid "Emergency users"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:589
msgid ""
"On startup, at import time of ``AccessControl.users``, the function "
"``readUserAccessFile()`` is called to look for a file called ``accesss`` in "
"the Zope ``INSTANCE_HOME`` (an environment variable) directory. If found, it"
" reads the first line and parses it to return a tuple ``(name, password, "
"domains, remote_user_mode,)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:595
msgid ""
"If set, the module variable ``emergency_user`` is set to an "
"``UnrestrictedUser``, a special type of user where the ``allowed()`` method "
"always returns true. If not, it is set to a ``NullUnrestrictedUser``, which "
"acts in reverse and disallows everything."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/security.rst:600
msgid ""
"The user folder implementations in ``AccessControl`` and PAS make specific "
"checks for this user during authentication and permission validation to "
"ensure this user can always log in and has virtually any permission, with "
"the exception of ``_what_not_even_god_should_do`` (``ACCESS_NONE``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:3
msgid "Startup and product initialisation"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:7
msgid ""
"What happens on Zope startup, and how do Zope 2 products and constructors "
"work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:13
msgid "What happens on Zope startup?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:15
msgid ""
"A startup script (e.g. ``bin/instance fg``) calls Zope 2's ``run.py`` in an "
"appropriate interpreter context (i.e. one that has the necessary packages on"
" ``sys.path``). This invokes a subclass of ``ZopeStarter`` from "
"``Zope2.Startup``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:29
msgid ""
"There are various variants that allow different ways to supply "
"configuration."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:31
msgid ""
"There are two versions of the starter, one for Unix and one for Windows. It "
"performs a number of actions during the ``prepare()`` phase:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:63
msgid ""
"Mostly, this is about using information from the configuration (which is "
"read using ``ZConfig`` from a configuration file, or taken from the global "
"defaults) to set various module-level variables and options."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:67
msgid ""
"The ``startZope()`` call ends up in ``Zope2.App.startup.startup()``, which "
"performs a number of startup tasks:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:70
msgid "Importing products (``OFS.Application.import_products()``)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:71
msgid ""
"Creating a ZODB for the chosen storage (as set in the ``ZConfig`` "
"configuration). This is stored in both ``Globals.DB`` and ``Zope2.DB``, and "
"is configured using a ``dbtab`` (mount points specification) read from the "
"configuration file. When this is done, the event "
"``zope.processlifetime.DatabaseOpened`` is notified."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:76
msgid ""
"Setting the ``ClassFactory`` on the ZODB instance to "
"``Zope2.App.ClassFactory.ClassFactory``. This is a function that will "
"attempt to import a class, and will return ``OFS.Uninstalled.Broken`` if the"
" class cannot be imported for whatever reason. This allows for somewhat "
"graceful recovery if symbols that are persistently referenced in the ZODB "
"disappear."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:81
msgid ""
"Loading ZCML configuration from ``site.zcml``. This in turn loads ZCML for "
"all installed products in the ``Products.*`` namespace, and ZCML slugs. The "
"``load_zcml()`` call also sets up a ``Zope2VocabularyRegistry``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:84
msgid ""
"Creating the ``app`` object, an instance of "
"``App.ZApplication.ZApplicationWrapper`` that wraps a "
"``OFS.Application.Application``. The purpose of the wrapper is to:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:88
msgid ""
"Create an instance of the application object at the root of the ZODB on "
"``__init__()`` if it is not there already. The name by default is "
"``Application``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:90
msgid ""
"Implement traversal over this wrapper (``__bobo_traverse__``) to open a ZODB"
" connection before continuing traversal, and closing it at the end of the "
"request."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:93
msgid ""
"Return the persistent instance of the true application root object when "
"called."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:96
msgid ""
"The wrapper is set as ``Zope2.bobo_application``, which is used when the "
"publisher publishes the ``Zope2`` module |---| more on publication later."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:98
msgid ""
"Initialising the application object using ``OFS.Application.initialize()``. "
"This defensively creates a number of items:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:116
msgid "Notfiying the event ``zope.processlifetime.DatabaseOpenedWithRoot``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:117
msgid "Setting a number of ZPublisher hooks:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:126
msgid ""
"The ``run()`` method of the ``ZopeStarter`` then runs the main startup loop "
"(note: this is not applicable for WSGI startup using ``make_wsgi_app()`` in "
"``run.py``, where the WSGI server is responsible for the event loop):"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:144
msgid ""
"The ``Lifetime`` module uses ``asyncore`` to poll for connected sockets "
"until shutdown is initiated, either through a signal or an explicit changing"
" of the flag ``Lifetime._shutdown_phase``, which is checked for each "
"iteraton of the loop."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:149
msgid ""
"Sockets are created when new connections are received on a defined server. "
"When using the built-in ZServer (i.e. not WSGI), the default HTTP server is "
"defined in ``ZServer.HTTPServer.zhttp_server``, which derives from "
"``ZServer.medusa.http_server``, which in turn is an ``asyncore.dispatcher``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:154
msgid ""
"Servers are created in ``ZopeStarter.setupServers()``, which loops over the "
"``ZConfig``-defined server factories and call their ``create()`` metohod. "
"The server factories are defined in ``ZServer.datatypes``. (The word "
"``datatypes`` refers to ``ZConfig`` data types.)"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:159
msgid ""
"Note also that some of the configuration data is mutated in the "
"``prepare()`` method of the server instance, which is called from "
"``Zope2.startup.handlers.root_handler()`` during the configuration phase. "
"These handlers are registered with a call to "
"``Zope2.startup.handlers.handleConfig()`` during the ``_setconfig()`` call "
"in ``run.py``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:166
msgid "How are products installed?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:168
msgid ""
"During application initialisation, the method ``install_products()`` will "
"call the method ``OFS.Application.install_products()``. This will record "
"products in the ``Control_Panel`` if this is enabled in ``zope.conf``, and "
"call the ``initialize()`` function for any product that has one with a "
"*product context* that allows the product to register constructors for the "
"Zope runtime."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:174
msgid ""
"``install_products()`` loops over all product directories (configured via "
"``zope.conf`` and kept in ``Products.__path___`` by "
"``Zope2.startup.handlers.root_handler()``) and scans these for product "
"directories with an ``__init__.py``. For each, it calls "
"``OFS.Application.install_product``. This will:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:180
msgid "Import the product as a Python package"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:181
msgid ""
"Look for an attribute ``misc_`` at the product root, which is used to store "
"things like icons. If it is a dictionary, wrap it in an ``OFS.misc_.Misc_`` "
"object, which is just a simple, security-aware class. Then store a copy of "
"it as an attribute on the object ``Application.misc_``. The attribute name "
"is the product name. This allows traversal to the ``misc_`` resources."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:187
msgid ""
"As an example of the use of the use of ``misc_``, consider this dictionary "
"set up in ``Products/CMFPlone/__init__.py``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:196
msgid ""
"This can now be traversed to as ``/misc_/CMFPlone/plone_icon`` by virtue of "
"the ``misc_`` attribute on the application root."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:198
msgid ""
"Next, create an ``App.ProductContext.ProductContext`` to be used during "
"product initialisation. This is passed a ``product`` object, a handle to the"
" application root, and the product's package."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:202
msgid "There are two ways to obtain the ``product`` object:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:204
msgid ""
"If persistent product installation (in the ``Control_Panel``) is enabled in "
"``zope.conf``, call ``App.Product.initializeProduct``. This will create a "
"``App.Product.Product`` object and save it persistently in "
"``App.Control_Panel.Products``. It also reads the file ``version.txt`` from "
"the product to determine a version number, and will change the persistent "
"object (at Zope startup) if the version has changed. The ``product`` object "
"is initialised with a product name and title and is used to store basic "
"information about the product. The ``product`` object is then returned."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:213
msgid ""
"If persistent product installation is disabled (the default), simply "
"instantiate a ``FactoryDispatcher.Product`` object (which is a simpler, "
"duck-typing-equivalent of ``App.Product.Product``) with the product name."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:217
msgid ""
"If the product has an ``initialize()`` method at its root, call it with the "
"product context as an argument."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:220
msgid ""
"Once old-style products are initialised, any packages outside the "
"``Products.*`` namespace that want to be initialised are processed. The "
"``<five:registerProduct />`` ZCML directive stores a list of packages to be "
"processed and any referenced ``initialize()`` method in the variable "
"``OFS.metaconfigure._packages_to_initialize``, accessible via the function "
"``get_packages_to_initialize()`` in the same module. ``install_products()`` "
"loops over this list, calling ``install_package()`` for each. This works "
"very much like ``install_product()``. When it is done, it calls the function"
" ``OFS.metaconfigure.package_initialized()`` to remove the package from the "
"list of packages to initalise."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:232
msgid "How do Zope 2 product constructors work?"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:234
msgid ""
"Products can make constructors available to the Zope runtime. This is what "
"powers the ``Add`` drop-down in the ZMI, for instance. They do so by calling"
" ``registerClass()`` on the product context passed to the ``initialize()`` "
"function. This takes the following main arguments:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:239
msgid "``instance_class``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:240
msgid "The class of the object that will be created."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:242
msgid "``meta_type``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:242
msgid ""
"A unique string representing kind of object being created, which appears in "
"add lists. If not specified, then the class ``meta_type`` will be used."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:245
#: ../../reference_manuals/old/zope_secrets/startup.rst:364
msgid "``permission``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:245
msgid ""
"The permission name for the constructors. If not specified, a permission "
"name generated from the meta type (``\"Add <meta_type>\"``) will be used."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:298
msgid "``constructors``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:248
msgid ""
"A list of constructor methods. An element in the list can be a callable "
"object with a ``__name__`` attribute giving the name the method should have "
"in the product, or the a tuple consisting of a name and a callable object. "
"The first method will be used as the initial method called when creating an "
"object through the web (in the ZMI)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:254
msgid ""
"It is quite common to pass in two constructor callables: one that is a "
"``DTMLMethod`` or ``PageTemplateFile`` that renders an add form and one that"
" is a method that actually creates and adds an instance. A typical example "
"from ``Products.MailHost`` is:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:280
msgid "These are then referenced in ``initialize()``:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:293
msgid ""
"The form will be called with a path like "
"``/<container>/manage_addProduct/MailHost/manage_addMailHostForm``. The "
"``<form />`` on this page has a relative URL "
"``action=\"manage_addMailHost\"``, which means that when the form is "
"submitted, the ``manage_addMailHost()`` function is called. ``id``, "
"``title`` and the other variables are passed as request parameters and "
"marshalled (by ``mapply()`` |---| see below) into function arguments, and "
"the ``REQUEST`` is implicitly passed (again by ``mapply()``)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:301
msgid "``icon``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:301
msgid ""
"The name of an image file in the package to be used for instances. The class"
" ``icon`` attribute will be set automagically if an icon is provided."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:303
msgid "``permissions``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:304
msgid "Additional permissions to be registered."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:306
#: ../../reference_manuals/old/zope_secrets/startup.rst:366
msgid "``visibility``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:306
msgid ""
"The string ``\"Global\"`` if the object is globally visible, or ``None`` "
"otherwise."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:309
#: ../../reference_manuals/old/zope_secrets/startup.rst:368
msgid "``interfaces``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:309
msgid ""
"A list of the interfaces the object supports. These can be used to filter "
"addable meta-types later."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:316
#: ../../reference_manuals/old/zope_secrets/startup.rst:372
msgid "``container_filter``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:312
msgid ""
"A function that is called with an ``ObjectManager`` object as the only "
"parameter, which should return a truth value if the object is happy to be "
"created in that container. The filter is called before showing "
"``ObjectManager``'s ``Add`` list, and before pasting (after object copy or "
"cut), but not before calling an object's constructor."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:318
msgid ""
"The main aims of this method are to register some new permissions, store "
"some information about the class in the variable ``Products.meta_types``, "
"and create a ``FactoryDispatcher`` that allow traversal to the constructor "
"method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:322
msgid ""
"If an ``icon`` and ``instance_class`` are supplied, set an ``icon`` "
"attribute on ``instance_class`` to a path like "
"``misc_/<productname>/<iconfilename>``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:324
msgid ""
"Register any ``permissions`` by calling "
"``AccessControl.Permission.registerPermissions()`` (described later)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:326
msgid ""
"If there is no ``permission`` provided, generate a permission name as the "
"string \"Add <meta_type>\", defaulting to being granted to ``Manager`` only."
" Register this permission as well."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:329
msgid ""
"Grab the name of the first constructor passed in the ``constructors`` tuple."
" This can either be the function's ``__name__``, or a name can be provided "
"explicitly by passing as the first list element a tuple of ``(name, "
"function)``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:333
msgid ""
"Try to obtain the value of the symbol ``__FactoryDispatcher__`` in the "
"package root (``__init__.py``) if set. If not, create a class on the fly "
"with this name  by deriving from ``App.FactoryDispatcher.FactoryDispatcher``"
" and set this onto the product package as an attribute named "
"``__FactoryDispatcher__``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:338
msgid ""
"Set an attribute ``_m`` in the package root if it does not exist to an "
"instance of ``AttrDict`` wrapped around the factory dispatcher. This is a "
"bizzarre construction best described by its implementation:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:352
msgid ""
"If no ``interfaces`` were passed in explicitly, obtain the interfaces "
"implemented by the ``instance_class``, if provided."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:354
msgid ""
"Record information about the primary constructor in the tuple "
"``Products.meta_types`` by appending a dictionary with keys:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:357
msgid "``name``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:358
msgid "The ``meta_type`` passed in or obtained from the ``instance_class``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:360
msgid "``action``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:360
msgid ""
"A path segment like ``manage_addProduct/<productname>/<constructorname>``. "
"for the initial (first) constructor. More on ``manage_addProduct`` below."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:362
msgid "``product``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:363
msgid "The name of the product, without the ``Product.`` prefix."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:365
msgid "The add permission passed in or generated."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:367
msgid "Either ``\"Global\"`` or ``None`` as passed in to the method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:369
msgid "The list of interfaces passed in or obtained from ``instance_class``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:370
msgid "``instance``"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:371
msgid "The ``instance_class`` as passed in to the method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:373
msgid "The ``container_filter`` as passed in to the method."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:374
msgid ""
"Next, put the initial constructor and any further constructors passed in "
"onto the ``_m`` pseudo-dictionary (which really just means setting them as "
"attributes on the ``FactoryDispatcher``-subclass). The appropriate "
"``<methodname>__roles__`` attribute is set to a ``PermissionRole`` "
"describing the add permission as well."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:379
msgid ""
"If an ``icon`` filename was passed in, construct an ``ImageFile`` to read "
"the icon file from the package and stash it in the ``OFS.misc_.misc_`` class"
" so that it can be traversed to later."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:383
msgid ""
"Note that previously, the approach taken was to inject factory methods into "
"the class ``OFS.ObjectManager.ObjectManager``, which is the base class for "
"most folderish types in Zope. This is still supported for backwards "
"compatibility, by providing a ``legacy`` tuple of function objects, but is "
"deprecated."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:388
msgid ""
"``Products.meta_types`` is used in various places, most notably in "
"``OFS.ObjectManager.ObjectManager`` in the methods ``all_meta_types()`` and "
"``filtered_meta_types()``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:392
msgid ""
"The former returns all of ``Products.meta_types`` (plus possibly some legacy"
" entries in ``_product_meta_types`` on the application root object, used to "
"support through-the-web defined products via "
"``App.ProductRegistry.ProductRegistry``), applying the ``container_filter`` "
"if available and optionally filtering by ``interfaces``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:398
msgid ""
"The latter is used to power the ``Add`` widget in the ZMI by creating a "
"``<select />`` box for all ``meta_types`` the user is allowed to add by "
"checking the add permission of each of the items returned by "
"``all_meta_types()``. The ``action`` stored in the ``meta_types`` list is "
"then used to traverse to and invoke a constructor."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:404
msgid ""
"Note that subclasses of ``ObjectManager`` may sometimes override "
"``all_meta_types()`` to set a more restrictive list of addable types. They "
"may also add to the list of the default implementation by setting a "
"``meta_types`` class or instance variable containing further entries in the "
"same format as ``Products.meta_types``."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:410
msgid ""
"Finally, let us consider the ``manage_addProduct`` method seen in the "
"``action`` used to traverse to a registered constructor callable (e.g. an "
"add form) using a path such as "
"``/<container>/manage_addProduct/<productname>/<constructname>``. It is set "
"on ``OFS.ObjectManager.ObjectManager``, and is actually an instance of "
"``App.FactoryDispatcher.ProductDispatcher``. This is an implicit-"
"acquisition-capable object that implements ``__bobo_traverse__`` as follows:"
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:418
msgid ""
"Attempt to obtain a ``__FactoryDispatcher__`` attribute from the product "
"package (from the name being traversed to), defaulting to the standard "
"``FactoryDispatcher`` class in the same module."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:421
msgid ""
"Find a persistent ``App.Product.Product`` if there is one, or create a "
"simple ``App.FactoryDispatcher.Product`` wrapper if persistent product "
"installation has not taken place."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:424
msgid ""
"Create an instance of the factory dispatcher on the fly, passing in the "
"product descriptor and the parent object (i.e. the container)."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:426
msgid ""
"Return this, acquisition-wrapped in ``self``, to allow traversal to "
"continue."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:428
msgid ""
"Traversal then continues over the ``FactoryDispatcher``. In the version of "
"this created by ``registerClass()``, each constructor is set as an attribute"
" on the product-specific dispatcher, with appropriate roles, so traversal "
"will be able to obtain the constructor callable."
msgstr ""

#: ../../reference_manuals/old/zope_secrets/startup.rst:433
msgid ""
"There is also a fallback ``__getattr__()`` implementation in the base "
"``FactoryDispatcher`` class, which will inspect the ``_m`` attribute on the "
"product package for an appropriate constructor, and is also able to obtain "
"constructor information from a persistent ``Product`` instance (from "
"``Control_Panel`` if there was one). This supports a (legacy) approach where"
" instead of calling ``registerClass()`` to register constructors, "
"constructors are set in a dict called ``_m`` at the root of the product."
msgstr ""
