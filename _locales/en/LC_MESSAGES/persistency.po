# SOME DESCRIPTIVE TITLE.
# Copyright (C) Plone community and other individual contributors
# This file is distributed under the same license as the Plone Developer Documentation package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: plone-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-08 13:29\n"
"PO-Revision-Date: 2014-02-08 12:46+0000\n"
"Last-Translator: Giacomo <giacomo.spettoli@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 6bdc61b5f0d94a2ca7989eb85d24856c
#: ../../source/persistency/database.rst:3
msgid "ZODB Database"
msgstr "ZODB Database"

# 566757972e8d46dbb8ec8f906e0d2868
#: ../../source/persistency/database.rst:7
msgid ""
"Plone uses the ZODB object database to store its data.  The ZODB can act "
"independently in-process, clustered over network or over another database "
"engine, like SQL."
msgstr "Plone uses the ZODB object database to store its data.  The ZODB can act independently in-process, clustered over network or over another database engine, like SQL."

# 83b02ba5f80c437db08f5cd338cef8ca
# bf892fdbf2ab4e5183bac1c88d09a96b
# e91e067b4bec4bb381c3e77b6a0882c6
# c8a683b2614b44078d1d028f3ab4daee
#: ../../source/persistency/database.rst:14
#: ../../source/persistency/persistent.rst:16
#: ../../source/persistency/storage.rst:13
#: ../../source/persistency/transactions.rst:8
msgid "Introduction"
msgstr "Introduction"

# 4ca6235924aa47afb2761a1033072903
#: ../../source/persistency/database.rst:16
msgid ""
"Plone uses the ZODB database.  The ZODB happily stores any Python object "
"with any attributes |---| there is no need to write database schema or table"
" descriptions as there is with SQL-based systems. If data models are "
"described somehow the descriptions are written in Python, usually using "
"``zope.schema`` package."
msgstr "Plone uses the ZODB database.  The ZODB happily stores any Python object with any attributes |---| there is no need to write database schema or table descriptions as there is with SQL-based systems. If data models are described somehow the descriptions are written in Python, usually using ``zope.schema`` package."

# ad7f07889e87422582e8f193d19fb7c3
#: ../../source/persistency/database.rst:23
msgid ""
"This chapter is about the basics of the ZODB, working with the ZODB database"
" directly, like tuning database settings."
msgstr "This chapter is about the basics of the ZODB, working with the ZODB database directly, like tuning database settings."

# 68b7403cdc234a05890cf4d7d02a36c0
#: ../../source/persistency/database.rst:26
msgid "More information about ZODB"
msgstr "More information about ZODB"

# 8bc19a4a58d8433cb8c43dcb89b78030
#: ../../source/persistency/database.rst:28
msgid "http://www.zodb.org/"
msgstr "http://www.zodb.org/"

# b57b8d2c0f3b46a0a6184be406e9127f
#: ../../source/persistency/database.rst:30
msgid "`Documentation <http://www.zodb.org/zodbbook/>`_"
msgstr "`Documentation <http://www.zodb.org/zodbbook/>`_"

# d1c90272a0c34e04948c8b50dbf595c1
#: ../../source/persistency/database.rst:32
msgid "`API documentation <http://zodb.readthedocs.org/en/latest/api.html>`_"
msgstr "`API documentation <http://zodb.readthedocs.org/en/latest/api.html>`_"

# 66aba7355b564487afc1a9f9048a222f
#: ../../source/persistency/database.rst:35
msgid "Database files"
msgstr "Database files"

# 242a98137b4441f29f4c0a7628126cf1
#: ../../source/persistency/database.rst:37
msgid ""
"Usually Plone's database is configured to file ``var/filestorage/Data.fs`` "
"and uploaded files can be found as BLOBs in ``var/blobstorage``."
msgstr "Usually Plone's database is configured to file ``var/filestorage/Data.fs`` and uploaded files can be found as BLOBs in ``var/blobstorage``."

# d9472f7d9c6f4f84965dd1591ba5418f
#: ../../source/persistency/database.rst:40
msgid ""
"`Copying a Plone site <http://plone.org/documentation/kb/copying-a-plone-"
"site>`_"
msgstr "`Copying a Plone site <http://plone.org/documentation/kb/copying-a-plone-site>`_"

# 669d9482948d45169f5429c362dbd5ae
#: ../../source/persistency/database.rst:43
msgid "Object database features"
msgstr "Object database features"

# da7be2bcfe1947c2bc672cd471838e21
#: ../../source/persistency/database.rst:45
msgid ""
"The ZODB is an object database.  It makes very easy to store different kinds"
" of contentish data in a graph, supporting subclassing (something which SQL "
"often does poorly)."
msgstr "The ZODB is an object database.  It makes very easy to store different kinds of contentish data in a graph, supporting subclassing (something which SQL often does poorly)."

# 13528437e58c4495982dfe4a5139f537
#: ../../source/persistency/database.rst:49
msgid ""
"Since the database stores objects, and the objects are defined in Python "
"code, you always need the corresponding Python source code to instantiate "
"the objects stored inside the ZODB.  This might feel awkward at first, but "
"you need to have MySQL running to read what's inside MySQL files stored on "
"your disk and so on ..."
msgstr "Since the database stores objects, and the objects are defined in Python code, you always need the corresponding Python source code to instantiate the objects stored inside the ZODB.  This might feel awkward at first, but you need to have MySQL running to read what's inside MySQL files stored on your disk and so on ..."

# 3f6b4eb8ce0c46c397131525e2bd4f0e
#: ../../source/persistency/database.rst:56
msgid ""
"The ZODB database is not usable without the Python source code used to "
"create the data. The data is not readable using any SQL-based tools, and "
"there exist little tools to deal with the raw data. The way to access Plone "
"data is running Plone itself and performing queries through it."
msgstr "The ZODB database is not usable without the Python source code used to create the data. The data is not readable using any SQL-based tools, and there exist little tools to deal with the raw data. The way to access Plone data is running Plone itself and performing queries through it."

# a9454d32aabe4aa382c64fb2ffbabdd9
#: ../../source/persistency/database.rst:63
msgid ""
"Since correct source code is needed to read ZODB data, this poses a problem "
"for versioning. Even if you use the correct add-on product with proper "
"source code, if the source code version is wrong, it might not work.  Data "
"model attributes might be added, modified or deleted between source code "
"revisions, making data operations on the existing database fail by raising "
"Python exceptions (``AttributeError``, ``KeyError``)."
msgstr "Since correct source code is needed to read ZODB data, this poses a problem for versioning. Even if you use the correct add-on product with proper source code, if the source code version is wrong, it might not work.  Data model attributes might be added, modified or deleted between source code revisions, making data operations on the existing database fail by raising Python exceptions (``AttributeError``, ``KeyError``)."

# 28d5508fde594231b2f3cf81d0c2e8cb
#: ../../source/persistency/database.rst:70
msgid ""
"To work around the ZODB interoperability problems, products like "
"*ore.contentmirror* exist to duplicate Plone content data to read-only SQL "
"database."
msgstr "To work around the ZODB interoperability problems, products like *ore.contentmirror* exist to duplicate Plone content data to read-only SQL database."

# 9245b0996be74197a4e33bd8dac627c8
#: ../../source/persistency/database.rst:75
msgid "Query and searching"
msgstr "Query and searching"

# 4714f40e477d411f940d83f4ca53adba
#: ../../source/persistency/database.rst:77
msgid ""
"ZODB does not provide query services as is i.e. there is no SELECT "
"statement."
msgstr "ZODB does not provide query services as is i.e. there is no SELECT statement."

# edc339e72dc04c59abadb9b1410b2c76
#: ../../source/persistency/database.rst:80
msgid ""
"Plone provides :doc:`cataloging </searching_and_indexing/catalog>` service "
"for this purpose."
msgstr "Plone provides :doc:`cataloging </searching_and_indexing/catalog>` service for this purpose."

# fb271ceab740451e832b1e25bc0d9ced
#: ../../source/persistency/database.rst:83
msgid "This gives some benefits"
msgstr "This gives some benefits"

# e05f40220988468a8688e7ae158fe5dd
#: ../../source/persistency/database.rst:85
msgid "You define yourself how data is indexed"
msgstr "You define yourself how data is indexed"

# e8b6563dfa414e53903d5bad0ec62406
#: ../../source/persistency/database.rst:87
msgid ""
"The backend to perform queries is flexible - you can plug-in custom indexes"
msgstr "The backend to perform queries is flexible - you can plug-in custom indexes"

# f52fc0669390440e9b01756a9821f48d
#: ../../source/persistency/database.rst:90
msgid ""
"portal_catalog default catalog is used to all content items to provide basic"
" CMS functionality easily"
msgstr "portal_catalog default catalog is used to all content items to provide basic CMS functionality easily"

# 2921175c9b8040c19522426255125fdf
#: ../../source/persistency/database.rst:93
msgid ""
"You can have optimized catalogs for specialized data (e.g. reference look-"
"ups using reference_catalog)"
msgstr "You can have optimized catalogs for specialized data (e.g. reference look-ups using reference_catalog)"

# e29ab711439343419af3fb919b1c7503
#: ../../source/persistency/database.rst:97
msgid "Data model"
msgstr "Data model"

# e0c541ca91714676a405905e040c7e42
#: ../../source/persistency/database.rst:99
msgid "There is no hardwired way for describe data in ZODB database."
msgstr "There is no hardwired way for describe data in ZODB database."

# 0c8cdfbe9de94b31b8b7cb47627ab6b9
#: ../../source/persistency/database.rst:102
msgid ""
"Subclasses of ZODB ``persistent.Persistent`` class will have all their "
"attributes and referred objects written to the database using Python pickle "
"mechanism. Lists and dictionaries will be automatically converted to "
"persistent versions."
msgstr "Subclasses of ZODB ``persistent.Persistent`` class will have all their attributes and referred objects written to the database using Python pickle mechanism. Lists and dictionaries will be automatically converted to persistent versions."

# 29571da6b468497e93e66bba1df8ce98
#: ../../source/persistency/database.rst:108
msgid "There are currently three primary ways to define data models in Plone"
msgstr "There are currently three primary ways to define data models in Plone"

# 4f6d2c1c65de4ff9a56f8cbe5898c334
#: ../../source/persistency/database.rst:110
msgid ""
"Using zope.schema package (modern way) to describe Python object properties"
msgstr "Using zope.schema package (modern way) to describe Python object properties"

# 7d45fd31f5df4d08bc743705eb968f55
#: ../../source/persistency/database.rst:112
msgid "Using Archetypes content type subsystem (all Plone 3 content)"
msgstr "Using Archetypes content type subsystem (all Plone 3 content)"

# 40230c2a0fa542d597cdd85176ef768a
#: ../../source/persistency/database.rst:114
msgid "Not defining the model, but relying on ad hoc object attributes"
msgstr "Not defining the model, but relying on ad hoc object attributes"

# 4a08abeb08f742b6b0364eec968f6fe3
#: ../../source/persistency/database.rst:116
msgid ""
"Read about :doc:`zope.schema </forms/schemas>` how to define a model for the"
" data to be stored in ZODB database."
msgstr "Read about :doc:`zope.schema </forms/schemas>` how to define a model for the data to be stored in ZODB database."

# 9df03128a50649bf8f5a08fade59dbd9
#: ../../source/persistency/database.rst:121
msgid "Transactions and committing"
msgstr "Transactions and committing"

# 1d50012e6ea74521b5bf6a9508922a8b
#: ../../source/persistency/database.rst:123
msgid ""
"`This in-depth SO answer <http://stackoverflow.com/questions/11254384/when-"
"to-commit-data-in-zodb/>`_ explains how committing works in ZODB."
msgstr "`This in-depth SO answer <http://stackoverflow.com/questions/11254384/when-to-commit-data-in-zodb/>`_ explains how committing works in ZODB."

# 628b2fe4cab3453bb32768fc373a95a7
#: ../../source/persistency/database.rst:126
msgid "Savepoints and optimism regarding them"
msgstr "Savepoints and optimism regarding them"

# d3cbe29c52c44efaa4d738c3503a84bf
#: ../../source/persistency/database.rst:128
msgid "PersistentList and list differences when saving data"
msgstr "PersistentList and list differences when saving data"

# 9a51c4c1cfa64c2e95efe361f16dca1d
#: ../../source/persistency/database.rst:132
msgid "Browsing"
msgstr "Browsing"

# 936e2e87d69d49e1a6cc5b63691f0b8d
#: ../../source/persistency/database.rst:134
msgid ""
"You can explore ZODB with-in Plone using `ZODBBrowser "
"<http://plone.org/products/zodbbrowser>`_."
msgstr "You can explore ZODB with-in Plone using `ZODBBrowser <http://plone.org/products/zodbbrowser>`_."

# d033ab7d590f45099b16457bfa5f769e
#: ../../source/persistency/database.rst:137
msgid "Packing database"
msgstr "Packing database"

# 5d77bd7c2ec7429cae211f10e77da44b
#: ../../source/persistency/database.rst:139
msgid ""
"As ZODB is append-only database it remembers all its history unless packed. "
"Packing will erase undo history."
msgstr "As ZODB is append-only database it remembers all its history unless packed. Packing will erase undo history."

# a64a49513f4e473aa2951d0e5d1f0469
#: ../../source/persistency/database.rst:141
msgid ""
"`Why you need to regularly pack ZODB database to keep the performance up "
"<http://www.sixfeetup.com/blog/optimize-your-plone-development-by-packing-"
"the-zodb>`_"
msgstr "`Why you need to regularly pack ZODB database to keep the performance up <http://www.sixfeetup.com/blog/optimize-your-plone-development-by-packing-the-zodb>`_"

# 788a366e68d346c6aef5a0f0e22e76e9
#: ../../source/persistency/database.rst:143
msgid ""
"`Packing is similar to VACUUM in PostgreSQL "
"<http://stackoverflow.com/questions/11254384/when-to-commit-data-in-zodb/>`_"
msgstr "`Packing is similar to VACUUM in PostgreSQL <http://stackoverflow.com/questions/11254384/when-to-commit-data-in-zodb/>`_"

# ae68dec99a4544449b5d67eb74b94c5b
#: ../../source/persistency/database.rst:146
msgid "Packing through-the-web"
msgstr "Packing through-the-web"

# e0f7b1fd93e4435cacbe50ac82c2b4e9
#: ../../source/persistency/database.rst:148
msgid ""
"Manual packing can be executed through Zope Control Panel (not Plone control"
" panel) in Zope application server root (not Plone site root) in ZMI."
msgstr "Manual packing can be executed through Zope Control Panel (not Plone control panel) in Zope application server root (not Plone site root) in ZMI."

# 79fcff25e8fb4328bceb41d245bde655
#: ../../source/persistency/database.rst:152
msgid "Packing from command line"
msgstr "Packing from command line"

# 22f7741a5da24386905999ca529b488c
#: ../../source/persistency/database.rst:154
msgid ""
"`plone.recipe.zeoserver <https://github.com/plone/plone.recipe.zeoserver/>`_"
" buildout recipe provides command called ``bin/zeopack`` inside buildout. It"
" allows you to trigger packing from the command line when Zope is clustered "
"ZEO configuration. ``zeopack`` command runs against an on-line site."
msgstr "`plone.recipe.zeoserver <https://github.com/plone/plone.recipe.zeoserver/>`_ buildout recipe provides command called ``bin/zeopack`` inside buildout. It allows you to trigger packing from the command line when Zope is clustered ZEO configuration. ``zeopack`` command runs against an on-line site."

# 456ceeffcca14583bcf35c9c6eb94c25
#: ../../source/persistency/database.rst:159
msgid ""
"This command is useful to run in cron to keep your Data.fs file growing "
"forever. You can control the number of days of history to be kept, etc., "
"using buildout recipe variables."
msgstr "This command is useful to run in cron to keep your Data.fs file growing forever. You can control the number of days of history to be kept, etc., using buildout recipe variables."

# 75231049de084ee98347a05f521b03be
# eb4026d52a314be09e03f42cbabfc3f0
# c1bf82c0801b490bb82adf7df9cabe54
#: ../../source/persistency/database.rst:162
#: ../../source/persistency/persistent.rst:81
#: ../../source/persistency/persistent.rst:117
msgid "More info"
msgstr "More info"

# 509d725bb0b247aeb1167ae6446d325c
#: ../../source/persistency/database.rst:164
msgid "https://github.com/plone/plone.recipe.zeoserver"
msgstr "https://github.com/plone/plone.recipe.zeoserver"

# a49eb8c21fa54990ac2cb20ceae1f295
#: ../../source/persistency/database.rst:167
msgid "Packing the database offline"
msgstr "Packing the database offline"

# 04f8baa895ec4638b98676b4cd936ac5
#: ../../source/persistency/database.rst:169
msgid ""
"`See this blog post <http://blog.twinapex.fi/2009/09/01/packing-and-copying-"
"data-fs-from-production-server-for-local-development/>`_."
msgstr "`See this blog post <http://blog.twinapex.fi/2009/09/01/packing-and-copying-data-fs-from-production-server-for-local-development/>`_."

# 8b41523909c841178f98e7c4f7bf3dc5
#: ../../source/persistency/database.rst:171
msgid ""
"Example how to pack a copy of Data.fs in offline using Python snippet::"
msgstr "Example how to pack a copy of Data.fs in offline using Python snippet::"

# a92a8c34fbeb466a8f55d307f2a98d9b
#: ../../source/persistency/database.rst:180
msgid ""
"As this depends on ZODB egg, the easiest way to run the snippet is to "
"``zopepy`` script from your ``buildout/bin`` folder::"
msgstr "As this depends on ZODB egg, the easiest way to run the snippet is to ``zopepy`` script from your ``buildout/bin`` folder::"

# 712649f78d5a46288813b37c00b5cedc
#: ../../source/persistency/database.rst:185
msgid ""
"For more information, see :doc:`command-line scripts </misc/commandline>`."
msgstr "For more information, see :doc:`command-line scripts </misc/commandline>`."

# 67d1b32a7ec849cab2bd70cb2fde2582
#: ../../source/persistency/database.rst:188
msgid "Visualizing object graphs"
msgstr "Visualizing object graphs"

# 8cb5f75939db438593cca81266cc8a8d
# 6e69b27e08c04270b5cc539afb926cf6
#: ../../source/persistency/database.rst:190
#: ../../source/persistency/persistent.rst:238
msgid ""
"http://blog.hannosch.eu/2009/05/visualizing-persistent-structure-of.html"
msgstr "http://blog.hannosch.eu/2009/05/visualizing-persistent-structure-of.html"

# 483c872146734c68aa181daa9c7cccb2
#: ../../source/persistency/database.rst:192
msgid "http://david.wglick.org/2009/visualizing-the-zodb-with-graphviz/"
msgstr "http://david.wglick.org/2009/visualizing-the-zodb-with-graphviz/"

# f046b57088b74c21909f03d0a9b43907
#: ../../source/persistency/database.rst:195
msgid "Cache size"
msgstr "Cache size"

# 7f43a1999308421db202ef48ba441785
#: ../../source/persistency/database.rst:197
msgid ""
"`Understanding ZODB cache size option <https://mail.zope.org/pipermail/zodb-"
"dev/2010-March/013199.html>`_"
msgstr "`Understanding ZODB cache size option <https://mail.zope.org/pipermail/zodb-dev/2010-March/013199.html>`_"

# a7504780d6294c7d9eb6eeb5558063f5
#: ../../source/persistency/database.rst:200
msgid "Integrity checks"
msgstr "Integrity checks"

# 4f5a8d5256e04048a36e85ebe8c1a7e4
#: ../../source/persistency/database.rst:202
msgid ""
"Especially when you back-up a Data.fs file, it is useful to run integrity "
"checks for the transferred files."
msgstr "Especially when you back-up a Data.fs file, it is useful to run integrity checks for the transferred files."

# 3f7f667c3a4d443dbc6ae508032d78b6
#: ../../source/persistency/database.rst:204
msgid ""
"ZODB provides scripts ``fstest`` and ``fsrefs`` to check if Data.fs data is "
"intact and there are no problems due to low level disk corruption or bit "
"flip."
msgstr "ZODB provides scripts ``fstest`` and ``fsrefs`` to check if Data.fs data is intact and there are no problems due to low level disk corruption or bit flip."

# c378762389f046c3bfd1e9f5ff63adf9
#: ../../source/persistency/database.rst:207
msgid "http://wiki.zope.org/ZODB/FileStorageBackup"
msgstr "http://wiki.zope.org/ZODB/FileStorageBackup"

# b538fa1b03ad412fb19b3d7ebb6f787e
#: ../../source/persistency/database.rst:211
msgid ""
"It is recommended best practice to run integrity against your Data.fs "
"regularly. This is the only way to detect corruption which would otherwise "
"go unnoticed for a long time."
msgstr "It is recommended best practice to run integrity against your Data.fs regularly. This is the only way to detect corruption which would otherwise go unnoticed for a long time."

# 338327de33e14f6c862f021d54e3364a
#: ../../source/persistency/database.rst:216
msgid "Restart and cache warm-up"
msgstr "Restart and cache warm-up"

# 813c09e717ab464fa340adc17a5a26c3
#: ../../source/persistency/database.rst:218
msgid "Discussion why Plone is slow after restart"
msgstr "Discussion why Plone is slow after restart"

# 0bd168bff6a3476e95fa82a23c401f49
#: ../../source/persistency/database.rst:220
msgid "https://mail.zope.org/pipermail/zodb-dev/2013-March/014935.html"
msgstr "https://mail.zope.org/pipermail/zodb-dev/2013-March/014935.html"

# c2737344e7d84475b9a9315438a5111b
#: ../../source/persistency/database.rst:223
msgid "Recovering old data"
msgstr "Recovering old data"

# 11d1a11e9d52486389adc69cbd6b00cc
#: ../../source/persistency/database.rst:225
msgid "Instructions for undoing deleted data and fixing broken databases."
msgstr "Instructions for undoing deleted data and fixing broken databases."

# 0c69410816004eb9b250c0c3cc74070f
#: ../../source/persistency/database.rst:227
msgid ""
"http://www.zopatista.com/plone/2008/12/18/saving-the-day-recovering-lost-"
"objects"
msgstr "http://www.zopatista.com/plone/2008/12/18/saving-the-day-recovering-lost-objects"

# de7d40ed7d2243ac8578e0efdc0b9062
#: ../../source/persistency/database.rst:230
msgid "ZODB tips and tricks"
msgstr "ZODB tips and tricks"

# fe6a732f87eb409abdfda12a9ad6adf3
#: ../../source/persistency/database.rst:232
msgid "Please see"
msgstr "Please see"

# 23ae2f86e38949478f9ec3e9e2a694b0
#: ../../source/persistency/database.rst:234
msgid ""
"http://plone.org/events/regional/nola05/collateral/Chris%20McDonough-"
"ZODB%20Tips%20and%20Tricks.pdf"
msgstr "http://plone.org/events/regional/nola05/collateral/Chris%20McDonough-ZODB%20Tips%20and%20Tricks.pdf"

# b1f1f376e41347b787e7ed856e037ad1
#: ../../source/persistency/index.rst:3
msgid "ZODB, persistency and transactions"
msgstr "ZODB, persistency and transactions"

# 924d9f7b76a04e36abee28390c67721e
#: ../../source/persistency/lifecycle.rst:3
msgid "Object lifecycles"
msgstr "Object lifecycles"

# 733f9cd76172434195165ff15ccd6644
#: ../../source/persistency/lifecycle.rst:5
msgid "Plone has different lifecycles for different objects"
msgstr "Plone has different lifecycles for different objects"

# 98d500edf9654552be1c7d89438e1e32
#: ../../source/persistency/lifecycle.rst:7
msgid ""
"Persistent objects: These objects are transparently persistent. They look "
"like normal Python objects, but they are serialized to the disk if the "
"transaction completes successfully. Persistent object inherit from Zope's "
"various persistent classes: persistent.Persistent, PersistentDict, "
"PersistentList and they have special attributes like _p_mtime when the "
"object was last written to disk. To make object persistent, it must be "
"referred from Zope's App traversing graph. Examples: content objects, user "
"account objects."
msgstr "Persistent objects: These objects are transparently persistent. They look like normal Python objects, but they are serialized to the disk if the transaction completes successfully. Persistent object inherit from Zope's various persistent classes: persistent.Persistent, PersistentDict, PersistentList and they have special attributes like _p_mtime when the object was last written to disk. To make object persistent, it must be referred from Zope's App traversing graph. Examples: content objects, user account objects."

# bc8f39a916ca48b7879902cf33db62ba
#: ../../source/persistency/lifecycle.rst:15
msgid ""
"Request attached objects and thread-local objects: Each HTTP request is "
"processed by its own Python thread. These objects disappear when the request"
" has been processed. Examples: request object itself, getSite() thread-local"
" way to access the site object, request specific permission caches."
msgstr "Request attached objects and thread-local objects: Each HTTP request is processed by its own Python thread. These objects disappear when the request has been processed. Examples: request object itself, getSite() thread-local way to access the site object, request specific permission caches."

# ff81ce54906145d9aeed5cf294a7cb14
#: ../../source/persistency/lifecycle.rst:20
msgid ""
"In-process objects, or \"static\" objects are created when the server "
"application is launched and they are gone when the application quits. "
"Usually these objects are set-up during Plone initialization and they are "
"read-only for served HTTP requests. Examples: content type vocabulary lists."
msgstr "In-process objects, or \"static\" objects are created when the server application is launched and they are gone when the application quits. Usually these objects are set-up during Plone initialization and they are read-only for served HTTP requests. Examples: content type vocabulary lists."

# 77fe4ebc34914d4591114fcb25427b91
#: ../../source/persistency/migrations.rst:3
msgid "Migrations"
msgstr "Migrations"

# 1d645d4a7ee0440abee5ffa710c79751
#: ../../source/persistency/migrations.rst:5
msgid ""
"Database migrations are needed if your internal data storage format changes "
"between versions."
msgstr "Database migrations are needed if your internal data storage format changes between versions."

# cde1c9016a89432e83b60d360b3f501e
#: ../../source/persistency/migrations.rst:8
msgid ""
"ZODB does not require you to set object format explicitly, like in SQL you "
"need to create table schema. However, your code will naturally fail if the "
"data format of the object is unexpected."
msgstr "ZODB does not require you to set object format explicitly, like in SQL you need to create table schema. However, your code will naturally fail if the data format of the object is unexpected."

# a49eaa8865494a47852fff0a2905bbf5
#: ../../source/persistency/migrations.rst:13
msgid ""
"`Changing instance attributes <http://www.zodb.org/documentation/guide/prog-"
"zodb.html#changing-instance-attributes>`_"
msgstr "`Changing instance attributes <http://www.zodb.org/documentation/guide/prog-zodb.html#changing-instance-attributes>`_"

# a4eecd215656448cbed5191691721502
#: ../../source/persistency/persistent.rst:3
msgid "Persistent objects"
msgstr "Persistent objects"

# f1e8c80504b7416b851f75e7ab582a1c
#: ../../source/persistency/persistent.rst:7
msgid ""
"This document tells how to save objects to Plone/Zope database. Persistent "
"objects are automatically read and written from ZODB database in Plone and "
"they appear as normal Python objects in your code. This document clarifies "
"some of special properties, like with containers, when you deal with "
"persistent objects programmatically."
msgstr "This document tells how to save objects to Plone/Zope database. Persistent objects are automatically read and written from ZODB database in Plone and they appear as normal Python objects in your code. This document clarifies some of special properties, like with containers, when you deal with persistent objects programmatically."

# 32721f69b6814aa589eb785eb44ed1f0
#: ../../source/persistency/persistent.rst:18
msgid "**Q: How do I save() object in Plone**"
msgstr "**Q: How do I save() object in Plone**"

# d45bcceecc184b9899f9d8e0a32f11ac
#: ../../source/persistency/persistent.rst:20
msgid "**A: You don't**"
msgstr "**A: You don't**"

# 9c8b4c87ba1843b49d73e059ba4364f0
#: ../../source/persistency/persistent.rst:22
msgid ""
"Plone does this automatically for you. You just assign the file data as an "
"attribute of some persistent object. When the HTTP request completes, Zope "
"transaction manager will automatically update all changed persistent objects"
" to the database. There is no \"save\" as such in Zope world - it all is "
"transparent to the developer. If the transaction fails in any point, no data"
" is being written and you do not need to worry about the partial data being "
"written to the database."
msgstr "Plone does this automatically for you. You just assign the file data as an attribute of some persistent object. When the HTTP request completes, Zope transaction manager will automatically update all changed persistent objects to the database. There is no \"save\" as such in Zope world - it all is transparent to the developer. If the transaction fails in any point, no data is being written and you do not need to worry about the partial data being written to the database."

# 33455b7cfc0d4c9b993a8500fde7121c
#: ../../source/persistency/persistent.rst:31
msgid ""
"Changed objects will be automatically saved (if they are attached to the "
"traversing graph)"
msgstr "Changed objects will be automatically saved (if they are attached to the traversing graph)"

# c8464083aa6b443b9739990aba8b4d2d
#: ../../source/persistency/persistent.rst:34
msgid "Save will not occur if an exception is raised"
msgstr "Save will not occur if an exception is raised"

# d9f4fad9b58e4ce7b56a55e952df27ac
#: ../../source/persistency/persistent.rst:36
msgid ""
"If your data class inherits from higher level Plone base classes (all go up "
"to persistent.Persitent class). persistency is handled transparently for "
"you. Plone also handles transaction automatically for each HTTP request. "
"Unless you wish to do manual transactions there is no need to call "
"transaction.commit()."
msgstr "If your data class inherits from higher level Plone base classes (all go up to persistent.Persitent class). persistency is handled transparently for you. Plone also handles transaction automatically for each HTTP request. Unless you wish to do manual transactions there is no need to call transaction.commit()."

# 6effcf00d8fe40b4bcf2b7be04e54183
#: ../../source/persistency/persistent.rst:42
msgid ""
"If you want to do your own persistent classes please read the following"
msgstr "If you want to do your own persistent classes please read the following"

# 5a3149e175754cf7989275aa1f76c135
#: ../../source/persistency/persistent.rst:44
msgid ""
"`Writing a persistent class <http://www.zodb.org/documentation/guide/prog-"
"zodb.html#writing-a-persistent-class>`_"
msgstr "`Writing a persistent class <http://www.zodb.org/documentation/guide/prog-zodb.html#writing-a-persistent-class>`_"

# 096f46d863bc454e911e1bd841bcc08f
#: ../../source/persistency/persistent.rst:46
msgid ""
"`About persistent objects "
"<http://www.zope.org/Documentation/Books/ZDG/current/Persistence.stx>`_"
msgstr "`About persistent objects <http://www.zope.org/Documentation/Books/ZDG/current/Persistence.stx>`_"

# 9e04b7c0319041c89788c79805b4f49f
#: ../../source/persistency/persistent.rst:48
msgid ""
"`Persistent interface description "
"<http://apidoc.zope.org/++apidoc++/Interface/persistent.interfaces.IPersistent/index.html>`_."
msgstr "`Persistent interface description <http://apidoc.zope.org/++apidoc++/Interface/persistent.interfaces.IPersistent/index.html>`_."

# 9556086cf7864b7999ee556620f3af0f
#: ../../source/persistency/persistent.rst:50
msgid ""
"`ZODB tips and tricks "
"<http://plone.org/events/regional/nola05/collateral/Chris%20McDonough-"
"ZODB%20Tips%20and%20Tricks.pdf>`_"
msgstr "`ZODB tips and tricks <http://plone.org/events/regional/nola05/collateral/Chris%20McDonough-ZODB%20Tips%20and%20Tricks.pdf>`_"

# c60f11e10ea147d29c3929218e2111d5
#: ../../source/persistency/persistent.rst:53
msgid "Lists and dictionaries"
msgstr "Lists and dictionaries"

# 7574525e005e4d3b84dbe82e162f1809
#: ../../source/persistency/persistent.rst:55
msgid ""
"If you modify objects inside persistent lists and dictionaries, the change "
"is not automatically reflected to the parent container."
msgstr "If you modify objects inside persistent lists and dictionaries, the change is not automatically reflected to the parent container."

# bdb84922e4ba4b67b736f3d041555f76
#: ../../source/persistency/persistent.rst:58
msgid ""
"`Modifying mutable objects "
"<http://zodb.readthedocs.org/en/latest/working.html#handling-changes-to-"
"mutable-objects>`_"
msgstr "`Modifying mutable objects <http://zodb.readthedocs.org/en/latest/working.html#handling-changes-to-mutable-objects>`_"

# d7629326e50d49d08fca1ed573396c0c
#: ../../source/persistency/persistent.rst:61
msgid "PersistentList vs. normal Python list"
msgstr "PersistentList vs. normal Python list"

# c4fca5ce0c8140a1b7604ee4e19868f8
#: ../../source/persistency/persistent.rst:63
msgid ""
"All items in normal Python list are stored as one write and loaded on one "
"write. PersistentList is slower, but allows individual objects picked from "
"the list without loading the whole list."
msgstr "All items in normal Python list are stored as one write and loaded on one write. PersistentList is slower, but allows individual objects picked from the list without loading the whole list."

# 18183f5206a543fcbfe0735e259b3c18
# 1464fa04a8f44aa39fddb64299d80e6e
#: ../../source/persistency/persistent.rst:66
#: ../../source/persistency/persistent.rst:222
msgid "For more information, see"
msgstr "For more information, see"

# e0945a668e3640cc848b30c53614ef9c
#: ../../source/persistency/persistent.rst:68
msgid "https://mail.zope.org/pipermail/zodb-dev/2009-December/013011.html"
msgstr "https://mail.zope.org/pipermail/zodb-dev/2009-December/013011.html"

# de52745492d14644a54630e8e2026ef5
#: ../../source/persistency/persistent.rst:72
msgid "Persistent, modifications, __setattr__ and transactions"
msgstr "Persistent, modifications, __setattr__ and transactions"

# 1012f367f6324542ad8cd7f28c887792
#: ../../source/persistency/persistent.rst:74
msgid ""
"When Persitent object is modified, via attribute set or __setattr__() call, "
"the current transaction is converted to a write transaction. Write "
"transactions are usually undoable (visible on Zope's Undo tab)."
msgstr "When Persitent object is modified, via attribute set or __setattr__() call, the current transaction is converted to a write transaction. Write transactions are usually undoable (visible on Zope's Undo tab)."

# 9b6db52762694cca9de7374dcedc036d
#: ../../source/persistency/persistent.rst:78
msgid ""
"If you are using Python property mutator and even if it does not write to "
"the object it still will trigger the object rewrite."
msgstr "If you are using Python property mutator and even if it does not write to the object it still will trigger the object rewrite."

# 138f06371d6e47f1a660764ed6e67d08
#: ../../source/persistency/persistent.rst:83
msgid "https://mail.zope.org/pipermail/zodb-dev/2009-December/013047.html"
msgstr "https://mail.zope.org/pipermail/zodb-dev/2009-December/013047.html"

# d9cbeecf9ad542cf99992d8aa7e2fb68
#: ../../source/persistency/persistent.rst:86
msgid "Up-to-date reads"
msgstr "Up-to-date reads"

# 567b6437904646bda1e2a6de1c3162d3
#: ../../source/persistency/persistent.rst:88
msgid ""
"Normally, ZODB only assures that objects read are consistent, but not "
"necessarily up to date. Checking whether an object is up to date is "
"important when information read from one object is used to update another."
msgstr "Normally, ZODB only assures that objects read are consistent, but not necessarily up to date. Checking whether an object is up to date is important when information read from one object is used to update another."

# a594d14ea01c4e09a9da0771b1b22e48
#: ../../source/persistency/persistent.rst:92
msgid ""
"The following will force the object to use the most up-to-date version in "
"the transaction::"
msgstr "The following will force the object to use the most up-to-date version in the transaction::"

# ad6e964534844cfca4c5dadd95bf6df1
#: ../../source/persistency/persistent.rst:96
msgid ""
"A conflict error will be raised if the version of ob read by the transaction"
" isn't current when the transaction is committed."
msgstr "A conflict error will be raised if the version of ob read by the transaction isn't current when the transaction is committed."

# c3422fe7f3744dd5b970889e0ca28d65
#: ../../source/persistency/persistent.rst:101
msgid "ZODB versions older than 3.10.0b5 do not support this feature."
msgstr "ZODB versions older than 3.10.0b5 do not support this feature."

# 40e7022dbf634f5096626a9c3ae062ff
#: ../../source/persistency/persistent.rst:103
msgid "More information"
msgstr "More information"

# 2196695ee3334e4b8ceb77b175629762
#: ../../source/persistency/persistent.rst:105
msgid "http://pypi.python.org/pypi/ZODB3/3.10.0b5#b5-2010-09-02"
msgstr "http://pypi.python.org/pypi/ZODB3/3.10.0b5#b5-2010-09-02"

# b5ed2bc90f874fc5bf3fa3c848b27eab
#: ../../source/persistency/persistent.rst:108
msgid "Accessing broken objects"
msgstr "Accessing broken objects"

# 5ebe017e18044683864fa0d547529a59
#: ../../source/persistency/persistent.rst:110
msgid ""
"ZODB is object database. By default, it cannot load object from the database"
" if the code (Python class) is not present."
msgstr "ZODB is object database. By default, it cannot load object from the database if the code (Python class) is not present."

# e25c5dec021b45e0b43d7be8343c61b8
#: ../../source/persistency/persistent.rst:114
msgid ""
"You can still access data in the objects by creating Python code \"stubs\" "
"which fake the non-existing classes in the run-time environment."
msgstr "You can still access data in the objects by creating Python code \"stubs\" which fake the non-existing classes in the run-time environment."

# 0328cb7f44b54584b4072f92c5467823
#: ../../source/persistency/persistent.rst:119
msgid ""
"http://mockit.blogspot.com/2010/11/getting-broken-objects-out-of-zodb.html"
msgstr "http://mockit.blogspot.com/2010/11/getting-broken-objects-out-of-zodb.html"

# c405cc9e671d4bd7bb6aca1c7ff34cc1
#: ../../source/persistency/persistent.rst:122
msgid "Fixing damaged objects"
msgstr "Fixing damaged objects"

# 2530744636da4059b36b962c89eb3e3a
#: ../../source/persistency/persistent.rst:124
msgid ""
"If your BTrees have been damaged, you can use ``dm.historical`` tool to "
"inspect the object history and rewind it to a working state."
msgstr "If your BTrees have been damaged, you can use ``dm.historical`` tool to inspect the object history and rewind it to a working state."

# fe7c824f2c564adaad9970e593cd269f
#: ../../source/persistency/persistent.rst:127
msgid ""
"http://plone.293351.n2.nabble.com/Cleaning-up-damaged-BTree-can-t-delete-"
"folder-tp5761780p5773269.html"
msgstr "http://plone.293351.n2.nabble.com/Cleaning-up-damaged-BTree-can-t-delete-folder-tp5761780p5773269.html"

# 59102a6a4b004faca30aa7a116a93310
#: ../../source/persistency/persistent.rst:129
msgid "http://pypi.python.org/pypi/dm.historical/"
msgstr "http://pypi.python.org/pypi/dm.historical/"

# 612bafd6593a457997fe0e30c91b1afa
# f6dfc39cd41d4a6e814e55005d98f15b
#: ../../source/persistency/persistent.rst:131
#: ../../source/persistency/persistent.rst:236
msgid "See also"
msgstr "See also"

# a70d7c1983c542219a3892a35187b5fd
#: ../../source/persistency/persistent.rst:133
msgid ":doc:`Deleting broken objects </content/deleting>`"
msgstr ":doc:`Deleting broken objects </content/deleting>`"

# 9755d56b2d5a4b43b2540a9b6fec3850
#: ../../source/persistency/persistent.rst:136
msgid "Volatile references"
msgstr "Volatile references"

# 54880980ca9f41d9b4b7b5f08f1e6768
#: ../../source/persistency/persistent.rst:138
msgid ""
"Volatile attributes are attributes on persistent objects which never get "
"stored. ZODB assumes variable is volatile if it has _v_ prefix."
msgstr "Volatile attributes are attributes on persistent objects which never get stored. ZODB assumes variable is volatile if it has _v_ prefix."

# 517c20f7353e4f77ab0311ab3f1a6e19
#: ../../source/persistency/persistent.rst:141
msgid ""
"Volatiles are useful when framework expects the object to conform certain "
"interface, like form frameworks. However, your persistent object edited by "
"form cannot have persistent attributes for all variables the form expects to"
" see."
msgstr "Volatiles are useful when framework expects the object to conform certain interface, like form frameworks. However, your persistent object edited by form cannot have persistent attributes for all variables the form expects to see."

# 3d35159688554424898ce9b151502eb6
# d2be13774e1f4ef881feadab46a4ae48
#: ../../source/persistency/persistent.rst:145
#: ../../source/persistency/transactions.rst:71
msgid "Example::"
msgstr "Example::"

# 30305741700f44e18b3bd7a6599c09bd
#: ../../source/persistency/persistent.rst:191
msgid "Correct use of volatile variables in functions"
msgstr "Correct use of volatile variables in functions"

# 46d32d4ed9e24a30a7a3856b608f7cf4
# 90190d2fe54c4b0d97a644fdb9a6837e
#: ../../source/persistency/persistent.rst:193
#: ../../source/persistency/persistent.rst:211
msgid "**WRONG**::"
msgstr "**WRONG**::"

# 49767a79b07243e48978e4e0037528f1
# ad12e606d5ec482ba5283ae236f0a20f
# 412c8760b26d49028edf16a21b4fb7d4
#: ../../source/persistency/persistent.rst:198
#: ../../source/persistency/persistent.rst:205
#: ../../source/persistency/persistent.rst:216
msgid "**RIGHT**::"
msgstr "**RIGHT**::"

# a08038e8eb8a4bf0b1703306867f6f1d
#: ../../source/persistency/persistent.rst:224
msgid "https://mail.zope.org/pipermail/zodb-dev/2010-May/013437.html"
msgstr "https://mail.zope.org/pipermail/zodb-dev/2010-May/013437.html"

# dde864bda75e4fc79acb812a29450076
#: ../../source/persistency/persistent.rst:228
msgid "Measuring persistent object sizes"
msgstr "Measuring persistent object sizes"

# be9c76d279a543f384ebac0ea9357317
#: ../../source/persistency/persistent.rst:230
msgid "Get the size of the pickled object in the database."
msgstr "Get the size of the pickled object in the database."

# e70b9f37e2284c03984eff282773560c
#: ../../source/persistency/persistent.rst:232
msgid "Something like::"
msgstr "Something like::"

# ac2f155b53ed4289a7d12be83afc98e7
# 70105b32061446c4be99d7bec2cde057
#: ../../source/persistency/persistent.rst:240
#: ../../source/persistency/storage.rst:130
msgid "http://plone.org/documentation/kb/debug-zodb-bloat"
msgstr "http://plone.org/documentation/kb/debug-zodb-bloat"

# 6152824e216640d59c5e4dc00a886d99
#: ../../source/persistency/persistent.rst:242
msgid ""
"treeanalyze.py will give you the total size of a traverse graph "
"http://svn.erp5.org/erp5/trunk/utils/treenalyser.py?view=markup&pathrev=24405"
msgstr "treeanalyze.py will give you the total size of a traverse graph http://svn.erp5.org/erp5/trunk/utils/treenalyser.py?view=markup&pathrev=24405"

# 918d802b968440f3a2c7cfa55a1476ca
#: ../../source/persistency/storage.rst:3
msgid "Storage"
msgstr "Storage"

# 87d7c711b9124889bbc8a3a36991479c
#: ../../source/persistency/storage.rst:7
msgid ""
"What kind of different storages (storing backends) ZODB has and how to use "
"them."
msgstr "What kind of different storages (storing backends) ZODB has and how to use them."

# 9a365bb41fd5471c8066f4e1550891f4
#: ../../source/persistency/storage.rst:15
msgid ""
"This page explains details how ZODB stores data. The information here is "
"important to know to understand Plone database behavior and how to optimize "
"your application."
msgstr "This page explains details how ZODB stores data. The information here is important to know to understand Plone database behavior and how to optimize your application."

# 16815685c75b4c06a48a34fedc8d516f
#: ../../source/persistency/storage.rst:19
msgid "Pickling"
msgstr "Pickling"

# 3be50255c2274f9d85fb03b225742c9a
#: ../../source/persistency/storage.rst:21
msgid ""
"ZODB is object oriented database. All data in ZODB is `pickled Python "
"objects <http://docs.python.org/library/pickle.html>`_. Pickle is object "
"serialization module for Python."
msgstr "ZODB is object oriented database. All data in ZODB is `pickled Python objects <http://docs.python.org/library/pickle.html>`_. Pickle is object serialization module for Python."

# 64fbda8cc7c44052ad80eb885a6a82cf
#: ../../source/persistency/storage.rst:24
msgid ""
"Each time object is read and it is not cached, object is read from ZODB data"
" storage and unpickled"
msgstr "Each time object is read and it is not cached, object is read from ZODB data storage and unpickled"

# 6934ef40c40c46328736e3adc1549e15
#: ../../source/persistency/storage.rst:26
msgid ""
"Each time object is written, it is pickled and transaction machinery appends"
" it to ZODB data storage"
msgstr "Each time object is written, it is pickled and transaction machinery appends it to ZODB data storage"

# 3b60814e685541ca9d01284e12e10b11
#: ../../source/persistency/storage.rst:28
msgid ""
"Pickle format is series of bytes. Here is example what it does look like::"
msgstr "Pickle format is series of bytes. Here is example what it does look like::"

# f8537419e2b543748603a74f26afb34e
#: ../../source/persistency/storage.rst:41
msgid "It is not very human readable format."
msgstr "It is not very human readable format."

# f744f38673674572b2e47838abeeec1b
#: ../../source/persistency/storage.rst:43
msgid ""
"Even if you use SQL based `RelStorage "
"<http://pypi.python.org/pypi/RelStorage/>`_ ZODB backends, the objects are "
"still pickled to the database; SQL does not support varying table schema per"
" row and Python objects do not have fixed schema format."
msgstr "Even if you use SQL based `RelStorage <http://pypi.python.org/pypi/RelStorage/>`_ ZODB backends, the objects are still pickled to the database; SQL does not support varying table schema per row and Python objects do not have fixed schema format."

# 1a3aa3b1f9dd49328432bd51a3f5cc30
#: ../../source/persistency/storage.rst:48
msgid "Binary trees"
msgstr "Binary trees"

# d8d27cd8189340c185625bad5e28925b
#: ../../source/persistency/storage.rst:50
msgid ""
"Data is usually organized to binary trees or `BTrees "
"<http://wiki.zope.org/ZODB/guide/node6.html>`_ . More specifically, data is "
"usually stored as Object Oriented Binary Tree `OOBtree "
"<http://docs.zope.org/zope3/Code/BTrees/OOBTree/OOBTree/index.html>`_ which "
"provides Python object as key and Python object value mappings. Key is the "
"object id in the parent container as a string and value is any pickleable "
"Python object or primitive you store in your database."
msgstr "Data is usually organized to binary trees or `BTrees <http://wiki.zope.org/ZODB/guide/node6.html>`_ . More specifically, data is usually stored as Object Oriented Binary Tree `OOBtree <http://docs.zope.org/zope3/Code/BTrees/OOBTree/OOBTree/index.html>`_ which provides Python object as key and Python object value mappings. Key is the object id in the parent container as a string and value is any pickleable Python object or primitive you store in your database."

# 047fb1ef11a44ecaae96c26e25434e7d
#: ../../source/persistency/storage.rst:56
msgid ""
"`ZODB data structure interfaces "
"<http://svn.zope.org/ZODB/trunk/src/BTrees/Interfaces.py?rev=88776&view=markup>`_."
msgstr "`ZODB data structure interfaces <http://svn.zope.org/ZODB/trunk/src/BTrees/Interfaces.py?rev=88776&view=markup>`_."

# 430cb6cc1cfc47ce9922e93295502347
#: ../../source/persistency/storage.rst:58
msgid ""
"`Using BTrees example from Zope Docs "
"<http://zodb.org/documentation/articles/ZODB2.html#using-btrees>`_."
msgstr "`Using BTrees example from Zope Docs <http://zodb.org/documentation/articles/ZODB2.html#using-btrees>`_."

# d34b12307e9e43ef98a6ef51d140bb76
#: ../../source/persistency/storage.rst:61
msgid "Buckets"
msgstr "Buckets"

# aae58475ffd84f9e802b8eee08688bee
#: ../../source/persistency/storage.rst:63
msgid ""
"BTree stores data in buckets (`OOBucket "
"<http://docs.zope.org/zope3/Code/BTrees/OOBTree/OOBucket/index.html>`_)."
msgstr "BTree stores data in buckets (`OOBucket <http://docs.zope.org/zope3/Code/BTrees/OOBTree/OOBucket/index.html>`_)."

# 74f09271c03c439ca9985f21457feb4b
#: ../../source/persistency/storage.rst:65
msgid ""
"Bucket is the smallest unit of data which is written to the database once. "
"Buckets are loaded lazily: BTree only loads buckets storing values of keys "
"being accessed."
msgstr "Bucket is the smallest unit of data which is written to the database once. Buckets are loaded lazily: BTree only loads buckets storing values of keys being accessed."

# 2ac2907f07034ae1b4686a36037237f7
#: ../../source/persistency/storage.rst:69
msgid ""
"BTree tries to stick as much data into one bucket once as possible. When one"
" value in bucket is changed the whole bucket must be rewritten to the disk."
msgstr "BTree tries to stick as much data into one bucket once as possible. When one value in bucket is changed the whole bucket must be rewritten to the disk."

# 75faa59457634613b33ef18193774594
#: ../../source/persistency/storage.rst:72
msgid ""
"`Default bucket size is 30 objects "
"<http://svn.zope.org/ZODB/trunk/src/BTrees/_OOBTree.c?rev=25186&view=markup>`_."
msgstr "`Default bucket size is 30 objects <http://svn.zope.org/ZODB/trunk/src/BTrees/_OOBTree.c?rev=25186&view=markup>`_."

# 4dde12568a164aa3892e872e542a1f42
#: ../../source/persistency/storage.rst:75
msgid "Storing as attribute vs. storing in BTree"
msgstr "Storing as attribute vs. storing in BTree"

# 00097b1ea7444584891cba9be9a1461d
#: ../../source/persistency/storage.rst:77
msgid "Plone has two kinds of fundamental way to store data:"
msgstr "Plone has two kinds of fundamental way to store data:"

# 208f272e010947e4a3cdeac78f52b8a5
#: ../../source/persistency/storage.rst:79
msgid "Attribute storage (stores values directly in the pickled objects)."
msgstr "Attribute storage (stores values directly in the pickled objects)."

# 2c852af5b3034d87813528f101368021
#: ../../source/persistency/storage.rst:81
msgid ""
"Annotation storage (OOBTree based). Plone objects have attribute "
"__annotations__ which is OOBtree for storing objects in name-conflict free "
"way."
msgstr "Annotation storage (OOBTree based). Plone objects have attribute __annotations__ which is OOBtree for storing objects in name-conflict free way."

# 5537243d2b744db18e7b725f0a16e507
#: ../../source/persistency/storage.rst:84
msgid ""
"When storing objects in annotation storage, reading object values need at "
"least one extra database look up to load the first bucket of OOBTree."
msgstr "When storing objects in annotation storage, reading object values need at least one extra database look up to load the first bucket of OOBTree."

# 4fc01a2d769a41a9b64ab06d4f7c1b8b
#: ../../source/persistency/storage.rst:88
msgid ""
"If the value is going to be used frequently, and especially if it is read "
"when viewing the content object, storing it in an attribute is more "
"efficient than storing it in an annotation. This is because the "
"__annotations__ BTree is a separate persistent object which has to be loaded"
" into memory, and may push something else out of the ZODB cache."
msgstr "If the value is going to be used frequently, and especially if it is read when viewing the content object, storing it in an attribute is more efficient than storing it in an annotation. This is because the __annotations__ BTree is a separate persistent object which has to be loaded into memory, and may push something else out of the ZODB cache."

# c9732cb2cf134ecaa3afaac3ab7384cb
#: ../../source/persistency/storage.rst:93
msgid ""
"If the attribute stores a large value, it will increase memory usage, as it "
"will be loaded into memory each time the object is fetched from the ZODB."
msgstr "If the attribute stores a large value, it will increase memory usage, as it will be loaded into memory each time the object is fetched from the ZODB."

# e177ae46d8d1408584f6465d73b0b63c
#: ../../source/persistency/storage.rst:97
msgid "BLOBs"
msgstr "BLOBs"

# 44c4e2d78f6b4f4ca6b913b7cadb2221
#: ../../source/persistency/storage.rst:99
msgid "BLOBs are large binary objects like files or images."
msgstr "BLOBs are large binary objects like files or images."

# 25cad721d0bd4394b13591ec2a5fdd31
#: ../../source/persistency/storage.rst:101
msgid ""
"BLOBs are supported since ZODB 3.8.x. Plone 3.x still uses ZODB 3.7.x by "
"default. ZODB 3.8.x works but it is not officially supported."
msgstr "BLOBs are supported since ZODB 3.8.x. Plone 3.x still uses ZODB 3.7.x by default. ZODB 3.8.x works but it is not officially supported."

# 42c4f409563f4438989a70e6077796b1
#: ../../source/persistency/storage.rst:105
msgid ""
"When you use BLOB interface to store and retrieve data, they are stored "
"physically as files on your file systems. File system, as the name says, was"
" designed to handle files and has far better performance on large binary "
"data as sticking the data into ZODB."
msgstr "When you use BLOB interface to store and retrieve data, they are stored physically as files on your file systems. File system, as the name says, was designed to handle files and has far better performance on large binary data as sticking the data into ZODB."

# 42f2138f7b1f4de59e3039fd0edce08d
#: ../../source/persistency/storage.rst:110
msgid ""
"BLOBs are streamable which means that you can start serving the file from "
"the beginning of the file to HTTP wire without needing to buffer the whole "
"data to the memory first (slow)."
msgstr "BLOBs are streamable which means that you can start serving the file from the beginning of the file to HTTP wire without needing to buffer the whole data to the memory first (slow)."

# 9f6b74cb60a64dfeb1fc47724587c0a8
#: ../../source/persistency/storage.rst:115
msgid "SQL values"
msgstr "SQL values"

# 6e34b77e92b3463fbedc65bd877f8b67
#: ../../source/persistency/storage.rst:117
msgid ""
"Plone's Archetypes subsystem supports storing individual Archetypes fields "
"in SQL database. This is mainly `an integration feature "
"<http://plone.293351.n2.nabble.com/Work-with-Contents-in-SQL-database-"
"td5868800.html>`_. Read more about this in `Archetypes manual "
"<http://plone.org/products/archetypes/documentation/old/ArchetypesDeveloperGuide/index_html"
"#advanced-storage-manual>`_."
msgstr "Plone's Archetypes subsystem supports storing individual Archetypes fields in SQL database. This is mainly `an integration feature <http://plone.293351.n2.nabble.com/Work-with-Contents-in-SQL-database-td5868800.html>`_. Read more about this in `Archetypes manual <http://plone.org/products/archetypes/documentation/old/ArchetypesDeveloperGuide/index_html#advanced-storage-manual>`_."

# 1298be4f76584d08a6d0ff3fc1d2fdd3
#: ../../source/persistency/storage.rst:121
msgid "Transaction sizes"
msgstr "Transaction sizes"

# e9796f25c1f34bd98f735380a14fb806
#: ../../source/persistency/storage.rst:123
msgid "Discussion pointers"
msgstr "Discussion pointers"

# 53637ff40f994e6784e5ff44e218bfdd
#: ../../source/persistency/storage.rst:125
msgid "http://www.mail-archive.com/zodb-dev@zope.org/msg03398.html"
msgstr "http://www.mail-archive.com/zodb-dev@zope.org/msg03398.html"

# 5b6a7302a130447aaa38fc500214ad81
#: ../../source/persistency/storage.rst:128
msgid "Analysing Data.fs content offline"
msgstr "Analysing Data.fs content offline"

# 2f1bcab09fca4e51ae1acacd96fbebda
#: ../../source/persistency/transactions.rst:3
msgid "Transactions"
msgstr "Transactions"

# 9f28707b1e9f4529a00cf30d09b44952
#: ../../source/persistency/transactions.rst:10
msgid ""
"Plone uses the `ZODB database "
"<http://en.wikipedia.org/wiki/Zope_Object_database>`_ which implements "
"`Multiversion concurrency control "
"<http://en.wikipedia.org/wiki/Multiversion_concurrency_control>`_."
msgstr "Plone uses the `ZODB database <http://en.wikipedia.org/wiki/Zope_Object_database>`_ which implements `Multiversion concurrency control <http://en.wikipedia.org/wiki/Multiversion_concurrency_control>`_."

# bccdd5ccfbb24cb39175c3e17d37bbc5
#: ../../source/persistency/transactions.rst:15
msgid ""
"Plone will complete either *all* database modifications that occur during a "
"request, or *none* of them. It will never write incomplete data to the "
"database."
msgstr "Plone will complete either *all* database modifications that occur during a request, or *none* of them. It will never write incomplete data to the database."

# 98dc0eae120c4df29fb085e32fd35e63
#: ../../source/persistency/transactions.rst:19
msgid "Plone and the underlying Zope handles transactions transparently."
msgstr "Plone and the underlying Zope handles transactions transparently."

# fd377f72035c43b284cd0d3ada8e7540
#: ../../source/persistency/transactions.rst:23
msgid ""
"Every transaction is a *read* transaction until any of the objects "
"participating in the transaction are mutated (object attribute set), turning"
" the transaction to a *write* transaction."
msgstr "Every transaction is a *read* transaction until any of the objects participating in the transaction are mutated (object attribute set), turning the transaction to a *write* transaction."

# 0dbf6005dd7c4c7eaa241d294b98dc4a
#: ../../source/persistency/transactions.rst:29
msgid ""
"Old examples might refer to the ``get_transaction()`` function. This has "
"been replaced by ``transaction.get()`` in the later Zope versions."
msgstr "Old examples might refer to the ``get_transaction()`` function. This has been replaced by ``transaction.get()`` in the later Zope versions."

# e6e2b73bfa3b4665ae76e5f0dc8cad34
#: ../../source/persistency/transactions.rst:32
msgid ""
"Please read this `Zope transaction tutorial "
"<http://www.zope.org/Members/mcdonc/HowTos/transaction>`_ to get started how"
" to use transactions with your code."
msgstr "Please read this `Zope transaction tutorial <http://www.zope.org/Members/mcdonc/HowTos/transaction>`_ to get started how to use transactions with your code."

# 82c854bdfaff4879ab181cd982eed5c8
#: ../../source/persistency/transactions.rst:36
msgid "https://bugs.launchpad.net/zope2/+bug/143584"
msgstr "https://bugs.launchpad.net/zope2/+bug/143584"

# 19d9af6765f044c0a5d1080f0fedbb4a
#: ../../source/persistency/transactions.rst:39
msgid "Using transactions"
msgstr "Using transactions"

# 35ad6146ea4c48b392c04805630dec11
#: ../../source/persistency/transactions.rst:41
msgid ""
"Normally transactions are managed by Plone and the developer should not be "
"interested in them."
msgstr "Normally transactions are managed by Plone and the developer should not be interested in them."

# 9ba24af442c24e7596a8866d1947bda4
#: ../../source/persistency/transactions.rst:44
msgid ""
"Special cases where one would want to manage transaction life-cycle may "
"include:"
msgstr "Special cases where one would want to manage transaction life-cycle may include:"

# d48d49f30a264b9aacce84303ade99b8
#: ../../source/persistency/transactions.rst:47
msgid "Batch creation or editing of many items once."
msgstr "Batch creation or editing of many items once."

# b9780a5195da4ef68bfbb9632c8b9e61
#: ../../source/persistency/transactions.rst:49
msgid "Example code:"
msgstr "Example code:"

# a0de9c52db7740deb48764b316f86010
#: ../../source/persistency/transactions.rst:51
msgid ""
"`transaction source code "
"<http://svn.zope.org/transaction/trunk/transaction/?rev=104430>`_."
msgstr "`transaction source code <http://svn.zope.org/transaction/trunk/transaction/?rev=104430>`_."

# 252fd4ec69074047a35579a7d9d1f547
#: ../../source/persistency/transactions.rst:53
msgid "http://www.zope.org/Members/mcdonc/HowTos/transaction"
msgstr "http://www.zope.org/Members/mcdonc/HowTos/transaction"

# 7b46332a5dbf44639c053b8f386bb50a
#: ../../source/persistency/transactions.rst:55
msgid "https://bugs.launchpad.net/zope3/+bug/98382"
msgstr "https://bugs.launchpad.net/zope3/+bug/98382"

# 46d38162ea4c42ebb506debda0d87b52
#: ../../source/persistency/transactions.rst:59
msgid "Subtransactions"
msgstr "Subtransactions"

# b62d768eefe84ed080576ec29c5087ae
#: ../../source/persistency/transactions.rst:61
msgid ""
"Normally, a Zope transaction keeps a list of objects modified within the "
"transaction in a structure in RAM."
msgstr "Normally, a Zope transaction keeps a list of objects modified within the transaction in a structure in RAM."

# ed6fad89d10b4dd5827b9630f8a5d188
#: ../../source/persistency/transactions.rst:64
msgid ""
"This list of objects can grow quite large when there is a lot of work done "
"across a lot of objects in the context of a transaction. *Subtransactions* "
"write portions of this object list out to disk, freeing the RAM required by "
"the transaction list. Using subtransactions can allow you to build "
"transactions involving objects whose combined size is larger than available "
"RAM."
msgstr "This list of objects can grow quite large when there is a lot of work done across a lot of objects in the context of a transaction. *Subtransactions* write portions of this object list out to disk, freeing the RAM required by the transaction list. Using subtransactions can allow you to build transactions involving objects whose combined size is larger than available RAM."

# 0f652da37c7e468b8a501b58e1b7e076
#: ../../source/persistency/transactions.rst:90
msgid "Failsafe crawling and committing in batches"
msgstr "Failsafe crawling and committing in batches"

# cff5de9fbfa54f138c82d2f41674bbcf
#: ../../source/persistency/transactions.rst:92
msgid ""
"In the case you need to access many objects in coherent and efficient "
"manner."
msgstr "In the case you need to access many objects in coherent and efficient manner."

# 4c139231cac34b52a61a914badfb4b4e
#: ../../source/persistency/transactions.rst:94
msgid ""
"https://bitbucket.org/gocept/gocept.linkchecker/src/80a127405ac06d2054e61dd62fcd643d864357a0/src/gocept/linkchecker/scripts"
"/crawl-site.py?at=default"
msgstr "https://bitbucket.org/gocept/gocept.linkchecker/src/80a127405ac06d2054e61dd62fcd643d864357a0/src/gocept/linkchecker/scripts/crawl-site.py?at=default"

# f7456a61a87e4a7bb91f19e931811283
#: ../../source/persistency/transactions.rst:97
msgid "Transaction boundary events"
msgstr "Transaction boundary events"

# 0e26cf0d2c654b37b6991dbe2b33639f
#: ../../source/persistency/transactions.rst:99
msgid ""
"It is possible to perform actions before and after transaction is written to"
" the database."
msgstr "It is possible to perform actions before and after transaction is written to the database."

# 7c9aa48f76ad4f5c972c9c022729b510
#: ../../source/persistency/transactions.rst:102
msgid ""
"http://svn.zope.org/transaction/trunk/transaction/_transaction.py?rev=81646&view=auto"
msgstr "http://svn.zope.org/transaction/trunk/transaction/_transaction.py?rev=81646&view=auto"

# 06350338d462442c9ddc0924654654ee
#: ../../source/persistency/transactions.rst:105
msgid "Viewing transaction content and debugging transactions"
msgstr "Viewing transaction content and debugging transactions"

# 1e3d3dfa5a474ea6b25656bafe935229
#: ../../source/persistency/transactions.rst:107
msgid ""
"Please see :doc:`Transaction troubleshooting "
"</troubleshooting/transactions>`"
msgstr "Please see :doc:`Transaction troubleshooting </troubleshooting/transactions>`"

# d7ce6fd682f144cb833fce3a83bfd7b5
#: ../../source/persistency/transactions.rst:110
msgid "Undoing transactions"
msgstr "Undoing transactions"

# b69270d52a9d408e993e2a8e36b4b94c
#: ../../source/persistency/transactions.rst:112
msgid ""
"Everything that has happened on Plone site can be undoed through the *Undo* "
"tab in ZMI, in site root. By default you can undo latest 20 transactions."
msgstr "Everything that has happened on Plone site can be undoed through the *Undo* tab in ZMI, in site root. By default you can undo latest 20 transactions."

# 7dced4e0075d4dd394a76edeba2c7364
#: ../../source/persistency/transactions.rst:115
msgid ""
"If you need to raise this limit just replace all numbers of ``20`` with "
"higher value in file ``App/Undo.py``, restart site and now you can undo more"
" transactions."
msgstr "If you need to raise this limit just replace all numbers of ``20`` with higher value in file ``App/Undo.py``, restart site and now you can undo more transactions."
